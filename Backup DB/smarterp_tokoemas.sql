-- MySQL dump 10.13  Distrib 5.5.22, for Win32 (x86)
--
-- Host: localhost    Database: smarterp_tokoemas
-- ------------------------------------------------------
-- Server version	5.5.22

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `account_general_setup`
--

DROP TABLE IF EXISTS `account_general_setup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `account_general_setup` (
  `account_length` double DEFAULT NULL,
  `use_separator` int(11) DEFAULT NULL,
  `separator_text` varchar(1) DEFAULT NULL,
  `front_code` varchar(30) DEFAULT NULL,
  `back_code` varchar(30) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `account_general_setup`
--

LOCK TABLES `account_general_setup` WRITE;
/*!40000 ALTER TABLE `account_general_setup` DISABLE KEYS */;
INSERT INTO `account_general_setup` VALUES (6,1,'-',NULL,NULL);
/*!40000 ALTER TABLE `account_general_setup` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ap_status`
--

DROP TABLE IF EXISTS `ap_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ap_status` (
  `no_purchase` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `id_supplier` varchar(30) DEFAULT NULL,
  `purchase_amount` double DEFAULT NULL,
  `return_amount` double DEFAULT NULL,
  `disc_amount` double DEFAULT NULL,
  `paid_amount` double DEFAULT NULL,
  `balance` double DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  KEY `ar_status_no_sales_fkey` (`no_purchase`),
  KEY `ar_status_cust_id_fkey` (`id_supplier`),
  CONSTRAINT `ap_status_ibfk_2` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ap_status`
--

LOCK TABLES `ap_status` WRITE;
/*!40000 ALTER TABLE `ap_status` DISABLE KEYS */;
/*!40000 ALTER TABLE `ap_status` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ar_status`
--

DROP TABLE IF EXISTS `ar_status`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ar_status` (
  `no_sales` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `id_customer` varchar(30) DEFAULT NULL,
  `sales_amount` double DEFAULT NULL,
  `return_amount` double DEFAULT NULL,
  `disc_amount` double DEFAULT NULL,
  `paid_amount` double DEFAULT NULL,
  `balance` double DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  KEY `ar_status_no_sales_fkey` (`no_sales`),
  KEY `ar_status_cust_id_fkey` (`id_customer`),
  CONSTRAINT `ar_status_ibfk_1` FOREIGN KEY (`id_customer`) REFERENCES `mst_customer` (`id_customer`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ar_status`
--

LOCK TABLES `ar_status` WRITE;
/*!40000 ALTER TABLE `ar_status` DISABLE KEYS */;
/*!40000 ALTER TABLE `ar_status` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary table structure for view `coa_detail_view`
--

DROP TABLE IF EXISTS `coa_detail_view`;
/*!50001 DROP VIEW IF EXISTS `coa_detail_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `coa_detail_view` (
  `id_account` varchar(25),
  `account_name` varchar(60),
  `parent` varchar(25),
  `flag_active` int(11),
  `flag_header` int(11),
  `is_income` int(11),
  `is_balance_sheet` int(11),
  `notes` text,
  `def_position` char(1),
  `modified_user` varchar(120),
  `created_date` datetime,
  `modified_date` datetime,
  `created_user` varchar(120),
  `beg_balance` double,
  `golongan` int(1),
  `header` varchar(60),
  `company_name` varchar(200),
  `header_text` varchar(250)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `coa_header_view`
--

DROP TABLE IF EXISTS `coa_header_view`;
/*!50001 DROP VIEW IF EXISTS `coa_header_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `coa_header_view` (
  `id_account` varchar(25),
  `account_name` varchar(60)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `combo_billofmaterial`
--

DROP TABLE IF EXISTS `combo_billofmaterial`;
/*!50001 DROP VIEW IF EXISTS `combo_billofmaterial`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `combo_billofmaterial` (
  `date_trn` datetime,
  `no_bom` varchar(60),
  `item_desc` varchar(123),
  `qty_item_production` double,
  `id_unit` varchar(30),
  `total_cost` double,
  `finished` int(1)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `combo_conversion_cost`
--

DROP TABLE IF EXISTS `combo_conversion_cost`;
/*!50001 DROP VIEW IF EXISTS `combo_conversion_cost`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `combo_conversion_cost` (
  `id_cost` varchar(30),
  `cost_name` varchar(120),
  `cost_def` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `combo_departemen_produksi`
--

DROP TABLE IF EXISTS `combo_departemen_produksi`;
/*!50001 DROP VIEW IF EXISTS `combo_departemen_produksi`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `combo_departemen_produksi` (
  `department_id` int(11),
  `department_name` varchar(100)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `combo_employee`
--

DROP TABLE IF EXISTS `combo_employee`;
/*!50001 DROP VIEW IF EXISTS `combo_employee`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `combo_employee` (
  `id_employee` varchar(25),
  `nama` varchar(401),
  `position_name` varchar(100),
  `department_name` varchar(100)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `combo_rem_material_usage_wo`
--

DROP TABLE IF EXISTS `combo_rem_material_usage_wo`;
/*!50001 DROP VIEW IF EXISTS `combo_rem_material_usage_wo`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `combo_rem_material_usage_wo` (
  `no_wo` varchar(60),
  `no_bom` varchar(60),
  `id_item` varchar(120),
  `item_name` varchar(60),
  `remaining_qty` double,
  `id_unit` varchar(255),
  `cost` double,
  `total_cost` double,
  `jenis` varchar(20)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `combo_supplier_po`
--

DROP TABLE IF EXISTS `combo_supplier_po`;
/*!50001 DROP VIEW IF EXISTS `combo_supplier_po`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `combo_supplier_po` (
  `id_supplier` varchar(25),
  `name` varchar(401),
  `address` varchar(400)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `combo_view_opname`
--

DROP TABLE IF EXISTS `combo_view_opname`;
/*!50001 DROP VIEW IF EXISTS `combo_view_opname`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `combo_view_opname` (
  `date_trn` datetime,
  `no_opname` varchar(30),
  `id_warehouse` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `combo_wo_view`
--

DROP TABLE IF EXISTS `combo_wo_view`;
/*!50001 DROP VIEW IF EXISTS `combo_wo_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `combo_wo_view` (
  `wo_no` varchar(60),
  `department_name` varchar(100),
  `department_id` int(11),
  `tgl_mulai` date,
  `pic` varchar(401),
  `expected_date` date
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `commission_report_view`
--

DROP TABLE IF EXISTS `commission_report_view`;
/*!50001 DROP VIEW IF EXISTS `commission_report_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `commission_report_view` (
  `date_trn` datetime,
  `no_service` varchar(30),
  `nama` varchar(401),
  `service_name` varchar(60),
  `qty` int(11),
  `price` double(19,4),
  `nominal` double(19,4),
  `notes` varchar(255),
  `rate_commission` double,
  `commission` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `control_no_master`
--

DROP TABLE IF EXISTS `control_no_master`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `control_no_master` (
  `form` varchar(25) NOT NULL DEFAULT '',
  `prefix` varchar(10) DEFAULT NULL,
  `nourut` varchar(10) DEFAULT NULL,
  `keterangan` text,
  PRIMARY KEY (`form`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `control_no_master`
--

LOCK TABLES `control_no_master` WRITE;
/*!40000 ALTER TABLE `control_no_master` DISABLE KEYS */;
INSERT INTO `control_no_master` VALUES ('ASSEMBLY PRODUCT','ASSEMBLY.','000002','NOURUT PERAKITAN BARANG'),('FORMULA PRODUCT','BOM.','000001','NOURUT FORMULA BIAYA'),('MASTER BIAYA','COST.','000000','NOURUT MASTER BIAYA'),('MASTER CARA BAYAR SIMRS',' ','00','NOURUT MASTER CARA BAYAR SIMRS'),('MASTER CUSTOMER','C.','000000','NOURUT MASTER CUSTOMER'),('MASTER MARKETING','E.','000000','NOURUT MASTER MARKETING'),('MASTER SUPPLIER','S.','000000','NOURUT MASTER SUPPLIER');
/*!40000 ALTER TABLE `control_no_master` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `control_no_trans`
--

DROP TABLE IF EXISTS `control_no_trans`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `control_no_trans` (
  `form` varchar(25) NOT NULL DEFAULT '',
  `prefix` varchar(10) DEFAULT NULL,
  `nourut` varchar(10) DEFAULT NULL,
  `bulan` int(11) DEFAULT NULL,
  `tahun` int(11) DEFAULT NULL,
  `keterangan` text,
  `kategori` varchar(25) DEFAULT NULL,
  `jenis` varchar(25) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `control_no_trans`
--

LOCK TABLES `control_no_trans` WRITE;
/*!40000 ALTER TABLE `control_no_trans` DISABLE KEYS */;
/*!40000 ALTER TABLE `control_no_trans` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary table structure for view `getcombosimpanpinjam`
--

DROP TABLE IF EXISTS `getcombosimpanpinjam`;
/*!50001 DROP VIEW IF EXISTS `getcombosimpanpinjam`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `getcombosimpanpinjam` (
  `no_pinjam` varchar(255),
  `bunga` double(19,2),
  `date_trn` datetime,
  `jangka_waktu` int(11),
  `customer` varchar(401),
  `nominal` double(19,2),
  `id_customer` varchar(120)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `goods_view`
--

DROP TABLE IF EXISTS `goods_view`;
/*!50001 DROP VIEW IF EXISTS `goods_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `goods_view` (
  `id_item` varchar(25),
  `item_name` varchar(60),
  `id_barcode` varchar(30),
  `mst_itemcat_nm` varchar(120)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `hitung_rekap_jual_category`
--

DROP TABLE IF EXISTS `hitung_rekap_jual_category`;
/*!50001 DROP VIEW IF EXISTS `hitung_rekap_jual_category`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `hitung_rekap_jual_category` (
  `id_category` varchar(120),
  `total` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `hitung_rekap_jual_view`
--

DROP TABLE IF EXISTS `hitung_rekap_jual_view`;
/*!50001 DROP VIEW IF EXISTS `hitung_rekap_jual_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `hitung_rekap_jual_view` (
  `tanggal` bigint(20),
  `total` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `i_accounting_period`
--

DROP TABLE IF EXISTS `i_accounting_period`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_accounting_period` (
  `periode` int(11) NOT NULL,
  `year` int(11) DEFAULT NULL,
  `last_closed_date` datetime DEFAULT NULL,
  `lock_status` int(11) DEFAULT NULL,
  PRIMARY KEY (`periode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_accounting_period`
--

LOCK TABLES `i_accounting_period` WRITE;
/*!40000 ALTER TABLE `i_accounting_period` DISABLE KEYS */;
INSERT INTO `i_accounting_period` VALUES (11,2015,'2015-03-20 00:00:00',0);
/*!40000 ALTER TABLE `i_accounting_period` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_activation`
--

DROP TABLE IF EXISTS `i_activation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_activation` (
  `ip_address` varchar(120) NOT NULL,
  `serial1` varchar(250) DEFAULT NULL,
  `serial2` varchar(250) DEFAULT NULL,
  `serial3` varchar(250) DEFAULT NULL,
  `serial4` varchar(250) DEFAULT NULL,
  `activated_date` datetime DEFAULT NULL,
  PRIMARY KEY (`ip_address`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_activation`
--

LOCK TABLES `i_activation` WRITE;
/*!40000 ALTER TABLE `i_activation` DISABLE KEYS */;
INSERT INTO `i_activation` VALUES ('EC55F9C25A62','b73a2ad61a6b2ec8c72e43f0d0e8f1ff','c923c84117fef6123ab37ff551372beb','fd33a50cdce4dd0a974091c48422e3a3','99770a2fa92bec4940c26f7ccadf677b','2016-06-21 11:05:34');
/*!40000 ALTER TABLE `i_activation` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_activation_copy`
--

DROP TABLE IF EXISTS `i_activation_copy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_activation_copy` (
  `ip_address` varchar(120) NOT NULL,
  `serial1` varchar(250) DEFAULT NULL,
  `serial2` varchar(250) DEFAULT NULL,
  `serial3` varchar(250) DEFAULT NULL,
  `serial4` varchar(250) DEFAULT NULL,
  `activated_date` datetime DEFAULT NULL,
  PRIMARY KEY (`ip_address`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_activation_copy`
--

LOCK TABLES `i_activation_copy` WRITE;
/*!40000 ALTER TABLE `i_activation_copy` DISABLE KEYS */;
INSERT INTO `i_activation_copy` VALUES ('001E101F0815','b73a2ad61a6b2ec8c72e43f0d0e8f1ff','c923c84117fef6123ab37ff551372beb','fd33a50cdce4dd0a974091c48422e3a3','99770a2fa92bec4940c26f7ccadf677b','2016-03-12 13:16:41'),('001E101F0856','b73a2ad61a6b2ec8c72e43f0d0e8f1ff','c923c84117fef6123ab37ff551372beb','fd33a50cdce4dd0a974091c48422e3a3','99770a2fa92bec4940c26f7ccadf677b','2016-02-01 01:09:16'),('001E101F2452','b73a2ad61a6b2ec8c72e43f0d0e8f1ff','c923c84117fef6123ab37ff551372beb','fd33a50cdce4dd0a974091c48422e3a3','99770a2fa92bec4940c26f7ccadf677b','2016-01-31 10:36:48'),('001E101F3269','b73a2ad61a6b2ec8c72e43f0d0e8f1ff','c923c84117fef6123ab37ff551372beb','fd33a50cdce4dd0a974091c48422e3a3','99770a2fa92bec4940c26f7ccadf677b','2016-02-01 21:11:25'),('001E101F4455','b73a2ad61a6b2ec8c72e43f0d0e8f1ff','c923c84117fef6123ab37ff551372beb','fd33a50cdce4dd0a974091c48422e3a3','99770a2fa92bec4940c26f7ccadf677b','2016-02-06 14:13:53'),('001E101F80B6','b73a2ad61a6b2ec8c72e43f0d0e8f1ff','c923c84117fef6123ab37ff551372beb','fd33a50cdce4dd0a974091c48422e3a3','99770a2fa92bec4940c26f7ccadf677b','2016-02-21 10:41:23'),('001E101F9DEE','b73a2ad61a6b2ec8c72e43f0d0e8f1ff','c923c84117fef6123ab37ff551372beb','fd33a50cdce4dd0a974091c48422e3a3','99770a2fa92bec4940c26f7ccadf677b','2016-01-31 08:30:39'),('001E101FC1E9','b73a2ad61a6b2ec8c72e43f0d0e8f1ff','c923c84117fef6123ab37ff551372beb','fd33a50cdce4dd0a974091c48422e3a3','99770a2fa92bec4940c26f7ccadf677b','2016-01-31 16:32:29'),('001E101FC819','b73a2ad61a6b2ec8c72e43f0d0e8f1ff','c923c84117fef6123ab37ff551372beb','fd33a50cdce4dd0a974091c48422e3a3','99770a2fa92bec4940c26f7ccadf677b','2016-01-17 10:15:18'),('001E101FCB91','b73a2ad61a6b2ec8c72e43f0d0e8f1ff','c923c84117fef6123ab37ff551372beb','fd33a50cdce4dd0a974091c48422e3a3','99770a2fa92bec4940c26f7ccadf677b','2016-02-01 21:34:34'),('001E101FED7A','b73a2ad61a6b2ec8c72e43f0d0e8f1ff','c923c84117fef6123ab37ff551372beb','fd33a50cdce4dd0a974091c48422e3a3','99770a2fa92bec4940c26f7ccadf677b','2016-02-16 21:47:30'),('EC55F9C25A62','b73a2ad61a6b2ec8c72e43f0d0e8f1ff','c923c84117fef6123ab37ff551372beb','fd33a50cdce4dd0a974091c48422e3a3','99770a2fa92bec4940c26f7ccadf677b','2016-02-01 12:58:23');
/*!40000 ALTER TABLE `i_activation_copy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_aset_depreciation`
--

DROP TABLE IF EXISTS `i_aset_depreciation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_aset_depreciation` (
  `id_accasetdep` varchar(30) NOT NULL DEFAULT '',
  `id_aset` varchar(30) DEFAULT NULL,
  `nominal` double DEFAULT NULL,
  `date_trn` date DEFAULT NULL,
  `notes` varchar(160) DEFAULT NULL,
  `period` int(11) DEFAULT NULL,
  `years` int(11) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_aset_depreciation`
--

LOCK TABLES `i_aset_depreciation` WRITE;
/*!40000 ALTER TABLE `i_aset_depreciation` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_aset_depreciation` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_bank_simrs`
--

DROP TABLE IF EXISTS `i_bank_simrs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_bank_simrs` (
  `id_bank` varchar(30) NOT NULL,
  `nm_bank` varchar(120) DEFAULT NULL,
  `id_account` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`id_bank`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_bank_simrs`
--

LOCK TABLES `i_bank_simrs` WRITE;
/*!40000 ALTER TABLE `i_bank_simrs` DISABLE KEYS */;
INSERT INTO `i_bank_simrs` VALUES ('009','Bank Mandiri','1110501');
/*!40000 ALTER TABLE `i_bank_simrs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_carabayar_simrs`
--

DROP TABLE IF EXISTS `i_carabayar_simrs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_carabayar_simrs` (
  `id_carabayar` varchar(30) NOT NULL,
  `nm_carabayar` varchar(120) DEFAULT NULL,
  `id_account` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`id_carabayar`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_carabayar_simrs`
--

LOCK TABLES `i_carabayar_simrs` WRITE;
/*!40000 ALTER TABLE `i_carabayar_simrs` DISABLE KEYS */;
INSERT INTO `i_carabayar_simrs` VALUES ('01','Tunai','1110101'),('02','Kartu Kredit','1110501'),('03','Tranfer Bank','1110501'),('04','Jaminan/Anggunan','1130801'),('05','BPJS',''),('06','Asuransi','');
/*!40000 ALTER TABLE `i_carabayar_simrs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_cashbank_setup`
--

DROP TABLE IF EXISTS `i_cashbank_setup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_cashbank_setup` (
  `id_account` varchar(255) DEFAULT NULL,
  `id_cashbank` varchar(255) NOT NULL,
  `modified_by` varchar(120) NOT NULL,
  `modified_at` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_cashbank_setup`
--

LOCK TABLES `i_cashbank_setup` WRITE;
/*!40000 ALTER TABLE `i_cashbank_setup` DISABLE KEYS */;
INSERT INTO `i_cashbank_setup` VALUES ('1-1101','1','admin','2016-01-13'),('1-1102','1','admin','2016-01-13'),('1-1199','1','admin','2016-01-13'),('1-1103','2','admin','2016-01-13'),('1-1104','2','admin','2016-01-13'),('1-1105','2','admin','2016-01-13');
/*!40000 ALTER TABLE `i_cashbank_setup` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_cogs`
--

DROP TABLE IF EXISTS `i_cogs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_cogs` (
  `no_urut` int(11) NOT NULL AUTO_INCREMENT,
  `no_bukti` varchar(120) NOT NULL,
  `id_item` varchar(120) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `price` decimal(10,0) DEFAULT NULL,
  `akum_qty` int(11) DEFAULT NULL,
  `cogs` decimal(10,0) DEFAULT NULL,
  PRIMARY KEY (`no_urut`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_cogs`
--

LOCK TABLES `i_cogs` WRITE;
/*!40000 ALTER TABLE `i_cogs` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_cogs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_cogs_acc_setting`
--

DROP TABLE IF EXISTS `i_cogs_acc_setting`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_cogs_acc_setting` (
  `id_account_inv` varchar(120) DEFAULT NULL,
  `id_account_cogs` varchar(120) DEFAULT NULL,
  `id_account_cogs_manufacture` varchar(120) DEFAULT NULL,
  KEY `id_account_inv` (`id_account_inv`),
  KEY `id_account_cogs` (`id_account_cogs`),
  KEY `id_account_cogs_manufacture` (`id_account_cogs_manufacture`),
  CONSTRAINT `i_cogs_acc_setting_ibfk_1` FOREIGN KEY (`id_account_inv`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE,
  CONSTRAINT `i_cogs_acc_setting_ibfk_2` FOREIGN KEY (`id_account_cogs`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE,
  CONSTRAINT `i_cogs_acc_setting_ibfk_3` FOREIGN KEY (`id_account_cogs_manufacture`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_cogs_acc_setting`
--

LOCK TABLES `i_cogs_acc_setting` WRITE;
/*!40000 ALTER TABLE `i_cogs_acc_setting` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_cogs_acc_setting` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_component_account_purchsimrs`
--

DROP TABLE IF EXISTS `i_component_account_purchsimrs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_component_account_purchsimrs` (
  `id_component` int(11) NOT NULL AUTO_INCREMENT,
  `id_account` varchar(30) DEFAULT NULL,
  `notes` text,
  `table_name` varchar(250) DEFAULT NULL,
  `field_name` varchar(250) DEFAULT NULL,
  `position_dk` varchar(60) DEFAULT NULL,
  `is_dependent_itemacc` int(1) DEFAULT NULL,
  PRIMARY KEY (`id_component`),
  KEY `fk_account` (`id_account`)
) ENGINE=InnoDB AUTO_INCREMENT=89 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_component_account_purchsimrs`
--

LOCK TABLES `i_component_account_purchsimrs` WRITE;
/*!40000 ALTER TABLE `i_component_account_purchsimrs` DISABLE KEYS */;
INSERT INTO `i_component_account_purchsimrs` VALUES (85,'1170106','PERSEDIAAN OBAT DAN ALKES','TPENERIMAANBARANG','SUBTOTALFAKTUR','Debet',1),(86,'2130301','PPN PEMBELIAN','TPENERIMAANBARANG','TOTALPPN','Debet',0),(87,'2163506','POTONGAN PEMBELIAN','TPENERIMAANBARANG','TOTALDISCOUNT','Kredit',0),(88,'2163507','HUTANG USAHA','TPENERIMAANBARANG','TOTALTAGIHAN','Kredit',0);
/*!40000 ALTER TABLE `i_component_account_purchsimrs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_component_account_returpurchsimrs`
--

DROP TABLE IF EXISTS `i_component_account_returpurchsimrs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_component_account_returpurchsimrs` (
  `id_component` int(11) NOT NULL AUTO_INCREMENT,
  `id_account` varchar(30) DEFAULT NULL,
  `notes` text,
  `table_name` varchar(250) DEFAULT NULL,
  `field_name` varchar(250) DEFAULT NULL,
  `position_dk` varchar(60) DEFAULT NULL,
  `is_dependent_itemacc` int(1) DEFAULT NULL,
  PRIMARY KEY (`id_component`),
  KEY `fk_account` (`id_account`)
) ENGINE=InnoDB AUTO_INCREMENT=89 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_component_account_returpurchsimrs`
--

LOCK TABLES `i_component_account_returpurchsimrs` WRITE;
/*!40000 ALTER TABLE `i_component_account_returpurchsimrs` DISABLE KEYS */;
INSERT INTO `i_component_account_returpurchsimrs` VALUES (85,'1170106','PERSEDIAAN OBAT DAN ALKES x','TPENERIMAANBARANG','SUBTOTALFAKTUR','Kredit',1),(86,'2130301','PPN PEMBELIAN x','TPENERIMAANBARANG','TOTALPPN','Kredit',0),(87,'2163506','POTONGAN PEMBELIAN x','TPENERIMAANBARANG','TOTALDISCOUNT','Debet',0),(88,'2163506','HUTANG USAHA x','TPENERIMAANBARANG','TOTALTAGIHAN','Debet',0);
/*!40000 ALTER TABLE `i_component_account_returpurchsimrs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_event_attendance`
--

DROP TABLE IF EXISTS `i_event_attendance`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_event_attendance` (
  `id_event` varchar(30) DEFAULT NULL,
  `id_attendance` varchar(30) NOT NULL,
  `attendance_date` datetime DEFAULT NULL,
  `id_member` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`id_attendance`),
  KEY `id_event` (`id_event`),
  KEY `id_member` (`id_member`),
  CONSTRAINT `i_event_attendance_ibfk_1` FOREIGN KEY (`id_event`) REFERENCES `mst_event` (`id_event`) ON UPDATE CASCADE,
  CONSTRAINT `i_event_attendance_ibfk_2` FOREIGN KEY (`id_member`) REFERENCES `mst_event_member` (`id_member`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_event_attendance`
--

LOCK TABLES `i_event_attendance` WRITE;
/*!40000 ALTER TABLE `i_event_attendance` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_event_attendance` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_fp_branch`
--

DROP TABLE IF EXISTS `i_fp_branch`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_fp_branch` (
  `code` varchar(3) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_fp_branch`
--

LOCK TABLES `i_fp_branch` WRITE;
/*!40000 ALTER TABLE `i_fp_branch` DISABLE KEYS */;
INSERT INTO `i_fp_branch` VALUES ('000');
/*!40000 ALTER TABLE `i_fp_branch` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_fp_statuscode`
--

DROP TABLE IF EXISTS `i_fp_statuscode`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_fp_statuscode` (
  `kode` varchar(30) NOT NULL,
  `notes` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_fp_statuscode`
--

LOCK TABLES `i_fp_statuscode` WRITE;
/*!40000 ALTER TABLE `i_fp_statuscode` DISABLE KEYS */;
INSERT INTO `i_fp_statuscode` VALUES ('0','Normal'),('1','Pengganti');
/*!40000 ALTER TABLE `i_fp_statuscode` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_fp_transcode`
--

DROP TABLE IF EXISTS `i_fp_transcode`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_fp_transcode` (
  `kode` varchar(30) NOT NULL,
  `notes` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_fp_transcode`
--

LOCK TABLES `i_fp_transcode` WRITE;
/*!40000 ALTER TABLE `i_fp_transcode` DISABLE KEYS */;
INSERT INTO `i_fp_transcode` VALUES ('01','kepada Selain Pemungut PPN'),('02','kepada Pemungut Bendaharawan'),('03','kepada Pemungut PPN Lainnya'),('04','yang menggunakan DPP Nilai Lain kpd Selain Pemungut PPN'),('05','yang PPN-nya di Deemed kpd Selain Pemungut PPN'),('06','penyerahan Lainnya kpd Selain Pemungut PPN'),('07','yang PPN-nya TDP kpd Selain Pemungut PPN'),('08','yang dibebaskan dari Pengenaan PPN kpd Selain Pemungut PPN'),('09','penyerahan Aktiva pasal 16 D kpd Selain Pemungut PPN');
/*!40000 ALTER TABLE `i_fp_transcode` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_golongan_account_bumn`
--

DROP TABLE IF EXISTS `i_golongan_account_bumn`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_golongan_account_bumn` (
  `golongan` int(2) NOT NULL,
  `keterangan` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`golongan`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_golongan_account_bumn`
--

LOCK TABLES `i_golongan_account_bumn` WRITE;
/*!40000 ALTER TABLE `i_golongan_account_bumn` DISABLE KEYS */;
INSERT INTO `i_golongan_account_bumn` VALUES (1,'ASET'),(2,'KEWAJIBAN'),(3,'EKUITAS'),(4,'PENDAPATAN LRA'),(5,'BIAYA LRA'),(6,'PENDAPATAN LO'),(7,'BIAYA LO');
/*!40000 ALTER TABLE `i_golongan_account_bumn` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_golongan_account_umum`
--

DROP TABLE IF EXISTS `i_golongan_account_umum`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_golongan_account_umum` (
  `golongan` int(2) NOT NULL,
  `keterangan` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`golongan`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_golongan_account_umum`
--

LOCK TABLES `i_golongan_account_umum` WRITE;
/*!40000 ALTER TABLE `i_golongan_account_umum` DISABLE KEYS */;
INSERT INTO `i_golongan_account_umum` VALUES (1,'ASET'),(2,'KEWAJIBAN'),(3,'EKUITAS'),(4,'PENDAPATAN'),(5,'HPP'),(6,'BIAYA');
/*!40000 ALTER TABLE `i_golongan_account_umum` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_hakakses`
--

DROP TABLE IF EXISTS `i_hakakses`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_hakakses` (
  `parentkey` varchar(120) NOT NULL,
  `childkey` varchar(120) NOT NULL,
  `username` varchar(60) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_hakakses`
--

LOCK TABLES `i_hakakses` WRITE;
/*!40000 ALTER TABLE `i_hakakses` DISABLE KEYS */;
INSERT INTO `i_hakakses` VALUES ('ROOT','MN_CARDFILE','admin'),('MN_CARDFILE','MN_CUSTOMER','admin'),('MN_CUSTOMER','MN_CUSTOMER_EDIT','admin'),('MN_CUSTOMER','MN_CUSTOMER_ADD','admin'),('MN_CUSTOMER','MN_CUSTOMER_DELETE','admin'),('MN_CARDFILE','MN_SUPPLIER','admin'),('MN_SUPPLIER','MN_SUPPLIER_EDIT','admin'),('MN_SUPPLIER','MN_SUPPLIER_ADD','admin'),('MN_SUPPLIER','MN_SUPPLIER_DELETE','admin'),('MN_CARDFILE','MN_EMPLOYEE','admin'),('MN_EMPLOYEE','MN_EMPLOYEE_EDIT','admin'),('MN_EMPLOYEE','MN_EMPLOYEE_ADD','admin'),('MN_EMPLOYEE','MN_EMPLOYEE_DELETE','admin'),('MN_CARDFILE','MN_ITEM_TYPE','admin'),('MN_ITEM_TYPE','MN_ITEM_TYPE_EDIT','admin'),('MN_ITEM_TYPE','MN_ITEM_TYPE_ADD','admin'),('MN_ITEM_TYPE','MN_ITEM_TYPE_DELETE','admin'),('MN_CARDFILE','MN_ITEM_CAT','admin'),('MN_ITEM_CAT','MN_ITEM_CAT_EDIT','admin'),('MN_ITEM_CAT','MN_ITEM_CAT_ADD','admin'),('MN_ITEM_CAT','MN_ITEM_CAT_DELETE','admin'),('MN_CARDFILE','MN_ITEM_NAME','admin'),('MN_ITEM_NAME','MN_ITEM_NAME_EDIT','admin'),('MN_ITEM_NAME','MN_ITEM_NAME_ADD','admin'),('MN_ITEM_NAME','MN_ITEM_NAME_DELETE','admin'),('MN_CARDFILE','MN_BEGINING_BALANCE','admin'),('MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_EDIT','admin'),('MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_ADD','admin'),('MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_DELETE','admin'),('MN_CARDFILE','MN_JENIS_JASA','admin'),('MN_JENIS_JASA','MN_JENIS_JASA_EDIT','admin'),('MN_JENIS_JASA','MN_JENIS_JASA_ADD','admin'),('MN_JENIS_JASA','MN_JENIS_JASA_DELETE','admin'),('MN_CARDFILE','MN_CARD_FILE_REPORT','admin'),('MN_CARD_FILE_REPORT','MN_CUST_REPORT_DAFTARPELANGGAN','admin'),('MN_CARD_FILE_REPORT','MN_CUST_REPORT_DAFTARPELANGGAN_CITY','admin'),('MN_CARD_FILE_REPORT','MN_CUST_REPORT_RANKING_PENJUALAN','admin'),('MN_CARD_FILE_REPORT','MN_SUPP_REPORT_DAFTARSUPPLIER','admin'),('MN_CARD_FILE_REPORT','MN_SUPP_REPORT_RANKING_PEMBELIAN','admin'),('MN_CARD_FILE_REPORT','MN_EMPP_REPORT_DAFTARKARYAWAN','admin'),('ROOT','MN_STOCK','admin'),('MN_STOCK','MN_STOCK_OPNAME','admin'),('MN_STOCK_OPNAME','MN_STOCK_OPNAME_EDIT','admin'),('MN_STOCK_OPNAME','MN_STOCK_OPNAME_ADD','admin'),('MN_STOCK_OPNAME','MN_STOCK_OPNAME_DELETE','admin'),('MN_STOCK','MN_STOCK_CORRECTION','admin'),('MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_EDIT','admin'),('MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_ADD','admin'),('MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_DELETE','admin'),('MN_STOCK','MN_STOCK_REPORT','admin'),('MN_STOCK_REPORT','MN_STOCK_ADJUSTMENT_REPORT','admin'),('MN_STOCK_REPORT','MN_STOCK_MUTATION_REPORT','admin'),('MN_STOCK_REPORT','MN_STOCK_CARD_COGS','admin'),('MN_STOCK_REPORT','MN_LAPORAN_STOK_PERITEM','admin'),('ROOT','MN_PURCHASE','admin'),('MN_PURCHASE','MN_PO','admin'),('MN_PO','MN_PO_EDIT','admin'),('MN_PO','MN_PO_ADD','admin'),('MN_PO','MN_PO_DELETE','admin'),('MN_PO','MN_PO_PRINT','admin'),('MN_PO','MN_PO_EDIT_UM','admin'),('MN_PURCHASE','MN_PURCHASE_UM_LUNAS','admin'),('MN_PURCHASE_UM_LUNAS','MN_PURCHASE_UM_LUNAS_ADD','admin'),('MN_PURCHASE_UM_LUNAS','MN_PURCHASE_UM_LUNAS_DELETE','admin'),('MN_PURCHASE_UM_LUNAS','MN_PURCHASE_UM_LUNAS_EDIT','admin'),('MN_PURCHASE','MN_PURCHASE_DIRECT','admin'),('MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_EDIT','admin'),('MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_ADD','admin'),('MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_DELETE','admin'),('MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_PRINT','admin'),('MN_PURCHASE','MN_PURCHASE_RETURN','admin'),('MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_EDIT','admin'),('MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_ADD','admin'),('MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_DELETE','admin'),('MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_PRINT','admin'),('MN_PURCHASE','MN_PURCHASE_REPORT','admin'),('MN_PURCHASE_REPORT','MN_LAP_PO','admin'),('MN_PURCHASE_REPORT','MN_LAP_PURCH','admin'),('MN_PURCHASE_REPORT','MN_LAP_PURCH_GROUP_SUPP','admin'),('MN_PURCHASE_REPORT','MN_LAP_PURCH_GROUP_PERIOD','admin'),('MN_PURCHASE_REPORT','MN_LAP_PURCH_GRAPHIC','admin'),('ROOT','MN_SALES','admin'),('MN_SALES','MN_SO','admin'),('MN_SO','MN_SO_EDIT','admin'),('MN_SO','MN_SO_ADD','admin'),('MN_SO','MN_SO_DELETE','admin'),('MN_SO','MN_SO_PRINT','admin'),('MN_SALES','MN_SALES_UM_LUNAS','admin'),('MN_SALES_UM_LUNAS','MN_SALES_UM_LUNAS_ADD','admin'),('MN_SALES_UM_LUNAS','MN_SALES_UM_LUNAS_DELETE','admin'),('MN_SALES_UM_LUNAS','MN_SALES_UM_LUNAS_EDIT','admin'),('MN_SALES_UM_LUNAS','MN_SALES_UM_LUNAS_PRINT','admin'),('MN_SALES','MN_SALES_RETURN','admin'),('MN_SALES_RETURN','MN_SALES_RETURN_EDIT','admin'),('MN_SALES_RETURN','MN_SALES_RETURN_ADD','admin'),('MN_SALES_RETURN','MN_SALES_RETURN_DELETE','admin'),('MN_SALES_RETURN','MN_SALES_RETURN_PRINT','admin'),('ROOT','MN_OUTLET_SALES','admin'),('MN_OUTLET_SALES','MN_LAPORAN_JUAL','admin'),('MN_LAPORAN_JUAL','MN_LAPORAN_SO','admin'),('MN_LAPORAN_JUAL','MN_LAPORAN_SALES_STD','admin'),('MN_LAPORAN_JUAL','MN_LAPORAN_SALES_GROUP','admin'),('MN_LAPORAN_JUAL','MN_LAPORAN_SALES_RECAP','admin'),('MN_LAPORAN_JUAL','MN_LAPORAN_SALES_GRAFIK','admin'),('MN_LAPORAN_JUAL','MN_LAPORAN_JUAL_PERKATEGORI','admin'),('MN_OUTLET_SALES','MN_CASHIER','admin'),('MN_CASHIER','MN_CASHIER_EDIT','admin'),('MN_CASHIER','MN_CASHIER_ADD','admin'),('MN_CASHIER','MN_CASHIER_DELETE','admin'),('MN_CASHIER','MN_CASHIER_PRINT','admin'),('MN_OUTLET_SALES','MN_CASHIER_RETURN','admin'),('MN_CASHIER_RETURN','MN_CASHIER_RETURN_EDIT','admin'),('MN_CASHIER_RETURN','MN_CASHIER_RETURN_ADD','admin'),('MN_CASHIER_RETURN','MN_CASHIER_RETURN_DELETE','admin'),('MN_CASHIER_RETURN','MN_CASHIER_RETURN_PRINT','admin'),('MN_OUTLET_SALES','MN_CASHIER_REGISTER','admin'),('MN_OUTLET_SALES','MN_MUTASI_CASHIER','admin'),('MN_MUTASI_CASHIER','MN_MUTASI_CASHIER_DETAIL','admin'),('MN_MUTASI_CASHIER','MN_MUTASI_CASHIER_RECAP','admin'),('ROOT','MN_CASH_BANK','admin'),('MN_CASH_BANK','MN_SPEND_MONEY','admin'),('MN_SPEND_MONEY','MN_SPEND_MONEY_EDIT','admin'),('MN_SPEND_MONEY','MN_SPEND_MONEY_ADD','admin'),('MN_SPEND_MONEY','MN_SPEND_MONEY_DELETE','admin'),('MN_SPEND_MONEY','MN_SPEND_MONEY_PRINT','admin'),('MN_CASH_BANK','MN_CASHBANK_TRANS_REPORT','admin'),('MN_CASHBANK_TRANS_REPORT','MN_CASHBANK_TRANS_DETAIL','admin'),('MN_CASH_BANK','MN_CASHBANK_RECAP_REPORT','admin'),('MN_CASHBANK_RECAP_REPORT','MN_CASHBANK_TRANS_RECAP','admin'),('ROOT','MN_KOPERASI','admin'),('MN_KOPERASI','MN_SIMPAN_PINJAM','admin'),('MN_SIMPAN_PINJAM','MN_SIMPAN_PINJAM_ADD','admin'),('MN_SIMPAN_PINJAM','MN_SIMPAN_PINJAM_EDIT','admin'),('MN_SIMPAN_PINJAM','MN_SIMPAN_PINJAM_DELETE','admin'),('MN_SIMPAN_PINJAM','MN_SIMPAN_PINJAM_PRINT','admin'),('MN_KOPERASI','MN_LAP_KOPERASI','admin'),('MN_LAP_KOPERASI','MN_LAPORAN_SIMPANPINJAM','admin'),('ROOT','MN_ACCOUNT','admin'),('MN_ACCOUNT','MN_COA','admin'),('MN_COA','MN_COA_EDIT','admin'),('MN_COA','MN_COA_ADD','admin'),('MN_COA','MN_COA_DELETE','admin'),('MN_COA','MN_COA_PRINT','admin'),('MN_ACCOUNT','MN_CLOSE_PERIOD','admin'),('MN_ACCOUNT','MN_ACCOUNTING_REPORT','admin'),('MN_ACCOUNTING_REPORT','MN_INCOME_STATEMENT','admin'),('ROOT','MN_TOOLS','admin'),('MN_TOOLS','MN_BACKUP','admin'),('MN_TOOLS','MN_RESTORE','admin'),('MN_TOOLS','MN_USERMANAGE','admin'),('MN_TOOLS','MN_SET_PATH','admin'),('MN_TOOLS','MN_CLEANSING_DB','admin');
/*!40000 ALTER TABLE `i_hakakses` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_import_lapkasirsentral_simrs`
--

DROP TABLE IF EXISTS `i_import_lapkasirsentral_simrs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_import_lapkasirsentral_simrs` (
  `carabayar` varchar(30) DEFAULT NULL,
  `namabank` varchar(120) DEFAULT NULL,
  `nostruk` varchar(30) DEFAULT NULL,
  `nopembayaran` varchar(30) DEFAULT NULL,
  `namauser` varchar(200) DEFAULT NULL,
  `jumlahbayar` double(19,2) DEFAULT NULL,
  `pembayaranke` int(11) DEFAULT NULL,
  `nokarturek` varchar(60) DEFAULT NULL,
  `namaruangan` varchar(250) DEFAULT NULL,
  `tglstruk` date DEFAULT NULL,
  `totalbiaya` double(19,2) DEFAULT NULL,
  `deposit` double(19,2) DEFAULT NULL,
  `tanggunganpenjamin` double(19,2) DEFAULT NULL,
  `tanggunganrs` double(19,2) DEFAULT NULL,
  `pembebasan` double(19,2) DEFAULT NULL,
  `discountnilai` double(19,2) DEFAULT NULL,
  `biayaadministrasi` double(19,2) DEFAULT NULL,
  `totalharusdibayar` double(19,2) DEFAULT NULL,
  `totalbayar` double(19,2) DEFAULT NULL,
  `sisatagihan` double(19,2) DEFAULT NULL,
  `sisadeposit` double(19,2) DEFAULT NULL,
  `nocm` varchar(30) DEFAULT NULL,
  `namalengkap` varchar(250) DEFAULT NULL,
  `noregistrasi` varchar(60) DEFAULT NULL,
  `namajenispelayanan` varchar(250) DEFAULT NULL,
  `namapelayanan` varchar(250) DEFAULT NULL,
  `totaltarif` double(19,2) DEFAULT NULL,
  `kdjenispelayanan` varchar(30) DEFAULT NULL,
  `kdpelayanan` varchar(30) DEFAULT NULL,
  `namakaryawan` varchar(250) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_import_lapkasirsentral_simrs`
--

LOCK TABLES `i_import_lapkasirsentral_simrs` WRITE;
/*!40000 ALTER TABLE `i_import_lapkasirsentral_simrs` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_import_lapkasirsentral_simrs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_item_beg_balance`
--

DROP TABLE IF EXISTS `i_item_beg_balance`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_item_beg_balance` (
  `id_warehouse` varchar(25) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `id_unit` varchar(25) DEFAULT NULL,
  `balance` double(10,0) DEFAULT NULL,
  `notes` text,
  `price` double DEFAULT NULL,
  `status_update` int(11) DEFAULT NULL,
  KEY `item_balance_fkey1` (`id_item`),
  KEY `item_balance_fkey2` (`id_unit`),
  KEY `item_balance_fkey3` (`id_warehouse`),
  CONSTRAINT `fk_id_warehouse` FOREIGN KEY (`id_warehouse`) REFERENCES `mst_warehouse` (`id_warehouse`) ON UPDATE CASCADE,
  CONSTRAINT `i_item_beg_balance_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `i_item_beg_balance_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_item_beg_balance`
--

LOCK TABLES `i_item_beg_balance` WRITE;
/*!40000 ALTER TABLE `i_item_beg_balance` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_item_beg_balance` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_mailing_list`
--

DROP TABLE IF EXISTS `i_mailing_list`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_mailing_list` (
  `mailing_list_id` varchar(120) NOT NULL,
  `date_trn` date NOT NULL,
  `mail_nmb` varchar(120) DEFAULT NULL,
  `mail_date` date DEFAULT NULL,
  `mail_type` int(11) DEFAULT NULL,
  `sender_name` varchar(120) DEFAULT NULL,
  `mail_concerning` longtext,
  `urgent_status` int(11) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `id_expedition` varchar(120) DEFAULT NULL,
  `dest_address` text,
  `receiver_name` varchar(0) DEFAULT NULL,
  PRIMARY KEY (`mailing_list_id`),
  KEY `mail_type` (`mail_type`),
  KEY `urgent_status` (`urgent_status`),
  KEY `id_expedition` (`id_expedition`),
  CONSTRAINT `i_mailing_list_ibfk_1` FOREIGN KEY (`id_expedition`) REFERENCES `mst_expedition` (`id_expedition`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_mailing_list`
--

LOCK TABLES `i_mailing_list` WRITE;
/*!40000 ALTER TABLE `i_mailing_list` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_mailing_list` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_material_in`
--

DROP TABLE IF EXISTS `i_material_in`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_material_in` (
  `no_material_in` varchar(60) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `id_item` varchar(30) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(30) DEFAULT NULL,
  `cogs` double(10,0) DEFAULT NULL,
  `price` decimal(10,0) DEFAULT NULL,
  KEY `id_unit_fkey` (`id_unit`),
  KEY `id_item_fkey` (`id_item`),
  CONSTRAINT `i_material_in_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `i_material_in_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_material_in`
--

LOCK TABLES `i_material_in` WRITE;
/*!40000 ALTER TABLE `i_material_in` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_material_in` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_material_out`
--

DROP TABLE IF EXISTS `i_material_out`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_material_out` (
  `no_material_out` varchar(60) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `id_item` varchar(30) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(30) DEFAULT NULL,
  `cogs` double(10,0) DEFAULT NULL,
  `price` decimal(10,0) DEFAULT NULL,
  KEY `id_unit_fkey2` (`id_unit`),
  KEY `id_item_fkey2` (`id_item`),
  CONSTRAINT `i_material_out_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `i_material_out_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_material_out`
--

LOCK TABLES `i_material_out` WRITE;
/*!40000 ALTER TABLE `i_material_out` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_material_out` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_material_type_usage`
--

DROP TABLE IF EXISTS `i_material_type_usage`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_material_type_usage` (
  `material_type_id` int(11) NOT NULL,
  `material_type_name` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`material_type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_material_type_usage`
--

LOCK TABLES `i_material_type_usage` WRITE;
/*!40000 ALTER TABLE `i_material_type_usage` DISABLE KEYS */;
INSERT INTO `i_material_type_usage` VALUES (1,'Bahan Baku'),(2,'Barang Setengah Jadi');
/*!40000 ALTER TABLE `i_material_type_usage` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_opname_det`
--

DROP TABLE IF EXISTS `i_opname_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_opname_det` (
  `no_opname` varchar(25) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `id_unit` varchar(25) DEFAULT NULL,
  `qty_onhand` double DEFAULT NULL,
  `qty_opname` double DEFAULT NULL,
  `notes` text,
  `weight_onhand` double DEFAULT NULL,
  `weight_opname` double DEFAULT NULL,
  KEY `opname_fkey1` (`no_opname`),
  KEY `opname_fkey2` (`id_item`),
  CONSTRAINT `i_opname_det_ibfk_1` FOREIGN KEY (`no_opname`) REFERENCES `i_opname_head` (`no_opname`) ON UPDATE CASCADE,
  CONSTRAINT `i_opname_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_opname_det`
--

LOCK TABLES `i_opname_det` WRITE;
/*!40000 ALTER TABLE `i_opname_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_opname_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_opname_head`
--

DROP TABLE IF EXISTS `i_opname_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_opname_head` (
  `no_opname` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `id_warehouse` varchar(25) DEFAULT NULL,
  `is_corrected` int(11) DEFAULT NULL,
  PRIMARY KEY (`no_opname`),
  KEY `fk_opname_wh` (`id_warehouse`),
  CONSTRAINT `fk_opname_wh` FOREIGN KEY (`id_warehouse`) REFERENCES `mst_warehouse` (`id_warehouse`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_opname_head`
--

LOCK TABLES `i_opname_head` WRITE;
/*!40000 ALTER TABLE `i_opname_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_opname_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_path_autobackup`
--

DROP TABLE IF EXISTS `i_path_autobackup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_path_autobackup` (
  `type` varchar(20) DEFAULT NULL,
  `filepath` varchar(1000) DEFAULT NULL,
  `time` time DEFAULT NULL,
  `day` varchar(10) DEFAULT NULL,
  `backup_date` date DEFAULT NULL,
  `modified_user` varchar(250) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_path_autobackup`
--

LOCK TABLES `i_path_autobackup` WRITE;
/*!40000 ALTER TABLE `i_path_autobackup` DISABLE KEYS */;
INSERT INTO `i_path_autobackup` VALUES ('Harian','D:/backup','12:56:35','','2016-04-18','','2016-04-18 01:08:42');
/*!40000 ALTER TABLE `i_path_autobackup` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_phone_in`
--

DROP TABLE IF EXISTS `i_phone_in`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_phone_in` (
  `phone_book_id` varchar(120) NOT NULL,
  `phone_name` varchar(120) NOT NULL,
  `home_phone_1` varchar(120) DEFAULT NULL,
  `home_phone_2` varchar(120) DEFAULT NULL,
  `mobile_phone_1` varchar(120) DEFAULT NULL,
  `mobile_phone_2` varchar(120) DEFAULT NULL,
  `office_phone_1` varchar(120) DEFAULT NULL,
  `office_phone_2` varchar(120) DEFAULT NULL,
  `fax` varchar(120) DEFAULT NULL,
  `email` varchar(120) DEFAULT NULL,
  `address_phone` text,
  `website` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `status_id` smallint(6) DEFAULT NULL,
  `call_date` datetime DEFAULT NULL,
  `call_receiver` varchar(0) DEFAULT NULL,
  `message` text,
  PRIMARY KEY (`phone_book_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_phone_in`
--

LOCK TABLES `i_phone_in` WRITE;
/*!40000 ALTER TABLE `i_phone_in` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_phone_in` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_product`
--

DROP TABLE IF EXISTS `i_product`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_product` (
  `product_id` int(11) NOT NULL,
  `product_name` varchar(500) DEFAULT NULL,
  PRIMARY KEY (`product_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_product`
--

LOCK TABLES `i_product` WRITE;
/*!40000 ALTER TABLE `i_product` DISABLE KEYS */;
INSERT INTO `i_product` VALUES (1,'Basic'),(2,'POS'),(3,'Retail'),(4,'Toko Emas'),(5,'Manufaktur');
/*!40000 ALTER TABLE `i_product` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_product_id`
--

DROP TABLE IF EXISTS `i_product_id`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_product_id` (
  `product_id` int(11) NOT NULL AUTO_INCREMENT,
  `product_name` varchar(200) DEFAULT NULL,
  `product_version` varchar(200) DEFAULT NULL,
  `logo` text,
  `panel` varchar(200) DEFAULT NULL,
  `is_active` int(11) DEFAULT NULL,
  `copyright` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`product_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_product_id`
--

LOCK TABLES `i_product_id` WRITE;
/*!40000 ALTER TABLE `i_product_id` DISABLE KEYS */;
INSERT INTO `i_product_id` VALUES (1,'Pi-Accounting Software','1.0','D:/YOLK-IT/YolkEnterpriseAccounting (YORSA Software)/Pi-Accounting - Development/bin/Debug/pi-accounting-small.png','Dashboard',0,'Copyright Ôö¼┬« 2014-2015'),(2,'Pi-Accounting RS HAJI','1.1','D:/YOLK-IT/YolkEnterpriseAccounting (YORSA Software)/Pi-Accounting - Development/bin/Debug/pi-accounting-small.png','Dashboard',1,'Copyright Ôö¼┬« 2014-2015'),(3,'Pi-Accounting Attendance Sheraton','1.2','D:/YOLK-IT/YolkEnterpriseAccounting (YORSA Software)/Pi-Accounting - Development/bin/Debug/ITPI-LOGO.png','Panel Logo',0,'Copyright Ôö¼┬« 2014-2015');
/*!40000 ALTER TABLE `i_product_id` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_product_parameter`
--

DROP TABLE IF EXISTS `i_product_parameter`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_product_parameter` (
  `param_id` int(11) NOT NULL AUTO_INCREMENT,
  `produk_id` int(11) DEFAULT NULL,
  `origin_value` varchar(250) DEFAULT NULL,
  `subtitute_value` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`param_id`),
  KEY `produk_id` (`produk_id`),
  CONSTRAINT `i_product_parameter_ibfk_1` FOREIGN KEY (`produk_id`) REFERENCES `i_product` (`product_id`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_product_parameter`
--

LOCK TABLES `i_product_parameter` WRITE;
/*!40000 ALTER TABLE `i_product_parameter` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_product_parameter` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_product_reg`
--

DROP TABLE IF EXISTS `i_product_reg`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_product_reg` (
  `product_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_product_reg`
--

LOCK TABLES `i_product_reg` WRITE;
/*!40000 ALTER TABLE `i_product_reg` DISABLE KEYS */;
INSERT INTO `i_product_reg` VALUES (4);
/*!40000 ALTER TABLE `i_product_reg` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_project_name`
--

DROP TABLE IF EXISTS `i_project_name`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_project_name` (
  `id_project` int(11) NOT NULL AUTO_INCREMENT,
  `project_name` varchar(250) DEFAULT NULL,
  `header_text` varchar(250) DEFAULT NULL,
  `project_default` int(1) DEFAULT NULL,
  `profit_notes` varchar(250) DEFAULT NULL,
  `profit_notes_header` varchar(250) DEFAULT NULL,
  `include_prive` int(1) DEFAULT NULL,
  `is_bumn` int(1) DEFAULT NULL,
  PRIMARY KEY (`id_project`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_project_name`
--

LOCK TABLES `i_project_name` WRITE;
/*!40000 ALTER TABLE `i_project_name` DISABLE KEYS */;
INSERT INTO `i_project_name` VALUES (1,'Sistem Akuntansi RSU Haji Surabaya','PEMERINTAH PROPINSI JAWA TIMUR',0,'Surplus (Defisit) Tahun Berjalan','Surplus (Defisit)',0,1),(2,'Manufacturing Company','PERUSAHAAN DAGANG DAN INDUSTRI',0,'Laba - Rugi Periode Berjalan','Laba - Rugi',1,0),(3,'Pi Accounting','PERUSAHAAN KANTOR KONSULTAN',1,'Laba - Rugi Periode Berjalan','Laba - Rugi',1,0);
/*!40000 ALTER TABLE `i_project_name` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_set_account_def`
--

DROP TABLE IF EXISTS `i_set_account_def`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_set_account_def` (
  `acc_parameter` varchar(200) NOT NULL,
  `id_account` varchar(30) DEFAULT NULL,
  `notes` text,
  PRIMARY KEY (`acc_parameter`),
  KEY `fk_account` (`id_account`),
  CONSTRAINT `id_account` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_set_account_def`
--

LOCK TABLES `i_set_account_def` WRITE;
/*!40000 ALTER TABLE `i_set_account_def` DISABLE KEYS */;
INSERT INTO `i_set_account_def` VALUES ('acc_accummulated_profit','3-1199','Akumulasi Profit / Surplus / Defisit Tahun Lalu'),('acc_capital','3-1101','Capital Account'),('acc_cash_cashier','1-1101','Cashier Cash Account'),('acc_cash_purchase','1-1101','Cash Purchase Account'),('acc_cash_sales','1-1101','Cash Sales Account'),('acc_cash_service','1-1101','Cash Service Account'),('acc_close_period','3-1199','Profit - Loss Summary Account'),('acc_credit_purchase','2-1101','Account Payable Account'),('acc_credit_sales','1-1301','Account Receivable Account'),('acc_credit_service','1-1301','Account Receivable Account for Service'),('acc_def_cogs','5-1101','Default Inventory COGS Account'),('acc_def_inventory','1-1201','Default Inventory Account'),('acc_disc_beli','4-1102','Purchase Disc Account'),('acc_disc_sales','4-1103','Sales Disc Account'),('acc_disc_service','4-1103','Sales Service Disc Account'),('acc_dp_po','1-1499','Biaya Dibayar Dimuka Uang Muka PO'),('acc_dp_sales','2-1301','Sales Down Payment Account'),('acc_freight','6-1107','Freight Account'),('acc_freight_sales','6-1299','Freight Sales'),('acc_kurs_expenses','6-2101','Exchange Rate Expense Account'),('acc_kurs_revenue','4-2102','Exchange Rate Revenue Account'),('acc_other_expenses','6-1199','Others Expense Account'),('acc_other_revenue','4-1203','Others Revenue Account'),('acc_pay_purchase_disc','4-1104','Account Payable Payment Account'),('acc_pay_sales_disc','4-1105','Account Payable Payment Disc Account'),('acc_prive','3-1102','Prive Account'),('acc_sales','4-1101','Sales Account'),('acc_service_revenue','4-1201','Service Revenue Account'),('acc_tax_in','1-1501','VAT IN Account'),('acc_tax_out','2-1102','VAT OUT Account'),('acc_temp_konversi','5-2103','Rekening Perantara Biaya Konversi Perakitan / Produksi'),('acc_temp_material_cost','5-2101','Rekening Perantara Biaya Bahan Baku / Sparepart'),('acc_temp_payroll','2-1401','Rekening Perantara Payroll'),('acc_temp_subtitute_cost','5-2102','Rekening Perantara Biaya Bahan Pembantu'),('acc_temp_wip','1-1203','Rekening Perantara Barang Dalam Proses');
/*!40000 ALTER TABLE `i_set_account_def` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_set_account_def_manufacture`
--

DROP TABLE IF EXISTS `i_set_account_def_manufacture`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_set_account_def_manufacture` (
  `acc_parameter` varchar(200) NOT NULL,
  `id_account` varchar(30) DEFAULT NULL,
  `notes` text,
  PRIMARY KEY (`acc_parameter`),
  KEY `fk_account` (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_set_account_def_manufacture`
--

LOCK TABLES `i_set_account_def_manufacture` WRITE;
/*!40000 ALTER TABLE `i_set_account_def_manufacture` DISABLE KEYS */;
INSERT INTO `i_set_account_def_manufacture` VALUES ('acc_capital','3-1101','Capital Account'),('acc_cash_cashier','1-1199','Cashier Cash Account'),('acc_cash_purchase','1-1101','Cash Purchase Account'),('acc_cash_sales','1-1101','Cash Sales Account'),('acc_cash_service','1-1101','Cash Service Account'),('acc_close_period','3-1199','Profit - Loss Summary Account'),('acc_credit_purchase','2-1101','Account Payable Account'),('acc_credit_sales','1-1301','Account Receivable Account'),('acc_credit_service','1-1301','Account Receivable Account for Service'),('acc_disc_beli','4-1102','Purchase Disc Account'),('acc_disc_sales','4-1202','Sales Disc Account'),('acc_disc_service','4-1103','Sales Service Disc Account'),('acc_freight','6-1107','Freight Account'),('acc_kurs_expenses','6-2101','Exchange Rate Expense Account'),('acc_kurs_revenue','4-2101','Exchange Rate Revenue Account'),('acc_other_expenses','6-1299','Others Expense Account'),('acc_other_revenue','4-1203','Others Revenue Account'),('acc_pay_purchase_disc','4-1104','Account Payable Payment Account'),('acc_pay_sales_disc','4-1105','Account Payable Payment Disc Account'),('acc_prive','3-1102','Prive Account'),('acc_sales','4-1101','Sales Account'),('acc_tax_in','1-1501','VAT IN Account'),('acc_tax_out','2-1102','VAT OUT Account');
/*!40000 ALTER TABLE `i_set_account_def_manufacture` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_set_account_def_retail`
--

DROP TABLE IF EXISTS `i_set_account_def_retail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_set_account_def_retail` (
  `acc_parameter` varchar(200) NOT NULL,
  `id_account` varchar(30) DEFAULT NULL,
  `notes` text,
  PRIMARY KEY (`acc_parameter`),
  KEY `fk_account` (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_set_account_def_retail`
--

LOCK TABLES `i_set_account_def_retail` WRITE;
/*!40000 ALTER TABLE `i_set_account_def_retail` DISABLE KEYS */;
INSERT INTO `i_set_account_def_retail` VALUES ('acc_capital','3-1101','Capital Account'),('acc_cash_cashier','1-1199','Cashier Cash Account'),('acc_cash_purchase','1-1101','Cash Purchase Account'),('acc_cash_sales','1-1101','Cash Sales Account'),('acc_cash_service','1-1101','Cash Service Account'),('acc_close_period','3-1199','Profit - Loss Summary Account'),('acc_credit_purchase','2-1101','Account Payable Account'),('acc_credit_sales','1-1301','Account Receivable Account'),('acc_credit_service','1-1301','Account Receivable Account for Service'),('acc_disc_beli','4-1102','Purchase Disc Account'),('acc_disc_sales','4-1202','Sales Disc Account'),('acc_disc_service','4-1103','Sales Service Disc Account'),('acc_freight','6-1107','Freight Account'),('acc_kurs_expenses','6-2101','Exchange Rate Expense Account'),('acc_kurs_revenue','4-2101','Exchange Rate Revenue Account'),('acc_other_expenses','6-1299','Others Expense Account'),('acc_other_revenue','4-1203','Others Revenue Account'),('acc_pay_purchase_disc','4-1104','Account Payable Payment Account'),('acc_pay_sales_disc','4-1105','Account Payable Payment Disc Account'),('acc_prive','3-1102','Prive Account'),('acc_sales','4-1101','Sales Account'),('acc_tax_in','1-1501','VAT IN Account'),('acc_tax_out','2-1102','VAT OUT Account');
/*!40000 ALTER TABLE `i_set_account_def_retail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_set_account_def_simrs`
--

DROP TABLE IF EXISTS `i_set_account_def_simrs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_set_account_def_simrs` (
  `acc_parameter` varchar(200) NOT NULL,
  `id_account` varchar(30) DEFAULT NULL,
  `notes` text,
  PRIMARY KEY (`acc_parameter`),
  KEY `fk_account` (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_set_account_def_simrs`
--

LOCK TABLES `i_set_account_def_simrs` WRITE;
/*!40000 ALTER TABLE `i_set_account_def_simrs` DISABLE KEYS */;
INSERT INTO `i_set_account_def_simrs` VALUES ('acc_diskon_pembelian','2163506','Akun Diskon Pembelian'),('acc_hpp_obat','2163506','Akun HPP Persediaan Obat'),('acc_jasa_layanan_blud','8141901','Akun Pendapatan Jasa Layanan Medis'),('acc_peralatan_alkes','2163506','Akun Peralatan Alat Kesehatan'),('acc_persediaan_obat','2163506','Akun Persediaan Obat'),('acc_ppn_pembelian','2163506','Akun PPN Pembelian Obat dan Alkes');
/*!40000 ALTER TABLE `i_set_account_def_simrs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_set_age`
--

DROP TABLE IF EXISTS `i_set_age`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_set_age` (
  `id` int(11) NOT NULL,
  `notes` text,
  `start_value` int(11) DEFAULT NULL,
  `end_value` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_set_age`
--

LOCK TABLES `i_set_age` WRITE;
/*!40000 ALTER TABLE `i_set_age` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_set_age` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_set_ap_prosentase`
--

DROP TABLE IF EXISTS `i_set_ap_prosentase`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_set_ap_prosentase` (
  `id_cadangan` int(11) NOT NULL AUTO_INCREMENT,
  `umur_hutang` varchar(200) DEFAULT NULL,
  `prosentase` double(19,2) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `modified_user` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id_cadangan`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_set_ap_prosentase`
--

LOCK TABLES `i_set_ap_prosentase` WRITE;
/*!40000 ALTER TABLE `i_set_ap_prosentase` DISABLE KEYS */;
INSERT INTO `i_set_ap_prosentase` VALUES (1,'Belum Jatuh Tempo',0.00,'2015-11-17 00:00:00','demo'),(2,'<= 30 Hari',0.00,'2015-11-17 00:00:00','demo'),(3,'31 - 60 Hari',0.00,'2015-11-17 00:00:00','demo'),(4,'61 - 90 Hari',0.00,'2015-11-17 00:00:00','demo'),(5,'91 - 120 Hari',0.00,'2015-11-17 00:00:00','demo'),(6,'> 120 Hari',0.00,'2015-11-17 00:00:00','demo');
/*!40000 ALTER TABLE `i_set_ap_prosentase` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_set_ar_prosentase`
--

DROP TABLE IF EXISTS `i_set_ar_prosentase`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_set_ar_prosentase` (
  `id_cadangan` int(11) NOT NULL AUTO_INCREMENT,
  `umur_piutang` varchar(200) DEFAULT NULL,
  `prosentase` double(19,2) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `modified_user` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id_cadangan`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_set_ar_prosentase`
--

LOCK TABLES `i_set_ar_prosentase` WRITE;
/*!40000 ALTER TABLE `i_set_ar_prosentase` DISABLE KEYS */;
INSERT INTO `i_set_ar_prosentase` VALUES (1,'Belum Jatuh Tempo',0.00,'2015-12-08 00:00:00','demo'),(2,'<= 30 Hari',0.00,'2015-12-08 00:00:00','demo'),(3,'31 - 60 Hari',0.00,'2015-12-08 00:00:00','demo'),(4,'61 - 90 Hari',0.00,'2015-12-08 00:00:00','demo'),(5,'91 - 120 Hari',0.00,'2015-12-08 00:00:00','demo'),(6,'> 120 Hari',0.00,'2015-12-08 00:00:00','demo');
/*!40000 ALTER TABLE `i_set_ar_prosentase` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_set_price`
--

DROP TABLE IF EXISTS `i_set_price`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_set_price` (
  `id_warehouse` varchar(25) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `id_unit` varchar(25) DEFAULT NULL,
  `amount_cogs` double DEFAULT NULL,
  `amount_price` double DEFAULT NULL,
  KEY `set_price_fkey1` (`id_item`),
  KEY `set_price_fkey2` (`id_warehouse`),
  CONSTRAINT `i_set_price_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `i_set_price_ibfk_2` FOREIGN KEY (`id_warehouse`) REFERENCES `mst_warehouse` (`id_warehouse`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_set_price`
--

LOCK TABLES `i_set_price` WRITE;
/*!40000 ALTER TABLE `i_set_price` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_set_price` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_setup_email`
--

DROP TABLE IF EXISTS `i_setup_email`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_setup_email` (
  `smtpclient` varchar(250) DEFAULT NULL,
  `pop3client` varchar(250) DEFAULT NULL,
  `smtpport` varchar(250) DEFAULT NULL,
  `imapport` varchar(250) DEFAULT NULL,
  `email` varchar(250) DEFAULT NULL,
  `user` varchar(250) DEFAULT NULL,
  `pass` varchar(250) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_setup_email`
--

LOCK TABLES `i_setup_email` WRITE;
/*!40000 ALTER TABLE `i_setup_email` DISABLE KEYS */;
INSERT INTO `i_setup_email` VALUES ('smtp.gmail.com','imap.gmail.com','587','993','indonesia.erp.software@gmail.com','indonesia.erp.software','apaya?lupa');
/*!40000 ALTER TABLE `i_setup_email` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_stock_in`
--

DROP TABLE IF EXISTS `i_stock_in`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_stock_in` (
  `no_stock_in` varchar(60) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `id_item` varchar(30) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(30) DEFAULT NULL,
  `cogs` double(10,0) DEFAULT NULL,
  `price` decimal(10,0) DEFAULT NULL,
  `id_warehouse` varchar(60) DEFAULT NULL,
  KEY `id_unit_fkey` (`id_unit`),
  KEY `id_item_fkey` (`id_item`),
  CONSTRAINT `id_item_fkey` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `id_unit_fkey` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_stock_in`
--

LOCK TABLES `i_stock_in` WRITE;
/*!40000 ALTER TABLE `i_stock_in` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_stock_in` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_stock_out`
--

DROP TABLE IF EXISTS `i_stock_out`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_stock_out` (
  `no_stock_out` varchar(60) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `id_item` varchar(30) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(30) DEFAULT NULL,
  `cogs` double(10,0) DEFAULT NULL,
  `price` decimal(10,0) DEFAULT NULL,
  `id_warehouse` varchar(60) DEFAULT NULL,
  KEY `id_unit_fkey2` (`id_unit`),
  KEY `id_item_fkey2` (`id_item`),
  CONSTRAINT `id_item_fkey2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `id_unit_fkey2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_stock_out`
--

LOCK TABLES `i_stock_out` WRITE;
/*!40000 ALTER TABLE `i_stock_out` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_stock_out` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_tax_setting`
--

DROP TABLE IF EXISTS `i_tax_setting`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_tax_setting` (
  `tax_name` varchar(30) NOT NULL,
  `tax_decription` varchar(200) DEFAULT NULL,
  `rate` float DEFAULT NULL,
  PRIMARY KEY (`tax_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_tax_setting`
--

LOCK TABLES `i_tax_setting` WRITE;
/*!40000 ALTER TABLE `i_tax_setting` DISABLE KEYS */;
INSERT INTO `i_tax_setting` VALUES ('PPN','Value Added Tax',10);
/*!40000 ALTER TABLE `i_tax_setting` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_templatehakakses`
--

DROP TABLE IF EXISTS `i_templatehakakses`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_templatehakakses` (
  `nourut` int(11) NOT NULL AUTO_INCREMENT,
  `parentkey` varchar(120) NOT NULL,
  `childkey` varchar(120) NOT NULL,
  `notes` varchar(400) DEFAULT NULL,
  `ismenu` int(11) DEFAULT NULL,
  `icon_webapp` varchar(250) DEFAULT NULL,
  `link_webapp` varchar(500) DEFAULT NULL,
  PRIMARY KEY (`parentkey`,`childkey`),
  UNIQUE KEY `TEMPLATEHAKAKSES_PK` (`parentkey`,`childkey`),
  UNIQUE KEY `TEMPLATENOOROT` (`nourut`) USING BTREE,
  KEY `PARENTKEY` (`parentkey`),
  KEY `CHILDKEY` (`childkey`)
) ENGINE=InnoDB AUTO_INCREMENT=356 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_templatehakakses`
--

LOCK TABLES `i_templatehakakses` WRITE;
/*!40000 ALTER TABLE `i_templatehakakses` DISABLE KEYS */;
INSERT INTO `i_templatehakakses` VALUES (334,'MN_ACCOUNT','MN_ACCOUNTING_REPORT','LAPORAN AKUNTANSI',1,NULL,NULL),(333,'MN_ACCOUNT','MN_CLOSE_PERIOD','TUTUP PERIODE TRANSAKSI',1,NULL,NULL),(310,'MN_ACCOUNT','MN_COA','CHART OF ACCOUNT',1,NULL,NULL),(342,'MN_ACCOUNTING_REPORT','MN_INCOME_STATEMENT','LAPORAN LABA - RUGI',2,NULL,NULL),(32,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_ADD','Akses Add',2,NULL,NULL),(33,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_DELETE','Akses Delete',2,NULL,NULL),(31,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_EDIT','Akses Edit',2,NULL,NULL),(30,'MN_CARDFILE','MN_BEGINING_BALANCE','SALDO AWAL BARANG',1,NULL,NULL),(54,'MN_CARDFILE','MN_CARD_FILE_REPORT','LAPORAN MASTER',1,NULL,NULL),(2,'MN_CARDFILE','MN_CUSTOMER','PELANGGAN',1,NULL,NULL),(10,'MN_CARDFILE','MN_EMPLOYEE','KARYAWAN',1,NULL,NULL),(18,'MN_CARDFILE','MN_ITEM_CAT','KATEGORI BARANG',1,NULL,NULL),(26,'MN_CARDFILE','MN_ITEM_NAME','NAMA BARANG',1,NULL,NULL),(14,'MN_CARDFILE','MN_ITEM_TYPE','JENIS BARANG',1,NULL,NULL),(34,'MN_CARDFILE','MN_JENIS_JASA','JENIS JASA',1,NULL,NULL),(6,'MN_CARDFILE','MN_SUPPLIER','PEMASOK',1,NULL,NULL),(55,'MN_CARD_FILE_REPORT','MN_CUST_REPORT_DAFTARPELANGGAN','LAPORAN DAFTAR PELANGGAN',2,NULL,NULL),(56,'MN_CARD_FILE_REPORT','MN_CUST_REPORT_DAFTARPELANGGAN_CITY','LAPORAN DAFTAR PELANGGAN GROUP BY KOTA',2,NULL,NULL),(57,'MN_CARD_FILE_REPORT','MN_CUST_REPORT_RANKING_PENJUALAN','LAPORAN RANKING PENJUALAN PELANGGAN',2,NULL,NULL),(60,'MN_CARD_FILE_REPORT','MN_EMPP_REPORT_DAFTARKARYAWAN','LAPORAN DAFTAR KARYAWAN',2,NULL,NULL),(58,'MN_CARD_FILE_REPORT','MN_SUPP_REPORT_DAFTARSUPPLIER','LAPORAN DAFTAR SUPPLIER',2,NULL,NULL),(59,'MN_CARD_FILE_REPORT','MN_SUPP_REPORT_RANKING_PEMBELIAN','LAPORAN RANKING PEMBELIAN SUPPLIER',2,NULL,NULL),(245,'MN_CASHBANK_RECAP_REPORT','MN_CASHBANK_TRANS_RECAP','LAPORAN REKAPITUASI KAS / BANK',2,NULL,NULL),(242,'MN_CASHBANK_TRANS_REPORT','MN_CASHBANK_TRANS_DETAIL','LAPORAN KAS / BANK DETAIL',2,NULL,NULL),(212,'MN_CASHIER','MN_CASHIER_ADD','Akses Add',2,NULL,NULL),(213,'MN_CASHIER','MN_CASHIER_DELETE','Akses Delete',2,NULL,NULL),(211,'MN_CASHIER','MN_CASHIER_EDIT','Akses Edit',2,NULL,NULL),(214,'MN_CASHIER','MN_CASHIER_PRINT','Akses Print',2,NULL,NULL),(217,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_ADD','Akses Add',2,NULL,NULL),(218,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_DELETE','Akses Delete',2,NULL,NULL),(216,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_EDIT','Akses Edit',2,NULL,NULL),(219,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_PRINT','Akses Print',2,NULL,NULL),(244,'MN_CASH_BANK','MN_CASHBANK_RECAP_REPORT','LAPORAN REKAPITULASI ',1,NULL,NULL),(241,'MN_CASH_BANK','MN_CASHBANK_TRANS_REPORT','LAPORAN DETAIL',1,NULL,NULL),(230,'MN_CASH_BANK','MN_SPEND_MONEY','PEMBAYARAN VIA KAS/BANK',1,NULL,NULL),(312,'MN_COA','MN_COA_ADD','Akses Add',2,NULL,NULL),(313,'MN_COA','MN_COA_DELETE','Akses Delete',2,NULL,NULL),(311,'MN_COA','MN_COA_EDIT','Akses Edit',2,NULL,NULL),(314,'MN_COA','MN_COA_PRINT','Akses Print',2,NULL,NULL),(4,'MN_CUSTOMER','MN_CUSTOMER_ADD','Akses Add',2,NULL,NULL),(5,'MN_CUSTOMER','MN_CUSTOMER_DELETE','Akses Delete',2,NULL,NULL),(3,'MN_CUSTOMER','MN_CUSTOMER_EDIT','Akses Edit',2,NULL,NULL),(12,'MN_EMPLOYEE','MN_EMPLOYEE_ADD','Akses Add',2,NULL,NULL),(13,'MN_EMPLOYEE','MN_EMPLOYEE_DELETE','Akses Delete',2,NULL,NULL),(11,'MN_EMPLOYEE','MN_EMPLOYEE_EDIT','Akses Edit',2,NULL,NULL),(20,'MN_ITEM_CAT','MN_ITEM_CAT_ADD','Akses Add',2,NULL,NULL),(21,'MN_ITEM_CAT','MN_ITEM_CAT_DELETE','Akses Delete',2,NULL,NULL),(19,'MN_ITEM_CAT','MN_ITEM_CAT_EDIT','Akses Edit',2,NULL,NULL),(28,'MN_ITEM_NAME','MN_ITEM_NAME_ADD','Akses Add',2,NULL,NULL),(29,'MN_ITEM_NAME','MN_ITEM_NAME_DELETE','Akses Delete',2,NULL,NULL),(27,'MN_ITEM_NAME','MN_ITEM_NAME_EDIT','Akses Edit',2,NULL,NULL),(16,'MN_ITEM_TYPE','MN_ITEM_TYPE_ADD','Akses Add',2,NULL,NULL),(17,'MN_ITEM_TYPE','MN_ITEM_TYPE_DELETE','Akses Delete',2,NULL,NULL),(15,'MN_ITEM_TYPE','MN_ITEM_TYPE_EDIT','Akses Edit',2,NULL,NULL),(36,'MN_JENIS_JASA','MN_JENIS_JASA_ADD','Akses Add',2,NULL,NULL),(37,'MN_JENIS_JASA','MN_JENIS_JASA_DELETE','Akses Delete',2,NULL,NULL),(35,'MN_JENIS_JASA','MN_JENIS_JASA_EDIT','Akses Edit',2,NULL,NULL),(308,'MN_KOPERASI','MN_LAP_KOPERASI','LAPORAN SIMPAN PINJAM EMAS',1,NULL,NULL),(303,'MN_KOPERASI','MN_SIMPAN_PINJAM','SIMPAN PINJAM EMAS',1,NULL,NULL),(354,'MN_LAPORAN_JUAL','MN_LAPORAN_JUAL_PERKATEGORI','LAPORAN PENJUALAN GROUP KATEGORI BARANG',2,'',''),(200,'MN_LAPORAN_JUAL','MN_LAPORAN_SALES_GRAFIK','LAPORAN GRAFIK PENJUALAN',2,NULL,NULL),(197,'MN_LAPORAN_JUAL','MN_LAPORAN_SALES_GROUP','LAPORAN PENJUALAN GROUP PELANGGAN',2,NULL,NULL),(198,'MN_LAPORAN_JUAL','MN_LAPORAN_SALES_RECAP','LAPORAN REKAPITULASI PENJUALAN',2,NULL,NULL),(196,'MN_LAPORAN_JUAL','MN_LAPORAN_SALES_STD','LAPORAN PENJUALAN STANDAR',2,NULL,NULL),(194,'MN_LAPORAN_JUAL','MN_LAPORAN_SO','LAPORAN SALES ORDER',2,NULL,NULL),(355,'MN_LAP_KOPERASI','MN_LAPORAN_SIMPANPINJAM','LAPORAN SIMPAN PINJAM DETAIL',2,'',''),(222,'MN_MUTASI_CASHIER','MN_MUTASI_CASHIER_DETAIL','LAPORAN KASIR DETAIL',2,NULL,NULL),(223,'MN_MUTASI_CASHIER','MN_MUTASI_CASHIER_RECAP','LAPORAN KASIR REKAP',2,NULL,NULL),(210,'MN_OUTLET_SALES','MN_CASHIER','TRANSAKSI KASIR',1,NULL,NULL),(220,'MN_OUTLET_SALES','MN_CASHIER_REGISTER','KASIR REGISTER',1,NULL,NULL),(215,'MN_OUTLET_SALES','MN_CASHIER_RETURN','RETUR TRANSAKSI KASIR',1,NULL,NULL),(193,'MN_OUTLET_SALES','MN_LAPORAN_JUAL','LAPORAN PENJUALAN',1,NULL,NULL),(221,'MN_OUTLET_SALES','MN_MUTASI_CASHIER','LAPORAN KASIR',1,NULL,NULL),(88,'MN_PO','MN_PO_ADD','Akses Add',2,NULL,NULL),(89,'MN_PO','MN_PO_DELETE','Akses Delete',2,NULL,NULL),(87,'MN_PO','MN_PO_EDIT','Akses Edit',2,NULL,NULL),(91,'MN_PO','MN_PO_EDIT_UM','Edit Uang Muka',2,NULL,NULL),(90,'MN_PO','MN_PO_PRINT','Akses Print',2,NULL,NULL),(86,'MN_PURCHASE','MN_PO','PURCHASE ORDER',1,NULL,NULL),(106,'MN_PURCHASE','MN_PURCHASE_DIRECT','PEMBELIAN LANGSUNG',1,NULL,NULL),(127,'MN_PURCHASE','MN_PURCHASE_REPORT','LAPORAN PEMBELIAN',1,NULL,NULL),(111,'MN_PURCHASE','MN_PURCHASE_RETURN','RETUR BELI',1,NULL,NULL),(97,'MN_PURCHASE','MN_PURCHASE_UM_LUNAS','PELUNASAN PESANAN PO',1,NULL,NULL),(108,'MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_ADD','Akses Add',2,NULL,NULL),(109,'MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_DELETE','Akses Delete',2,NULL,NULL),(107,'MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_EDIT','Akses Edit',2,NULL,NULL),(110,'MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_PRINT','Akses Print',2,NULL,NULL),(129,'MN_PURCHASE_REPORT','MN_LAP_PO','LAPORAN PO',2,NULL,NULL),(131,'MN_PURCHASE_REPORT','MN_LAP_PURCH','LAPORAN PEMBELIAN STANDAR',2,NULL,NULL),(136,'MN_PURCHASE_REPORT','MN_LAP_PURCH_GRAPHIC','LAPORAN GRAFIK PEMBELIAN',2,NULL,NULL),(133,'MN_PURCHASE_REPORT','MN_LAP_PURCH_GROUP_PERIOD','LAPORAN PEMBELIAN GRUP PERIODE',2,NULL,NULL),(132,'MN_PURCHASE_REPORT','MN_LAP_PURCH_GROUP_SUPP','LAPORAN PEMBELIAN GRUP SUPPLIER',2,NULL,NULL),(113,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_ADD','Akses Add',2,NULL,NULL),(114,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_DELETE','Akses Delete',2,NULL,NULL),(112,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_EDIT','Akses Edit',2,NULL,NULL),(115,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_PRINT','Akses Print',2,NULL,NULL),(98,'MN_PURCHASE_UM_LUNAS','MN_PURCHASE_UM_LUNAS_ADD','Akses Add',2,NULL,NULL),(99,'MN_PURCHASE_UM_LUNAS','MN_PURCHASE_UM_LUNAS_DELETE','Akses Delete',2,NULL,NULL),(100,'MN_PURCHASE_UM_LUNAS','MN_PURCHASE_UM_LUNAS_EDIT','Akses Edit',2,NULL,NULL),(175,'MN_SALES','MN_SALES_RETURN','RETUR JUAL',1,NULL,NULL),(155,'MN_SALES','MN_SALES_UM_LUNAS','PELUNASAN PESANAN SO',1,NULL,NULL),(148,'MN_SALES','MN_SO','ORDER PENJUALAN',1,NULL,NULL),(177,'MN_SALES_RETURN','MN_SALES_RETURN_ADD','Akses Add',2,NULL,NULL),(178,'MN_SALES_RETURN','MN_SALES_RETURN_DELETE','Akses Delete',2,NULL,NULL),(176,'MN_SALES_RETURN','MN_SALES_RETURN_EDIT','Akses Edit',2,NULL,NULL),(179,'MN_SALES_RETURN','MN_SALES_RETURN_PRINT','Akses Print',2,NULL,NULL),(156,'MN_SALES_UM_LUNAS','MN_SALES_UM_LUNAS_ADD','Akses Add',2,NULL,NULL),(157,'MN_SALES_UM_LUNAS','MN_SALES_UM_LUNAS_DELETE','Akses Delete',2,NULL,NULL),(158,'MN_SALES_UM_LUNAS','MN_SALES_UM_LUNAS_EDIT','Akses Edit',2,NULL,NULL),(159,'MN_SALES_UM_LUNAS','MN_SALES_UM_LUNAS_PRINT','Akses Print',2,NULL,NULL),(304,'MN_SIMPAN_PINJAM','MN_SIMPAN_PINJAM_ADD','Akses Add',2,NULL,NULL),(306,'MN_SIMPAN_PINJAM','MN_SIMPAN_PINJAM_DELETE','Akses Delete',2,NULL,NULL),(305,'MN_SIMPAN_PINJAM','MN_SIMPAN_PINJAM_EDIT','Akses Edit',2,NULL,NULL),(307,'MN_SIMPAN_PINJAM','MN_SIMPAN_PINJAM_PRINT','Akses Print',2,NULL,NULL),(150,'MN_SO','MN_SO_ADD','Akses Add',2,NULL,NULL),(151,'MN_SO','MN_SO_DELETE','Akses Delete',2,NULL,NULL),(149,'MN_SO','MN_SO_EDIT','Akses Edit',2,NULL,NULL),(152,'MN_SO','MN_SO_PRINT','Akses Print',2,NULL,NULL),(232,'MN_SPEND_MONEY','MN_SPEND_MONEY_ADD','Akses Add',2,NULL,NULL),(233,'MN_SPEND_MONEY','MN_SPEND_MONEY_DELETE','Akses Delete',2,NULL,NULL),(231,'MN_SPEND_MONEY','MN_SPEND_MONEY_EDIT','Akses Edit',2,NULL,NULL),(234,'MN_SPEND_MONEY','MN_SPEND_MONEY_PRINT','Akses Print',2,NULL,NULL),(66,'MN_STOCK','MN_STOCK_CORRECTION','KOREKSI STOK',1,NULL,NULL),(62,'MN_STOCK','MN_STOCK_OPNAME','STOK OPNAME',1,NULL,NULL),(75,'MN_STOCK','MN_STOCK_REPORT','LAPORAN STOK',1,NULL,NULL),(68,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_ADD','Akses Add',2,NULL,NULL),(69,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_DELETE','Akses Delete',2,NULL,NULL),(67,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_EDIT','Akses Edit',2,NULL,NULL),(64,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_ADD','Akses Add',2,NULL,NULL),(65,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_DELETE','Akses Delete',2,NULL,NULL),(63,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_EDIT','Akses Edit',2,NULL,NULL),(353,'MN_STOCK_REPORT','MN_LAPORAN_STOK_PERITEM','LAPORAN STOK ITEM GROUP KATEGORI BARANG',2,'',''),(76,'MN_STOCK_REPORT','MN_STOCK_ADJUSTMENT_REPORT','LAPORAN KOREKSI STOK',2,NULL,NULL),(78,'MN_STOCK_REPORT','MN_STOCK_CARD_COGS','KARTU STOK DENGAN HPP PER ITEM',2,NULL,NULL),(77,'MN_STOCK_REPORT','MN_STOCK_MUTATION_REPORT','LAPORAN MUTASI STOK',2,NULL,NULL),(8,'MN_SUPPLIER','MN_SUPPLIER_ADD','Akses Add',2,NULL,NULL),(9,'MN_SUPPLIER','MN_SUPPLIER_DELETE','Akses Delete',2,NULL,NULL),(7,'MN_SUPPLIER','MN_SUPPLIER_EDIT','Akses Edit',2,NULL,NULL),(346,'MN_TOOLS','MN_BACKUP','BACKUP',1,NULL,NULL),(352,'MN_TOOLS','MN_CLEANSING_DB','CLEANSING DB',1,NULL,NULL),(348,'MN_TOOLS','MN_RESTORE','RESTORE',1,NULL,NULL),(351,'MN_TOOLS','MN_SET_PATH','SETUP IMAGE DIREKTORI PATH',1,NULL,NULL),(350,'MN_TOOLS','MN_USERMANAGE','PENGATURAN USER',1,NULL,NULL),(309,'ROOT','MN_ACCOUNT','AKUNTANSI',0,NULL,NULL),(1,'ROOT','MN_CARDFILE','MASTER DATA',0,NULL,NULL),(224,'ROOT','MN_CASH_BANK','KEUANGAN',0,NULL,NULL),(302,'ROOT','MN_KOPERASI','SIMPAN PINJAM',0,NULL,NULL),(209,'ROOT','MN_OUTLET_SALES','KASIR',0,NULL,NULL),(79,'ROOT','MN_PURCHASE','PEMBELIAN',0,NULL,NULL),(145,'ROOT','MN_SALES','PESANAN PENJUALAN',0,NULL,NULL),(61,'ROOT','MN_STOCK','STOK',0,NULL,NULL),(345,'ROOT','MN_TOOLS','TOOLS',0,NULL,NULL);
/*!40000 ALTER TABLE `i_templatehakakses` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_templatehakakses_def`
--

DROP TABLE IF EXISTS `i_templatehakakses_def`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_templatehakakses_def` (
  `nourut` int(11) NOT NULL AUTO_INCREMENT,
  `parentkey` varchar(60) NOT NULL,
  `childkey` varchar(60) NOT NULL,
  `notes` text,
  `ismenu` int(11) DEFAULT NULL,
  PRIMARY KEY (`parentkey`,`childkey`),
  UNIQUE KEY `TEMPLATEHAKAKSES_PK` (`parentkey`,`childkey`),
  UNIQUE KEY `TEMPLATENOOROT` (`nourut`) USING BTREE,
  KEY `PARENTKEY` (`parentkey`),
  KEY `CHILDKEY` (`childkey`)
) ENGINE=InnoDB AUTO_INCREMENT=372 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_templatehakakses_def`
--

LOCK TABLES `i_templatehakakses_def` WRITE;
/*!40000 ALTER TABLE `i_templatehakakses_def` DISABLE KEYS */;
INSERT INTO `i_templatehakakses_def` VALUES (352,'MN_ACCOUNT','MN_ACCOUNTING_REPORT','LAPORAN AKUNTANSI',1),(351,'MN_ACCOUNT','MN_CLOSE_PERIOD','TUTUP PERIODE TRANSAKSI',1),(328,'MN_ACCOUNT','MN_COA','CHART OF ACCOUNT',1),(360,'MN_ACCOUNTING_REPORT','MN_INCOME_STATEMENT','LAPORAN LABA - RUGI',1),(44,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_ADD','Akses Add',2),(45,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_DELETE','Akses Delete',2),(43,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_EDIT','Akses Edit',2),(42,'MN_CARDFILE','MN_BEGINING_BALANCE','SALDO AWAL BARANG',1),(69,'MN_CARDFILE','MN_CARD_FILE_REPORT','LAPORAN MASTER',1),(14,'MN_CARDFILE','MN_CUSTOMER','PELANGGAN',1),(22,'MN_CARDFILE','MN_EMPLOYEE','KARYAWAN',1),(30,'MN_CARDFILE','MN_ITEM_CAT','KATEGORI BARANG',1),(38,'MN_CARDFILE','MN_ITEM_NAME','NAMA BARANG',1),(26,'MN_CARDFILE','MN_ITEM_TYPE','JENIS BARANG',1),(46,'MN_CARDFILE','MN_JENIS_JASA','JENIS JASA',1),(18,'MN_CARDFILE','MN_SUPPLIER','PEMASOK',1),(70,'MN_CARD_FILE_REPORT','MN_CUST_REPORT_DAFTARPELANGGAN','LAPORAN DAFTAR PELANGGAN',1),(71,'MN_CARD_FILE_REPORT','MN_CUST_REPORT_DAFTARPELANGGAN_CITY','LAPORAN DAFTAR PELANGGAN GROUP BY KOTA',1),(72,'MN_CARD_FILE_REPORT','MN_CUST_REPORT_RANKING_PENJUALAN','LAPORAN RANKING PENJUALAN PELANGGAN',1),(75,'MN_CARD_FILE_REPORT','MN_EMPP_REPORT_DAFTARKARYAWAN','LAPORAN DAFTAR KARYAWAN',1),(73,'MN_CARD_FILE_REPORT','MN_SUPP_REPORT_DAFTARSUPPLIER','LAPORAN DAFTAR SUPPLIER',1),(74,'MN_CARD_FILE_REPORT','MN_SUPP_REPORT_RANKING_PEMBELIAN','LAPORAN RANKING PEMBELIAN SUPPLIER',1),(255,'MN_CASHBANK_RECAP_REPORT','MN_CASHBANK_TRANS_RECAP','LAPORAN REKAPITUASI KAS / BANK',1),(252,'MN_CASHBANK_TRANS_REPORT','MN_CASHBANK_TRANS_DETAIL','LAPORAN KAS / BANK DETAIL',2),(223,'MN_CASHIER','MN_CASHIER_ADD','Akses Add',2),(224,'MN_CASHIER','MN_CASHIER_DELETE','Akses Delete',2),(222,'MN_CASHIER','MN_CASHIER_EDIT','Akses Edit',2),(225,'MN_CASHIER','MN_CASHIER_PRINT','Akses Print',2),(228,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_ADD','Akses Add',2),(229,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_DELETE','Akses Delete',2),(227,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_EDIT','Akses Edit',2),(230,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_PRINT','Akses Print',2),(254,'MN_CASH_BANK','MN_CASHBANK_RECAP_REPORT','LAPORAN REKAPITULASI ',1),(251,'MN_CASH_BANK','MN_CASHBANK_TRANS_REPORT','LAPORAN DETAIL',1),(240,'MN_CASH_BANK','MN_SPEND_MONEY','PEMBAYARAN VIA KAS/BANK',1),(330,'MN_COA','MN_COA_ADD','Akses Add',2),(331,'MN_COA','MN_COA_DELETE','Akses Delete',2),(329,'MN_COA','MN_COA_EDIT','Akses Edit',2),(332,'MN_COA','MN_COA_PRINT','Akses Print',2),(16,'MN_CUSTOMER','MN_CUSTOMER_ADD','Akses Add',2),(17,'MN_CUSTOMER','MN_CUSTOMER_DELETE','Akses Delete',2),(15,'MN_CUSTOMER','MN_CUSTOMER_EDIT','Akses Edit',2),(24,'MN_EMPLOYEE','MN_EMPLOYEE_ADD','Akses Add',2),(25,'MN_EMPLOYEE','MN_EMPLOYEE_DELETE','Akses Delete',2),(23,'MN_EMPLOYEE','MN_EMPLOYEE_EDIT','Akses Edit',2),(32,'MN_ITEM_CAT','MN_ITEM_CAT_ADD','Akses Add',2),(33,'MN_ITEM_CAT','MN_ITEM_CAT_DELETE','Akses Delete',2),(31,'MN_ITEM_CAT','MN_ITEM_CAT_EDIT','Akses Edit',2),(40,'MN_ITEM_NAME','MN_ITEM_NAME_ADD','Akses Add',2),(41,'MN_ITEM_NAME','MN_ITEM_NAME_DELETE','Akses Delete',2),(39,'MN_ITEM_NAME','MN_ITEM_NAME_EDIT','Akses Edit',2),(28,'MN_ITEM_TYPE','MN_ITEM_TYPE_ADD','Akses Add',2),(29,'MN_ITEM_TYPE','MN_ITEM_TYPE_DELETE','Akses Delete',2),(27,'MN_ITEM_TYPE','MN_ITEM_TYPE_EDIT','Akses Edit',2),(48,'MN_JENIS_JASA','MN_JENIS_JASA_ADD','Akses Add',2),(49,'MN_JENIS_JASA','MN_JENIS_JASA_DELETE','Akses Delete',2),(47,'MN_JENIS_JASA','MN_JENIS_JASA_EDIT','Akses Edit',2),(327,'MN_KOPERASI','MN_LAP_KOPERASI','LAPORAN SIMPAN PINJAM EMAS',1),(322,'MN_KOPERASI','MN_SIMPAN_PINJAM','SIMPAN PINJAM EMAS',1),(371,'MN_LAPORAN_JUAL','MN_LAPORAN_JUAL_PERKATEGORI','LAPORAN PENJUALAN GROUP KATEGORI BARANG',2),(212,'MN_LAPORAN_JUAL','MN_LAPORAN_SALES_GRAFIK','LAPORAN GRAFIK PENJUALAN',1),(209,'MN_LAPORAN_JUAL','MN_LAPORAN_SALES_GROUP','LAPORAN PENJUALAN GROUP PELANGGAN',1),(210,'MN_LAPORAN_JUAL','MN_LAPORAN_SALES_RECAP','LAPORAN REKAPITULASI PENJUALAN',1),(208,'MN_LAPORAN_JUAL','MN_LAPORAN_SALES_STD','LAPORAN PENJUALAN STANDAR',1),(206,'MN_LAPORAN_JUAL','MN_LAPORAN_SO','LAPORAN SALES ORDER',1),(233,'MN_MUTASI_CASHIER','MN_MUTASI_CASHIER_DETAIL','LAPORAN KASIR DETAIL',2),(234,'MN_MUTASI_CASHIER','MN_MUTASI_CASHIER_RECAP','LAPORAN KASIR REKAP',2),(221,'MN_OUTLET_SALES','MN_CASHIER','TRANSAKSI KASIR',1),(231,'MN_OUTLET_SALES','MN_CASHIER_REGISTER','KASIR REGISTER',1),(226,'MN_OUTLET_SALES','MN_CASHIER_RETURN','RETUR TRANSAKSI KASIR',1),(205,'MN_OUTLET_SALES','MN_LAPORAN_JUAL','LAPORAN PENJUALAN',1),(232,'MN_OUTLET_SALES','MN_MUTASI_CASHIER','LAPORAN KASIR',1),(101,'MN_PO','MN_PO_ADD','Akses Add',2),(102,'MN_PO','MN_PO_DELETE','Akses Delete',2),(100,'MN_PO','MN_PO_EDIT','Akses Edit',2),(104,'MN_PO','MN_PO_EDIT_UM','Edit Uang Muka',2),(103,'MN_PO','MN_PO_PRINT','Akses Print',2),(99,'MN_PURCHASE','MN_PO','PURCHASE ORDER',1),(119,'MN_PURCHASE','MN_PURCHASE_DIRECT','PEMBELIAN LANGSUNG',1),(140,'MN_PURCHASE','MN_PURCHASE_REPORT','LAPORAN PEMBELIAN',1),(124,'MN_PURCHASE','MN_PURCHASE_RETURN','RETUR BELI',1),(110,'MN_PURCHASE','MN_PURCHASE_UM_LUNAS','PELUNASAN PESANAN PO',1),(121,'MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_ADD','Akses Add',2),(122,'MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_DELETE','Akses Delete',2),(120,'MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_EDIT','Akses Edit',2),(123,'MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_PRINT','Akses Print',2),(142,'MN_PURCHASE_REPORT','MN_LAP_PO','LAPORAN PO',1),(144,'MN_PURCHASE_REPORT','MN_LAP_PURCH','LAPORAN PEMBELIAN STANDAR',1),(149,'MN_PURCHASE_REPORT','MN_LAP_PURCH_GRAPHIC','LAPORAN GRAFIK PEMBELIAN',1),(146,'MN_PURCHASE_REPORT','MN_LAP_PURCH_GROUP_PERIOD','LAPORAN PEMBELIAN GRUP PERIODE',1),(145,'MN_PURCHASE_REPORT','MN_LAP_PURCH_GROUP_SUPP','LAPORAN PEMBELIAN GRUP SUPPLIER',1),(126,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_ADD','Akses Add',2),(127,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_DELETE','Akses Delete',2),(125,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_EDIT','Akses Edit',2),(128,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_PRINT','Akses Print',2),(111,'MN_PURCHASE_UM_LUNAS','MN_PURCHASE_UM_LUNAS_ADD','Akses Add',2),(112,'MN_PURCHASE_UM_LUNAS','MN_PURCHASE_UM_LUNAS_DELETE','Akses Delete',2),(113,'MN_PURCHASE_UM_LUNAS','MN_PURCHASE_UM_LUNAS_EDIT','Akses Edit',2),(187,'MN_SALES','MN_SALES_RETURN','RETUR JUAL',1),(167,'MN_SALES','MN_SALES_UM_LUNAS','PELUNASAN PESANAN SO',1),(160,'MN_SALES','MN_SO','ORDER PENJUALAN',1),(189,'MN_SALES_RETURN','MN_SALES_RETURN_ADD','Akses Add',2),(190,'MN_SALES_RETURN','MN_SALES_RETURN_DELETE','Akses Delete',2),(188,'MN_SALES_RETURN','MN_SALES_RETURN_EDIT','Akses Edit',2),(191,'MN_SALES_RETURN','MN_SALES_RETURN_PRINT','Akses Print',2),(168,'MN_SALES_UM_LUNAS','MN_SALES_UM_LUNAS_ADD','Akses Add',2),(169,'MN_SALES_UM_LUNAS','MN_SALES_UM_LUNAS_DELETE','Akses Delete',2),(170,'MN_SALES_UM_LUNAS','MN_SALES_UM_LUNAS_EDIT','Akses Edit',2),(171,'MN_SALES_UM_LUNAS','MN_SALES_UM_LUNAS_PRINT','Akses Print',2),(323,'MN_SIMPAN_PINJAM','MN_SIMPAN_PINJAM_ADD','Akses Add',2),(325,'MN_SIMPAN_PINJAM','MN_SIMPAN_PINJAM_DELETE','Akses Delete',2),(324,'MN_SIMPAN_PINJAM','MN_SIMPAN_PINJAM_EDIT','Akses Edit',2),(326,'MN_SIMPAN_PINJAM','MN_SIMPAN_PINJAM_PRINT','Akses Print',2),(162,'MN_SO','MN_SO_ADD','Akses Add',2),(163,'MN_SO','MN_SO_DELETE','Akses Delete',2),(161,'MN_SO','MN_SO_EDIT','Akses Edit',2),(164,'MN_SO','MN_SO_PRINT','Akses Print',2),(242,'MN_SPEND_MONEY','MN_SPEND_MONEY_ADD','Akses Add',2),(243,'MN_SPEND_MONEY','MN_SPEND_MONEY_DELETE','Akses Delete',2),(241,'MN_SPEND_MONEY','MN_SPEND_MONEY_EDIT','Akses Edit',2),(244,'MN_SPEND_MONEY','MN_SPEND_MONEY_PRINT','Akses Print',2),(80,'MN_STOCK','MN_STOCK_CORRECTION','KOREKSI STOK',1),(76,'MN_STOCK','MN_STOCK_OPNAME','STOK OPNAME',1),(89,'MN_STOCK','MN_STOCK_REPORT','LAPORAN STOK',1),(82,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_ADD','Akses Add',2),(83,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_DELETE','Akses Delete',2),(81,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_EDIT','Akses Edit',2),(78,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_ADD','Akses Add',2),(79,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_DELETE','Akses Delete',2),(77,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_EDIT','Akses Edit',2),(370,'MN_STOCK_REPORT','MN_LAPORAN_STOK_PERITEM','LAPORAN STOK ITEM GROUP KATEGORI BARANG',2),(90,'MN_STOCK_REPORT','MN_STOCK_ADJUSTMENT_REPORT','LAPORAN KOREKSI STOK',2),(92,'MN_STOCK_REPORT','MN_STOCK_CARD_COGS','KARTU STOK DENGAN HPP PER ITEM',2),(91,'MN_STOCK_REPORT','MN_STOCK_MUTATION_REPORT','LAPORAN MUTASI STOK',2),(20,'MN_SUPPLIER','MN_SUPPLIER_ADD','Akses Add',2),(21,'MN_SUPPLIER','MN_SUPPLIER_DELETE','Akses Delete',2),(19,'MN_SUPPLIER','MN_SUPPLIER_EDIT','Akses Edit',2),(363,'MN_TOOLS','MN_BACKUP','BACKUP',1),(369,'MN_TOOLS','MN_CLEANSING_DB','CLEANSING DB',1),(365,'MN_TOOLS','MN_RESTORE','RESTORE',1),(368,'MN_TOOLS','MN_SET_PATH','SETUP IMAGE DIREKTORI PATH',1),(367,'MN_TOOLS','MN_USERMANAGE','PENGATURAN USER',1),(12,'ROOT','MN_ACCOUNT','AKUNTANSI',0),(1,'ROOT','MN_CARDFILE','MASTER DATA',0),(6,'ROOT','MN_CASH_BANK','KEUANGAN',0),(11,'ROOT','MN_KOPERASI','SIMPAN PINJAM',0),(5,'ROOT','MN_OUTLET_SALES','KASIR',0),(3,'ROOT','MN_PURCHASE','PEMBELIAN',0),(4,'ROOT','MN_SALES','PESANAN PENJUALAN',0),(2,'ROOT','MN_STOCK','STOK',0),(13,'ROOT','MN_TOOLS','TOOLS',0);
/*!40000 ALTER TABLE `i_templatehakakses_def` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_templatehakakses_pos`
--

DROP TABLE IF EXISTS `i_templatehakakses_pos`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_templatehakakses_pos` (
  `nourut` int(11) NOT NULL,
  `parentkey` varchar(120) NOT NULL,
  `childkey` varchar(120) NOT NULL,
  `notes` varchar(400) DEFAULT NULL,
  `ismenu` int(11) DEFAULT NULL,
  `icon_webapp` varchar(250) DEFAULT NULL,
  `link_webapp` varchar(500) DEFAULT NULL,
  PRIMARY KEY (`parentkey`,`childkey`),
  UNIQUE KEY `TEMPLATEHAKAKSES_PK` (`parentkey`,`childkey`),
  UNIQUE KEY `TEMPLATENOOROT` (`nourut`) USING BTREE,
  KEY `PARENTKEY` (`parentkey`),
  KEY `CHILDKEY` (`childkey`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_templatehakakses_pos`
--

LOCK TABLES `i_templatehakakses_pos` WRITE;
/*!40000 ALTER TABLE `i_templatehakakses_pos` DISABLE KEYS */;
INSERT INTO `i_templatehakakses_pos` VALUES (259,'MN_ACCOUNT','MN_ACCOUNTING_REPORT','LAPORAN AKUNTANSI',1,'fa fa-circle-o',NULL),(252,'MN_ACCOUNT','MN_ADJUST_JOURNAL','JURNAL PENYESUAIAN',1,'fa fa-circle-o',NULL),(246,'MN_ACCOUNT','MN_AP_SETUP','SETUP CADANGAN HUTANG',1,'fa fa-circle-o',NULL),(245,'MN_ACCOUNT','MN_AR_SETUP','SETUP CADANGAN PIUTANG',1,'fa fa-circle-o',NULL),(242,'MN_ACCOUNT','MN_CASHBANK_SETUP','KAS/BANK SETUP',1,'fa fa-circle-o',NULL),(243,'MN_ACCOUNT','MN_CASHFLOW_SETUP','SETUP KOMPONEN CASH FLOW',1,'fa fa-circle-o',NULL),(258,'MN_ACCOUNT','MN_CLOSE_PERIOD','TUTUP PERIODE AKUNTANSI',1,'fa fa-circle-o',NULL),(236,'MN_ACCOUNT','MN_COA','CHART OF ACCOUNT',1,'fa fa-circle-o',NULL),(244,'MN_ACCOUNT','MN_COA_ASET_SETUP','SETUP COA ASET',1,'fa fa-circle-o',NULL),(241,'MN_ACCOUNT','MN_COA_SETUP','SETUP COA INTEGRATION',1,'fa fa-circle-o',NULL),(247,'MN_ACCOUNT','MN_JOURNAL','JURNAL UMUM',1,'fa fa-circle-o',NULL),(257,'MN_ACCOUNT','MN_LEDGER','HISTORY AKUN',1,'fa fa-circle-o',NULL),(264,'MN_ACCOUNTING_REPORT','MN_BALANCE_SHEET_SCONTRO','LAPORAN NERACA (SKONTRO)',1,'fa fa-circle-o',NULL),(265,'MN_ACCOUNTING_REPORT','MN_BALANCE_SHEET_STAFFEL','LAPORAN NERACA (STAFFEL)',1,'fa fa-circle-o',NULL),(269,'MN_ACCOUNTING_REPORT','MN_CASHFLOW_REPORT','LAPORAN ARUS KAS',1,'fa fa-circle-o',NULL),(266,'MN_ACCOUNTING_REPORT','MN_COGS_REPORT','LAPORAN HARGA POKOK PENJUALAN BARANG',1,'fa fa-circle-o',NULL),(268,'MN_ACCOUNTING_REPORT','MN_EQUITY_REPORT','LAPORAN PERUBAHAN EKUITAS',1,'fa fa-circle-o',NULL),(261,'MN_ACCOUNTING_REPORT','MN_GENERAL_LEDGER_REPORT','LAPORAN BUKU BESAR',1,'fa fa-circle-o',NULL),(267,'MN_ACCOUNTING_REPORT','MN_INCOME_STATEMENT','LAPORAN LABA - RUGI',1,'fa fa-circle-o',NULL),(260,'MN_ACCOUNTING_REPORT','MN_JOURNAL_REPORT','LAPORAN DAFTAR JURNAL',1,'fa fa-circle-o',NULL),(262,'MN_ACCOUNTING_REPORT','MN_TRIAL_BALANCE','LAPORAN NERACA SALDO',1,'fa fa-circle-o',NULL),(263,'MN_ACCOUNTING_REPORT','MN_TRIAL_BALANCE_ADJUSTED','LAPORAN NERACA SALDO SETELAH PENYESUAIAN',1,'fa fa-circle-o',NULL),(254,'MN_ADJUST_JOURNAL','MN_ADJUSTJOURNAL_ADD','Akses Add',2,'',NULL),(255,'MN_ADJUST_JOURNAL','MN_ADJUSTJOURNAL_DELETE','Akses Delete',2,'',NULL),(253,'MN_ADJUST_JOURNAL','MN_ADJUSTJOURNAL_EDIT','Akses Edit',2,'',NULL),(256,'MN_ADJUST_JOURNAL','MN_ADJUSTJOURNAL_PRINT','Akses Print',2,'',NULL),(121,'MN_AP_INITBALANCE','MN_AP_INITBALANCE_ADD','Akses Add',2,'',NULL),(122,'MN_AP_INITBALANCE','MN_AP_INITBALANCE_DELETE','Akses Delete',2,'',NULL),(120,'MN_AP_INITBALANCE','MN_AP_INITBALANCE_EDIT','Akses Edit',2,'',NULL),(123,'MN_AP_INITBALANCE','MN_AP_INITBALANCE_PRINT','Akses Print',2,'',NULL),(146,'MN_AP_REPORT','MN_LAP_APBALANCE_RECAP','LAPORAN REKAP SALDO HUTANG',1,'fa fa-circle-o',NULL),(143,'MN_AP_REPORT','MN_LAP_APPAYMENT_HISTORY','LAPORAN HISTORY PEMBAYARAN HUTANG',1,'fa fa-circle-o',NULL),(144,'MN_AP_REPORT','MN_LAP_APPAYMENT_PAIDOFF','LAPORAN PIUTANG LUNAS',1,'fa fa-circle-o',NULL),(145,'MN_AP_REPORT','MN_LAP_APPAYMENT_RECAP','LAPORAN REKAP PEMBAYARAN HUTANG',1,'fa fa-circle-o',NULL),(142,'MN_AP_REPORT','MN_LAP_AP_AGING','LAPORAN UMUR HUTANG',1,'fa fa-circle-o',NULL),(141,'MN_AP_REPORT','MN_LAP_AP_CARD','LAPORAN KARTU HUTANG SUPPLIER',1,'fa fa-circle-o',NULL),(147,'MN_AP_REPORT','MN_LAP_EST_APDUEDATE','LAPORAN ESTIMASI HUTANG JT TEMPO',1,'fa fa-circle-o',NULL),(181,'MN_AR_INITBALANCE','MN_AR_INITBALANCE_ADD','Akses Add',2,'',NULL),(182,'MN_AR_INITBALANCE','MN_AR_INITBALANCE_DELETE','Akses Delete',2,'',NULL),(180,'MN_AR_INITBALANCE','MN_AR_INITBALANCE_EDIT','Akses Edit',2,'',NULL),(183,'MN_AR_INITBALANCE','MN_AR_INITBALANCE_PRINT','Akses Print',2,'',NULL),(39,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_ADD','Akses Add',2,'',NULL),(40,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_DELETE','Akses Delete',2,'',NULL),(38,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_EDIT','Akses Edit',2,'',NULL),(37,'MN_CARDFILE','MN_BEGINING_BALANCE','SALDO AWAL BARANG',1,'fa fa-circle-o',NULL),(64,'MN_CARDFILE','MN_CARD_FILE_REPORT','LAPORAN MASTER',1,'fa fa-circle-o',NULL),(53,'MN_CARDFILE','MN_CURRENCY','MATA UANG DAN KONVERSI',1,'fa fa-circle-o',NULL),(9,'MN_CARDFILE','MN_CUSTOMER','PELANGGAN',1,'fa fa-circle-o',NULL),(17,'MN_CARDFILE','MN_EMPLOYEE','KARYAWAN',1,'fa fa-circle-o',NULL),(60,'MN_CARDFILE','MN_EXPEDITION','EKSPEDISI DAN TARIF',1,'fa fa-circle-o',NULL),(29,'MN_CARDFILE','MN_ITEM_BRAND','MEREK BARANG',1,'fa fa-circle-o',NULL),(25,'MN_CARDFILE','MN_ITEM_CAT','KATEGORI BARANG',1,'fa fa-circle-o',NULL),(33,'MN_CARDFILE','MN_ITEM_NAME','NAMA BARANG',1,'fa fa-circle-o',NULL),(21,'MN_CARDFILE','MN_ITEM_TYPE','JENIS BARANG',1,'fa fa-circle-o',NULL),(41,'MN_CARDFILE','MN_JENIS_JASA','JENIS JASA',1,'fa fa-circle-o',NULL),(13,'MN_CARDFILE','MN_SUPPLIER','PEMASOK',1,'fa fa-circle-o',NULL),(45,'MN_CARDFILE','MN_UNIT','SATUAN DAN KONVERSI',1,'fa fa-circle-o',NULL),(49,'MN_CARDFILE','MN_WAREHOUSE','GUDANG',1,'fa fa-circle-o',NULL),(65,'MN_CARD_FILE_REPORT','MN_CUST_REPORT_DAFTARPELANGGAN','LAPORAN DAFTAR PELANGGAN',1,'fa fa-circle-o',NULL),(66,'MN_CARD_FILE_REPORT','MN_CUST_REPORT_DAFTARPELANGGAN_CITY','LAPORAN DAFTAR PELANGGAN GROUP BY KOTA',1,'fa fa-circle-o',NULL),(67,'MN_CARD_FILE_REPORT','MN_CUST_REPORT_RANKING_PENJUALAN','LAPORAN RANKING PENJUALAN PELANGGAN',1,'fa fa-circle-o',NULL),(70,'MN_CARD_FILE_REPORT','MN_EMPP_REPORT_DAFTARKARYAWAN','LAPORAN DAFTAR KARYAWAN',1,'fa fa-circle-o',NULL),(68,'MN_CARD_FILE_REPORT','MN_SUPP_REPORT_DAFTARSUPPLIER','LAPORAN DAFTAR SUPPLIER',1,'fa fa-circle-o',NULL),(69,'MN_CARD_FILE_REPORT','MN_SUPP_REPORT_RANKING_PEMBELIAN','LAPORAN RANKING PEMBELIAN SUPPLIER',1,'fa fa-circle-o',NULL),(235,'MN_CASHBANK_RECAP_REPORT','MN_CASHBANK_TRANS_RECAP','LAPORAN REKAPITUASI KAS / BANK',NULL,'',NULL),(233,'MN_CASHBANK_TRANS_REPORT','MN_CASHBANK_REKON_DETAIL','LAPORAN REKONSILIASI DETAIL',2,'',NULL),(232,'MN_CASHBANK_TRANS_REPORT','MN_CASHBANK_TRANS_DETAIL','LAPORAN KAS / BANK DETAIL',2,'',NULL),(208,'MN_CASHIER','MN_CASHIER_ADD','Akses Add',2,'',NULL),(209,'MN_CASHIER','MN_CASHIER_DELETE','Akses Delete',2,'',NULL),(207,'MN_CASHIER','MN_CASHIER_EDIT','Akses Edit',2,'',NULL),(210,'MN_CASHIER','MN_CASHIER_PRINT','Akses Print',2,'',NULL),(213,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_ADD','Akses Add',2,'',NULL),(214,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_DELETE','Akses Delete',2,'',NULL),(212,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_EDIT','Akses Edit',2,'',NULL),(215,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_PRINT','Akses Print',2,'',NULL),(234,'MN_CASH_BANK','MN_CASHBANK_RECAP_REPORT','LAPORAN REKAPITULASI ',1,'fa fa-circle-o',NULL),(230,'MN_CASH_BANK','MN_CASHBANK_REGISTER','KAS/BANK REGISTER',1,'fa fa-circle-o',NULL),(231,'MN_CASH_BANK','MN_CASHBANK_TRANS_REPORT','LAPORAN DETAIL',1,'fa fa-circle-o',NULL),(220,'MN_CASH_BANK','MN_RECEIPT_MONEY','PENERIMAAN KAS/BANK',1,'fa fa-circle-o',NULL),(225,'MN_CASH_BANK','MN_SPEND_MONEY','PENGELUARAN KAS/BANK',1,'fa fa-circle-o',NULL),(238,'MN_COA','MN_COA_ADD','Akses Add',2,'',NULL),(239,'MN_COA','MN_COA_DELETE','Akses Delete',2,'',NULL),(237,'MN_COA','MN_COA_EDIT','Akses Edit',2,'',NULL),(240,'MN_COA','MN_COA_PRINT','Akses Print',2,'',NULL),(55,'MN_CURRENCY','MN_CURRENCY_ADD','Akses Add',2,'',NULL),(56,'MN_CURRENCY','MN_CURRENCY_DELETE','Akses Delete',2,'',NULL),(54,'MN_CURRENCY','MN_CURRENCY_EDIT','Akses Edit',2,'',NULL),(58,'MN_CURRENCY_CONVERSION','MN_CURRENCY_CONVERSION_ADD','Akses Add',2,'',NULL),(59,'MN_CURRENCY_CONVERSION','MN_CURRENCY_CONVERSION_DELETE','Akses Delete',2,'',NULL),(57,'MN_CURRENCY_CONVERSION','MN_CURRENCY_CONVERSION_EDIT','Akses Edit',2,'',NULL),(11,'MN_CUSTOMER','MN_CUSTOMER_ADD','Akses Add',2,'',NULL),(12,'MN_CUSTOMER','MN_CUSTOMER_DELETE','Akses Delete',2,'',NULL),(10,'MN_CUSTOMER','MN_CUSTOMER_EDIT','Akses Edit',2,'',NULL),(159,'MN_DELIVERED_ITEM','MN_DELIVERED_ITEM_ADD','Akses Add',2,'',NULL),(160,'MN_DELIVERED_ITEM','MN_DELIVERED_ITEM_DELETE','Akses Delete',2,'',NULL),(158,'MN_DELIVERED_ITEM','MN_DELIVERED_ITEM_EDIT','Akses Edit',2,'',NULL),(161,'MN_DELIVERED_ITEM','MN_DELIVERED_ITEM_PRINT','Akses Print',2,'',NULL),(156,'MN_DP_SO','MN_DP_SO_EDIT','Akses Edit',2,'',NULL),(19,'MN_EMPLOYEE','MN_EMPLOYEE_ADD','Akses Add',2,'',NULL),(20,'MN_EMPLOYEE','MN_EMPLOYEE_DELETE','Akses Delete',2,'',NULL),(18,'MN_EMPLOYEE','MN_EMPLOYEE_EDIT','Akses Edit',2,'',NULL),(62,'MN_EXPEDITION','MN_EXPEDITION_ADD','Akses Add',2,'',NULL),(63,'MN_EXPEDITION','MN_EXPEDITION_DELETE','Akses Delete',2,'',NULL),(61,'MN_EXPEDITION','MN_EXPEDITION_EDIT','Akses Edit',2,'',NULL),(164,'MN_EXPEDITION_PAYMENT','MN_EXPEDITION_PAYMENT_ADD','Akses Add',2,'',NULL),(165,'MN_EXPEDITION_PAYMENT','MN_EXPEDITION_PAYMENT_DELETE','Akses Delete',2,'',NULL),(163,'MN_EXPEDITION_PAYMENT','MN_EXPEDITION_PAYMENT_EDIT','Akses Edit',2,'',NULL),(166,'MN_EXPEDITION_PAYMENT','MN_EXPEDITION_PAYMENT_PRINT','Akses Print',2,'',NULL),(178,'MN_FAKTUR_PAJAK','MN_FAKTUR_PAJAK_PRINT','Akses Print',2,'',NULL),(31,'MN_ITEM_BRAND','MN_ITEM_BRAND_ADD','Akses Add',2,'',NULL),(32,'MN_ITEM_BRAND','MN_ITEM_BRAND_DELETE','Akses Delete',2,'',NULL),(30,'MN_ITEM_BRAND','MN_ITEM_BRAND_EDIT','Akses Edit',2,'',NULL),(27,'MN_ITEM_CAT','MN_ITEM_CAT_ADD','Akses Add',2,'',NULL),(28,'MN_ITEM_CAT','MN_ITEM_CAT_DELETE','Akses Delete',2,'',NULL),(26,'MN_ITEM_CAT','MN_ITEM_CAT_EDIT','Akses Edit',2,'',NULL),(35,'MN_ITEM_NAME','MN_ITEM_NAME_ADD','Akses Add',2,'',NULL),(36,'MN_ITEM_NAME','MN_ITEM_NAME_DELETE','Akses Delete',2,'',NULL),(34,'MN_ITEM_NAME','MN_ITEM_NAME_EDIT','Akses Edit',2,'',NULL),(23,'MN_ITEM_TYPE','MN_ITEM_TYPE_ADD','Akses Add',2,'',NULL),(24,'MN_ITEM_TYPE','MN_ITEM_TYPE_DELETE','Akses Delete',2,'',NULL),(22,'MN_ITEM_TYPE','MN_ITEM_TYPE_EDIT','Akses Edit',2,'',NULL),(43,'MN_JENIS_JASA','MN_JENIS_JASA_ADD','Akses Add',2,'',NULL),(44,'MN_JENIS_JASA','MN_JENIS_JASA_DELETE','Akses Delete',2,'',NULL),(42,'MN_JENIS_JASA','MN_JENIS_JASA_EDIT','Akses Edit',2,'',NULL),(249,'MN_JOURNAL','MN_JOURNAL_ADD','Akses Add',2,'',NULL),(250,'MN_JOURNAL','MN_JOURNAL_DELETE','Akses Delete',2,'',NULL),(248,'MN_JOURNAL','MN_JOURNAL_EDIT','Akses Edit',2,'',NULL),(251,'MN_JOURNAL','MN_JOURNAL_PRINT','Akses Print',2,'',NULL),(192,'MN_LAPORAN_JUAL','MN_LAPORAN_DO','LAPORAN PENGIRIMAN BARANG',1,'fa fa-circle-o',NULL),(197,'MN_LAPORAN_JUAL','MN_LAPORAN_SALES_GRAFIK','LAPORAN GRAFIK PENJUALAN',1,'fa fa-circle-o',NULL),(194,'MN_LAPORAN_JUAL','MN_LAPORAN_SALES_GROUP','LAPORAN PENJUALAN GROUP PELANGGAN',1,'fa fa-circle-o',NULL),(196,'MN_LAPORAN_JUAL','MN_LAPORAN_SALES_RANK','LAPORAN RANKING PENJUALAN',1,'fa fa-circle-o',NULL),(195,'MN_LAPORAN_JUAL','MN_LAPORAN_SALES_RECAP','LAPORAN REKAPITULASI PENJUALAN',1,'fa fa-circle-o',NULL),(193,'MN_LAPORAN_JUAL','MN_LAPORAN_SALES_STD','LAPORAN PENJUALAN STANDAR',1,'fa fa-circle-o',NULL),(191,'MN_LAPORAN_JUAL','MN_LAPORAN_SO','LAPORAN SALES ORDER',1,'fa fa-circle-o',NULL),(205,'MN_LAPORAN_PIUTANG','MN_LAPORAN_ESTIMASI_JATUH_TEMPO','ESTIMASI PIUTANG JATUH TEMPO',1,'fa fa-circle-o',NULL),(203,'MN_LAPORAN_PIUTANG','MN_LAPORAN_PELUNASAN_PIUTANG','LAPORAN PELUNASAN PIUTANG',1,'fa fa-circle-o',NULL),(202,'MN_LAPORAN_PIUTANG','MN_LAPORAN_PEMBAYARAN_PER_PERIOD','LAPORAN PEMBAYARAN PER PERIODE',1,'fa fa-circle-o',NULL),(201,'MN_LAPORAN_PIUTANG','MN_LAPORAN_PEMBAYARAN_PIUTANG','LAPORAN PEMBAYARAN PIUTANG',1,'fa fa-circle-o',NULL),(199,'MN_LAPORAN_PIUTANG','MN_LAPORAN_PIUTANG_SUPPLIER','LAPORAN PIUTANG PER SUPPLIER',1,'fa fa-circle-o',NULL),(204,'MN_LAPORAN_PIUTANG','MN_LAPORAN_SALDO_PER_PERIOD','LAPORAN SALDO PIUTANG PER PERIODE',1,'fa fa-circle-o',NULL),(200,'MN_LAPORAN_PIUTANG','MN_LAPORAN_UMUR_PIUTANG','LAPORAN UMUR PIUTANG',1,'fa fa-circle-o',NULL),(81,'MN_MOVE_ITEM','MN_MOVE_ITEM_ADD','Akses Add',2,'',NULL),(82,'MN_MOVE_ITEM','MN_MOVE_ITEM_DELETE','Akses Delete',2,'',NULL),(80,'MN_MOVE_ITEM','MN_MOVE_ITEM_EDIT','Akses Edit',2,'',NULL),(218,'MN_MUTASI_CASHIER','MN_MUTASI_CASHIER_DETAIL','LAPORAN KASIR DETAIL',2,'',NULL),(219,'MN_MUTASI_CASHIER','MN_MUTASI_CASHIER_RECAP','LAPORAN KASIR REKAP',2,'',NULL),(206,'MN_OUTLET_SALES','MN_CASHIER','TRANSAKSI KASIR',1,'fa fa-circle-o',NULL),(216,'MN_OUTLET_SALES','MN_CASHIER_REGISTER','KASIR REGISTER',1,'fa fa-circle-o',NULL),(211,'MN_OUTLET_SALES','MN_CASHIER_RETURN','RETUR TRANSAKSI KASIR',1,'fa fa-circle-o',NULL),(217,'MN_OUTLET_SALES','MN_MUTASI_CASHIER','LAPORAN KASIR',1,'fa fa-circle-o',NULL),(186,'MN_PAYMENT_AR','MN_PAYMENT_AR_ADD','Akses Add',2,'',NULL),(187,'MN_PAYMENT_AR','MN_PAYMENT_AR_DELETE','Akses Delete',2,'',NULL),(185,'MN_PAYMENT_AR','MN_PAYMENT_AR_EDIT','Akses Edit',2,'',NULL),(188,'MN_PAYMENT_AR','MN_PAYMENT_AR_PRINT','Akses Print',2,'',NULL),(126,'MN_PEMBAYARAN_HUTANG','MN_PEMBAYARAN_HUTANG_ADD','Akses Add',2,'',NULL),(127,'MN_PEMBAYARAN_HUTANG','MN_PEMBAYARAN_HUTANG_DELETE','Akses Delete',2,'',NULL),(125,'MN_PEMBAYARAN_HUTANG','MN_PEMBAYARAN_HUTANG_EDIT','Akses Edit',2,'',NULL),(128,'MN_PEMBAYARAN_HUTANG','MN_PEMBAYARAN_HUTANG_PRINT','Akses Print',2,'',NULL),(96,'MN_PO','MN_PO_ADD','Akses Add',2,'',NULL),(97,'MN_PO','MN_PO_DELETE','Akses Delete',2,'',NULL),(95,'MN_PO','MN_PO_EDIT','Akses Edit',2,'',NULL),(98,'MN_PO','MN_PO_PRINT','Akses Print',2,'',NULL),(93,'MN_PURCHASE','MN_APPROVAL_RO','APPROVAL PERMINTAAN',1,'fa fa-circle-o',NULL),(119,'MN_PURCHASE','MN_AP_INITBALANCE','SALDO AWAL HUTANG',1,'fa fa-circle-o',NULL),(140,'MN_PURCHASE','MN_AP_REPORT','LAPORAN HUTANG',1,'fa fa-circle-o',NULL),(124,'MN_PURCHASE','MN_PEMBAYARAN_HUTANG','PEMBAYARAN HUTANG',1,'fa fa-circle-o',NULL),(94,'MN_PURCHASE','MN_PO','PURCHASE ORDER',1,'fa fa-circle-o',NULL),(109,'MN_PURCHASE','MN_PURCHASE_DIRECT','PEMBELIAN LANGSUNG',1,'fa fa-circle-o',NULL),(104,'MN_PURCHASE','MN_PURCHASE_INV','FAKTUR BELI',1,'fa fa-circle-o',NULL),(130,'MN_PURCHASE','MN_PURCHASE_REPORT','LAPORAN PEMBELIAN',1,'fa fa-circle-o',NULL),(114,'MN_PURCHASE','MN_PURCHASE_RETURN','RETUR BELI',1,'fa fa-circle-o',NULL),(99,'MN_PURCHASE','MN_RECEIVED_ORDER','PENERIMAAN BARANG',1,'fa fa-circle-o',NULL),(88,'MN_PURCHASE','MN_RO','PERMINTAAN GUDANG',1,'fa fa-circle-o',NULL),(129,'MN_PURCHASE','MN_STATUS_HUTANG','STATUS HUTANG',1,'fa fa-circle-o',NULL),(111,'MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_ADD','Akses Add',2,'',NULL),(112,'MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_DELETE','Akses Delete',2,'',NULL),(110,'MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_EDIT','Akses Edit',2,'',NULL),(113,'MN_PURCHASE_DIRECT','MN_PURCHASE_DIRECT_PRINT','Akses Print',2,'',NULL),(106,'MN_PURCHASE_INV','MN_PURCHASE_INV_ADD','Akses Add',2,'',NULL),(107,'MN_PURCHASE_INV','MN_PURCHASE_INV_DELETE','Akses Delete',2,'',NULL),(105,'MN_PURCHASE_INV','MN_PURCHASE_INV_EDIT','Akses Edit',2,'',NULL),(108,'MN_PURCHASE_INV','MN_PURCHASE_INV_PRINT','Akses Print',2,'',NULL),(137,'MN_PURCHASE_REPORT','MN_LAP_BUYPRICE_HISTORY','LAPORAN PERUBAHAN HARGA BELI',1,'fa fa-circle-o',NULL),(132,'MN_PURCHASE_REPORT','MN_LAP_PO','LAPORAN PO',1,'fa fa-circle-o',NULL),(134,'MN_PURCHASE_REPORT','MN_LAP_PURCH','LAPORAN PEMBELIAN STANDAR',1,'fa fa-circle-o',NULL),(139,'MN_PURCHASE_REPORT','MN_LAP_PURCH_GRAPHIC','LAPORAN GRAFIK PEMBELIAN',1,'fa fa-circle-o',NULL),(136,'MN_PURCHASE_REPORT','MN_LAP_PURCH_GROUP_PERIOD','LAPORAN PEMBELIAN GRUP PERIODE',1,'fa fa-circle-o',NULL),(135,'MN_PURCHASE_REPORT','MN_LAP_PURCH_GROUP_SUPP','LAPORAN PEMBELIAN GRUP SUPPLIER',1,'fa fa-circle-o',NULL),(138,'MN_PURCHASE_REPORT','MN_LAP_PURCH_RANKING','LAPORAN RANKING PEMBELIAN',1,'fa fa-circle-o',NULL),(133,'MN_PURCHASE_REPORT','MN_LAP_REC_ITEM','LAPORAN PENERIMAAN BARANG',1,'fa fa-circle-o',NULL),(131,'MN_PURCHASE_REPORT','MN_LAP_RO','LAPORAN PERMINTAAN BARANG',1,'fa fa-circle-o',NULL),(116,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_ADD','Akses Add',2,'',NULL),(117,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_DELETE','Akses Delete',2,'',NULL),(115,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_EDIT','Akses Edit',2,'',NULL),(118,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_PRINT','Akses Print',2,'',NULL),(222,'MN_RECEIPT_MONEY','MN_RECEIPT_MONEY_ADD','Akses Add',2,'',NULL),(223,'MN_RECEIPT_MONEY','MN_RECEIPT_MONEY_DELETE','Akses Delete',2,'',NULL),(221,'MN_RECEIPT_MONEY','MN_RECEIPT_MONEY_EDIT','Akses Edit',2,'',NULL),(224,'MN_RECEIPT_MONEY','MN_RECEIPT_MONEY_PRINT','Akses Print',2,'',NULL),(101,'MN_RECEIVED_ORDER','MN_RECEIVED_ORDER_ADD','Akses Add',2,'',NULL),(102,'MN_RECEIVED_ORDER','MN_RECEIVED_ORDER_DELETE','Akses Delete',2,'',NULL),(100,'MN_RECEIVED_ORDER','MN_RECEIVED_ORDER_EDIT','Akses Edit',2,'',NULL),(103,'MN_RECEIVED_ORDER','MN_RECEIVED_ORDER_PRINT','Akses Print',2,'',NULL),(90,'MN_RO','MN_RO_ADD','Akses Add',2,'',NULL),(91,'MN_RO','MN_RO_DELETE','Akses Delete',2,'',NULL),(89,'MN_RO','MN_RO_EDIT','Akses Edit',2,'',NULL),(92,'MN_RO','MN_RO_PRINT','Akses Print',2,'',NULL),(179,'MN_SALES','MN_AR_INITBALANCE','SALDO AWAL PIUTANG',1,'fa fa-circle-o',NULL),(189,'MN_SALES','MN_AR_STATUS','STATUS PIUTANG',1,'fa fa-circle-o',NULL),(157,'MN_SALES','MN_DELIVERED_ITEM','PENGIRIMAN BARANG',1,'fa fa-circle-o',NULL),(155,'MN_SALES','MN_DP_SO','UANG MUKA PESANAN (SO)',1,'fa fa-circle-o',NULL),(162,'MN_SALES','MN_EXPEDITION_PAYMENT','PEMBAYARAN EKSPEDISI',1,'fa fa-circle-o',NULL),(177,'MN_SALES','MN_FAKTUR_PAJAK','FAKTUR / RETUR PAJAK',1,'fa fa-circle-o',NULL),(190,'MN_SALES','MN_LAPORAN_JUAL','LAPORAN PENJUALAN',1,'fa fa-circle-o',NULL),(198,'MN_SALES','MN_LAPORAN_PIUTANG','LAPORAN PIUTANG',1,'fa fa-circle-o',NULL),(184,'MN_SALES','MN_PAYMENT_AR','PEMBAYARAN PIUTANG',1,'fa fa-circle-o',NULL),(167,'MN_SALES','MN_SALES_INV','FAKTUR JUAL',1,'fa fa-circle-o',NULL),(172,'MN_SALES','MN_SALES_RETURN','RETUR JUAL',1,'fa fa-circle-o',NULL),(148,'MN_SALES','MN_SET_MARKETING','SETUP MARKETING',1,'fa fa-circle-o',NULL),(150,'MN_SALES','MN_SO','ORDER PENJUALAN',1,'fa fa-circle-o',NULL),(169,'MN_SALES_INV','MN_SALES_INV_ADD','Akses Add',2,'',NULL),(170,'MN_SALES_INV','MN_SALES_INV_DELETE','Akses Delete',2,'',NULL),(168,'MN_SALES_INV','MN_SALES_INV_EDIT','Akses Edit',2,'',NULL),(171,'MN_SALES_INV','MN_SALES_INV_PRINT','Akses Print',2,'',NULL),(174,'MN_SALES_RETURN','MN_SALES_RETURN_ADD','Akses Add',2,'',NULL),(175,'MN_SALES_RETURN','MN_SALES_RETURN_DELETE','Akses Delete',2,'',NULL),(173,'MN_SALES_RETURN','MN_SALES_RETURN_EDIT','Akses Edit',2,'',NULL),(176,'MN_SALES_RETURN','MN_SALES_RETURN_PRINT','Akses Print',2,'',NULL),(149,'MN_SET_MARKETING','MN_SET_MARKETING_EDIT','Akses Edit',2,'',NULL),(152,'MN_SO','MN_SO_ADD','Akses Add',2,'',NULL),(153,'MN_SO','MN_SO_DELETE','Akses Delete',2,'',NULL),(151,'MN_SO','MN_SO_EDIT','Akses Edit',2,'',NULL),(154,'MN_SO','MN_SO_PRINT','Akses Print',2,'',NULL),(227,'MN_SPEND_MONEY','MN_SPEND_MONEY_ADD','Akses Add',2,'',NULL),(228,'MN_SPEND_MONEY','MN_SPEND_MONEY_DELETE','Akses Delete',2,'',NULL),(226,'MN_SPEND_MONEY','MN_SPEND_MONEY_EDIT','Akses Edit',2,'',NULL),(229,'MN_SPEND_MONEY','MN_SPEND_MONEY_PRINT','Akses Print',2,'',NULL),(83,'MN_STOCK','MN_ITEM_LIST','DAFTAR BARANG',1,'fa fa-circle-o',NULL),(79,'MN_STOCK','MN_MOVE_ITEM','PINDAH GUDANG',1,'fa fa-circle-o',NULL),(75,'MN_STOCK','MN_STOCK_CORRECTION','KOREKSI STOK',1,'fa fa-circle-o',NULL),(71,'MN_STOCK','MN_STOCK_OPNAME','STOK OPNAME',1,'fa fa-circle-o',NULL),(84,'MN_STOCK','MN_STOCK_REPORT','LAPORAN STOK',1,'fa fa-circle-o',NULL),(77,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_ADD','Akses Add',2,'',NULL),(78,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_DELETE','Akses Delete',2,'',NULL),(76,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_EDIT','Akses Edit',2,'',NULL),(73,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_ADD','Akses Add',2,'',NULL),(74,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_DELETE','Akses Delete',2,'',NULL),(72,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_EDIT','Akses Edit',2,'',NULL),(85,'MN_STOCK_REPORT','MN_STOCK_ADJUSTMENT_REPORT','LAPORAN KOREKSI STOK',2,'',NULL),(87,'MN_STOCK_REPORT','MN_STOCK_CARD_COGS','KARTU STOK DENGAN HPP PER ITEM',2,'',NULL),(86,'MN_STOCK_REPORT','MN_STOCK_MUTATION_REPORT','LAPORAN MUTASI STOK',2,'',NULL),(15,'MN_SUPPLIER','MN_SUPPLIER_ADD','Akses Add',2,'',NULL),(16,'MN_SUPPLIER','MN_SUPPLIER_DELETE','Akses Delete',2,'',NULL),(14,'MN_SUPPLIER','MN_SUPPLIER_EDIT','Akses Edit',2,'',NULL),(271,'MN_TOOLS','MN_AUTOBACKUP','AUTO BACKUP',1,'fa fa-circle-o',NULL),(270,'MN_TOOLS','MN_BACKUP','BACKUP',1,'fa fa-circle-o',NULL),(276,'MN_TOOLS','MN_CLEANSING_DB','CLEANSING DB',1,'fa fa-circle-o',NULL),(273,'MN_TOOLS','MN_LOG','LOG TRANSAKSI',1,'fa fa-circle-o',NULL),(272,'MN_TOOLS','MN_RESTORE','RESTORE',1,'fa fa-circle-o',NULL),(275,'MN_TOOLS','MN_SET_PATH','SETUP IMAGE DIREKTORI PATH',1,'fa fa-circle-o',NULL),(274,'MN_TOOLS','MN_USERMANAGE','PENGATURAN USER',1,'fa fa-circle-o',NULL),(47,'MN_UNIT','MN_UNIT_ADD','Akses Add',2,'',NULL),(48,'MN_UNIT','MN_UNIT_DELETE','Akses Delete',2,'',NULL),(46,'MN_UNIT','MN_UNIT_EDIT','Akses Edit',2,'',NULL),(51,'MN_WAREHOUSE','MN_WAREHOUSE_ADD','Akses Add',2,'',NULL),(52,'MN_WAREHOUSE','MN_WAREHOUSE_DELETE','Akses Delete',2,'',NULL),(50,'MN_WAREHOUSE','MN_WAREHOUSE_EDIT','Akses Edit',2,'',NULL),(7,'ROOT','MN_ACCOUNT','AKUNTANSI',0,'fa fa-book',NULL),(1,'ROOT','MN_CARDFILE','MASTER DATA',0,'fa fa-indent',NULL),(6,'ROOT','MN_CASH_BANK','KEUANGAN',0,'fa fa-money',NULL),(5,'ROOT','MN_OUTLET_SALES','KASIR',0,'fa fa-tags',NULL),(3,'ROOT','MN_PURCHASE','PEMBELIAN',0,'fa fa-dropbox',NULL),(4,'ROOT','MN_SALES','PENJUALAN',0,'fa fa-share',NULL),(2,'ROOT','MN_STOCK','STOK',0,'fa fa-info-circle',NULL),(8,'ROOT','MN_TOOLS','TOOLS',0,'fa fa-gear',NULL);
/*!40000 ALTER TABLE `i_templatehakakses_pos` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_templatehakakses_setmanufacture`
--

DROP TABLE IF EXISTS `i_templatehakakses_setmanufacture`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_templatehakakses_setmanufacture` (
  `nourut` int(11) NOT NULL,
  `parentkey` varchar(60) NOT NULL,
  `childkey` varchar(60) NOT NULL,
  `notes` text,
  `ismenu` int(11) DEFAULT NULL,
  PRIMARY KEY (`parentkey`,`childkey`),
  UNIQUE KEY `TEMPLATEHAKAKSES_PK` (`parentkey`,`childkey`),
  UNIQUE KEY `TEMPLATENOOROT` (`nourut`) USING BTREE,
  KEY `PARENTKEY` (`parentkey`),
  KEY `CHILDKEY` (`childkey`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_templatehakakses_setmanufacture`
--

LOCK TABLES `i_templatehakakses_setmanufacture` WRITE;
/*!40000 ALTER TABLE `i_templatehakakses_setmanufacture` DISABLE KEYS */;
INSERT INTO `i_templatehakakses_setmanufacture` VALUES (199,'MN_ACCOUNT','MN_ACCOUNT_REPORT','MENU ACCOUNTING & ANALYST REPORT',1),(191,'MN_ACCOUNT','MN_CASHBANK_SETUP','MENU ADD CASH/BANK TYPE',1),(186,'MN_ACCOUNT','MN_COA','MENU CHART OF ACCOUNT',1),(192,'MN_ACCOUNT','MN_JOURNAL','MENU GENERAL JOURNAL',1),(197,'MN_ACCOUNT','MN_JOURNAL_LIST','MENU JOURNAL LIST',1),(198,'MN_ACCOUNT','MN_LEDGER','MENU LEDGER',1),(200,'MN_ACCOUNT_REPORT','MN_ACCOUNTING_REPORT','MENU ACCOUNTING REPORT',1),(201,'MN_ACCOUNT_REPORT','MN_ANALYST_REPORT','MENU ANALYST REPORT',1),(220,'MN_AP_INITBALANCE','MN_AP_INITBALANCE_ADD','Akses Add',1),(221,'MN_AP_INITBALANCE','MN_AP_INITBALANCE_DELETE','Akses Delete',1),(219,'MN_AP_INITBALANCE','MN_AP_INITBALANCE_EDIT','Akses Edit',1),(222,'MN_AP_INITBALANCE','MN_AP_INITBALANCE_PRINT','Akses Print',1),(157,'MN_AR','MN_AR_STATUS','MENU A/R STATUS',1),(152,'MN_AR','MN_PAYMENT_AR','MENU A/R PAYMENT',1),(225,'MN_AR_INITBALANCE','MN_AR_INITBALANCE_ADD','Akses Add',1),(226,'MN_AR_INITBALANCE','MN_AR_INITBALANCE_DELETE','Akses Delete',1),(224,'MN_AR_INITBALANCE','MN_AR_INITBALANCE_EDIT','Akses Edit',1),(227,'MN_AR_INITBALANCE','MN_AR_INITBALANCE_PRINT','Akses Print',1),(180,'MN_BANK_RECONCILE','MN_BANK_RECONCILE_ADD','Akses Add',1),(181,'MN_BANK_RECONCILE','MN_BANK_RECONCILE_DELETE','Akses Delete',1),(179,'MN_BANK_RECONCILE','MN_BANK_RECONCILE_EDIT','Akses Edit',1),(182,'MN_BANK_RECONCILE','MN_BANK_RECONCILE_PRINT','Akses Print',1),(40,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_ADD','Akses Add',1),(41,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_DELETE','Akses Delete',1),(39,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_EDIT','Akses Edit',1),(24,'MN_CARDFILE','MN_CARD_LIST','MENU CARD LIST',1),(55,'MN_CARDFILE','MN_CURRENCY','MENU CURRENCY',1),(59,'MN_CARDFILE','MN_CURRENCY_CONVERSION','MENU CURRENCY CONVERSION',1),(12,'MN_CARDFILE','MN_CUSTOMER','CUSTOMER',1),(20,'MN_CARDFILE','MN_EMPLOYEE','MENU EMPLOYEE',1),(25,'MN_CARDFILE','MN_ITEM','MENU ITEM',1),(42,'MN_CARDFILE','MN_JENIS_JASA','MENU SERVICE ITEM',1),(63,'MN_CARDFILE','MN_LAPORAN','MENU  MASTER REPORT',1),(16,'MN_CARDFILE','MN_SUPPLIER','MENU SUPPLIER',1),(46,'MN_CARDFILE','MN_UNIT','MENU UNIT',1),(50,'MN_CARDFILE','MN_UNIT_CONVERSION','MENU UNIT CONVERSION',1),(51,'MN_CARDFILE','MN_WAREHOUSE','MENU WAREHOUSE',1),(185,'MN_CASHBANK_REPORT','MN_CASHBANK_RECAP_REPORT','MENU CASH/BANK SUMMARY',1),(184,'MN_CASHBANK_REPORT','MN_CASHBANK_TRANS_REPORT','MENU CASH/BANK DETAIL',1),(163,'MN_CASHIER','MN_CASHIER_ADD','Akses Add',1),(164,'MN_CASHIER','MN_CASHIER_DELETE','Akses Delete',1),(162,'MN_CASHIER','MN_CASHIER_EDIT','Akses Edit',1),(165,'MN_CASHIER','MN_CASHIER_PRINT','Akses Print',1),(214,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_ADD','Akses Add',1),(216,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_DELETE','Akses Delete',1),(213,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_EDIT','Akses Edit',1),(217,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_PRINT','Akses Print',1),(178,'MN_CASH_BANK','MN_BANK_RECONCILE','MENU BANK RECONCILE',1),(177,'MN_CASH_BANK','MN_CASHBANK_REGISTER','MENU CASH/BANK REGISTER',1),(183,'MN_CASH_BANK','MN_CASHBANK_REPORT','MENU CASH/BANK REPORT',1),(167,'MN_CASH_BANK','MN_RECEIPT_MONEY','MENU CASH/BANK RECEIPTS',1),(172,'MN_CASH_BANK','MN_SPEND_MONEY','MENU CASH/BANK DISBURSEMENT',1),(188,'MN_COA','MN_COA_ADD','Akses Add',1),(189,'MN_COA','MN_COA_DELETE','Akses Delete',1),(187,'MN_COA','MN_COA_EDIT','Akses Edit',1),(190,'MN_COA','MN_COA_PRINT','Akses Print',1),(57,'MN_CURRENCY','MN_CURRENCY_ADD','Akses Add',1),(58,'MN_CURRENCY','MN_CURRENCY_DELETE','Akses Delete',1),(56,'MN_CURRENCY','MN_CURRENCY_EDIT','Akses Edit',1),(61,'MN_CURRENCY_CONVERSION','MN_CURRENCY_CONVERSION_ADD','Akses Add',1),(62,'MN_CURRENCY_CONVERSION','MN_CURRENCY_CONVERSION_DELETE','Akses Delete',1),(60,'MN_CURRENCY_CONVERSION','MN_CURRENCY_CONVERSION_EDIT','Akses Edit',1),(14,'MN_CUSTOMER','MN_CUSTOMER_ADD','Akses Add',1),(15,'MN_CUSTOMER','MN_CUSTOMER_DELETE','Akses Delete',1),(13,'MN_CUSTOMER','MN_CUSTOMER_EDIT','Akses Edit',1),(138,'MN_DELIVERED_ITEM','MN_DELIVERED_ITEM_ADD','Akses Add',1),(139,'MN_DELIVERED_ITEM','MN_DELIVERED_ITEM_DELETE','Akses Delete',1),(137,'MN_DELIVERED_ITEM','MN_DELIVERED_ITEM_EDIT','Akses Edit',1),(140,'MN_DELIVERED_ITEM','MN_DELIVERED_ITEM_PRINT','Akses Print',1),(22,'MN_EMPLOYEE','MN_EMPLOYEE_ADD','Akses Add',1),(23,'MN_EMPLOYEE','MN_EMPLOYEE_DELETE','Akses Delete',1),(21,'MN_EMPLOYEE','MN_EMPLOYEE_EDIT','Akses Edit',1),(38,'MN_ITEM','MN_BEGINING_BALANCE','MENU BEGINNING BALANCE',1),(231,'MN_ITEM','MN_ITEM_BRAND','MENU ITEM TYPE',1),(30,'MN_ITEM','MN_ITEM_CAT','MENU ITEM CATEGORY',1),(34,'MN_ITEM','MN_ITEM_NAME','MENU ITEM NAME',1),(26,'MN_ITEM','MN_ITEM_TYPE','MENU ITEM TYPE',1),(233,'MN_ITEM_BRAND','MN_ITEM_BRAND_ADD','Akses Add',1),(234,'MN_ITEM_BRAND','MN_ITEM_BRAND_DELETE','Akses Delete',1),(232,'MN_ITEM_BRAND','MN_ITEM_BRAND_EDIT','Akses Edit',1),(32,'MN_ITEM_CAT','MN_ITEM_CAT_ADD','Akses Add',1),(33,'MN_ITEM_CAT','MN_ITEM_CAT_DELETE','Akses Delete',1),(31,'MN_ITEM_CAT','MN_ITEM_CAT_EDIT','Akses Edit',1),(36,'MN_ITEM_NAME','MN_ITEM_NAME_ADD','Akses Add',1),(37,'MN_ITEM_NAME','MN_ITEM_NAME_DELETE','Akses Delete',1),(35,'MN_ITEM_NAME','MN_ITEM_NAME_EDIT','Akses Edit',1),(28,'MN_ITEM_TYPE','MN_ITEM_TYPE_ADD','Akses Add',1),(29,'MN_ITEM_TYPE','MN_ITEM_TYPE_DELETE','Akses Delete',1),(27,'MN_ITEM_TYPE','MN_ITEM_TYPE_EDIT','Akses Edit',1),(44,'MN_JENIS_JASA','MN_JENIS_JASA_ADD','Akses Add',1),(45,'MN_JENIS_JASA','MN_JENIS_JASA_DELETE','Akses Delete',1),(43,'MN_JENIS_JASA','MN_JENIS_JASA_EDIT','Akses Edit',1),(194,'MN_JOURNAL','MN_JOURNAL_ADD','Akses Add',1),(195,'MN_JOURNAL','MN_JOURNAL_DELETE','Akses Delete',1),(193,'MN_JOURNAL','MN_JOURNAL_EDIT','Akses Edit',1),(196,'MN_JOURNAL','MN_JOURNAL_PRINT','Akses Print',1),(64,'MN_LAPORAN','MN_CARD_FILE_REPORT','MENU CARD FILE REPORT',1),(75,'MN_MOVE_ITEM','MN_MOVE_ITEM_ADD','Akses Add',1),(76,'MN_MOVE_ITEM','MN_MOVE_ITEM_DELETE','Akses Delete',1),(74,'MN_MOVE_ITEM','MN_MOVE_ITEM_EDIT','Akses Edit',1),(161,'MN_OUTLET_SALES','MN_CASHIER','MENU CASHIER',1),(166,'MN_OUTLET_SALES','MN_CASHIER_REGISTER','MENU CASHIER SUMMARY',1),(212,'MN_OUTLET_SALES','MN_CASHIER_RETURN','MENU CASHIER RETURN',1),(211,'MN_OUTLET_SALES','MN_MUTASI_CASHIER','MENU CASHIER REGISTER DETAIL',1),(107,'MN_PAYMENT_AP','MN_PEMBAYARAN_HUTANG','MENU A/P PAYMENT',1),(112,'MN_PAYMENT_AP','MN_STATUS_HUTANG','MENU A/P STATUS',1),(154,'MN_PAYMENT_AR','MN_PAYMENT_AR_ADD','Akses Add',1),(155,'MN_PAYMENT_AR','MN_PAYMENT_AR_DELETE','Akses Delete',1),(153,'MN_PAYMENT_AR','MN_PAYMENT_AR_EDIT','Akses Edit',1),(156,'MN_PAYMENT_AR','MN_PAYMENT_AR_PRINT','Akses Print',1),(109,'MN_PEMBAYARAN_HUTANG','MN_PEMBAYARAN_HUTANG_ADD','Akses Add',1),(110,'MN_PEMBAYARAN_HUTANG','MN_PEMBAYARAN_HUTANG_DELETE','Akses Delete',1),(108,'MN_PEMBAYARAN_HUTANG','MN_PEMBAYARAN_HUTANG_EDIT','Akses Edit',1),(111,'MN_PEMBAYARAN_HUTANG','MN_PEMBAYARAN_HUTANG_PRINT','Akses Print',1),(88,'MN_PO','MN_PO_ADD','Akses Add',1),(89,'MN_PO','MN_PO_DELETE','Akses Delete',1),(87,'MN_PO','MN_PO_EDIT','Akses Edit',1),(90,'MN_PO','MN_PO_PRINT','Akses Print',1),(85,'MN_PURCHASE','MN_APPROVAL_RO','MENU APPROVAL RO',1),(218,'MN_PURCHASE','MN_AP_INITBALANCE','MENU A/P BEGINNING BALANCE',1),(106,'MN_PURCHASE','MN_PAYMENT_AP','MENU ACCOUNT PAYABLE',1),(86,'MN_PURCHASE','MN_PO','MENU PURCHASE ORDER',1),(96,'MN_PURCHASE','MN_PURCHASE_INV','MENU PURCHASE INVOICE',1),(113,'MN_PURCHASE','MN_PURCHASE_REPORT','MENU PURCHASE & A/P REPORT',1),(101,'MN_PURCHASE','MN_PURCHASE_RETURN','MENU PURCHASE RETURN',1),(91,'MN_PURCHASE','MN_RECEIVED_ORDER','MENU RECEIVED ITEM',1),(80,'MN_PURCHASE','MN_RO','MENU PURCHASE REQUISITION',1),(98,'MN_PURCHASE_INV','MN_PURCHASE_INV_ADD','Akses Add',1),(99,'MN_PURCHASE_INV','MN_PURCHASE_INV_DELETE','Akses Delete',1),(97,'MN_PURCHASE_INV','MN_PURCHASE_INV_EDIT','Akses Edit',1),(100,'MN_PURCHASE_INV','MN_PURCHASE_INV_PRINT','Akses Print',1),(114,'MN_PURCHASE_REPORT','MN_AP_REPORT','MENU A/P REPORT',1),(103,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_ADD','Akses Add',1),(104,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_DELETE','Akses Delete',1),(102,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_EDIT','Akses Edit',1),(105,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_PRINT','Akses Print',1),(169,'MN_RECEIPT_MONEY','MN_RECEIPT_MONEY_ADD','Akses Add',1),(170,'MN_RECEIPT_MONEY','MN_RECEIPT_MONEY_DELETE','Akses Delete',1),(168,'MN_RECEIPT_MONEY','MN_RECEIPT_MONEY_EDIT','Akses Edit',1),(171,'MN_RECEIPT_MONEY','MN_RECEIPT_MONEY_PRINT','Akses Print',1),(93,'MN_RECEIVED_ORDER','MN_RECEIVED_ORDER_ADD','Akses Add',1),(94,'MN_RECEIVED_ORDER','MN_RECEIVED_ORDER_DELETE','Akses Delete',1),(92,'MN_RECEIVED_ORDER','MN_RECEIVED_ORDER_EDIT','Akses Edit',1),(95,'MN_RECEIVED_ORDER','MN_RECEIVED_ORDER_PRINT','Akses Print',1),(82,'MN_RO','MN_RO_ADD','Akses Add',1),(83,'MN_RO','MN_RO_DELETE','Akses Delete',1),(81,'MN_RO','MN_RO_EDIT','Akses Edit',1),(84,'MN_RO','MN_RO_PRINT','Akses Print',1),(151,'MN_SALES','MN_AR','MENU ACCOUNT RECEIVABLE',1),(223,'MN_SALES','MN_AR_INITBALANCE','MENU A/R BEGINNING BALANCE',1),(136,'MN_SALES','MN_DELIVERED_ITEM','MENU DELIVERY ITEM',1),(141,'MN_SALES','MN_SALES_INV','MENU SALES INVOICE',1),(158,'MN_SALES','MN_SALES_REPORT','MENU SALES / AR REPORT',1),(146,'MN_SALES','MN_SALES_RETURN','MENU SALES RETURN',1),(228,'MN_SALES','MN_SET_MARKETING','MENU ADD MARKETING FROM EMPLOYEE',1),(131,'MN_SALES','MN_SO','MENU SALES ORDER',1),(143,'MN_SALES_INV','MN_SALES_INV_ADD','Akses Add',1),(144,'MN_SALES_INV','MN_SALES_INV_DELETE','Akses Delete',1),(142,'MN_SALES_INV','MN_SALES_INV_EDIT','Akses Edit',1),(145,'MN_SALES_INV','MN_SALES_INV_PRINT','Akses Print',1),(159,'MN_SALES_REPORT','MN_LAPORAN_JUAL','MENU SALES REPORT',1),(160,'MN_SALES_REPORT','MN_LAPORAN_PIUTANG','MENU A/R REPORT',1),(148,'MN_SALES_RETURN','MN_SALES_RETURN_ADD','Akses Add',1),(149,'MN_SALES_RETURN','MN_SALES_RETURN_DELETE','Akses Delete',1),(147,'MN_SALES_RETURN','MN_SALES_RETURN_EDIT','Akses Edit',1),(150,'MN_SALES_RETURN','MN_SALES_RETURN_PRINT','Akses Print',1),(229,'MN_SET_MARKETING','MN_SET_MARKETING_EDIT','Akses Edit',1),(133,'MN_SO','MN_SO_ADD','Akses Add',1),(134,'MN_SO','MN_SO_DELETE','Akses Delete',1),(132,'MN_SO','MN_SO_EDIT','Akses Edit',1),(135,'MN_SO','MN_SO_PRINT','Akses Print',1),(174,'MN_SPEND_MONEY','MN_SPEND_MONEY_ADD','Akses Add',1),(175,'MN_SPEND_MONEY','MN_SPEND_MONEY_DELETE','Akses Delete',1),(173,'MN_SPEND_MONEY','MN_SPEND_MONEY_EDIT','Akses Edit',1),(176,'MN_SPEND_MONEY','MN_SPEND_MONEY_PRINT','Akses Print',1),(77,'MN_STOCK','MN_ITEM_LIST','MENU STOCK LIST',1),(79,'MN_STOCK','MN_LAPORAN_STOCK','MENU STOCK REPORT',1),(73,'MN_STOCK','MN_MOVE_ITEM','MENU STOCK TRANSFER',1),(69,'MN_STOCK','MN_STOCK_CORRECTION','MENU STOCK ADJUSTMENT',1),(65,'MN_STOCK','MN_STOCK_OPNAME','MENU STOCK OPNAME',1),(78,'MN_STOCK','MN_STOCK_REPORT','MENU STOCK REPORT',1),(71,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_ADD','Akses Add',1),(72,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_DELETE','Akses Delete',1),(70,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_EDIT','Akses Edit',1),(67,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_ADD','Akses Add',1),(68,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_DELETE','Akses Delete',1),(66,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_EDIT','Akses Edit',1),(18,'MN_SUPPLIER','MN_SUPPLIER_ADD','Akses Add',1),(19,'MN_SUPPLIER','MN_SUPPLIER_DELETE','Akses Delete',1),(17,'MN_SUPPLIER','MN_SUPPLIER_EDIT','Akses Edit',1),(202,'MN_TOOLS','MN_BACKUP','MENU BACKUP',1),(204,'MN_TOOLS','MN_LOG','MENU TRANSACTION LOG ',1),(203,'MN_TOOLS','MN_RESTORE','MENU RESTORE',1),(230,'MN_TOOLS','MN_SET_PATH','MENU SET IMAGE DIRECTORY',1),(205,'MN_TOOLS','MN_USERMANAGE','MENU USER MANAGEMENT ',1),(48,'MN_UNIT','MN_UNIT_ADD','Akses Add',1),(49,'MN_UNIT','MN_UNIT_DELETE','Akses Delete',1),(47,'MN_UNIT','MN_UNIT_EDIT','Akses Edit',1),(53,'MN_WAREHOUSE','MN_WAREHOUSE_ADD','Akses Add',1),(54,'MN_WAREHOUSE','MN_WAREHOUSE_DELETE','Akses Delete',1),(52,'MN_WAREHOUSE','MN_WAREHOUSE_EDIT','Akses Edit',1),(9,'ROOT','MN_ACCOUNT','ACCOUNTING',0),(1,'ROOT','MN_CARDFILE','CARDFILE',0),(8,'ROOT','MN_CASH_BANK','CASH BANK',0),(11,'ROOT','MN_HELP','HELP',0),(6,'ROOT','MN_OUTLET_SALES','OUTLET SALES',0),(3,'ROOT','MN_PURCHASE','PURCHASE',0),(5,'ROOT','MN_SALES','SALES',0),(2,'ROOT','MN_STOCK','STOCK',0),(10,'ROOT','MN_TOOLS','TOOLS',0);
/*!40000 ALTER TABLE `i_templatehakakses_setmanufacture` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_templatehakakses_setretail`
--

DROP TABLE IF EXISTS `i_templatehakakses_setretail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_templatehakakses_setretail` (
  `nourut` int(11) NOT NULL,
  `parentkey` varchar(60) NOT NULL,
  `childkey` varchar(60) NOT NULL,
  `notes` text,
  `ismenu` int(11) DEFAULT NULL,
  PRIMARY KEY (`parentkey`,`childkey`),
  UNIQUE KEY `TEMPLATEHAKAKSES_PK` (`parentkey`,`childkey`),
  UNIQUE KEY `TEMPLATENOOROT` (`nourut`) USING BTREE,
  KEY `PARENTKEY` (`parentkey`),
  KEY `CHILDKEY` (`childkey`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_templatehakakses_setretail`
--

LOCK TABLES `i_templatehakakses_setretail` WRITE;
/*!40000 ALTER TABLE `i_templatehakakses_setretail` DISABLE KEYS */;
INSERT INTO `i_templatehakakses_setretail` VALUES (199,'MN_ACCOUNT','MN_ACCOUNT_REPORT','MENU ACCOUNTING & ANALYST REPORT',1),(191,'MN_ACCOUNT','MN_CASHBANK_SETUP','MENU ADD CASH/BANK TYPE',1),(186,'MN_ACCOUNT','MN_COA','MENU CHART OF ACCOUNT',1),(192,'MN_ACCOUNT','MN_JOURNAL','MENU GENERAL JOURNAL',1),(197,'MN_ACCOUNT','MN_JOURNAL_LIST','MENU JOURNAL LIST',1),(198,'MN_ACCOUNT','MN_LEDGER','MENU LEDGER',1),(200,'MN_ACCOUNT_REPORT','MN_ACCOUNTING_REPORT','MENU ACCOUNTING REPORT',1),(201,'MN_ACCOUNT_REPORT','MN_ANALYST_REPORT','MENU ANALYST REPORT',1),(220,'MN_AP_INITBALANCE','MN_AP_INITBALANCE_ADD','Akses Add',1),(221,'MN_AP_INITBALANCE','MN_AP_INITBALANCE_DELETE','Akses Delete',1),(219,'MN_AP_INITBALANCE','MN_AP_INITBALANCE_EDIT','Akses Edit',1),(222,'MN_AP_INITBALANCE','MN_AP_INITBALANCE_PRINT','Akses Print',1),(157,'MN_AR','MN_AR_STATUS','MENU A/R STATUS',1),(152,'MN_AR','MN_PAYMENT_AR','MENU A/R PAYMENT',1),(225,'MN_AR_INITBALANCE','MN_AR_INITBALANCE_ADD','Akses Add',1),(226,'MN_AR_INITBALANCE','MN_AR_INITBALANCE_DELETE','Akses Delete',1),(224,'MN_AR_INITBALANCE','MN_AR_INITBALANCE_EDIT','Akses Edit',1),(227,'MN_AR_INITBALANCE','MN_AR_INITBALANCE_PRINT','Akses Print',1),(180,'MN_BANK_RECONCILE','MN_BANK_RECONCILE_ADD','Akses Add',1),(181,'MN_BANK_RECONCILE','MN_BANK_RECONCILE_DELETE','Akses Delete',1),(179,'MN_BANK_RECONCILE','MN_BANK_RECONCILE_EDIT','Akses Edit',1),(182,'MN_BANK_RECONCILE','MN_BANK_RECONCILE_PRINT','Akses Print',1),(40,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_ADD','Akses Add',1),(41,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_DELETE','Akses Delete',1),(39,'MN_BEGINING_BALANCE','MN_BEGINING_BALANCE_EDIT','Akses Edit',1),(24,'MN_CARDFILE','MN_CARD_LIST','MENU CARD LIST',1),(55,'MN_CARDFILE','MN_CURRENCY','MENU CURRENCY',1),(59,'MN_CARDFILE','MN_CURRENCY_CONVERSION','MENU CURRENCY CONVERSION',1),(12,'MN_CARDFILE','MN_CUSTOMER','CUSTOMER',1),(20,'MN_CARDFILE','MN_EMPLOYEE','MENU EMPLOYEE',1),(25,'MN_CARDFILE','MN_ITEM','MENU ITEM',1),(42,'MN_CARDFILE','MN_JENIS_JASA','MENU SERVICE ITEM',1),(63,'MN_CARDFILE','MN_LAPORAN','MENU  MASTER REPORT',1),(16,'MN_CARDFILE','MN_SUPPLIER','MENU SUPPLIER',1),(46,'MN_CARDFILE','MN_UNIT','MENU UNIT',1),(50,'MN_CARDFILE','MN_UNIT_CONVERSION','MENU UNIT CONVERSION',1),(51,'MN_CARDFILE','MN_WAREHOUSE','MENU WAREHOUSE',1),(185,'MN_CASHBANK_REPORT','MN_CASHBANK_RECAP_REPORT','MENU CASH/BANK SUMMARY',1),(184,'MN_CASHBANK_REPORT','MN_CASHBANK_TRANS_REPORT','MENU CASH/BANK DETAIL',1),(163,'MN_CASHIER','MN_CASHIER_ADD','Akses Add',1),(164,'MN_CASHIER','MN_CASHIER_DELETE','Akses Delete',1),(162,'MN_CASHIER','MN_CASHIER_EDIT','Akses Edit',1),(165,'MN_CASHIER','MN_CASHIER_PRINT','Akses Print',1),(214,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_ADD','Akses Add',1),(216,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_DELETE','Akses Delete',1),(213,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_EDIT','Akses Edit',1),(217,'MN_CASHIER_RETURN','MN_CASHIER_RETURN_PRINT','Akses Print',1),(178,'MN_CASH_BANK','MN_BANK_RECONCILE','MENU BANK RECONCILE',1),(177,'MN_CASH_BANK','MN_CASHBANK_REGISTER','MENU CASH/BANK REGISTER',1),(183,'MN_CASH_BANK','MN_CASHBANK_REPORT','MENU CASH/BANK REPORT',1),(167,'MN_CASH_BANK','MN_RECEIPT_MONEY','MENU CASH/BANK RECEIPTS',1),(172,'MN_CASH_BANK','MN_SPEND_MONEY','MENU CASH/BANK DISBURSEMENT',1),(188,'MN_COA','MN_COA_ADD','Akses Add',1),(189,'MN_COA','MN_COA_DELETE','Akses Delete',1),(187,'MN_COA','MN_COA_EDIT','Akses Edit',1),(190,'MN_COA','MN_COA_PRINT','Akses Print',1),(57,'MN_CURRENCY','MN_CURRENCY_ADD','Akses Add',1),(58,'MN_CURRENCY','MN_CURRENCY_DELETE','Akses Delete',1),(56,'MN_CURRENCY','MN_CURRENCY_EDIT','Akses Edit',1),(61,'MN_CURRENCY_CONVERSION','MN_CURRENCY_CONVERSION_ADD','Akses Add',1),(62,'MN_CURRENCY_CONVERSION','MN_CURRENCY_CONVERSION_DELETE','Akses Delete',1),(60,'MN_CURRENCY_CONVERSION','MN_CURRENCY_CONVERSION_EDIT','Akses Edit',1),(14,'MN_CUSTOMER','MN_CUSTOMER_ADD','Akses Add',1),(15,'MN_CUSTOMER','MN_CUSTOMER_DELETE','Akses Delete',1),(13,'MN_CUSTOMER','MN_CUSTOMER_EDIT','Akses Edit',1),(138,'MN_DELIVERED_ITEM','MN_DELIVERED_ITEM_ADD','Akses Add',1),(139,'MN_DELIVERED_ITEM','MN_DELIVERED_ITEM_DELETE','Akses Delete',1),(137,'MN_DELIVERED_ITEM','MN_DELIVERED_ITEM_EDIT','Akses Edit',1),(140,'MN_DELIVERED_ITEM','MN_DELIVERED_ITEM_PRINT','Akses Print',1),(22,'MN_EMPLOYEE','MN_EMPLOYEE_ADD','Akses Add',1),(23,'MN_EMPLOYEE','MN_EMPLOYEE_DELETE','Akses Delete',1),(21,'MN_EMPLOYEE','MN_EMPLOYEE_EDIT','Akses Edit',1),(38,'MN_ITEM','MN_BEGINING_BALANCE','MENU BEGINNING BALANCE',1),(231,'MN_ITEM','MN_ITEM_BRAND','MENU ITEM TYPE',1),(30,'MN_ITEM','MN_ITEM_CAT','MENU ITEM CATEGORY',1),(34,'MN_ITEM','MN_ITEM_NAME','MENU ITEM NAME',1),(26,'MN_ITEM','MN_ITEM_TYPE','MENU ITEM TYPE',1),(233,'MN_ITEM_BRAND','MN_ITEM_BRAND_ADD','Akses Add',1),(234,'MN_ITEM_BRAND','MN_ITEM_BRAND_DELETE','Akses Delete',1),(232,'MN_ITEM_BRAND','MN_ITEM_BRAND_EDIT','Akses Edit',1),(32,'MN_ITEM_CAT','MN_ITEM_CAT_ADD','Akses Add',1),(33,'MN_ITEM_CAT','MN_ITEM_CAT_DELETE','Akses Delete',1),(31,'MN_ITEM_CAT','MN_ITEM_CAT_EDIT','Akses Edit',1),(36,'MN_ITEM_NAME','MN_ITEM_NAME_ADD','Akses Add',1),(37,'MN_ITEM_NAME','MN_ITEM_NAME_DELETE','Akses Delete',1),(35,'MN_ITEM_NAME','MN_ITEM_NAME_EDIT','Akses Edit',1),(28,'MN_ITEM_TYPE','MN_ITEM_TYPE_ADD','Akses Add',1),(29,'MN_ITEM_TYPE','MN_ITEM_TYPE_DELETE','Akses Delete',1),(27,'MN_ITEM_TYPE','MN_ITEM_TYPE_EDIT','Akses Edit',1),(44,'MN_JENIS_JASA','MN_JENIS_JASA_ADD','Akses Add',1),(45,'MN_JENIS_JASA','MN_JENIS_JASA_DELETE','Akses Delete',1),(43,'MN_JENIS_JASA','MN_JENIS_JASA_EDIT','Akses Edit',1),(194,'MN_JOURNAL','MN_JOURNAL_ADD','Akses Add',1),(195,'MN_JOURNAL','MN_JOURNAL_DELETE','Akses Delete',1),(193,'MN_JOURNAL','MN_JOURNAL_EDIT','Akses Edit',1),(196,'MN_JOURNAL','MN_JOURNAL_PRINT','Akses Print',1),(64,'MN_LAPORAN','MN_CARD_FILE_REPORT','MENU CARD FILE REPORT',1),(75,'MN_MOVE_ITEM','MN_MOVE_ITEM_ADD','Akses Add',1),(76,'MN_MOVE_ITEM','MN_MOVE_ITEM_DELETE','Akses Delete',1),(74,'MN_MOVE_ITEM','MN_MOVE_ITEM_EDIT','Akses Edit',1),(161,'MN_OUTLET_SALES','MN_CASHIER','MENU CASHIER',1),(166,'MN_OUTLET_SALES','MN_CASHIER_REGISTER','MENU CASHIER SUMMARY',1),(212,'MN_OUTLET_SALES','MN_CASHIER_RETURN','MENU CASHIER RETURN',1),(211,'MN_OUTLET_SALES','MN_MUTASI_CASHIER','MENU CASHIER REGISTER DETAIL',1),(107,'MN_PAYMENT_AP','MN_PEMBAYARAN_HUTANG','MENU A/P PAYMENT',1),(112,'MN_PAYMENT_AP','MN_STATUS_HUTANG','MENU A/P STATUS',1),(154,'MN_PAYMENT_AR','MN_PAYMENT_AR_ADD','Akses Add',1),(155,'MN_PAYMENT_AR','MN_PAYMENT_AR_DELETE','Akses Delete',1),(153,'MN_PAYMENT_AR','MN_PAYMENT_AR_EDIT','Akses Edit',1),(156,'MN_PAYMENT_AR','MN_PAYMENT_AR_PRINT','Akses Print',1),(109,'MN_PEMBAYARAN_HUTANG','MN_PEMBAYARAN_HUTANG_ADD','Akses Add',1),(110,'MN_PEMBAYARAN_HUTANG','MN_PEMBAYARAN_HUTANG_DELETE','Akses Delete',1),(108,'MN_PEMBAYARAN_HUTANG','MN_PEMBAYARAN_HUTANG_EDIT','Akses Edit',1),(111,'MN_PEMBAYARAN_HUTANG','MN_PEMBAYARAN_HUTANG_PRINT','Akses Print',1),(88,'MN_PO','MN_PO_ADD','Akses Add',1),(89,'MN_PO','MN_PO_DELETE','Akses Delete',1),(87,'MN_PO','MN_PO_EDIT','Akses Edit',1),(90,'MN_PO','MN_PO_PRINT','Akses Print',1),(85,'MN_PURCHASE','MN_APPROVAL_RO','MENU APPROVAL RO',1),(218,'MN_PURCHASE','MN_AP_INITBALANCE','MENU A/P BEGINNING BALANCE',1),(106,'MN_PURCHASE','MN_PAYMENT_AP','MENU ACCOUNT PAYABLE',1),(86,'MN_PURCHASE','MN_PO','MENU PURCHASE ORDER',1),(96,'MN_PURCHASE','MN_PURCHASE_INV','MENU PURCHASE INVOICE',1),(113,'MN_PURCHASE','MN_PURCHASE_REPORT','MENU PURCHASE & A/P REPORT',1),(101,'MN_PURCHASE','MN_PURCHASE_RETURN','MENU PURCHASE RETURN',1),(91,'MN_PURCHASE','MN_RECEIVED_ORDER','MENU RECEIVED ITEM',1),(80,'MN_PURCHASE','MN_RO','MENU PURCHASE REQUISITION',1),(98,'MN_PURCHASE_INV','MN_PURCHASE_INV_ADD','Akses Add',1),(99,'MN_PURCHASE_INV','MN_PURCHASE_INV_DELETE','Akses Delete',1),(97,'MN_PURCHASE_INV','MN_PURCHASE_INV_EDIT','Akses Edit',1),(100,'MN_PURCHASE_INV','MN_PURCHASE_INV_PRINT','Akses Print',1),(114,'MN_PURCHASE_REPORT','MN_AP_REPORT','MENU A/P REPORT',1),(103,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_ADD','Akses Add',1),(104,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_DELETE','Akses Delete',1),(102,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_EDIT','Akses Edit',1),(105,'MN_PURCHASE_RETURN','MN_PURCHASE_RETURN_PRINT','Akses Print',1),(169,'MN_RECEIPT_MONEY','MN_RECEIPT_MONEY_ADD','Akses Add',1),(170,'MN_RECEIPT_MONEY','MN_RECEIPT_MONEY_DELETE','Akses Delete',1),(168,'MN_RECEIPT_MONEY','MN_RECEIPT_MONEY_EDIT','Akses Edit',1),(171,'MN_RECEIPT_MONEY','MN_RECEIPT_MONEY_PRINT','Akses Print',1),(93,'MN_RECEIVED_ORDER','MN_RECEIVED_ORDER_ADD','Akses Add',1),(94,'MN_RECEIVED_ORDER','MN_RECEIVED_ORDER_DELETE','Akses Delete',1),(92,'MN_RECEIVED_ORDER','MN_RECEIVED_ORDER_EDIT','Akses Edit',1),(95,'MN_RECEIVED_ORDER','MN_RECEIVED_ORDER_PRINT','Akses Print',1),(82,'MN_RO','MN_RO_ADD','Akses Add',1),(83,'MN_RO','MN_RO_DELETE','Akses Delete',1),(81,'MN_RO','MN_RO_EDIT','Akses Edit',1),(84,'MN_RO','MN_RO_PRINT','Akses Print',1),(151,'MN_SALES','MN_AR','MENU ACCOUNT RECEIVABLE',1),(223,'MN_SALES','MN_AR_INITBALANCE','MENU A/R BEGINNING BALANCE',1),(136,'MN_SALES','MN_DELIVERED_ITEM','MENU DELIVERY ITEM',1),(141,'MN_SALES','MN_SALES_INV','MENU SALES INVOICE',1),(158,'MN_SALES','MN_SALES_REPORT','MENU SALES / AR REPORT',1),(146,'MN_SALES','MN_SALES_RETURN','MENU SALES RETURN',1),(228,'MN_SALES','MN_SET_MARKETING','MENU ADD MARKETING FROM EMPLOYEE',1),(131,'MN_SALES','MN_SO','MENU SALES ORDER',1),(143,'MN_SALES_INV','MN_SALES_INV_ADD','Akses Add',1),(144,'MN_SALES_INV','MN_SALES_INV_DELETE','Akses Delete',1),(142,'MN_SALES_INV','MN_SALES_INV_EDIT','Akses Edit',1),(145,'MN_SALES_INV','MN_SALES_INV_PRINT','Akses Print',1),(159,'MN_SALES_REPORT','MN_LAPORAN_JUAL','MENU SALES REPORT',1),(160,'MN_SALES_REPORT','MN_LAPORAN_PIUTANG','MENU A/R REPORT',1),(148,'MN_SALES_RETURN','MN_SALES_RETURN_ADD','Akses Add',1),(149,'MN_SALES_RETURN','MN_SALES_RETURN_DELETE','Akses Delete',1),(147,'MN_SALES_RETURN','MN_SALES_RETURN_EDIT','Akses Edit',1),(150,'MN_SALES_RETURN','MN_SALES_RETURN_PRINT','Akses Print',1),(229,'MN_SET_MARKETING','MN_SET_MARKETING_EDIT','Akses Edit',1),(133,'MN_SO','MN_SO_ADD','Akses Add',1),(134,'MN_SO','MN_SO_DELETE','Akses Delete',1),(132,'MN_SO','MN_SO_EDIT','Akses Edit',1),(135,'MN_SO','MN_SO_PRINT','Akses Print',1),(174,'MN_SPEND_MONEY','MN_SPEND_MONEY_ADD','Akses Add',1),(175,'MN_SPEND_MONEY','MN_SPEND_MONEY_DELETE','Akses Delete',1),(173,'MN_SPEND_MONEY','MN_SPEND_MONEY_EDIT','Akses Edit',1),(176,'MN_SPEND_MONEY','MN_SPEND_MONEY_PRINT','Akses Print',1),(77,'MN_STOCK','MN_ITEM_LIST','MENU STOCK LIST',1),(79,'MN_STOCK','MN_LAPORAN_STOCK','MENU STOCK REPORT',1),(73,'MN_STOCK','MN_MOVE_ITEM','MENU STOCK TRANSFER',1),(69,'MN_STOCK','MN_STOCK_CORRECTION','MENU STOCK ADJUSTMENT',1),(65,'MN_STOCK','MN_STOCK_OPNAME','MENU STOCK OPNAME',1),(78,'MN_STOCK','MN_STOCK_REPORT','MENU STOCK REPORT',1),(71,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_ADD','Akses Add',1),(72,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_DELETE','Akses Delete',1),(70,'MN_STOCK_CORRECTION','MN_STOCK_CORRECTION_EDIT','Akses Edit',1),(67,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_ADD','Akses Add',1),(68,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_DELETE','Akses Delete',1),(66,'MN_STOCK_OPNAME','MN_STOCK_OPNAME_EDIT','Akses Edit',1),(18,'MN_SUPPLIER','MN_SUPPLIER_ADD','Akses Add',1),(19,'MN_SUPPLIER','MN_SUPPLIER_DELETE','Akses Delete',1),(17,'MN_SUPPLIER','MN_SUPPLIER_EDIT','Akses Edit',1),(202,'MN_TOOLS','MN_BACKUP','MENU BACKUP',1),(204,'MN_TOOLS','MN_LOG','MENU TRANSACTION LOG ',1),(203,'MN_TOOLS','MN_RESTORE','MENU RESTORE',1),(230,'MN_TOOLS','MN_SET_PATH','MENU SET IMAGE DIRECTORY',1),(205,'MN_TOOLS','MN_USERMANAGE','MENU USER MANAGEMENT ',1),(48,'MN_UNIT','MN_UNIT_ADD','Akses Add',1),(49,'MN_UNIT','MN_UNIT_DELETE','Akses Delete',1),(47,'MN_UNIT','MN_UNIT_EDIT','Akses Edit',1),(53,'MN_WAREHOUSE','MN_WAREHOUSE_ADD','Akses Add',1),(54,'MN_WAREHOUSE','MN_WAREHOUSE_DELETE','Akses Delete',1),(52,'MN_WAREHOUSE','MN_WAREHOUSE_EDIT','Akses Edit',1),(9,'ROOT','MN_ACCOUNT','ACCOUNTING',0),(1,'ROOT','MN_CARDFILE','CARDFILE',0),(8,'ROOT','MN_CASH_BANK','CASH BANK',0),(11,'ROOT','MN_HELP','HELP',0),(6,'ROOT','MN_OUTLET_SALES','OUTLET SALES',0),(3,'ROOT','MN_PURCHASE','PURCHASE',0),(5,'ROOT','MN_SALES','SALES',0),(2,'ROOT','MN_STOCK','STOCK',0),(10,'ROOT','MN_TOOLS','TOOLS',0);
/*!40000 ALTER TABLE `i_templatehakakses_setretail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_upload_path`
--

DROP TABLE IF EXISTS `i_upload_path`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_upload_path` (
  `form` varchar(250) NOT NULL,
  `path` text,
  PRIMARY KEY (`form`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_upload_path`
--

LOCK TABLES `i_upload_path` WRITE;
/*!40000 ALTER TABLE `i_upload_path` DISABLE KEYS */;
INSERT INTO `i_upload_path` VALUES ('Customer',''),('Employee',''),('Item',''),('Logo',''),('Supplier','');
/*!40000 ALTER TABLE `i_upload_path` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `i_upload_pemrov_simrs`
--

DROP TABLE IF EXISTS `i_upload_pemrov_simrs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `i_upload_pemrov_simrs` (
  `id_import` varchar(120) NOT NULL,
  `date_trn` date DEFAULT NULL,
  `evidence_no` varchar(250) NOT NULL,
  `reff_acc_cost` varchar(120) DEFAULT NULL,
  `reff_prog` varchar(120) DEFAULT NULL,
  `reff_keg` varchar(120) DEFAULT NULL,
  `reff_acc_cashbank` varchar(120) DEFAULT NULL,
  `notes` text,
  `receipt_amount` double(19,2) DEFAULT NULL,
  `spend_amount` double(19,2) DEFAULT NULL,
  `import_date` datetime DEFAULT NULL,
  `posting_status` int(1) DEFAULT NULL,
  `period` int(11) DEFAULT NULL,
  `year` int(11) DEFAULT NULL,
  `import_user` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id_import`,`evidence_no`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `i_upload_pemrov_simrs`
--

LOCK TABLES `i_upload_pemrov_simrs` WRITE;
/*!40000 ALTER TABLE `i_upload_pemrov_simrs` DISABLE KEYS */;
/*!40000 ALTER TABLE `i_upload_pemrov_simrs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary table structure for view `items_view`
--

DROP TABLE IF EXISTS `items_view`;
/*!50001 DROP VIEW IF EXISTS `items_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `items_view` (
  `id_item` varchar(25),
  `item_name` varchar(60),
  `id_barcode` varchar(30),
  `mst_itemcat_nm` varchar(120),
  `flag_buy` int(1),
  `flag_inv` int(1),
  `flag_sell` int(1),
  `sell_unit` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `lap_mutasi_hpp`
--

DROP TABLE IF EXISTS `lap_mutasi_hpp`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `lap_mutasi_hpp` (
  `no_bukti` varchar(60) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `id_item` varchar(50) DEFAULT NULL,
  `item_name` varchar(300) DEFAULT NULL,
  `masuk` double DEFAULT NULL,
  `keluar` double DEFAULT NULL,
  `id_unit` varchar(30) DEFAULT NULL,
  `price` double DEFAULT NULL,
  `saldo` double DEFAULT NULL,
  `company` text,
  `notes` text,
  `nmb_asc` int(11) DEFAULT NULL,
  `price_in` double DEFAULT NULL,
  `price_out` double DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `lap_mutasi_hpp`
--

LOCK TABLES `lap_mutasi_hpp` WRITE;
/*!40000 ALTER TABLE `lap_mutasi_hpp` DISABLE KEYS */;
/*!40000 ALTER TABLE `lap_mutasi_hpp` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `lap_rekap_hpp_akhir`
--

DROP TABLE IF EXISTS `lap_rekap_hpp_akhir`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `lap_rekap_hpp_akhir` (
  `id_item` varchar(50) DEFAULT NULL,
  `saldo` double DEFAULT NULL,
  `price` double DEFAULT NULL,
  `nominal` double DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `lap_rekap_hpp_akhir`
--

LOCK TABLES `lap_rekap_hpp_akhir` WRITE;
/*!40000 ALTER TABLE `lap_rekap_hpp_akhir` DISABLE KEYS */;
INSERT INTO `lap_rekap_hpp_akhir` VALUES ('0816000001',10,3044081,30440810),('0816000002',8,1080918,8647344),('0816000003',1,0,0),('0816000004',1,0,0);
/*!40000 ALTER TABLE `lap_rekap_hpp_akhir` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary table structure for view `lap_rekap_hpp_akhir_view`
--

DROP TABLE IF EXISTS `lap_rekap_hpp_akhir_view`;
/*!50001 DROP VIEW IF EXISTS `lap_rekap_hpp_akhir_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `lap_rekap_hpp_akhir_view` (
  `id_item` varchar(50),
  `item_name` varchar(60),
  `saldo` double,
  `price` double,
  `nominal` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `log_error`
--

DROP TABLE IF EXISTS `log_error`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `log_error` (
  `error_log_id` varchar(60) NOT NULL,
  `error_class_name` varchar(120) NOT NULL,
  `error_description` varchar(400) NOT NULL,
  `error_subclass_name` varchar(120) NOT NULL,
  `created_date` datetime NOT NULL,
  `created_user` varchar(120) NOT NULL,
  PRIMARY KEY (`error_log_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `log_error`
--

LOCK TABLES `log_error` WRITE;
/*!40000 ALTER TABLE `log_error` DISABLE KEYS */;
/*!40000 ALTER TABLE `log_error` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `log_transaction`
--

DROP TABLE IF EXISTS `log_transaction`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `log_transaction` (
  `id_log` int(11) NOT NULL AUTO_INCREMENT,
  `transaction_no` varchar(120) DEFAULT NULL,
  `form` varchar(120) DEFAULT NULL,
  `username` varchar(250) DEFAULT NULL,
  `action` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `value` text,
  PRIMARY KEY (`id_log`),
  KEY `fk_log1` (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `log_transaction`
--

LOCK TABLES `log_transaction` WRITE;
/*!40000 ALTER TABLE `log_transaction` DISABLE KEYS */;
/*!40000 ALTER TABLE `log_transaction` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mdatapelayanan`
--

DROP TABLE IF EXISTS `mdatapelayanan`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mdatapelayanan` (
  `KDPELAYANAN` char(10) DEFAULT NULL,
  `KDREKENINGAKUNTANSI` char(25) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mdatapelayanan`
--

LOCK TABLES `mdatapelayanan` WRITE;
/*!40000 ALTER TABLE `mdatapelayanan` DISABLE KEYS */;
/*!40000 ALTER TABLE `mdatapelayanan` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_account`
--

DROP TABLE IF EXISTS `mst_account`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_account` (
  `id_account` varchar(25) NOT NULL,
  `account_name` varchar(60) DEFAULT NULL,
  `parent` varchar(25) DEFAULT NULL,
  `flag_active` int(11) DEFAULT NULL,
  `flag_header` int(11) DEFAULT NULL,
  `is_income` int(11) DEFAULT NULL,
  `is_balance_sheet` int(11) DEFAULT NULL,
  `notes` text,
  `def_position` char(1) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `beg_balance` double DEFAULT NULL,
  `golongan` int(1) DEFAULT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_account`
--

LOCK TABLES `mst_account` WRITE;
/*!40000 ALTER TABLE `mst_account` DISABLE KEYS */;
INSERT INTO `mst_account` VALUES ('1-0000','Aktiva','',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1000','Aktiva Lancar','1-0000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1100','Kas / Bank','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1101','Kas Utama','1-1100',1,0,0,1,'Account Kas Utama\r\n','D','tokoemas','2016-08-23 00:00:00','2016-08-23 00:00:00','tokoemas',20000000,1),('1-1102','Kas Kecil','1-1100',1,0,0,1,'Account Petty Cash','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',50000,1),('1-1103','Bank Mandiri','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',150000000,1),('1-1104','Bank BCA','1-1100',1,0,0,1,'','D','admin','2016-02-01 00:00:00','2016-02-01 00:00:00','admin',201641500,1),('1-1105','Bank BNI','1-1100',1,0,0,1,'','D','demo','2015-11-03 00:00:00','2015-11-03 00:00:00','demo',50000000,1),('1-1199','Kas Kasir','1-1100',1,0,0,1,'','D','admin','2015-01-07 00:00:00','2015-01-07 00:00:00','admin',2000000,1),('1-1200','Persediaan','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1201','Persediaan Barang Dagangan','1-1200',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',10000000,1),('1-1202','Persediaan Bahan Baku / Sparepart','1-1200',1,0,0,1,'','D','admin','2016-03-21 00:00:00','2016-03-21 00:00:00','admin',0,1),('1-1203','Persediaan Barang Dalam Proses','1-1200',1,0,0,1,'','D','admin','2016-06-08 00:00:00','2016-06-08 00:00:00','admin',0,1),('1-1299','Persediaan Lain','1-1200',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1300','Piutang','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1301','Piutang Usaha','1-1300',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',4000000,1),('1-1400','Biaya Dibayar Dimuka','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1401','Uang Muka Konsultan','1-1400',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1402','BDD Biaya Ekspedisi','1-1400',1,0,0,1,'','D','demo','2015-11-02 00:00:00','2015-11-02 00:00:00','demo',0,1),('1-1499','Uang Muka Lain','1-1400',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1500','Pajak Dibayar Dimuka','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1501','PPN Masukan','1-1500',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1599','Uang Muka Pajak Lain','1-1500',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-2000','Aktiva Tetap','1-0000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-2100','Tanah dan Bangunan','1-2000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-2101','Tanah','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',2000000000,1),('1-2102','Bangunan','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',500000000,1),('1-2103','Akumulasi Depr Bangunan','1-2100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-2104','Inventaris Kantor','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',150000000,1),('1-2105','Akumulasi Depr Inventaris Kantor','1-2100',1,0,0,1,'','K','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',14758000,1),('1-2106','Kendaraan','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',750000000,1),('1-2107','Akumulasi Depr Kendaraan','1-2100',1,0,0,1,'','K','admin','2014-12-31 00:00:00','2014-12-31 00:00:00','admin',34774200,1),('1-2198','Aktiva Tetap Lain','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-2199','Akumulasi Depr Aktiva Tetap Lain','1-2100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('2-0000','Kewajiban','',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-1000','Kewajiban Lancar','2-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-1100','Hutang Usaha','2-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-1101','Hutang Ke Supplier','2-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',4400000,2),('2-1102','PPN Keluaran','2-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-1200','Hutang Bank','2-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-1201','Hutang Bank Jangka Pendek','2-1200',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-1300','Uang Muka','2-1000',1,1,0,1,'','K','demo','2015-10-28 00:00:00','2015-10-28 00:00:00','demo',0,2),('2-1301','Uang Muka Pesanan','2-1300',1,0,0,1,'','K','demo','2015-10-28 00:00:00','2015-10-28 00:00:00','demo',0,2),('2-1400','Hutang Gaji','2-1000',1,1,0,1,'','K','admin','2016-03-23 00:00:00','2016-03-23 00:00:00','admin',0,2),('2-1401','Hutang Upah dan Gaji Karyawan','2-1400',1,0,0,1,'','K','admin','2016-03-23 00:00:00','2016-03-23 00:00:00','admin',0,2),('2-1500','Beban yang Masih Harus Dibayar','2-1000',1,1,0,1,'','K','admin','2016-06-15 00:00:00','2016-06-15 00:00:00','admin',0,2),('2-1501','Konversi Pabrik','2-1500',1,0,0,1,'','K','admin','2016-06-15 00:00:00','2016-06-15 00:00:00','admin',0,2),('2-2000','Kewajiban Jangka Panjang','2-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-2100','Hutang Bank','2-2000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-2101','Hutang Bank Jangka Panjang','2-2100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('3-0000','Modal','',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,3),('3-1000','Modal Dasar','3-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,3),('3-1100','Modal Tn A','3-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,3),('3-1101','Modal Disetor','3-1100',1,0,0,1,'','K','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',3873402200,3),('3-1102','Prive','3-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,3),('3-1199','Ikhtisar Laba / Rugi','3-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,3),('4-0000','Pendapatan','',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1000','Pendapatan Operasional','4-0000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1100','Penjualan','4-1000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1101','Penjualan Produk','4-1100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1102','Potongan Pembelian','4-1100',1,0,1,0,NULL,'K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1103','Potongan Penjualan','4-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1104','Potongan Pembayaran Hutang','4-1100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1105','Potongan Pembayaran Piutang','4-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1200','Pendapatan Usaha','4-1000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1201','Pendapatan Jasa','4-1200',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1202','Potongan Penjualan Jasa','4-1200',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1203','Pendapatan Penjualan Lainnya','4-1200',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-2000','Pendapatan Non Operasional','4-0000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-2100','Pendapatan di Luar Usaha','4-2000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-2101','Pendapatan Bunga Bank','4-2100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-2102','Pendapatan Selisih Kurs','4-2100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('5-0000','Harga Pokok','',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,5),('5-1000','Harga Pokok Penjualan','5-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,5),('5-1100','Harga Pokok Penjualan Produk','5-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,5),('5-1101','HPP Barang Dagangan','5-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,5),('5-1199','HPP Barang Lainnya','5-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,5),('5-2000','Harga Pokok Perakitan Barang','5-0000',1,1,0,1,'','D','admin','2016-06-08 00:00:00','2016-06-08 00:00:00','admin',0,5),('5-2100','Harga Pokok Produksi','5-2000',1,1,1,0,'','D','admin','2016-03-23 00:00:00','2016-03-23 00:00:00','admin',0,5),('5-2101','Biaya Bahan Baku','5-2100',1,0,1,0,'','D','admin','2016-03-23 00:00:00','2016-03-23 00:00:00','admin',0,5),('5-2102','Biaya Bahan Pembantu','5-2100',1,0,1,0,'','D','admin','2016-06-08 00:00:00','2016-06-08 00:00:00','admin',0,5),('5-2103','Biaya Overhead - Standar','5-2100',1,0,1,0,'','D','admin','2016-06-08 00:00:00','2016-06-08 00:00:00','admin',0,5),('5-2104','Biaya Konversi','5-2100',1,0,1,0,'','D','admin','2016-06-14 00:00:00','2016-06-14 00:00:00','admin',0,5),('5-2105','Biaya Tenaga Kerja Langsung','5-2100',1,0,1,0,'','D','admin','2016-06-08 00:00:00','2016-06-08 00:00:00','admin',0,5),('5-2200','Harga Pokok Perakitan Barang','5-2000',1,1,1,0,'','D','admin','2016-03-23 00:00:00','2016-03-23 00:00:00','admin',0,5),('5-2201','Harga Pokok Perakitan Barang','5-2200',1,0,1,0,'','D','admin','2016-03-23 00:00:00','2016-03-23 00:00:00','admin',0,5),('6-0000','Biaya','',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1000','Biaya Operasional','6-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1100','Biaya Adm & Umum','6-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1101','Biaya Listrik, Telp & Air','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1102','Biaya Alat Tulis Kantor','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1103','Biaya Bea & Pajak','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1104','Biaya Penyusutan Bangunan','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1105','Biaya Penyusutan Kendaraan','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1106','Biaya Penyusutan Inventaris','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1107','Biaya Angkut','6-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1108','Biaya Upah dan Gaji','6-1100',1,0,1,0,'','D','admin','2016-03-23 00:00:00','2016-03-23 00:00:00','admin',0,0),('6-1199','Biaya Adm & Umum Lain','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1200','Biaya Penjualan','6-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1201','Biaya Iklan & Promosi','6-1200',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1202','BIaya Komisi Marketing','6-1200',1,0,1,0,'Komisi Marketing','D','admin','2014-06-11 00:00:00','2014-06-11 00:00:00','admin',0,6),('6-1299','Biaya Penjualan Lain','6-1200',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-2000','Biaya Non Operasional','6-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-2100','Biaya di Luar Usaha','6-2000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-2101','Biaya Selisih Kurs','6-2100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6);
/*!40000 ALTER TABLE `mst_account` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_save` AFTER INSERT ON `mst_account` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_account, 'Chart Of Account', NEW.created_user, 'Input', NEW.created_date, concat('Input Account Baru - ',NEW.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_update` AFTER UPDATE ON `mst_account` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_delete` AFTER DELETE ON `mst_account` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_account_bumn`
--

DROP TABLE IF EXISTS `mst_account_bumn`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_account_bumn` (
  `id_account` varchar(25) NOT NULL,
  `account_name` varchar(60) DEFAULT NULL,
  `parent` varchar(25) DEFAULT NULL,
  `flag_active` int(11) DEFAULT NULL,
  `flag_header` int(11) DEFAULT NULL,
  `is_income` int(11) DEFAULT NULL,
  `is_balance_sheet` int(11) DEFAULT NULL,
  `notes` text,
  `def_position` char(1) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `beg_balance` double DEFAULT NULL,
  `golongan` int(1) DEFAULT NULL,
  `is_lra` int(1) DEFAULT NULL,
  `is_lo` int(1) DEFAULT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_account_bumn`
--

LOCK TABLES `mst_account_bumn` WRITE;
/*!40000 ALTER TABLE `mst_account_bumn` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_account_bumn` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_save_copy2` AFTER INSERT ON `mst_account_bumn` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_account, 'Chart Of Account', NEW.created_user, 'Input', NEW.created_date, concat('Input Account Baru - ',NEW.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_update_copy2` AFTER UPDATE ON `mst_account_bumn` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_delete_copy2` AFTER DELETE ON `mst_account_bumn` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_account_general`
--

DROP TABLE IF EXISTS `mst_account_general`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_account_general` (
  `id_account` varchar(25) NOT NULL,
  `account_name` varchar(60) DEFAULT NULL,
  `parent` varchar(25) DEFAULT NULL,
  `flag_active` int(11) DEFAULT NULL,
  `flag_header` int(11) DEFAULT NULL,
  `is_income` int(11) DEFAULT NULL,
  `is_balance_sheet` int(11) DEFAULT NULL,
  `notes` text,
  `def_position` char(1) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `beg_balance` double DEFAULT NULL,
  `golongan` int(1) DEFAULT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_account_general`
--

LOCK TABLES `mst_account_general` WRITE;
/*!40000 ALTER TABLE `mst_account_general` DISABLE KEYS */;
INSERT INTO `mst_account_general` VALUES ('1-0000','Aktiva','',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1000','Aktiva Lancar','1-0000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1100','Kas / Bank','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1101','Kas Besar','1-1100',1,0,0,1,'Account Kas Utama\r\n','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',20000000,1),('1-1102','Kas Kecil','1-1100',1,0,0,1,'Account Petty Cash','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',50000,1),('1-1103','Bank Mandiri','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',150000000,1),('1-1104','Bank BCA','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',200000000,1),('1-1105','Bank BNI','1-1100',1,0,0,1,'','D','demo','2015-11-03 00:00:00','2015-11-03 00:00:00','demo',50000000,1),('1-1199','Kas Kasir','1-1100',1,0,0,1,'','D','admin','2015-01-07 00:00:00','2015-01-07 00:00:00','admin',2000000,1),('1-1200','Persediaan','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1201','Persediaan Barang Dagangan','1-1200',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',2220000,1),('1-1299','Persediaan Lain','1-1200',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1300','Piutang','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1301','Piutang Usaha','1-1300',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',4000000,1),('1-1400','Biaya Dibayar Dimuka','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1401','Uang Muka Konsultan','1-1400',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1402','BDD Biaya Ekspedisi','1-1400',1,0,0,1,'','D','demo','2015-11-02 00:00:00','2015-11-02 00:00:00','demo',0,1),('1-1499','Uang Muka Lain','1-1400',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1500','Pajak Dibayar Dimuka','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1501','PPN Masukan','1-1500',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-1599','Uang Muka Pajak Lain','1-1500',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-2000','Aktiva Tetap','1-0000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-2100','Tanah dan Bangunan','1-2000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-2101','Tanah','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',2000000000,1),('1-2102','Bangunan','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',500000000,1),('1-2103','Akumulasi Depr Bangunan','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-2104','Inventaris Kantor','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',150000000,1),('1-2105','Akumulasi Depr Inventaris Kantor','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',14758000,1),('1-2106','Kendaraan','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',750000000,1),('1-2107','Akumulasi Depr Kendaraan','1-2100',1,0,0,1,'','D','admin','2014-12-31 00:00:00','2014-12-31 00:00:00','admin',34774200,1),('1-2198','Aktiva Tetap Lain','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('1-2199','Akumulasi Depr Aktiva Tetap Lain','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,1),('2-0000','Kewajiban','',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-1000','Kewajiban Lancar','2-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-1100','Hutang Usaha','2-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-1101','Hutang Ke Supplier','2-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',4400000,2),('2-1102','PPN Keluaran','2-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-1200','Hutang Bank','2-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-1201','Hutang Bank Jangka Pendek','2-1200',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-1300','Uang Muka','2-1000',1,1,0,1,'','K','demo','2015-10-28 00:00:00','2015-10-28 00:00:00','demo',0,2),('2-1301','Uang Muka Pesanan','2-1300',1,0,0,1,'','K','demo','2015-10-28 00:00:00','2015-10-28 00:00:00','demo',0,2),('2-2000','Kewajiban Jangka Panjang','2-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-2100','Hutang Bank','2-2000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('2-2101','Hutang Bank Jangka Panjang','2-2100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,2),('3-0000','Modal','',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,3),('3-1000','Modal Dasar','3-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,3),('3-1100','Modal Tn A','3-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,3),('3-1101','Modal Disetor','3-1100',1,0,0,1,'','K','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',3873402200,3),('3-1102','Prive','3-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,3),('3-1199','Ikhtisar Laba / Rugi','3-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,3),('4-0000','Pendapatan','',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1000','Pendapatan Operasional','4-0000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1100','Penjualan','4-1000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1101','Penjualan Produk','4-1100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1102','Potongan Pembelian','4-1100',1,0,1,0,NULL,'K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1103','Potongan Penjualan','4-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1104','Potongan Pembayaran Hutang','4-1100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1105','Potongan Pembayaran Piutang','4-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1200','Pendapatan Usaha','4-1000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1201','Pendapatan Jasa','4-1200',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1202','Potongan Penjualan Jasa','4-1200',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-1203','Pendapatan Penjualan Lainnya','4-1200',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-2000','Pendapatan Non Operasional','4-0000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-2100','Pendapatan di Luar Usaha','4-2000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-2101','Pendapatan Bunga Bank','4-2100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('4-2102','Pendapatan Selisih Kurs','4-2100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,4),('5-0000','Harga Pokok','',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,5),('5-1000','Harga Pokok Penjualan','5-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,5),('5-1100','Harga Pokok Penjualan Produk','5-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,5),('5-1101','HPP Barang Dagangan','5-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,5),('5-1199','HPP Barang Lainnya','5-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,5),('6-0000','Biaya','',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1000','Biaya Operasional','6-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1100','Biaya Adm & Umum','6-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1101','Biaya Listrik, Telp & Air','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1102','Biaya Alat Tulis Kantor','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1103','Biaya Bea & Pajak','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1104','Biaya Penyusutan Bangunan','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1105','Biaya Penyusutan Kendaraan','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1106','Biaya Penyusutan Inventaris','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1107','Biaya Angkut','6-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1199','Biaya Adm & Umum Lain','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1200','Biaya Penjualan','6-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1201','Biaya Iklan & Promosi','6-1200',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-1202','BIaya Komisi Marketing','6-1200',1,0,1,0,'Komisi Marketing','D','admin','2014-06-11 00:00:00','2014-06-11 00:00:00','admin',0,6),('6-1299','Biaya Penjualan Lain','6-1200',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-2000','Biaya Non Operasional','6-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-2100','Biaya di Luar Usaha','6-2000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6),('6-2101','Biaya Selisih Kurs','6-2100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0,6);
/*!40000 ALTER TABLE `mst_account_general` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_save_copy1` AFTER INSERT ON `mst_account_general` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_account, 'Chart Of Account', NEW.created_user, 'Input', NEW.created_date, concat('Input Account Baru - ',NEW.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_update_copy1` AFTER UPDATE ON `mst_account_general` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_delete_copy1` AFTER DELETE ON `mst_account_general` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_account_parent`
--

DROP TABLE IF EXISTS `mst_account_parent`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_account_parent` (
  `id_account_parent` varchar(120) NOT NULL,
  `account_name` varchar(250) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `created_user` varchar(250) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `modified_user` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`id_account_parent`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_account_parent`
--

LOCK TABLES `mst_account_parent` WRITE;
/*!40000 ALTER TABLE `mst_account_parent` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_account_parent` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_account_setmanufacture_id`
--

DROP TABLE IF EXISTS `mst_account_setmanufacture_id`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_account_setmanufacture_id` (
  `id_account` varchar(25) NOT NULL,
  `account_name` varchar(60) DEFAULT NULL,
  `parent` varchar(25) DEFAULT NULL,
  `flag_active` int(11) DEFAULT NULL,
  `flag_header` int(11) DEFAULT NULL,
  `is_income` int(11) DEFAULT NULL,
  `is_balance_sheet` int(11) DEFAULT NULL,
  `notes` text,
  `def_position` char(1) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `beg_balance` double DEFAULT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_account_setmanufacture_id`
--

LOCK TABLES `mst_account_setmanufacture_id` WRITE;
/*!40000 ALTER TABLE `mst_account_setmanufacture_id` DISABLE KEYS */;
INSERT INTO `mst_account_setmanufacture_id` VALUES ('1-0000','Aktiva','',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1000','Aktiva Lancar','1-0000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1100','Kas / Bank','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1101','Kas Besar','1-1100',1,0,0,1,'Account Kas Utama\r\n','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',20000000),('1-1102','Kas Kecil','1-1100',1,0,0,1,'Account Petty Cash','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',50000),('1-1103','Bank Mandiri','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',150000000),('1-1104','Bank BCA','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',200000000),('1-1105','Bank BNI','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',50000000),('1-1199','Kas Kasir','1-1100',1,0,0,1,'','D','admin','2015-01-07 00:00:00','2015-01-07 00:00:00','admin',2000000),('1-1200','Persediaan','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1201','Persediaan Barang Dagangan','1-1200',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',110800),('1-1299','Persediaan Lain','1-1200',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1300','Piutang','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1301','Piutang Usaha','1-1300',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',4000000),('1-1400','Biaya Dibayar Dimuka','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1401','Uang Muka Konsultan','1-1400',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1499','Uang Muka Lain','1-1400',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1500','Pajak Dibayar Dimuka','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1501','PPN Masukan','1-1500',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1599','Uang Muka Pajak Lain','1-1500',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2000','Aktiva Tetap','1-0000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2100','Tanah dan Bangunan','1-2000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2101','Tanah','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',2000000000),('1-2102','Bangunan','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',500000000),('1-2103','Akumulasi Depr Bangunan','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2104','Inventaris Kantor','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',150000000),('1-2105','Akumulasi Depr Inventaris Kantor','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',14758000),('1-2106','Kendaraan','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',750000000),('1-2107','Akumulasi Depr Kendaraan','1-2100',1,0,0,1,'','D','admin','2014-12-31 00:00:00','2014-12-31 00:00:00','admin',34774200),('1-2198','Aktiva Tetap Lain','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2199','Akumulasi Depr Aktiva Tetap Lain','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-0000','Kewajiban','',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1000','Kewajiban Lancar','2-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1100','Hutang Usaha','2-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1101','Hutang Ke Supplier','2-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',4400000),('2-1102','PPN Keluaran','2-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1200','Hutang Bank','2-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1201','Hutang Bank Jangka Pendek','2-1200',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-2000','Kewajiban Jangka Panjang','2-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-2100','Hutang Bank','2-2000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-2101','Hutang Bank Jangka Panjang','2-2100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-0000','Modal','',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1000','Modal Dasar','3-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1100','Modal Tn A','3-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1101','Modal Disetor','3-1100',1,0,0,1,'','K','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',3871693000),('3-1102','Prive','3-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1199','Ikhtisar Laba / Rugi','3-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-0000','Pendapatan','',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1000','Pendapatan Operasional','4-0000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1100','Penjualan','4-1000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1101','Penjualan Produk','4-1100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1102','Potongan Pembelian','4-1100',1,0,1,0,NULL,'K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1103','Potongan Penjualan','4-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1104','Potongan Pembayaran Hutang','4-1100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1105','Potongan Pembayaran Piutang','4-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1200','Pendapatan Usaha','4-1000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1201','Pendapatan Jasa','4-1200',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1202','Potongan Penjualan Jasa','4-1200',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1203','Pendapatan Penjualan Lainnya','4-1200',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2000','Pendapatan Non Operasional','4-0000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2100','Pendapatan di Luar Usaha','4-2000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2101','Pendapatan Bunga Bank','4-2100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2102','Pendapatan Selisih Kurs','4-2100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-0000','Harga Pokok','',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1000','Harga Pokok Penjualan','5-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1100','Harga Pokok Penjualan Produk','5-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1101','HPP Barang Dagangan','5-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1199','HPP Barang Lainnya','5-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-0000','Biaya','',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1000','Biaya Operasional','6-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1100','Biaya Adm & Umum','6-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1101','Biaya Listrik, Telp & Air','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1102','Biaya Alat Tulis Kantor','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1103','Biaya Bea & Pajak','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1104','Biaya Penyusutan Bangunan','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1105','Biaya Penyusutan Kendaraan','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1106','Biaya Penyusutan Inventaris','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1107','Biaya Angkut','6-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1199','Biaya Adm & Umum Lain','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1200','Biaya Penjualan','6-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1201','Biaya Iklan & Promosi','6-1200',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1202','BIaya Komisi Marketing','6-1200',1,0,1,0,'Komisi Marketing','D','admin','2014-06-11 00:00:00','2014-06-11 00:00:00','admin',0),('6-1299','Biaya Penjualan Lain','6-1200',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-2000','Biaya Non Operasional','6-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-2100','Biaya di Luar Usaha','6-2000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-2101','Biaya Selisih Kurs','6-2100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0);
/*!40000 ALTER TABLE `mst_account_setmanufacture_id` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_save_copy_copy_copy` AFTER INSERT ON `mst_account_setmanufacture_id` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_account, 'Chart Of Account', NEW.created_user, 'Input', NEW.created_date, concat('Input Account Baru - ',NEW.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_update_copy_copy_copy` AFTER UPDATE ON `mst_account_setmanufacture_id` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_delete_copy_copy_copy` AFTER DELETE ON `mst_account_setmanufacture_id` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_account_setmanufacture_int`
--

DROP TABLE IF EXISTS `mst_account_setmanufacture_int`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_account_setmanufacture_int` (
  `id_account` varchar(25) NOT NULL,
  `account_name` varchar(60) DEFAULT NULL,
  `parent` varchar(25) DEFAULT NULL,
  `flag_active` int(11) DEFAULT NULL,
  `flag_header` int(11) DEFAULT NULL,
  `is_income` int(11) DEFAULT NULL,
  `is_balance_sheet` int(11) DEFAULT NULL,
  `notes` text,
  `def_position` char(1) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `beg_balance` double DEFAULT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_account_setmanufacture_int`
--

LOCK TABLES `mst_account_setmanufacture_int` WRITE;
/*!40000 ALTER TABLE `mst_account_setmanufacture_int` DISABLE KEYS */;
INSERT INTO `mst_account_setmanufacture_int` VALUES ('1-0000','Assets','',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1000','Current Assets','1-0000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1100','Cash/Bank','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1101','Main Cash','1-1100',1,0,0,1,'Account Kas Utama\r\n','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',20000000),('1-1102','Petty Cash','1-1100',1,0,0,1,'Account Petty Cash','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',50000),('1-1103','Mandiri Bank','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',150000000),('1-1104','BCA Bank','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',200000000),('1-1105','BNI Bank','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',50000000),('1-1199','Cashier Cash','1-1100',1,0,0,1,'','D','admin','2015-01-07 00:00:00','2015-01-07 00:00:00','admin',2000000),('1-1200','Inventory','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1201','Merchandise Inventory','1-1200',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',110800),('1-1299','Miscellanous Inventory','1-1200',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1300','Trade Bill','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1301','Account Receivables','1-1300',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',4000000),('1-1400','Prepaid Expenses','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1401','Consultant Payment','1-1400',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1499','Others Prepaid','1-1400',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1500','Prepaid VAT','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1501','VAT IN','1-1500',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1599','Prepaid Other Tax','1-1500',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2000','Fixed Assets','1-0000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2100','Land & Building','1-2000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2101','Land','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',2000000000),('1-2102','Building','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',500000000),('1-2103','Building Accumulated Depreciation','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2104','Office Equipment','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',150000000),('1-2105','Office Equip Accumulated Depr','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',14758000),('1-2106','Vehicles','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',750000000),('1-2107','Vehicles Accumulated Depreciation','1-2100',1,0,0,1,'','D','admin','2014-12-31 00:00:00','2014-12-31 00:00:00','admin',34774200),('1-2198','Other Fixed Assets','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2199','Other FA Accumulated Depreciation','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-0000','Liabilities','',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1000','Short Term Liabilities','2-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1100','Trade Payable','2-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1101','Account Payable','2-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',4400000),('2-1102','VAT OUT','2-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1200','Bank Payable','2-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1201','BCA Payable','2-1200',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-2000','Long Term Liabilities','2-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-2100','Bank Payable','2-2000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-2101','BCA Payable','2-2100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-0000','Capital','',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1000','Authorized Capital','3-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1100','Owners Capital','3-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1101','Paid-Up Capital','3-1100',1,0,0,1,'','K','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',3871693000),('3-1102','Prive','3-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1199','Profit-Loss Summary','3-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-0000','Income','',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1000','Operational Income','4-0000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1100','Sales','4-1000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1101','Product Sales','4-1100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1102','Purchase Discount','4-1100',1,0,1,0,NULL,'K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1103','Sales Discount','4-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1104','Account Payable Payment Disc','4-1100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1105','Account Receivable Payment Disc','4-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1200','Operational Revenues','4-1000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1201','Service Revenues','4-1200',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1202','Service Revenues Discount','4-1200',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1203','Other Revenues','4-1200',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2000','Non Operational Income','4-0000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2100','Non Operational Revenues','4-2000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2101','Bank Interest Revenues','4-2100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2102','Exchange Rate Revenue','4-2100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-0000','Cost Of Goods','',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1000','Cost Of Goods Sold','5-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1100','Inventory COGS','5-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1101','Merchandise Inventory COGS','5-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1199','Other Inventory COGS','5-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-0000','Expenses','',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1000','Operational Expenses','6-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1100','Adm & GA Expenses','6-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1101','Electricity, Phone & Water Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1102','Office Supplies Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1103','Tax Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1104','Building Depreciation Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1105','Vehicles Depreciation Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1106','Equipment Depreciation Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1107','Freight','6-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1199','Other Adm & GA Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1200','Sales & Marketing Expense','6-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1201','Advertising & Promotion Expense','6-1200',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1202','Commission Expense','6-1200',1,0,1,0,'Komisi Marketing','D','admin','2014-06-11 00:00:00','2014-06-11 00:00:00','admin',0),('6-1299','Other Marketing Expense','6-1200',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-2000','Non Operational Expense','6-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-2100','Non Operational Cost','6-2000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-2101','Exchange Rate Expense','6-2100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0);
/*!40000 ALTER TABLE `mst_account_setmanufacture_int` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_save_copy_copy1` AFTER INSERT ON `mst_account_setmanufacture_int` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_account, 'Chart Of Account', NEW.created_user, 'Input', NEW.created_date, concat('Input Account Baru - ',NEW.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_update_copy_copy1` AFTER UPDATE ON `mst_account_setmanufacture_int` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_delete_copy_copy1` AFTER DELETE ON `mst_account_setmanufacture_int` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_account_setretail_id`
--

DROP TABLE IF EXISTS `mst_account_setretail_id`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_account_setretail_id` (
  `id_account` varchar(25) NOT NULL,
  `account_name` varchar(60) DEFAULT NULL,
  `parent` varchar(25) DEFAULT NULL,
  `flag_active` int(11) DEFAULT NULL,
  `flag_header` int(11) DEFAULT NULL,
  `is_income` int(11) DEFAULT NULL,
  `is_balance_sheet` int(11) DEFAULT NULL,
  `notes` text,
  `def_position` char(1) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `beg_balance` double DEFAULT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_account_setretail_id`
--

LOCK TABLES `mst_account_setretail_id` WRITE;
/*!40000 ALTER TABLE `mst_account_setretail_id` DISABLE KEYS */;
INSERT INTO `mst_account_setretail_id` VALUES ('1-0000','Aktiva','',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1000','Aktiva Lancar','1-0000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1100','Kas / Bank','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1101','Kas Besar','1-1100',1,0,0,1,'Account Kas Utama\r\n','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',20000000),('1-1102','Kas Kecil','1-1100',1,0,0,1,'Account Petty Cash','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',50000),('1-1103','Bank Mandiri','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',150000000),('1-1104','Bank BCA','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',200000000),('1-1105','Bank BNI','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',50000000),('1-1199','Kas Kasir','1-1100',1,0,0,1,'','D','admin','2015-01-07 00:00:00','2015-01-07 00:00:00','admin',2000000),('1-1200','Persediaan','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1201','Persediaan Barang Dagangan','1-1200',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',110800),('1-1299','Persediaan Lain','1-1200',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1300','Piutang','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1301','Piutang Usaha','1-1300',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',4000000),('1-1400','Biaya Dibayar Dimuka','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1401','Uang Muka Konsultan','1-1400',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1499','Uang Muka Lain','1-1400',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1500','Pajak Dibayar Dimuka','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1501','PPN Masukan','1-1500',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1599','Uang Muka Pajak Lain','1-1500',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2000','Aktiva Tetap','1-0000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2100','Tanah dan Bangunan','1-2000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2101','Tanah','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',2000000000),('1-2102','Bangunan','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',500000000),('1-2103','Akumulasi Depr Bangunan','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2104','Inventaris Kantor','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',150000000),('1-2105','Akumulasi Depr Inventaris Kantor','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',14758000),('1-2106','Kendaraan','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',750000000),('1-2107','Akumulasi Depr Kendaraan','1-2100',1,0,0,1,'','D','admin','2014-12-31 00:00:00','2014-12-31 00:00:00','admin',34774200),('1-2198','Aktiva Tetap Lain','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2199','Akumulasi Depr Aktiva Tetap Lain','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-0000','Kewajiban','',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1000','Kewajiban Lancar','2-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1100','Hutang Usaha','2-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1101','Hutang Ke Supplier','2-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',4400000),('2-1102','PPN Keluaran','2-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1200','Hutang Bank','2-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1201','Hutang Bank Jangka Pendek','2-1200',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-2000','Kewajiban Jangka Panjang','2-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-2100','Hutang Bank','2-2000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-2101','Hutang Bank Jangka Panjang','2-2100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-0000','Modal','',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1000','Modal Dasar','3-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1100','Modal Tn A','3-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1101','Modal Disetor','3-1100',1,0,0,1,'','K','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',3871693000),('3-1102','Prive','3-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1199','Ikhtisar Laba / Rugi','3-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-0000','Pendapatan','',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1000','Pendapatan Operasional','4-0000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1100','Penjualan','4-1000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1101','Penjualan Produk','4-1100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1102','Potongan Pembelian','4-1100',1,0,1,0,NULL,'K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1103','Potongan Penjualan','4-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1104','Potongan Pembayaran Hutang','4-1100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1105','Potongan Pembayaran Piutang','4-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1200','Pendapatan Usaha','4-1000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1201','Pendapatan Jasa','4-1200',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1202','Potongan Penjualan Jasa','4-1200',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1203','Pendapatan Penjualan Lainnya','4-1200',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2000','Pendapatan Non Operasional','4-0000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2100','Pendapatan di Luar Usaha','4-2000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2101','Pendapatan Bunga Bank','4-2100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2102','Pendapatan Selisih Kurs','4-2100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-0000','Harga Pokok','',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1000','Harga Pokok Penjualan','5-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1100','Harga Pokok Penjualan Produk','5-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1101','HPP Barang Dagangan','5-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1199','HPP Barang Lainnya','5-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-0000','Biaya','',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1000','Biaya Operasional','6-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1100','Biaya Adm & Umum','6-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1101','Biaya Listrik, Telp & Air','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1102','Biaya Alat Tulis Kantor','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1103','Biaya Bea & Pajak','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1104','Biaya Penyusutan Bangunan','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1105','Biaya Penyusutan Kendaraan','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1106','Biaya Penyusutan Inventaris','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1107','Biaya Angkut','6-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1199','Biaya Adm & Umum Lain','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1200','Biaya Penjualan','6-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1201','Biaya Iklan & Promosi','6-1200',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1202','BIaya Komisi Marketing','6-1200',1,0,1,0,'Komisi Marketing','D','admin','2014-06-11 00:00:00','2014-06-11 00:00:00','admin',0),('6-1299','Biaya Penjualan Lain','6-1200',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-2000','Biaya Non Operasional','6-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-2100','Biaya di Luar Usaha','6-2000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-2101','Biaya Selisih Kurs','6-2100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0);
/*!40000 ALTER TABLE `mst_account_setretail_id` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_save_copy_copy` AFTER INSERT ON `mst_account_setretail_id` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_account, 'Chart Of Account', NEW.created_user, 'Input', NEW.created_date, concat('Input Account Baru - ',NEW.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_update_copy_copy` AFTER UPDATE ON `mst_account_setretail_id` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_delete_copy_copy` AFTER DELETE ON `mst_account_setretail_id` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_account_setretail_int`
--

DROP TABLE IF EXISTS `mst_account_setretail_int`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_account_setretail_int` (
  `id_account` varchar(25) NOT NULL,
  `account_name` varchar(60) DEFAULT NULL,
  `parent` varchar(25) DEFAULT NULL,
  `flag_active` int(11) DEFAULT NULL,
  `flag_header` int(11) DEFAULT NULL,
  `is_income` int(11) DEFAULT NULL,
  `is_balance_sheet` int(11) DEFAULT NULL,
  `notes` text,
  `def_position` char(1) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `beg_balance` double DEFAULT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_account_setretail_int`
--

LOCK TABLES `mst_account_setretail_int` WRITE;
/*!40000 ALTER TABLE `mst_account_setretail_int` DISABLE KEYS */;
INSERT INTO `mst_account_setretail_int` VALUES ('1-0000','Assets','',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1000','Current Assets','1-0000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1100','Cash/Bank','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1101','Main Cash','1-1100',1,0,0,1,'Account Kas Utama\r\n','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',20000000),('1-1102','Petty Cash','1-1100',1,0,0,1,'Account Petty Cash','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',50000),('1-1103','Mandiri Bank','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',150000000),('1-1104','BCA Bank','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',200000000),('1-1105','BNI Bank','1-1100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',50000000),('1-1199','Cashier Cash','1-1100',1,0,0,1,'','D','admin','2015-01-07 00:00:00','2015-01-07 00:00:00','admin',2000000),('1-1200','Inventory','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1201','Merchandise Inventory','1-1200',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',110800),('1-1299','Miscellanous Inventory','1-1200',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1300','Trade Bill','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1301','Account Receivables','1-1300',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',4000000),('1-1400','Prepaid Expenses','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1401','Consultant Payment','1-1400',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1499','Others Prepaid','1-1400',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1500','Prepaid VAT','1-1000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1501','VAT IN','1-1500',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-1599','Prepaid Other Tax','1-1500',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2000','Fixed Assets','1-0000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2100','Land & Building','1-2000',1,1,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2101','Land','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',2000000000),('1-2102','Building','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',500000000),('1-2103','Building Accumulated Depreciation','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2104','Office Equipment','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',150000000),('1-2105','Office Equip Accumulated Depr','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',14758000),('1-2106','Vehicles','1-2100',1,0,0,1,'','D','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',750000000),('1-2107','Vehicles Accumulated Depreciation','1-2100',1,0,0,1,'','D','admin','2014-12-31 00:00:00','2014-12-31 00:00:00','admin',34774200),('1-2198','Other Fixed Assets','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('1-2199','Other FA Accumulated Depreciation','1-2100',1,0,0,1,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-0000','Liabilities','',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1000','Short Term Liabilities','2-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1100','Trade Payable','2-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1101','Account Payable','2-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',4400000),('2-1102','VAT OUT','2-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1200','Bank Payable','2-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-1201','BCA Payable','2-1200',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-2000','Long Term Liabilities','2-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-2100','Bank Payable','2-2000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('2-2101','BCA Payable','2-2100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-0000','Capital','',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1000','Authorized Capital','3-0000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1100','Owners Capital','3-1000',1,1,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1101','Paid-Up Capital','3-1100',1,0,0,1,'','K','admin','2014-12-30 00:00:00','2014-12-30 00:00:00','admin',3871693000),('3-1102','Prive','3-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('3-1199','Profit-Loss Summary','3-1100',1,0,0,1,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-0000','Income','',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1000','Operational Income','4-0000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1100','Sales','4-1000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1101','Product Sales','4-1100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1102','Purchase Discount','4-1100',1,0,1,0,NULL,'K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1103','Sales Discount','4-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1104','Account Payable Payment Disc','4-1100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1105','Account Receivable Payment Disc','4-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1200','Operational Revenues','4-1000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1201','Service Revenues','4-1200',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1202','Service Revenues Discount','4-1200',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-1203','Other Revenues','4-1200',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2000','Non Operational Income','4-0000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2100','Non Operational Revenues','4-2000',1,1,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2101','Bank Interest Revenues','4-2100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('4-2102','Exchange Rate Revenue','4-2100',1,0,1,0,'','K','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-0000','Cost Of Goods','',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1000','Cost Of Goods Sold','5-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1100','Inventory COGS','5-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1101','Merchandise Inventory COGS','5-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('5-1199','Other Inventory COGS','5-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-0000','Expenses','',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1000','Operational Expenses','6-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1100','Adm & GA Expenses','6-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1101','Electricity, Phone & Water Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1102','Office Supplies Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1103','Tax Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1104','Building Depreciation Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1105','Vehicles Depreciation Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1106','Equipment Depreciation Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1107','Freight','6-1100',1,0,1,0,NULL,'D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1199','Other Adm & GA Expense','6-1100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1200','Sales & Marketing Expense','6-1000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1201','Advertising & Promotion Expense','6-1200',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-1202','Commission Expense','6-1200',1,0,1,0,'Komisi Marketing','D','admin','2014-06-11 00:00:00','2014-06-11 00:00:00','admin',0),('6-1299','Other Marketing Expense','6-1200',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-2000','Non Operational Expense','6-0000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-2100','Non Operational Cost','6-2000',1,1,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0),('6-2101','Exchange Rate Expense','6-2100',1,0,1,0,'','D','Admin','2014-01-01 00:00:00','2014-01-01 00:00:00','Admin',0);
/*!40000 ALTER TABLE `mst_account_setretail_int` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_save_copy` AFTER INSERT ON `mst_account_setretail_int` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_account, 'Chart Of Account', NEW.created_user, 'Input', NEW.created_date, concat('Input Account Baru - ',NEW.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_update_copy` AFTER UPDATE ON `mst_account_setretail_int` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_delete_copy` AFTER DELETE ON `mst_account_setretail_int` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_account, 'Chart Of Account', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Account - ',OLD.account_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_ap_initialbalance`
--

DROP TABLE IF EXISTS `mst_ap_initialbalance`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_ap_initialbalance` (
  `cutoff_date` date DEFAULT NULL,
  `invoice_no` varchar(120) DEFAULT NULL,
  `id_supplier` varchar(30) DEFAULT NULL,
  `amount_of` double DEFAULT NULL,
  `notes` text,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  KEY `service_fkey1` (`id_supplier`),
  CONSTRAINT `mst_ap_initialbalance_ibfk_1` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_ap_initialbalance`
--

LOCK TABLES `mst_ap_initialbalance` WRITE;
/*!40000 ALTER TABLE `mst_ap_initialbalance` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_ap_initialbalance` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_service_save_copy` AFTER INSERT ON `mst_ap_initialbalance` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_supplier, 'A/P Begining Balance', NEW.created_user, 'Input', NEW.created_date, concat('Input New A/P Begining Balance - ',NEW.invoice_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_service_edit_copy` AFTER UPDATE ON `mst_ap_initialbalance` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_supplier, 'A/P Begining Balance', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit New A/P Begining Balance - ',OLD.invoice_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_service_hapus_copy` AFTER DELETE ON `mst_ap_initialbalance` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_supplier, 'A/P Begining Balance ', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Delete New A/P Begining Balance - ',OLD.invoice_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_ar_initialbalance`
--

DROP TABLE IF EXISTS `mst_ar_initialbalance`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_ar_initialbalance` (
  `cutoff_date` date DEFAULT NULL,
  `invoice_no` varchar(120) DEFAULT NULL,
  `id_customer` varchar(30) DEFAULT NULL,
  `amount_of` double DEFAULT NULL,
  `notes` text,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  KEY `service_fkey1` (`id_customer`),
  CONSTRAINT `mst_ar_initialbalance_ibfk_1` FOREIGN KEY (`id_customer`) REFERENCES `mst_customer` (`id_customer`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_ar_initialbalance`
--

LOCK TABLES `mst_ar_initialbalance` WRITE;
/*!40000 ALTER TABLE `mst_ar_initialbalance` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_ar_initialbalance` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_service_save_copy_copy` AFTER INSERT ON `mst_ar_initialbalance` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_customer, 'A/R Begining Balance', NEW.created_user, 'Input', NEW.created_date, concat('Input New A/R Begining Balance - ',NEW.invoice_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_service_edit_copy_copy` AFTER UPDATE ON `mst_ar_initialbalance` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_customer, 'A/R Begining Balance', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit New A/R Begining Balance - ',OLD.invoice_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_service_hapus_copy_copy` AFTER DELETE ON `mst_ar_initialbalance` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_customer, 'A/R Begining Balance ', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Delete New A/R Begining Balance - ',OLD.invoice_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_aset`
--

DROP TABLE IF EXISTS `mst_aset`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_aset` (
  `id_aset` varchar(25) NOT NULL DEFAULT '',
  `id_coa_aset` varchar(30) DEFAULT NULL,
  `id_coa_penyusutan` varchar(30) DEFAULT NULL,
  `id_coa_akumulasi` varchar(30) DEFAULT NULL,
  `id_golongan` varchar(25) DEFAULT NULL,
  `nama` varchar(60) DEFAULT NULL,
  `notes` text,
  `tanggal_perolehan` date DEFAULT NULL,
  `nilai_perolehan` double DEFAULT NULL,
  `sawal_nilai_buku` double DEFAULT NULL,
  `id_department` int(11) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`id_aset`),
  KEY `id_golongan` (`id_golongan`),
  KEY `id_coa_aset` (`id_coa_aset`),
  KEY `id_department` (`id_department`),
  CONSTRAINT `mst_aset_ibfk_1` FOREIGN KEY (`id_golongan`) REFERENCES `mst_golaset` (`id_golongan`) ON UPDATE CASCADE,
  CONSTRAINT `mst_aset_ibfk_2` FOREIGN KEY (`id_department`) REFERENCES `mst_department` (`department_id`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_aset`
--

LOCK TABLES `mst_aset` WRITE;
/*!40000 ALTER TABLE `mst_aset` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_aset` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_insert_aset` AFTER INSERT ON `mst_aset` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_aset, 'Master Aset', NEW.created_user, 'Input', NEW.created_date, concat('Input Master Aset - ',NEW.nama)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_update_aset` AFTER UPDATE ON `mst_aset` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_aset, 'Master Aset', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Master Aset - ',OLD.nama)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_delete_aset` AFTER DELETE ON `mst_aset` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_aset, 'Master Aset', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Master Aset - ',OLD.nama)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_assembly_conversion`
--

DROP TABLE IF EXISTS `mst_assembly_conversion`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_assembly_conversion` (
  `no_assembly` varchar(60) NOT NULL,
  `id_cost` varchar(30) DEFAULT NULL,
  `qty_hour` double DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` text,
  `total_cost` decimal(10,0) DEFAULT NULL,
  KEY `no_bom` (`no_assembly`),
  KEY `id_cost` (`id_cost`),
  CONSTRAINT `mst_assembly_conversion_ibfk_2` FOREIGN KEY (`id_cost`) REFERENCES `mst_standard_cost` (`id_cost`) ON UPDATE CASCADE,
  CONSTRAINT `mst_assembly_conversion_ibfk_3` FOREIGN KEY (`no_assembly`) REFERENCES `mst_assembly_head` (`no_assembly`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_assembly_conversion`
--

LOCK TABLES `mst_assembly_conversion` WRITE;
/*!40000 ALTER TABLE `mst_assembly_conversion` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_assembly_conversion` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_assembly_head`
--

DROP TABLE IF EXISTS `mst_assembly_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_assembly_head` (
  `no_assembly` varchar(60) NOT NULL,
  `id_item` varchar(60) DEFAULT NULL,
  `notes` text,
  `qty_item_production` double DEFAULT NULL,
  `id_unit` varchar(30) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`no_assembly`),
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  CONSTRAINT `mst_assembly_head_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `mst_assembly_head_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_assembly_head`
--

LOCK TABLES `mst_assembly_head` WRITE;
/*!40000 ALTER TABLE `mst_assembly_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_assembly_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_assembly_sparepart`
--

DROP TABLE IF EXISTS `mst_assembly_sparepart`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_assembly_sparepart` (
  `no_assembly` varchar(60) NOT NULL,
  `id_item` varchar(60) DEFAULT NULL,
  `qty_material` double DEFAULT NULL,
  `id_unit` varchar(60) DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` text,
  `total_cost` double DEFAULT NULL,
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  KEY `no_bom` (`no_assembly`),
  CONSTRAINT `mst_assembly_sparepart_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `mst_assembly_sparepart_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `mst_assembly_sparepart_ibfk_3` FOREIGN KEY (`no_assembly`) REFERENCES `mst_assembly_head` (`no_assembly`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_assembly_sparepart`
--

LOCK TABLES `mst_assembly_sparepart` WRITE;
/*!40000 ALTER TABLE `mst_assembly_sparepart` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_assembly_sparepart` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_bom_conversion`
--

DROP TABLE IF EXISTS `mst_bom_conversion`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_bom_conversion` (
  `no_bom` varchar(60) NOT NULL,
  `id_cost` varchar(30) DEFAULT NULL,
  `qty_hour` double DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` text,
  `total_cost` decimal(10,0) DEFAULT NULL,
  KEY `no_bom` (`no_bom`),
  KEY `id_cost` (`id_cost`),
  CONSTRAINT `mst_bom_conversion_ibfk_1` FOREIGN KEY (`no_bom`) REFERENCES `mst_bom_head` (`no_bom`) ON UPDATE CASCADE,
  CONSTRAINT `mst_bom_conversion_ibfk_2` FOREIGN KEY (`id_cost`) REFERENCES `mst_standard_cost` (`id_cost`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_bom_conversion`
--

LOCK TABLES `mst_bom_conversion` WRITE;
/*!40000 ALTER TABLE `mst_bom_conversion` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_bom_conversion` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_bom_head`
--

DROP TABLE IF EXISTS `mst_bom_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_bom_head` (
  `no_bom` varchar(60) NOT NULL,
  `id_item` varchar(60) DEFAULT NULL,
  `notes` text,
  `qty_item_production` double DEFAULT NULL,
  `id_unit` varchar(30) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `total_cost` double DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`no_bom`),
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  CONSTRAINT `mst_bom_head_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `mst_bom_head_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_bom_head`
--

LOCK TABLES `mst_bom_head` WRITE;
/*!40000 ALTER TABLE `mst_bom_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_bom_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_bom_material`
--

DROP TABLE IF EXISTS `mst_bom_material`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_bom_material` (
  `no_bom` varchar(60) NOT NULL,
  `id_item` varchar(60) DEFAULT NULL,
  `qty_material` double DEFAULT NULL,
  `id_unit` varchar(60) DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` text,
  `total_cost` double DEFAULT NULL,
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  KEY `no_bom` (`no_bom`),
  CONSTRAINT `mst_bom_material_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `mst_bom_material_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `mst_bom_material_ibfk_3` FOREIGN KEY (`no_bom`) REFERENCES `mst_bom_head` (`no_bom`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_bom_material`
--

LOCK TABLES `mst_bom_material` WRITE;
/*!40000 ALTER TABLE `mst_bom_material` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_bom_material` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_bom_wip`
--

DROP TABLE IF EXISTS `mst_bom_wip`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_bom_wip` (
  `no_bom` varchar(30) NOT NULL,
  `id_item` varchar(120) DEFAULT NULL,
  `qty_material` double DEFAULT NULL,
  `id_unit` varchar(255) DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` text,
  `total_cost` double DEFAULT NULL,
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  KEY `no_bom` (`no_bom`),
  CONSTRAINT `mst_bom_wip_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `mst_bom_wip_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `mst_bom_wip_ibfk_3` FOREIGN KEY (`no_bom`) REFERENCES `mst_bom_head` (`no_bom`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_bom_wip`
--

LOCK TABLES `mst_bom_wip` WRITE;
/*!40000 ALTER TABLE `mst_bom_wip` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_bom_wip` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_brand`
--

DROP TABLE IF EXISTS `mst_brand`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_brand` (
  `id_brand` varchar(30) NOT NULL,
  `name_brand` varchar(120) DEFAULT NULL,
  `description` text,
  PRIMARY KEY (`id_brand`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_brand`
--

LOCK TABLES `mst_brand` WRITE;
/*!40000 ALTER TABLE `mst_brand` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_brand` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_city`
--

DROP TABLE IF EXISTS `mst_city`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_city` (
  `city_code` varchar(4) NOT NULL,
  `state_code` varchar(2) DEFAULT NULL,
  `city_name` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`city_code`),
  KEY `state_code` (`state_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_city`
--

LOCK TABLES `mst_city` WRITE;
/*!40000 ALTER TABLE `mst_city` DISABLE KEYS */;
INSERT INTO `mst_city` VALUES ('0101','01','Kab. Kepulauan Seribu'),('0160','01','Kota Jakarta Pusat'),('0161','01','Kota Jakarta Utara'),('0162','01','Kota Jakarta Barat'),('0163','01','Kota Jakarta Selatan'),('0164','01','Kota Jakarta Timur'),('0205','02','Kab. Bogor'),('0206','02','Kab. Sukabumi'),('0207','02','Kab. Cianjur'),('0208','02','Kab. Bandung'),('0210','02','Kab. Sumedang'),('0211','02','Kab. Garut'),('0212','02','Kab. Tasikmalaya'),('0214','02','Kab. Ciamis'),('0215','02','Kab. Kuningan'),('0216','02','Kab. Majalengka'),('0217','02','Kab. Cirebon'),('0218','02','Kab. Indramayu'),('0219','02','Kab. Subang'),('0220','02','Kab. Purwakarta'),('0221','02','Kab. Karawang'),('0222','02','Kab. Bekasi'),('0223','02','Kab. Bandung Barat'),('0260','02','Kota Bandung'),('0261','02','Kota Bogor'),('0262','02','Kota Sukabumi'),('0263','02','Kota Cirebon'),('0265','02','Kota Bekasi'),('0266','02','Kota Depok'),('0267','02','Kota Cimahi'),('0268','02','Kota Tasikmalaya'),('0269','02','Kota Banjar'),('0301','03','Kab. Cilacap'),('0302','03','Kab. Banyumas'),('0303','03','Kab. Purbalingga'),('0304','03','Kab. Banjarnegara'),('0305','03','Kab. Kebumen'),('0306','03','Kab. Purworejo'),('0307','03','Kab. Wonosobo'),('0308','03','Kab. Magelang'),('0309','03','Kab. Boyolali'),('0310','03','Kab. Klaten'),('0311','03','Kab. Sukoharjo'),('0312','03','Kab. Wonogiri'),('0313','03','Kab. Karanganyar'),('0314','03','Kab. Sragen'),('0315','03','Kab. Grobogan'),('0316','03','Kab. Blora'),('0317','03','Kab. Rembang'),('0318','03','Kab. Pati'),('0319','03','Kab. Kudus'),('0320','03','Kab. Jepara'),('0321','03','Kab. Demak'),('0322','03','Kab. Semarang'),('0323','03','Kab. Temanggung'),('0324','03','Kab. Kendal'),('0325','03','Kab. Batang'),('0326','03','Kab. Pekalongan'),('0327','03','Kab. Pemalang'),('0328','03','Kab. Tegal'),('0329','03','Kab. Brebes'),('0360','03','Kota Magelang'),('0361','03','Kota Surakarta'),('0362','03','Kota Salatiga'),('0363','03','Kota Semarang'),('0364','03','Kota Pekalongan'),('0365','03','Kota Tegal'),('0401','04','Kab. Bantul'),('0402','04','Kab. Sleman'),('0403','04','Kab. Gunung Kidul'),('0404','04','Kab. Kulon Progo'),('0460','04','Kota Yogyakarta'),('0501','05','Kab. Gresik'),('0502','05','Kab. Sidoarjo'),('0503','05','Kab. Mojokerto'),('0504','05','Kab. Jombang'),('0505','05','Kab. Bojonegoro'),('0506','05','Kab. Tuban'),('0507','05','Kab. Lamongan'),('0508','05','Kab. Madiun'),('0509','05','Kab. Ngawi'),('0510','05','Kab. Magetan'),('0511','05','Kab. Ponorogo'),('0512','05','Kab. Pacitan'),('0513','05','Kab. Kediri'),('0514','05','Kab. Nganjuk'),('0515','05','Kab. Blitar'),('0516','05','Kab. Tulungagung'),('0517','05','Kab. Trenggalek'),('0518','05','Kab. Malang'),('0519','05','Kab. Pasuruan'),('0520','05','Kab. Probolinggo'),('0521','05','Kab. Lumajang'),('0522','05','Kab. Bondowoso'),('0523','05','Kab. Situbondo'),('0524','05','Kab. Jember'),('0525','05','Kab. Banyuwangi'),('0526','05','Kab. Pamekasan'),('0527','05','Kab. Sampang'),('0528','05','Kab. Sumenep'),('0529','05','Kab. Bangkalan'),('0560','05','Kota Surabaya'),('0561','05','Kota Malang'),('0562','05','Kota Madiun'),('0563','05','Kota Kediri'),('0564','05','Kota Mojokerto'),('0565','05','Kota Blitar'),('0566','05','Kota Pasuruan'),('0567','05','Kota Probolinggo'),('0568','05','Kota Batu'),('0601','06','Kab. Aceh Besar'),('0602','06','Kab. Pidie'),('0603','06','Kab. Aceh Utara'),('0604','06','Kab. Aceh Timur'),('0605','06','Kab. Aceh Tengah'),('0606','06','Kab. Aceh Barat'),('0607','06','Kab. Aceh Selatan'),('0608','06','Kab. Aceh Tenggara'),('0611','06','Kab. Simeulue'),('0612','06','Kab. Bireuen'),('0613','06','Kab. Aceh Singkil'),('0614','06','Kab. Aceh Tamiang'),('0615','06','Kab. Nagan Raya'),('0616','06','Kab. Aceh Jaya'),('0617','06','Kab. Aceh Barat Daya'),('0618','06','Kab. Gayo Lues'),('0619','06','Kab. Bener Meriah'),('0620','06','Kab. Pidie Jaya'),('0660','06','Kota Sabang'),('0661','06','Kota Banda Aceh'),('0662','06','Kota Lhokseumawe'),('0663','06','Kota Langsa'),('0664','06','Kota Subulussalam'),('0701','07','Kab. Deli Serdang'),('0702','07','Kab. Langkat'),('0703','07','Kab. Karo'),('0704','07','Kab. Simalungun'),('0705','07','Kab. Dairi'),('0706','07','Kab. Asahan'),('0707','07','Kab. Labuhan Batu'),('0708','07','Kab. Tapanuli Utara'),('0709','07','Kab. Tapanuli Tengah'),('0710','07','Kab. Tapanuli Selatan'),('0711','07','Kab. Nias'),('0715','07','Kab. Mandailing Natal'),('0716','07','Kab. Toba Samosir'),('0717','07','Kab. Nias Selatan'),('0718','07','Kab. Pak pak Bharat'),('0719','07','Kab. Humbang Hasundutan'),('0720','07','Kab. Samosir'),('0721','07','Kab. Serdang Bedagai'),('0722','07','Kab. Batu Bara'),('0723','07','Kab. Padang Lawas Utara'),('0724','07','Kab. Padang Lawas'),('0725','07','Kab. Labuhanbatu Utara'),('0726','07','Kab. Labuhanbatu Selatan'),('0727','07','Kab. Nias Barat'),('0728','07','Kab. Nias Utara'),('0760','07','Kota Medan'),('0761','07','Kota Binjai'),('0762','07','Kota Tebing Tinggi'),('0763','07','Kota Pematang Siantar'),('0764','07','Kota Tanjung Balai'),('0765','07','Kota Sibolga'),('0766','07','Kota Padang Sidempuan'),('0767','07','Kota Gunung Sitoli'),('0801','08','Kab. Agam'),('0802','08','Kab. Pasaman'),('0803','08','Kab. Lima Puluh Koto'),('0804','08','Kab. Solok'),('0805','08','Kab. Padang Pariaman'),('0806','08','Kab. Pesisir Selatan'),('0807','08','Kab. Tanah Datar'),('0808','08','Kab. Sawahlunto/ Sijunjung'),('0810','08','Kab. Kepulauan Mentawai'),('0811','08','Kab. Solok Selatan'),('0812','08','Kab. Dharmas Raya'),('0813','08','Kab. Pasaman Barat'),('0860','08','Kota Bukittinggi'),('0861','08','Kota Padang'),('0862','08','Kota Padang Panjang'),('0863','08','Kota Sawah Lunto'),('0864','08','Kota Solok'),('0865','08','Kota Payakumbuh'),('0866','08','Kota Pariaman'),('0901','09','Kab. Kampar'),('0902','09','Kab. Bengkalis'),('0904','09','Kab. Indragiri Hulu'),('0905','09','Kab. Indragiri Hilir'),('0908','09','Kab. Pelalawan'),('0909','09','Kab. Rokan Hulu'),('0910','09','Kab. Rokan Hilir'),('0911','09','Kab. Siak'),('0912','09','Kab. Kep. Meranti'),('0914','09','Kab. Kuantan Singingi'),('0960','09','Kota Pekanbaru'),('0962','09','Kota Dumai'),('1001','10','Kab. Batang Hari'),('1002','10','Kab. Bungo'),('1003','10','Kab. Sarolangun'),('1004','10','Kab. Tanjung Jabung Barat'),('1005','10','Kab. Kerinci'),('1006','10','Kab. Tebo'),('1007','10','Kab. Muaro Jambi'),('1008','10','Kab. Tanjung Jabung Timur'),('1009','10','Kab. Merangin'),('1060','10','Kota Jambi'),('1061','10','Kota. Sungai Penuh'),('1101','11','Kab. Musi Banyu Asin'),('1102','11','Kab. Ogan Komering Ilir'),('1103','11','Kab. Ogan Komering Ulu'),('1104','11','Kab. Muara Enim'),('1105','11','Kab. Lahat'),('1106','11','Kab. Musi Rawas'),('1107','11','Kab. Banyuasin'),('1108','11','Kab. Ogan Komering Ulu Timur'),('1109','11','Kab. Ogan Komering Ulu Sel.'),('1110','11','Kab. Ogan Ilir'),('1111','11','Kab. Empat Lawang'),('1160','11','Kota Palembang'),('1161','11','Kota Prabumulih'),('1162','11','Kota Lubuk Linggau'),('1163','11','Kota Pagar Alam'),('1201','12','Kab. Lampung Selatan'),('1202','12','Kab. Lampung Tengah'),('1203','12','Kab. Lampung Utara'),('1204','12','Kab. Lampung Barat'),('1205','12','Kab. Tulang Bawang'),('1206','12','Kab. Tanggamus'),('1207','12','Kab. Lampung Timur'),('1208','12','Kab. Way Kanan'),('1209','12','Kab. Pesawaran'),('1210','12','Kab. Pringsewu'),('1211','12','Kab. Mesuji'),('1212','12','Kab. Tulang Bawang Barat'),('1260','12','Kota Bandar Lampung'),('1261','12','Kota Metro'),('1301','13','Kab. Sambas'),('1302','13','Kab. Pontianak'),('1303','13','Kab. Sanggau'),('1304','13','Kab. Sintang'),('1305','13','Kab. Kapuas Hulu'),('1306','13','Kab. Ketapang'),('1308','13','Kab. Bengkayang'),('1309','13','Kab. Landak'),('1310','13','Kab. Sekadau'),('1311','13','Kab. Melawi'),('1312','13','Kab. Kayong Utara'),('1313','13','Kab. Kubu Raya'),('1360','13','Kota Pontianak'),('1361','13','Kota Singkawang'),('1401','14','Kab. Kapuas'),('1402','14','Kab. Barito Selatan'),('1403','14','Kab. Barito Utara'),('1404','14','Kab. Kotawaringin Timur'),('1405','14','Kab. Kotawaringin Barat'),('1406','14','Kab. Katingan'),('1407','14','Kab. Seruyan'),('1408','14','Kab. Sukamara'),('1409','14','Kab. Lamandau'),('1410','14','Kab. Gunung Mas'),('1411','14','Kab. Pulang Pisau'),('1412','14','Kab. Murung Raya'),('1413','14','Kab. Barito Timur'),('1460','14','Kota Palangka Raya'),('1501','15','Kab. Banjar'),('1502','15','Kab. Tanah Laut'),('1503','15','Kab. Barito Kuala'),('1504','15','Kab. Tapin'),('1505','15','Kab. Hulu Sungai Selatan'),('1506','15','Kab. Hulu Sungai Tengah'),('1507','15','Kab. Hulu Sungai Utara'),('1508','15','Kab. Tabalong'),('1509','15','Kab. Kota Baru'),('1510','15','Kab. Balangan'),('1511','15','Kab. Tanah Bumbu'),('1560','15','Kota Banjarmasin'),('1561','15','Kota Banjarbaru'),('1701','17','Kab. Bolaang Mengondow'),('1702','17','Kab. Minahasa'),('1703','17','Kab. Kepulauan Sangihe'),('1704','17','Kab. Kepulauan Talaud'),('1705','17','Kab. Minahasa Selatan'),('1706','17','Kab. Minahasa Utara'),('1708','17','Kab. Bolaang Mongondow Utara'),('1709','17','Kab. Siau Tagulandang Biaro'),('1710','17','Kab. Minahasa Tenggara'),('1711','17','Kab. Bolaang Mongondow Timur'),('1712','17','Kab. Bolaang Mongondow Selatan'),('1760','17','Kota Manado'),('1761','17','Kota Bitung'),('1762','17','Kota Tomohon'),('1763','17','Kota Kotamobagu'),('1801','18','Kab. Banggai Kepulauan'),('1802','18','Kab. Donggala'),('1803','18','Kab. Poso'),('1804','18','Kab. Banggai'),('1805','18','Kab. Buol'),('1806','18','Kab. Toli-Toli'),('1807','18','Kab. Morowali'),('1808','18','Kab. Parigi Moutong'),('1809','18','Kab. Tojo Una-Una'),('1810','18','Kab. Sigi'),('1860','18','Kota Palu'),('1901','19','Kab. Maros'),('1902','19','Kab. Pangkajene Kepulauan'),('1903','19','Kab. Gowa'),('1904','19','Kab. Takalar'),('1905','19','Kab. Jeneponto'),('1906','19','Kab. Barru'),('1907','19','Kab. Bone'),('1908','19','Kab. Wajo'),('1909','19','Kab. Soppeng'),('1910','19','Kab. Bantaeng'),('1911','19','Kab. Bulukumba'),('1912','19','Kab. Sinjai'),('1913','19','Kab. Selayar'),('1914','19','Kab. Pinrang'),('1915','19','Kab. Sidenreng Rappang'),('1916','19','Kab. Enrekang'),('1917','19','Kab. Luwu'),('1918','19','Kab. Tana Toraja'),('1924','19','Kab. Luwu Utara'),('1926','19','Kab. Luwu Timur'),('1927','19','Kab. Tana Toraja Utara'),('1960','19','Kota Makassar'),('1961','19','Kota Pare-Pare'),('1962','19','Kota Palopo'),('2001','20','Kab. Konawe'),('2002','20','Kab. Muna'),('2003','20','Kab. Buton'),('2004','20','Kab. Kolaka'),('2005','20','Kab. Konawe Selatan'),('2006','20','Kab. Wakatobi'),('2007','20','Kab. Bombana'),('2008','20','Kab. Kolaka Utara'),('2009','20','Kab. Konawe Utara'),('2010','20','Kab. Buton Utara'),('2060','20','Kota Kendari'),('2061','20','Kota Baubau'),('2101','21','Kab. Maluku Tengah'),('2102','21','Kab. Maluku Tenggara'),('2103','21','Kab. Buru'),('2104','21','Kab. Maluku Tenggara Barat'),('2105','21','Kab. Seram Bagian Barat'),('2106','21','Kab. Seram Bagian Timur'),('2107','21','Kab. Kepulauan Aru'),('2108','21','Kab. Maluku Barat Daya'),('2109','21','Kab. Buru Selatan'),('2160','21','Kota Ambon'),('2161','21','Kota Tual'),('2201','22','Kab. Buleleng'),('2202','22','Kab. Jembrana'),('2203','22','Kab. Tabanan'),('2204','22','Kab. Badung'),('2205','22','Kab. Gianyar'),('2206','22','Kab. Klungkung'),('2207','22','Kab. Bangli'),('2208','22','Kab. Karang Asem'),('2260','22','Kota Denpasar'),('2301','23','Kab. Lombok Barat'),('2302','23','Kab. Lombok Tengah'),('2303','23','Kab. Lombok Timur'),('2304','23','Kab. Sumbawa'),('2305','23','Kab. Dompu'),('2306','23','Kab. Bima'),('2307','23','Kab. Sumbawa Barat'),('2308','23','Kab. Lombok Utara'),('2360','23','Kota Mataram'),('2361','23','Kota Bima'),('2401','24','Kab. Kupang'),('2403','24','Kab. Timor Tengah Selatan'),('2404','24','Kab. Timor Tengah Utara'),('2405','24','Kab. Belu'),('2406','24','Kab. Alor'),('2407','24','Kab. Flores Timur'),('2408','24','Kab. Sikka'),('2409','24','Kab. Ende'),('2410','24','Kab. Ngada'),('2411','24','Kab. Manggarai'),('2412','24','Kab. Sumba Timur'),('2413','24','Kab. Sumba Barat'),('2414','24','Kab. Lembata'),('2415','24','Kab. Rote-Ndao'),('2416','24','Kab. Manggarai Barat'),('2417','24','Kab. Nagekeo'),('2418','24','Kab. Sumba Tengah'),('2419','24','Kab. Sumba Barat Daya'),('2420','24','Kab. Manggarai Timur'),('2421','24','Kab. Sabu Raijua'),('2460','24','Kota Kupang'),('2501','25','Kab. Jayapura'),('2502','25','Kab. Biak Numfor'),('2503','25','Kab. Yapen Waropen'),('2507','25','Kab. Merauke'),('2508','25','Kab. Jayawijaya'),('2509','25','Kab. Nabire'),('2510','25','Kab. Paniai'),('2511','25','Kab. Puncak Jaya'),('2512','25','Kab. Mimika'),('2513','25','Kab. Boven Digoel'),('2514','25','Kab. Mappi'),('2515','25','Kab. Asmat'),('2516','25','Kab. Yahukimo'),('2517','25','Kab. Pegunungan Bintang'),('2518','25','Kab. Tolikara'),('2519','25','Kab. Sarmi'),('2520','25','Kab. Keerom'),('2526','25','Kab. Waropen'),('2527','25','Kab. Supiori'),('2528','25','Kab. Memberamo Raya'),('2529','25','Kab. Nduga Tengah'),('2530','25','Kab. Lanny Jaya'),('2531','25','Kab. Mamberamo Tengah'),('2532','25','Kab. Yalimo'),('2533','25','Kab. Puncak'),('2534','25','Kab. Dogiyai'),('2535','25','Kab. Deiyai'),('2536','25','Kab. Intan Jaya'),('2560','25','Kota Jayapura'),('2601','26','Kab. Bengkulu Utara'),('2602','26','Kab. Rejang Lebong'),('2603','26','Kab. Bengkulu Selatan'),('2604','26','Kab. Muko-muko'),('2605','26','Kab. Kepahiang'),('2606','26','Kab. Lebong'),('2607','26','Kab. Kaur'),('2608','26','Kab. Seluma'),('2609','26','Kab. Bengkulu Tengah'),('2660','26','Kota Bengkulu'),('2702','27','Kab. Halmahera Tengah'),('2703','27','Kab. Halmahera Barat'),('2704','27','Kab. Halmahera Utara'),('2705','27','Kab. Halmahera Selatan'),('2706','27','Kab. Halmahera Timur'),('2707','27','Kab. Kepulauan Sula'),('2708','27','Kab. Kepulauan Morotai'),('2760','27','Kota Ternate'),('2761','27','Kota Tidore Kepulauan'),('2901','29','Kab. Bangka'),('2902','29','Kab. Belitung'),('2903','29','Kab. Bangka Tengah'),('2904','29','Kab. Bangka Barat'),('2905','29','Kab. Bangka Selatan'),('2906','29','Kab. Belitung Timur'),('2960','29','Kota Pangkalpinang'),('3001','30','Kab. Boalemo'),('3002','30','Kab. Gorontalo'),('3003','30','Kab. Pohuwato'),('3004','30','Kab. Bone Bolango'),('3005','30','Kab. Gorontalo Utara'),('3060','30','Kota Gorontalo'),('3101','31','Kab. Bintan'),('3102','31','Kab. Karimun'),('3103','31','Kab. Natuna'),('3104','31','Kab. Lingga'),('3105','31','Kab. Kep. Anambas'),('3160','31','Kota Batam'),('3161','31','Kota Tanjungpinang'),('3201','32','Kab. Fak-Fak'),('3202','32','Kab. Kaimana'),('3203','32','Kab. Teluk Wondama'),('3204','32','Kab. Teluk Bintuni'),('3205','32','Kab. Manokwari'),('3206','32','Kab. Sorong Selatan'),('3207','32','Kab. Sorong'),('3208','32','Kab. Kep. Raja Ampat'),('3209','32','Kab. Tambrauw'),('3210','32','Kab. Maybrat'),('3260','32','Kota Sorong'),('3301','33','Kab. Mamuju'),('3302','33','Kab. Mamuju Utara'),('3303','33','Kab. Polewali Mandar'),('3304','33','Kab. Mamasa'),('3305','33','Kab. Majene'),('3601','28','Kab. Pandeglang'),('3602','28','Kab. Lebak'),('3603','28','Kab. Tangerang'),('3604','28','Kab. Serang'),('3671','28','Kota Tangerang'),('3672','28','Kota Cilegon'),('3673','28','Kota Serang'),('3674','28','Kota Tangerang Selatan'),('6401','16','Kab. Pasir'),('6402','16','Kab. Kutai Barat'),('6403','16','Kab. Kutai Kartanegara'),('6404','16','Kab. Kutai Timur'),('6405','16','Kab. Berau'),('6406','16','Kab. Malinau'),('6407','16','Kab. Bulungan'),('6408','16','Kab. Nunukan'),('6409','16','Kab. Penajam Paser Utara'),('6410','16','Kab. Tana Tidung'),('6471','16','Kota Balikpapan'),('6472','16','Kota Samarinda'),('6473','16','Kota Tarakan'),('6474','16','Kota Bontang');
/*!40000 ALTER TABLE `mst_city` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_company`
--

DROP TABLE IF EXISTS `mst_company`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_company` (
  `company_code` varchar(60) NOT NULL,
  `company_name` varchar(200) DEFAULT NULL,
  `address` text,
  `city` varchar(200) DEFAULT NULL,
  `phone` varchar(255) DEFAULT NULL,
  `email` varchar(200) DEFAULT NULL,
  `website` varchar(200) DEFAULT NULL,
  `flag_active` int(11) DEFAULT NULL,
  `flag_status` int(11) DEFAULT NULL,
  `flag_type` int(11) DEFAULT NULL,
  `serial1` varchar(250) DEFAULT NULL,
  `serial2` varchar(250) DEFAULT NULL,
  `serial3` varchar(250) DEFAULT NULL,
  `serial4` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`company_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_company`
--

LOCK TABLES `mst_company` WRITE;
/*!40000 ALTER TABLE `mst_company` DISABLE KEYS */;
INSERT INTO `mst_company` VALUES ('HEAD-Surabaya','TOKO EMAS SABAR','Jl. Gajah Mada 95, Genteng','Banyuwangi','(0333) 845890','','',1,1,1,'','','','');
/*!40000 ALTER TABLE `mst_company` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_currency`
--

DROP TABLE IF EXISTS `mst_currency`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_currency` (
  `id_currency` varchar(25) NOT NULL DEFAULT '',
  `currency` varchar(25) DEFAULT NULL,
  `nation` varchar(25) DEFAULT NULL,
  `flag_default` smallint(1) DEFAULT NULL,
  `notes` text,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id_currency`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_currency`
--

LOCK TABLES `mst_currency` WRITE;
/*!40000 ALTER TABLE `mst_currency` DISABLE KEYS */;
INSERT INTO `mst_currency` VALUES ('$US','Dollar Amerika','International',0,'Mata Uang Dollar \r\n','admin','2014-05-30 00:00:00','admin','2016-01-19 00:00:00'),('EUR','Euro','Negara Uni Eropa',0,'Mata Uang Euro','admin','2016-01-19 00:00:00','admin','2016-01-19 00:00:00'),('IDR','Indonesian Rupiah','Indonesia',1,'Mata Uang Rupiah','admin','2014-01-01 00:00:00','admin','2014-01-01 00:00:00');
/*!40000 ALTER TABLE `mst_currency` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_currency_save` AFTER INSERT ON `mst_currency` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_currency, 'Master Currency', NEW.created_user, 'Input', NEW.created_date, concat('Input Master Currency Baru - ',NEW.currency)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_currency_edit` AFTER UPDATE ON `mst_currency` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_currency, 'Master Currency', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Master Currency - ',OLD.currency)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_currency_hapus` AFTER DELETE ON `mst_currency` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_currency, 'Master Currency', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Master Currency - ',OLD.currency)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_customer`
--

DROP TABLE IF EXISTS `mst_customer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_customer` (
  `id_customer` varchar(25) NOT NULL,
  `first_name` varchar(200) DEFAULT NULL,
  `last_name` varchar(200) DEFAULT NULL,
  `address` varchar(400) DEFAULT NULL,
  `city` varchar(120) DEFAULT NULL,
  `state` varchar(255) DEFAULT NULL,
  `postal_code` varchar(25) DEFAULT NULL,
  `country` varchar(120) DEFAULT NULL,
  `phone1` varchar(120) DEFAULT NULL,
  `phone2` varchar(120) DEFAULT NULL,
  `phone3` varchar(120) DEFAULT NULL,
  `fax` varchar(60) DEFAULT NULL,
  `email` varchar(120) DEFAULT NULL,
  `website` varchar(120) DEFAULT NULL,
  `photo` text,
  `credit_limit` double DEFAULT NULL,
  `notes` text,
  `id_account` varchar(25) NOT NULL,
  `def_due_date` date DEFAULT NULL,
  `def_payment_method` int(11) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `modified_user` varchar(120) NOT NULL,
  `created_date` datetime NOT NULL,
  `modified_date` datetime NOT NULL,
  `created_user` varchar(120) NOT NULL,
  `ar_balance` double(19,0) DEFAULT NULL,
  `id_barcode` varchar(200) DEFAULT NULL,
  `flag_credit_limit` int(11) DEFAULT NULL,
  UNIQUE KEY `id_customer` (`id_customer`) USING BTREE,
  KEY `id_account` (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_customer`
--

LOCK TABLES `mst_customer` WRITE;
/*!40000 ALTER TABLE `mst_customer` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_customer` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_cust_bef_save` BEFORE INSERT ON `mst_customer`
FOR EACH ROW begin
declare var_status integer;
declare var_id_account varchar(30);
declare var_no varchar(120);

if NEW.id_account is null then
     select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_credit_sales';
     set NEW.id_account = var_id_account;
end if;

if NEW.id_customer = '' then
select func_nomor('MASTER CUSTOMER') into var_no;
set NEW.id_customer = var_no;
set NEW.photo = '';
set NEW.credit_limit = 0;
set NEW.status = 1;
set NEW.flag_credit_limit = 0;
set NEW.ar_balance=0;
set NEW.def_payment_method=2;

end if;
end */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_cust_save` AFTER INSERT ON `mst_customer` FOR EACH ROW begin

if NEW.created_user = 'import' then
       update control_no_master set nourut = (select func_update_nomor('MASTER CUSTOMER')) where form = 'MASTER CUSTOMER';
end if;

insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_customer, 'Master Customer', NEW.created_user, 'Input', NEW.created_date, concat('Input Master Customer Baru - ',concat(NEW.first_name,' ',NEW.last_name)));

end */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_cust_edit` AFTER UPDATE ON `mst_customer` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_customer, 'Master Customer', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Master Customer - ',concat(OLD.first_name,' ',OLD.last_name))) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_cust_hapus` AFTER DELETE ON `mst_customer` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_customer, 'Master Customer', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Master Customer - ',concat(OLD.first_name,' ',OLD.last_name))) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_department`
--

DROP TABLE IF EXISTS `mst_department`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_department` (
  `department_id` int(11) NOT NULL AUTO_INCREMENT,
  `department_name` varchar(100) NOT NULL,
  `flag_active` int(11) DEFAULT NULL,
  `notes` text,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`department_id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_department`
--

LOCK TABLES `mst_department` WRITE;
/*!40000 ALTER TABLE `mst_department` DISABLE KEYS */;
INSERT INTO `mst_department` VALUES (1,'Sales',1,'Sales Department','admin','2014-10-20 18:22:44','2014-10-20 18:22:49','admin'),(2,'FA',1,'Finance and Accounting Department','admin','2014-10-20 18:22:44','2014-10-20 18:22:44','admin'),(3,'GA',1,'GA Department','admin','2014-10-20 18:22:44','2014-10-20 18:22:44','admin'),(4,'Warehouse',1,'Warehouse Department','admin','2014-10-20 18:22:44','2014-10-20 18:22:44','admin'),(5,'Purchasing',1,'Purchasing Department','admin','2014-10-20 18:22:44','2014-10-20 18:22:44','admin');
/*!40000 ALTER TABLE `mst_department` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_department_produksi`
--

DROP TABLE IF EXISTS `mst_department_produksi`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_department_produksi` (
  `department_id` int(11) NOT NULL AUTO_INCREMENT,
  `department_name` varchar(100) NOT NULL,
  `flag_active` int(11) DEFAULT NULL,
  `notes` text,
  `id_account_bdp` varchar(60) DEFAULT NULL,
  `id_account_material_cost` varchar(60) DEFAULT NULL,
  `id_account_wip_cost` varchar(60) DEFAULT NULL,
  `id_account_bop_std` varchar(60) DEFAULT NULL,
  `id_account_bop_real` varchar(60) DEFAULT NULL,
  `id_account_directlabor` varchar(60) DEFAULT NULL,
  `id_account_wages_payable` varchar(60) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`department_id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_department_produksi`
--

LOCK TABLES `mst_department_produksi` WRITE;
/*!40000 ALTER TABLE `mst_department_produksi` DISABLE KEYS */;
INSERT INTO `mst_department_produksi` VALUES (1,'Departemen A',1,'Departemen A','1-1203','1-1202','1-1203','5-2103','2-1501','5-2105','2-1401','admin','2014-10-20 18:22:44','2014-10-20 18:22:49','admin'),(2,'Departemen B',1,'Departemen B','1-1203','1-1202','1-1203','5-2103','2-1501','5-2105','2-1401','admin','2014-10-20 18:22:44','2014-10-20 18:22:44','admin'),(3,'Departemen C',1,'Departemen C','1-1203','1-1202','1-1203','5-2103','2-1501','5-2105','2-1401','admin','2014-10-20 18:22:44','2014-10-20 18:22:44','admin'),(4,'Departemen D',1,'Departemen D','1-1203','1-1202','1-1203','5-2103','2-1501','5-2105','2-1401','admin','2014-10-20 18:22:44','2014-10-20 18:22:44','admin'),(5,'Departemen E',1,'Departemen E','1-1203','1-1202','1-1203','5-2103','2-1501','5-2105','2-1401','admin','2014-10-20 18:22:44','2014-10-20 18:22:44','admin'),(6,'Tanpa Departemen',1,'Tanpa Departemen',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
/*!40000 ALTER TABLE `mst_department_produksi` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_employee`
--

DROP TABLE IF EXISTS `mst_employee`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_employee` (
  `id_employee` varchar(25) NOT NULL,
  `first_name` varchar(200) DEFAULT NULL,
  `last_name` varchar(200) DEFAULT NULL,
  `address` varchar(400) DEFAULT NULL,
  `city` varchar(120) DEFAULT NULL,
  `state` varchar(255) DEFAULT NULL,
  `postal_code` varchar(25) DEFAULT NULL,
  `country` varchar(120) DEFAULT NULL,
  `phone1` varchar(120) DEFAULT NULL,
  `phone2` varchar(120) DEFAULT NULL,
  `phone3` varchar(120) DEFAULT NULL,
  `fax` varchar(60) DEFAULT NULL,
  `email` varchar(120) DEFAULT NULL,
  `website` varchar(120) DEFAULT NULL,
  `photo` text,
  `target` double(19,4) DEFAULT NULL,
  `id_account` varchar(25) DEFAULT NULL,
  `grade` varchar(120) DEFAULT NULL,
  `notes` text,
  `status` int(11) DEFAULT NULL,
  `modified_user` varchar(120) NOT NULL,
  `created_date` datetime NOT NULL,
  `modified_date` datetime NOT NULL,
  `created_user` varchar(120) NOT NULL,
  `position_id` int(11) DEFAULT NULL,
  `department_id` int(11) DEFAULT NULL,
  UNIQUE KEY `id_employee` (`id_employee`) USING BTREE,
  KEY `marketing_fkey1` (`id_account`),
  KEY `department_id` (`department_id`),
  KEY `position_id` (`position_id`),
  CONSTRAINT `mst_employee_ibfk_1` FOREIGN KEY (`department_id`) REFERENCES `mst_department` (`department_id`) ON UPDATE CASCADE,
  CONSTRAINT `mst_employee_ibfk_2` FOREIGN KEY (`position_id`) REFERENCES `mst_position` (`position_id`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_employee`
--

LOCK TABLES `mst_employee` WRITE;
/*!40000 ALTER TABLE `mst_employee` DISABLE KEYS */;
INSERT INTO `mst_employee` VALUES ('E.2015000000','Administrator','','','','','','','','','','','','','D:/IMAGE/Sample Pi Accounting/RETAIL1207201638.jpg',0.0000,'','Senior','',0,'admin','2015-10-02 00:00:00','2015-10-02 00:00:00','admin',1,2);
/*!40000 ALTER TABLE `mst_employee` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_cust_bef_save_emp` BEFORE INSERT ON `mst_employee` FOR EACH ROW begin
declare var_status integer;
declare var_id_account varchar(30);
declare var_no varchar(120);

if NEW.id_employee ='' then
select func_nomor('MASTER MARKETING') into var_no;
set var_id_account = '';

set NEW.id_employee = var_no;
set NEW.id_account = var_id_account;
set NEW.photo = '';
set NEW.status = 1;
set NEW.modified_user = 'import';
set NEW.created_date = now();
set NEW.created_user = 'import';
set NEW.modified_date = now();
end if;
end */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_employee_save` AFTER INSERT ON `mst_employee` FOR EACH ROW begin
if NEW.created_user = 'import' then
       update control_no_master set nourut = (select func_update_nomor('MASTER MARKETING')) where form = 'MASTER MARKETING';
end if;

insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_employee, 'Master Pegawai', NEW.created_user, 'Input', NEW.created_date, concat('Input Master Pegawai Baru - ',concat(NEW.first_name,' ',NEW.last_name)));
end */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_employee_edit` AFTER UPDATE ON `mst_employee` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_employee, 'Master Pegawai', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Master Pegawai - ',concat(OLD.first_name,' ',OLD.last_name))) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_employee_hapus` AFTER DELETE ON `mst_employee` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_employee, 'Master Pegawai', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Master Pegawai - ',concat(OLD.first_name,' ',OLD.last_name))) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_event`
--

DROP TABLE IF EXISTS `mst_event`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_event` (
  `id_event` varchar(30) NOT NULL,
  `event_name` varchar(120) DEFAULT NULL,
  `start_date` datetime DEFAULT NULL,
  `end_date` datetime DEFAULT NULL,
  `pic` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`id_event`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_event`
--

LOCK TABLES `mst_event` WRITE;
/*!40000 ALTER TABLE `mst_event` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_event` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_event_member`
--

DROP TABLE IF EXISTS `mst_event_member`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_event_member` (
  `id_member` varchar(30) NOT NULL,
  `id_event` varchar(30) DEFAULT NULL,
  `nip_member` varchar(30) NOT NULL,
  `member_name` varchar(120) DEFAULT NULL,
  `position` varchar(120) DEFAULT NULL,
  `area` varchar(120) DEFAULT NULL,
  `region` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `photo_path` text,
  PRIMARY KEY (`id_member`),
  UNIQUE KEY `nip_member` (`nip_member`) USING BTREE,
  KEY `id_event` (`id_event`),
  CONSTRAINT `mst_event_member_ibfk_1` FOREIGN KEY (`id_event`) REFERENCES `mst_event` (`id_event`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_event_member`
--

LOCK TABLES `mst_event_member` WRITE;
/*!40000 ALTER TABLE `mst_event_member` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_event_member` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_expedition`
--

DROP TABLE IF EXISTS `mst_expedition`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_expedition` (
  `id_expedition` varchar(120) NOT NULL,
  `expedition_name` varchar(250) DEFAULT NULL,
  `from_city` varchar(120) DEFAULT NULL,
  `to_city` varchar(120) DEFAULT NULL,
  `expedition_rate` double DEFAULT NULL,
  `qty_perunit` double DEFAULT NULL,
  `notes` text,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`id_expedition`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_expedition`
--

LOCK TABLES `mst_expedition` WRITE;
/*!40000 ALTER TABLE `mst_expedition` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_expedition` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_golaset`
--

DROP TABLE IF EXISTS `mst_golaset`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_golaset` (
  `id_golongan` varchar(30) NOT NULL,
  `masa_manfaat` double DEFAULT NULL,
  `rate_penyusutan` double DEFAULT NULL,
  `type` varchar(120) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`id_golongan`),
  KEY `type` (`type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_golaset`
--

LOCK TABLES `mst_golaset` WRITE;
/*!40000 ALTER TABLE `mst_golaset` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_golaset` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_item`
--

DROP TABLE IF EXISTS `mst_item`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_item` (
  `id_item` varchar(25) NOT NULL,
  `item_name` varchar(60) DEFAULT NULL,
  `id_category` varchar(25) DEFAULT NULL,
  `id_jenis` varchar(25) DEFAULT NULL,
  `id_account` varchar(25) NOT NULL,
  `main_unit` varchar(25) NOT NULL,
  `buy_unit` varchar(25) NOT NULL,
  `sell_unit` varchar(25) NOT NULL,
  `flag_buy` int(1) NOT NULL,
  `flag_sell` int(1) NOT NULL,
  `flag_inv` int(1) NOT NULL,
  `blob_image` varchar(500) DEFAULT NULL,
  `sell_price` double DEFAULT NULL,
  `modified_user` varchar(120) NOT NULL,
  `created_date` datetime NOT NULL,
  `modified_date` datetime NOT NULL,
  `created_user` varchar(120) NOT NULL,
  `id_warehouse` varchar(120) NOT NULL,
  `max_qty` int(11) NOT NULL,
  `min_qty` int(11) NOT NULL,
  `notes` text,
  `length` float(18,2) DEFAULT NULL,
  `width` float(18,2) DEFAULT NULL,
  `height` float(18,2) DEFAULT NULL,
  `weight` float(18,2) DEFAULT NULL,
  `id_barcode` varchar(30) DEFAULT NULL,
  `id_account_cogs` varchar(60) NOT NULL,
  `account_cogs` varchar(250) NOT NULL,
  `min_qty_unit` varchar(30) DEFAULT NULL,
  `id_brand` varchar(255) DEFAULT NULL,
  `item_disc_qty` double NOT NULL,
  `item_disc_unit` varchar(30) NOT NULL,
  `active_status` int(2) NOT NULL,
  `kadar` double DEFAULT NULL,
  `use_notifminqty` int(1) NOT NULL,
  PRIMARY KEY (`id_item`),
  UNIQUE KEY `id_item` (`id_item`) USING BTREE,
  KEY `fk_category` (`id_category`),
  KEY `fk_jenis` (`id_jenis`),
  KEY `fk_account` (`id_account`),
  KEY `fk_main_unit` (`main_unit`),
  KEY `id_brand` (`id_brand`),
  KEY `fk_cogsaccount` (`id_account_cogs`),
  CONSTRAINT `fk_account` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE,
  CONSTRAINT `fk_category` FOREIGN KEY (`id_category`) REFERENCES `mst_itemcat` (`mst_itemcat_id`) ON UPDATE CASCADE,
  CONSTRAINT `fk_cogsaccount` FOREIGN KEY (`id_account_cogs`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE,
  CONSTRAINT `fk_jenis` FOREIGN KEY (`id_jenis`) REFERENCES `mst_itemjenis` (`mst_itemjenis_id`) ON UPDATE CASCADE,
  CONSTRAINT `fk_main_unit` FOREIGN KEY (`main_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `mst_item_ibfk_1` FOREIGN KEY (`id_brand`) REFERENCES `mst_itembrand` (`mst_itembrand_id`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_item`
--

LOCK TABLES `mst_item` WRITE;
/*!40000 ALTER TABLE `mst_item` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_item` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_item_save2` BEFORE INSERT ON `mst_item` FOR EACH ROW if NEW.created_user = 'import' then
set NEW.active_status = 1;
end if */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_item_save` AFTER INSERT ON `mst_item` FOR EACH ROW if NEW.created_user <> 'import' then
insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_item, 'Master Barang', NEW.created_user, 'Input', NEW.created_date, concat('Input Master Barang Baru - ',New.item_name));
end if */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_item_edit` AFTER UPDATE ON `mst_item` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_item, 'Master Item', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Master Item - ',OLD.item_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_item_del` AFTER DELETE ON `mst_item` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_item, 'Master Item', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Edit Master Item - ',OLD.item_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_item_assembly`
--

DROP TABLE IF EXISTS `mst_item_assembly`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_item_assembly` (
  `assembly_no` varchar(60) NOT NULL,
  `id_item` varchar(60) NOT NULL,
  `id_item_sparepart` varchar(60) NOT NULL,
  `flag_active` int(11) NOT NULL,
  `notes` varchar(400) DEFAULT NULL,
  `modified_user` varchar(120) NOT NULL,
  `created_date` datetime NOT NULL,
  `modified_date` datetime NOT NULL,
  `created_user` varchar(120) NOT NULL,
  PRIMARY KEY (`assembly_no`),
  KEY `id_item` (`id_item`),
  KEY `id_item_sparepart` (`id_item_sparepart`),
  CONSTRAINT `mst_item_assembly_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `mst_item_assembly_ibfk_2` FOREIGN KEY (`id_item_sparepart`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_item_assembly`
--

LOCK TABLES `mst_item_assembly` WRITE;
/*!40000 ALTER TABLE `mst_item_assembly` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_item_assembly` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_item_disc`
--

DROP TABLE IF EXISTS `mst_item_disc`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_item_disc` (
  `id_item` varchar(60) DEFAULT NULL,
  `id_item_disc` varchar(60) DEFAULT NULL,
  `qty` double DEFAULT NULL,
  `id_unit` varchar(255) DEFAULT NULL,
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  CONSTRAINT `mst_item_disc_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `mst_item_disc_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_item_disc`
--

LOCK TABLES `mst_item_disc` WRITE;
/*!40000 ALTER TABLE `mst_item_disc` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_item_disc` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_item_import`
--

DROP TABLE IF EXISTS `mst_item_import`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_item_import` (
  `id_item` varchar(25) DEFAULT NULL,
  `item_name` varchar(60) DEFAULT NULL,
  `flag_buy` int(1) DEFAULT NULL,
  `flag_sell` int(1) DEFAULT NULL,
  `flag_inv` int(1) DEFAULT NULL,
  `sell_price` double DEFAULT NULL,
  `notes` text,
  `length` float(18,2) DEFAULT NULL,
  `width` float(18,2) DEFAULT NULL,
  `height` float(18,2) DEFAULT NULL,
  `weight` float(18,2) DEFAULT NULL,
  UNIQUE KEY `id_item` (`id_item`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_item_import`
--

LOCK TABLES `mst_item_import` WRITE;
/*!40000 ALTER TABLE `mst_item_import` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_item_import` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_item_bef_save` BEFORE INSERT ON `mst_item_import` FOR EACH ROW begin
declare var_no varchar(120);


select func_nobukti('MASTER_ITEM',Month(now()),Year(now())) into var_no;

set NEW.id_item = var_no;

end */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_item_save_import` AFTER INSERT ON `mst_item_import` FOR EACH ROW begin
update control_no_trans set nourut = (select func_update_nobukti('MASTER_ITEM',Month(now()),Year(now()))) where form = 'MASTER_ITEM' and bulan = Month(now())  and tahun = Year(now());

end */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_itembrand`
--

DROP TABLE IF EXISTS `mst_itembrand`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_itembrand` (
  `mst_itembrand_id` varchar(25) NOT NULL,
  `mst_itembrand_nm` varchar(120) DEFAULT NULL,
  `description` text,
  `disc` double DEFAULT NULL,
  PRIMARY KEY (`mst_itembrand_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_itembrand`
--

LOCK TABLES `mst_itembrand` WRITE;
/*!40000 ALTER TABLE `mst_itembrand` DISABLE KEYS */;
INSERT INTO `mst_itembrand` VALUES ('NA','TANPA MEREK',' ',0);
/*!40000 ALTER TABLE `mst_itembrand` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_itemcat`
--

DROP TABLE IF EXISTS `mst_itemcat`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_itemcat` (
  `mst_itemcat_id` varchar(25) NOT NULL,
  `mst_itemjenis_id` varchar(25) DEFAULT NULL,
  `mst_itemcat_nm` varchar(120) DEFAULT NULL,
  `description` text,
  `discount` double DEFAULT NULL,
  PRIMARY KEY (`mst_itemcat_id`),
  KEY `fk_itemjenis_id` (`mst_itemjenis_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_itemcat`
--

LOCK TABLES `mst_itemcat` WRITE;
/*!40000 ALTER TABLE `mst_itemcat` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_itemcat` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_itemjenis`
--

DROP TABLE IF EXISTS `mst_itemjenis`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_itemjenis` (
  `mst_itemjenis_id` varchar(25) NOT NULL,
  `mst_itemjenis_nm` varchar(120) DEFAULT NULL,
  `description` text,
  `discount` double(19,2) DEFAULT NULL,
  `default_price` double(19,0) DEFAULT NULL,
  PRIMARY KEY (`mst_itemjenis_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_itemjenis`
--

LOCK TABLES `mst_itemjenis` WRITE;
/*!40000 ALTER TABLE `mst_itemjenis` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_itemjenis` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_jenis_aset`
--

DROP TABLE IF EXISTS `mst_jenis_aset`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_jenis_aset` (
  `id_jenis_aset` int(30) NOT NULL AUTO_INCREMENT,
  `nm_jenis_aset` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`id_jenis_aset`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_jenis_aset`
--

LOCK TABLES `mst_jenis_aset` WRITE;
/*!40000 ALTER TABLE `mst_jenis_aset` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_jenis_aset` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_marketing`
--

DROP TABLE IF EXISTS `mst_marketing`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_marketing` (
  `id_marketing` bigint(20) NOT NULL AUTO_INCREMENT,
  `id_employee` varchar(60) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`id_marketing`),
  KEY `id_employee` (`id_employee`),
  CONSTRAINT `mst_marketing_ibfk_1` FOREIGN KEY (`id_employee`) REFERENCES `mst_employee` (`id_employee`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_marketing`
--

LOCK TABLES `mst_marketing` WRITE;
/*!40000 ALTER TABLE `mst_marketing` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_marketing` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_position`
--

DROP TABLE IF EXISTS `mst_position`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_position` (
  `position_id` int(11) NOT NULL AUTO_INCREMENT,
  `position_name` varchar(100) NOT NULL,
  `flag_active` int(11) DEFAULT NULL,
  `notes` text,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`position_id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_position`
--

LOCK TABLES `mst_position` WRITE;
/*!40000 ALTER TABLE `mst_position` DISABLE KEYS */;
INSERT INTO `mst_position` VALUES (1,'Staff',1,'Non Management','admin','2014-10-20 18:22:44','2014-10-20 18:22:44','admin'),(2,'Supervisor',1,'Low Management','admin','2014-10-20 18:22:44','2014-10-20 18:22:44','admin'),(3,'Unit Manager',1,'Middle Management','admin','2014-10-20 18:22:44','2014-10-20 18:22:44','admin'),(4,'Director',1,'Top Management','admin','2014-10-20 18:22:44','2014-10-20 18:22:44','admin');
/*!40000 ALTER TABLE `mst_position` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_service`
--

DROP TABLE IF EXISTS `mst_service`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_service` (
  `id_service` varchar(25) NOT NULL,
  `service_name` varchar(60) DEFAULT NULL,
  `id_account` varchar(25) DEFAULT NULL,
  `price` double(19,2) DEFAULT NULL,
  `senior_commission` double DEFAULT NULL,
  `junior_commission` double DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `active_status` int(1) DEFAULT NULL,
  `notes` varchar(400) DEFAULT NULL,
  PRIMARY KEY (`id_service`),
  KEY `service_fkey1` (`id_account`),
  CONSTRAINT `mst_service_ibfk_1` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_service`
--

LOCK TABLES `mst_service` WRITE;
/*!40000 ALTER TABLE `mst_service` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_service` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_service_save` AFTER INSERT ON `mst_service` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_service, 'Master Service', NEW.created_user, 'Input', NEW.created_date, concat('Input Master Service Baru - ',NEW.service_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_service_edit` AFTER UPDATE ON `mst_service` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_service, 'Master Service', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Master Service - ',OLD.service_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_service_hapus` AFTER DELETE ON `mst_service` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_service, 'Master Service', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Master Service - ',OLD.service_name)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_setcurrency`
--

DROP TABLE IF EXISTS `mst_setcurrency`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_setcurrency` (
  `id_currency` varchar(15) NOT NULL,
  `convert_value` double DEFAULT NULL,
  `id_currencydef` varchar(15) NOT NULL,
  `notes` varchar(120) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_setcurrency`
--

LOCK TABLES `mst_setcurrency` WRITE;
/*!40000 ALTER TABLE `mst_setcurrency` DISABLE KEYS */;
INSERT INTO `mst_setcurrency` VALUES ('IDR',1,'IDR','Mata Uang Rupiah','admin','2014-01-01 00:00:00','admin','2014-01-01 00:00:00'),('$US',13500,'IDR','Mata Uang Dollar Amerika\r\n','admin','2014-05-30 00:00:00','admin','2014-05-30 00:00:00'),('EUR',14700,'IDR','Mata Uang Euro','admin','2016-01-19 00:00:00','admin','2016-01-19 00:00:00');
/*!40000 ALTER TABLE `mst_setcurrency` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_setunit`
--

DROP TABLE IF EXISTS `mst_setunit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_setunit` (
  `id_item` varchar(60) DEFAULT NULL,
  `id_unit` varchar(15) NOT NULL,
  `qty` double DEFAULT NULL,
  `notes` varchar(120) DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  CONSTRAINT `mst_setunit_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `mst_setunit_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_setunit`
--

LOCK TABLES `mst_setunit` WRITE;
/*!40000 ALTER TABLE `mst_setunit` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_setunit` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_standard_cost`
--

DROP TABLE IF EXISTS `mst_standard_cost`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_standard_cost` (
  `id_cost` varchar(30) NOT NULL,
  `cost_name` varchar(120) DEFAULT NULL,
  `cost_def` double DEFAULT NULL,
  `flag_active` int(11) DEFAULT NULL,
  `notes` text,
  `id_account` varchar(30) DEFAULT NULL,
  `id_account_hpp` varchar(30) DEFAULT NULL,
  `id_account_lr` varchar(30) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `type` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_cost`),
  KEY `id_account` (`id_account`),
  KEY `id_account_hpp` (`id_account_hpp`),
  KEY `id_account_lr` (`id_account_lr`),
  CONSTRAINT `mst_standard_cost_ibfk_2` FOREIGN KEY (`id_account_hpp`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_standard_cost`
--

LOCK TABLES `mst_standard_cost` WRITE;
/*!40000 ALTER TABLE `mst_standard_cost` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_standard_cost` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_state`
--

DROP TABLE IF EXISTS `mst_state`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_state` (
  `state_code` varchar(2) NOT NULL,
  `state_name` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`state_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_state`
--

LOCK TABLES `mst_state` WRITE;
/*!40000 ALTER TABLE `mst_state` DISABLE KEYS */;
INSERT INTO `mst_state` VALUES ('01','DKI Jakarta'),('02','Jawa Barat'),('03','Jawa Tengah'),('04','DI Yogyakarta'),('05','Jawa Timur'),('06','Nanggroe Aceh Darussalam'),('07','Sumatera Utara'),('08','Sumatera Barat'),('09','Riau'),('10','Jambi'),('11','Sumatera Selatan'),('12','Lampung'),('13','Kalimantan Barat'),('14','Kalimanatan Tengah'),('15','Kalimantan Selatan'),('16','Kalimantan Timur'),('17','Sulawesi Utara'),('18','Sulawesi Tengah'),('19','Sulawesi Selatan'),('20','Sulawesi Tenggara'),('21','Maluku'),('22','Bali'),('23','Nusa Tenggara Barat'),('24','Nusa Tenggara Timur'),('25','Papua'),('26','Bengkulu'),('27','Maluku Utara'),('28','Banten'),('29','Kep. Bangka Belitung'),('30','Gorontalo'),('31','Kep. Riau'),('32','Papua Barat '),('33','Sulawesi Barat');
/*!40000 ALTER TABLE `mst_state` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_supplier`
--

DROP TABLE IF EXISTS `mst_supplier`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_supplier` (
  `id_supplier` varchar(25) NOT NULL,
  `first_name` varchar(200) DEFAULT NULL,
  `last_name` varchar(200) DEFAULT NULL,
  `address` varchar(400) DEFAULT NULL,
  `city` varchar(120) DEFAULT NULL,
  `state` varchar(255) DEFAULT NULL,
  `postal_code` varchar(25) DEFAULT NULL,
  `country` varchar(120) DEFAULT NULL,
  `phone1` varchar(120) DEFAULT NULL,
  `phone2` varchar(120) DEFAULT NULL,
  `phone3` varchar(120) DEFAULT NULL,
  `fax` varchar(60) DEFAULT NULL,
  `email` varchar(120) DEFAULT NULL,
  `website` varchar(120) DEFAULT NULL,
  `photo` text,
  `id_account` varchar(25) DEFAULT NULL,
  `notes` text,
  `contact_person` varchar(120) DEFAULT NULL,
  `credit_limit` double DEFAULT NULL,
  `def_due_date` date DEFAULT NULL,
  `def_payment_method` int(11) DEFAULT NULL,
  `status` varchar(11) DEFAULT NULL,
  `modified_user` varchar(120) NOT NULL,
  `created_date` datetime NOT NULL,
  `modified_date` datetime NOT NULL,
  `created_user` varchar(120) NOT NULL,
  `ap_balance` double(19,0) DEFAULT NULL,
  `flag_credit_limit` int(11) DEFAULT NULL,
  UNIQUE KEY `id_supplier` (`id_supplier`) USING BTREE,
  KEY `supplier_fkey1` (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_supplier`
--

LOCK TABLES `mst_supplier` WRITE;
/*!40000 ALTER TABLE `mst_supplier` DISABLE KEYS */;
/*!40000 ALTER TABLE `mst_supplier` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_cust_bef_save_supp` BEFORE INSERT ON `mst_supplier` FOR EACH ROW begin
declare var_status integer;
declare var_id_account varchar(30);
declare var_no varchar(120);

if NEW.id_supplier = '' then
select func_nomor('MASTER SUPPLIER') into var_no;
select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_credit_purchase';

set NEW.id_supplier = var_no;
set NEW.id_account = var_id_account;
set NEW.photo = '';
set NEW.credit_limit = 0;
set NEW.status = 1;
set NEW.modified_user = 'import';
set NEW.created_date = now();
set NEW.created_user = 'import';
set NEW.modified_date = now();
set NEW.flag_credit_limit = 0;
set NEW.ap_balance=0;
set NEW.def_payment_method=2;

end if;
end */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_supp_save` AFTER INSERT ON `mst_supplier` FOR EACH ROW begin

if NEW.created_user = 'import' then
       update control_no_master set nourut = (select func_update_nomor('MASTER SUPPLIER')) where form = 'MASTER SUPPLIER';
end if;

insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_supplier, 'Master Supplier', NEW.created_user, 'Input', NEW.created_date, concat('Input Master Supplier Baru - ',concat(NEW.first_name,' ',NEW.last_name)));

end */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_supp_edit` AFTER UPDATE ON `mst_supplier` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_supplier, 'Master Supplier', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Master Supplier - ',concat(OLD.first_name,' ',OLD.last_name))) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_supp_hapus` AFTER DELETE ON `mst_supplier` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_supplier, 'Master Supplier', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Master Supplier - ',concat(OLD.first_name,' ',OLD.last_name))) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_unit`
--

DROP TABLE IF EXISTS `mst_unit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_unit` (
  `id_unit` varchar(15) NOT NULL DEFAULT '',
  `unit` varchar(60) DEFAULT NULL,
  `notes` varchar(120) DEFAULT NULL,
  `flag_default` smallint(1) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id_unit`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_unit`
--

LOCK TABLES `mst_unit` WRITE;
/*!40000 ALTER TABLE `mst_unit` DISABLE KEYS */;
INSERT INTO `mst_unit` VALUES ('btl','Botol','Satuan Botol',0,'admin','2015-02-10 00:00:00','admin','2015-02-10 00:00:00'),('dus','Kardus','Satuan Kardus',0,'admin','2014-09-27 00:00:00','admin','2014-09-27 00:00:00'),('kg','Kilogram','Satuan Barang Untuk Ukuran Berat',0,'admin','2016-01-19 00:00:00','admin','2016-01-19 00:00:00'),('ltr','Liter','Satuan Volume',0,'admin','2015-03-05 00:00:00','admin','2015-03-05 00:00:00'),('m2','Meter Persegi','Satuan Panjang Material',0,'admin','2015-01-14 00:00:00','admin','2015-01-14 00:00:00'),('mg','Miligram','Satuan Berat',0,'admin','2016-03-11 00:00:00','admin','2016-03-11 00:00:00'),('pack','Package','Satuan Small Pack',0,'admin','2014-09-27 00:00:00','admin','2014-09-27 00:00:00'),('pcs','Pieces','Satuan Pieces\r\n',0,'admin','2014-09-26 00:00:00','admin','2014-09-26 00:00:00'),('tube','Tube','Satuan Pieces Tube',0,'admin','2016-03-11 00:00:00','admin','2016-03-11 00:00:00'),('Unit','Unit','Satuan Default',1,'admin','2014-09-26 00:00:00','admin','2014-09-26 00:00:00');
/*!40000 ALTER TABLE `mst_unit` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_unit_save` AFTER INSERT ON `mst_unit` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.id_unit, 'Master Unit', NEW.created_user, 'Input', NEW.created_date, concat('Input Master Unit Baru - ',NEW.unit)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_unit_edit` AFTER UPDATE ON `mst_unit` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_unit, 'Master Unit', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Master Unit - ',OLD.unit)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_unit_hapus` AFTER DELETE ON `mst_unit` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.id_unit, 'Master Unit', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Master Unit - ',OLD.Unit)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `mst_user`
--

DROP TABLE IF EXISTS `mst_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_user` (
  `username` varchar(25) NOT NULL,
  `password` varchar(250) DEFAULT NULL,
  `id_employee` varchar(25) DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `flag_active` int(11) DEFAULT NULL,
  PRIMARY KEY (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_user`
--

LOCK TABLES `mst_user` WRITE;
/*!40000 ALTER TABLE `mst_user` DISABLE KEYS */;
INSERT INTO `mst_user` VALUES ('admin','202cb962ac59075b964b07152d234b70','E.2015000000','admin','2016-07-14 00:00:00','admin','2016-07-14 00:00:00',1);
/*!40000 ALTER TABLE `mst_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `mst_warehouse`
--

DROP TABLE IF EXISTS `mst_warehouse`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mst_warehouse` (
  `id_warehouse` varchar(25) NOT NULL DEFAULT '',
  `warehouse_name` varchar(60) DEFAULT NULL,
  `qty_max` varchar(30) DEFAULT NULL,
  `unit_max` varchar(15) DEFAULT NULL,
  `address` varchar(200) DEFAULT NULL,
  `phone` varchar(120) DEFAULT NULL,
  `city` varchar(200) DEFAULT NULL,
  `notes` text,
  `flag_nonactive` smallint(1) DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `is_outlet` int(1) DEFAULT NULL,
  PRIMARY KEY (`id_warehouse`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mst_warehouse`
--

LOCK TABLES `mst_warehouse` WRITE;
/*!40000 ALTER TABLE `mst_warehouse` DISABLE KEYS */;
INSERT INTO `mst_warehouse` VALUES ('OT001','Outlet Surabaya-Gubeng','Big','','Jln. Gubang Kertajaya No 90','08193453548','Surabaya','',0,'admin','2015-03-23 00:00:00','admin','2015-03-23 00:00:00',1),('OT002','Outlet Waru - Sidoarjo','Medium','','Jln. Rewin No 89','0318539901','Sidoarjo','Gudang Sekaligus Outlet Sidoarjo',0,'admin','2016-01-19 00:00:00','admin','2016-01-19 00:00:00',0),('WH001','Default Warehouse','Big','pcs','Jln. Kalimantan No 89','0319888300','Surabaya','Gudang Utama',0,'admin','2015-03-23 00:00:00','admin','2015-03-23 00:00:00',0),('WH002','Gudang Sidoarjo','Medium','','Jln. Raya Gedangan No 90','03194358001','Sidoarjo','',0,'admin','2016-01-19 00:00:00','admin','2016-01-19 00:00:00',0);
/*!40000 ALTER TABLE `mst_warehouse` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `neraca_lajur_temp`
--

DROP TABLE IF EXISTS `neraca_lajur_temp`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `neraca_lajur_temp` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `account_parent` varchar(255) DEFAULT NULL,
  `parent_head` varchar(255) DEFAULT NULL,
  `account_parent_head` varchar(255) DEFAULT NULL,
  `parent_head_1` varchar(255) DEFAULT NULL,
  `account_parent_head_1` varchar(255) DEFAULT NULL,
  `bdebet` double DEFAULT NULL,
  `bkredit` double DEFAULT NULL,
  `debet` double DEFAULT NULL,
  `kredit` double DEFAULT NULL,
  `edebet` double DEFAULT NULL,
  `ekredit` double DEFAULT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `neraca_lajur_temp`
--

LOCK TABLES `neraca_lajur_temp` WRITE;
/*!40000 ALTER TABLE `neraca_lajur_temp` DISABLE KEYS */;
/*!40000 ALTER TABLE `neraca_lajur_temp` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `neraca_lajur_temp2`
--

DROP TABLE IF EXISTS `neraca_lajur_temp2`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `neraca_lajur_temp2` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `account_parent` varchar(255) DEFAULT NULL,
  `parent_head` varchar(255) DEFAULT NULL,
  `account_parent_head` varchar(255) DEFAULT NULL,
  `parent_head_1` varchar(255) DEFAULT NULL,
  `account_parent_head_1` varchar(255) DEFAULT NULL,
  `bdebet` double DEFAULT NULL,
  `bkredit` double DEFAULT NULL,
  `debet` double DEFAULT NULL,
  `kredit` double DEFAULT NULL,
  `debetadj` double DEFAULT NULL,
  `kreditadj` double DEFAULT NULL,
  `edebet` double DEFAULT NULL,
  `ekredit` double DEFAULT NULL,
  `golongan` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `neraca_lajur_temp2`
--

LOCK TABLES `neraca_lajur_temp2` WRITE;
/*!40000 ALTER TABLE `neraca_lajur_temp2` DISABLE KEYS */;
/*!40000 ALTER TABLE `neraca_lajur_temp2` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `neraca_lajur_temp_adjust`
--

DROP TABLE IF EXISTS `neraca_lajur_temp_adjust`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `neraca_lajur_temp_adjust` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `account_parent` varchar(255) DEFAULT NULL,
  `parent_head` varchar(255) DEFAULT NULL,
  `account_parent_head` varchar(255) DEFAULT NULL,
  `parent_head_1` varchar(255) DEFAULT NULL,
  `account_parent_head_1` varchar(255) DEFAULT NULL,
  `bdebet` double DEFAULT NULL,
  `bkredit` double DEFAULT NULL,
  `debet` double DEFAULT NULL,
  `kredit` double DEFAULT NULL,
  `edebet` double DEFAULT NULL,
  `ekredit` double DEFAULT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `neraca_lajur_temp_adjust`
--

LOCK TABLES `neraca_lajur_temp_adjust` WRITE;
/*!40000 ALTER TABLE `neraca_lajur_temp_adjust` DISABLE KEYS */;
/*!40000 ALTER TABLE `neraca_lajur_temp_adjust` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `neraca_lajur_temp_sawal`
--

DROP TABLE IF EXISTS `neraca_lajur_temp_sawal`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `neraca_lajur_temp_sawal` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `account_parent` varchar(255) DEFAULT NULL,
  `parent_head` varchar(255) DEFAULT NULL,
  `account_parent_head` varchar(255) DEFAULT NULL,
  `parent_head_1` varchar(255) DEFAULT NULL,
  `account_parent_head_1` varchar(255) DEFAULT NULL,
  `bdebet` double DEFAULT NULL,
  `bkredit` double DEFAULT NULL,
  `debet` double DEFAULT NULL,
  `kredit` double DEFAULT NULL,
  `edebet` double DEFAULT NULL,
  `ekredit` double DEFAULT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `neraca_lajur_temp_sawal`
--

LOCK TABLES `neraca_lajur_temp_sawal` WRITE;
/*!40000 ALTER TABLE `neraca_lajur_temp_sawal` DISABLE KEYS */;
/*!40000 ALTER TABLE `neraca_lajur_temp_sawal` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary table structure for view `raw_materials_view`
--

DROP TABLE IF EXISTS `raw_materials_view`;
/*!50001 DROP VIEW IF EXISTS `raw_materials_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `raw_materials_view` (
  `id_item` varchar(25),
  `item_name` varchar(60),
  `id_barcode` varchar(30),
  `mst_itemcat_nm` varchar(120)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `ref_pay_method`
--

DROP TABLE IF EXISTS `ref_pay_method`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ref_pay_method` (
  `ref_status_id` int(11) NOT NULL,
  `ref_status_name` varchar(255) DEFAULT NULL,
  `notes` text,
  PRIMARY KEY (`ref_status_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ref_pay_method`
--

LOCK TABLES `ref_pay_method` WRITE;
/*!40000 ALTER TABLE `ref_pay_method` DISABLE KEYS */;
INSERT INTO `ref_pay_method` VALUES (1,'Cash','Pembayaran tunai pada setiap pembelian dan penjualan'),(2,'Credit','Pembayaran kredit pada setiap pembelian dan penjualan');
/*!40000 ALTER TABLE `ref_pay_method` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ref_status_master`
--

DROP TABLE IF EXISTS `ref_status_master`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ref_status_master` (
  `ref_status_id` int(11) NOT NULL,
  `ref_status_name` varchar(255) DEFAULT NULL,
  `notes` text,
  PRIMARY KEY (`ref_status_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ref_status_master`
--

LOCK TABLES `ref_status_master` WRITE;
/*!40000 ALTER TABLE `ref_status_master` DISABLE KEYS */;
INSERT INTO `ref_status_master` VALUES (0,'Non Aktive','Status Master Tidak Aktif'),(1,'Aktive','Status Master Aktif');
/*!40000 ALTER TABLE `ref_status_master` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary table structure for view `rekap_pembelian_view`
--

DROP TABLE IF EXISTS `rekap_pembelian_view`;
/*!50001 DROP VIEW IF EXISTS `rekap_pembelian_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `rekap_pembelian_view` (
  `bulan` int(2),
  `total` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `rekap_penjualan_view`
--

DROP TABLE IF EXISTS `rekap_penjualan_view`;
/*!50001 DROP VIEW IF EXISTS `rekap_penjualan_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `rekap_penjualan_view` (
  `bulan` bigint(20),
  `total` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `request_quantitative_view`
--

DROP TABLE IF EXISTS `request_quantitative_view`;
/*!50001 DROP VIEW IF EXISTS `request_quantitative_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `request_quantitative_view` (
  `period` varchar(9),
  `jumlah` bigint(21)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `rpt_serviceperdateperno`
--

DROP TABLE IF EXISTS `rpt_serviceperdateperno`;
/*!50001 DROP VIEW IF EXISTS `rpt_serviceperdateperno`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `rpt_serviceperdateperno` (
  `service_name` varchar(60),
  `no_service` varchar(30),
  `number_asc` int(11),
  `notes_det` varchar(255),
  `qty` int(11),
  `price` double(19,4),
  `nominal` double(19,4),
  `date_trn` datetime,
  `first_name` varchar(200),
  `last_name` varchar(200),
  `first_name2` varchar(200),
  `last_name2` varchar(200),
  `notes` varchar(255)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `set_path_logo_view`
--

DROP TABLE IF EXISTS `set_path_logo_view`;
/*!50001 DROP VIEW IF EXISTS `set_path_logo_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `set_path_logo_view` (
  `path` text
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `so_thismonth_view`
--

DROP TABLE IF EXISTS `so_thismonth_view`;
/*!50001 DROP VIEW IF EXISTS `so_thismonth_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `so_thismonth_view` (
  `date_trn` varchar(69),
  `no_sales_order` varchar(30),
  `customer` varchar(401),
  `total` double(19,2),
  `status_notes` varchar(23)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `tampunglayanansimrs`
--

DROP TABLE IF EXISTS `tampunglayanansimrs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tampunglayanansimrs` (
  `CARABAYAR` char(20) DEFAULT NULL,
  `NAMABANK` char(20) DEFAULT NULL,
  `NOPEMBAYARAN` char(10) DEFAULT NULL,
  `JUMLAHBAYAR` double(19,2) DEFAULT NULL,
  `NAMARUANGAN` varchar(120) DEFAULT NULL,
  `TGLSTRUK` date DEFAULT NULL,
  `NAMALENGKAP` varchar(250) DEFAULT NULL,
  `NOREGISTRASI` char(10) DEFAULT NULL,
  `KDBANK` char(10) DEFAULT NULL,
  `KDCARABAYAR` char(10) DEFAULT NULL,
  `NAMAJENISPASIEN` varchar(50) DEFAULT NULL,
  `NORESEP` char(10) DEFAULT NULL,
  `NOCM` char(10) DEFAULT NULL,
  `NOPEMAKAIAN` char(10) DEFAULT NULL,
  `JENISLAYANAN` varchar(60) DEFAULT NULL,
  `STATUSPOSTINGBAYAR` int(11) DEFAULT NULL,
  `STATUSPOSTINGPIUTANG` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tampunglayanansimrs`
--

LOCK TABLES `tampunglayanansimrs` WRITE;
/*!40000 ALTER TABLE `tampunglayanansimrs` DISABLE KEYS */;
INSERT INTO `tampunglayanansimrs` VALUES ('Tunai','','1408150002',1797000.00,'Kasir Rawat Inap','2014-08-15','Tn.Yasir Maulana','1408150002','','01','JKN-PBI','','','','LAYANAN',1,0),('Tunai','','1408150001',4334314.00,'Kasir Rawat Inap','2014-08-15','Tn.Yudi','1408150001','','01','UMUM','','','','PENJUALAN OBAT',0,0),('Tunai','','1408170001',333243.00,'Kasir Rawat Inap','2014-08-17','Tn.Yudi','1408170001','','01','UMUM','','','','PENJUALAN OBAT',0,0),('Tunai','','1408180003',2323726.00,'Kasir Rawat Inap','2014-08-18','Tn.Yasir Maulana','1408180001','','01','UMUM','','','','PENJUALAN OBAT',0,0),('','','',150000.00,'PIUTANG JASA LAYANAN','2014-08-18','Tn.Yasir Maulana','1408180002','','','UMUM','','','','PIUTANG LAYANAN',0,1),('Tunai','','1408180001',4520000.00,'Kasir IGD','2014-08-18','Tn.Yasir Maulana','1408170002','','01','UMUM','','','','LAYANAN',0,0),('','','',311000.00,'PIUTANG JASA LAYANAN','2014-08-20','Tn.Yasir Maulana','1408200001','','','UMUM','','','','PIUTANG LAYANAN',0,0),('','','',70000.00,'PIUTANG JASA LAYANAN','2014-08-20','Tn.Yasir Maulana','1408200002','','','UMUM','','','','PIUTANG LAYANAN',0,0),('','','',55000.00,'PIUTANG JASA LAYANAN','2014-08-21','Tn.Yasir Maulana','1408200001','','','UMUM','','','','PIUTANG LAYANAN',0,0),('','','',120000.00,'PIUTANG JASA LAYANAN','2014-08-21','Tn.Yasir Maulana','1408210001','','','UMUM','','','','PIUTANG LAYANAN',0,0),('Tunai','','1408290001',6125215.00,'Kasir Rawat Inap','2014-08-29','Tn.Bima aliudin','1408290001','','01','UMUM','','','','PENJUALAN OBAT',0,0),('Tunai','','1507250001',2400617.00,'Kasir Rawat Inap','2015-07-25','Tn.Miftakul ananda','1507250001','','01','UMUM','','','','PENJUALAN OBAT',0,0),('Tunai','','1508030003',515000.00,'Kasir Rawat Jalan 1','2015-08-03','Tn.Bima aliudin','1508030003','','01','UMUM','','','','LAYANAN',0,0),('Tunai','','1508030001',60000.00,'Kasir IGD','2015-08-03','Tn.Bima aliudin','1508030002','','01','UMUM','','','','LAYANAN',0,0),('Tunai','','1508030004',659000.00,'Kasir Rawat Jalan 1','2015-08-03','Tn.Miftakul ananda','1508030001','','01','UMUM','','','','LAYANAN',0,0),('Tunai','','1508050001',1515000.00,'Kasir Rawat Jalan 1','2015-08-05','Tn.Miftakul ananda','1508050001','','01','UMUM','','','','LAYANAN',0,0),('','','',9292000.00,'PIUTANG JASA LAYANAN','2015-08-26','Tn.Miftakul ananda','1508260001','','','JKN-PBI','','','','PIUTANG LAYANAN',0,0),('','','',24000.00,'PIUTANG JASA LAYANAN','2015-08-27','Tn.Miftakul ananda','1508260001','','','JKN-PBI','','','','PIUTANG LAYANAN',0,0),('Tunai','','1510050005',108000.00,'Kasir Rawat Inap','2015-10-05','Tn.Bima aliudin','1508040002','','01','UMUM','','','','LAYANAN',0,0),('Tunai','','1510050006',700000.00,'Kasir Rawat Inap','2015-10-05','Tn.Yudi','1508210005','','01','UMUM','','','','LAYANAN',0,0),('Tunai','','1510050004',34339863.00,'Kasir Rawat Inap','2015-10-05','Tn.Yasir Maulana','1408210002','','01','UMUM','','','','PENJUALAN OBAT',0,0),('Tunai','','1510050001',387000.00,'Kasir Rawat Inap','2015-10-05','Tn.Mulyadi','1508210001','','01','UMUM','','','','LAYANAN',0,0),('Tunai','','1510050008',56500.00,'Kasir Rawat Inap','2015-10-05','Tn.Mulyadi','1508270001','','01','UMUM','','','','LAYANAN',0,0),('Tunai','','1510050003',600000.00,'Kasir Rawat Inap','2015-10-05','Tn.indri ismail','1508210004','','01','UMUM','','','','LAYANAN',0,0),('Tunai','','1510050007',3933600.00,'Kasir Rawat Inap','2015-10-05','Tn.Miftakul ananda','1508250001','','01','UMUM','','','','LAYANAN',0,0),('Tunai','','1510050002',724000.00,'Kasir Rawat Inap','2015-10-05','Tn.Yasir Maulana','1508210006','','01','UMUM','','','','LAYANAN',0,0),('Kartu Kredit','Bank Mandiri','1511240002',67000.00,'Kasir IGD','2015-11-24','Tn.Indriani','1511240002','009','02','UMUM','','','','LAYANAN',0,0),('Jaminan/Anggunan','','1511240001',72000.00,'Kasir IGD','2015-11-24','Tn.Indriani','1511240001','','04','JKN-NON PBI','','','','LAYANAN',0,0),('Tranfer Bank','Bank Mandiri','1511240003',155000.00,'Kasir IGD','2015-11-24','Tn.Indriani','1511240003','009','03','UMUM','','','','LAYANAN',0,0),('Kartu Kredit','Bank Mandiri','1511240004',-593718.00,'Kasir IGD','2015-11-24','Tn.Indriani','1511240002','009','02',' ','','','','PENJUALAN OBAT',0,0),('Tunai','','1512220002',37838.00,'Kasir IGD','2015-12-22','Tn.Mulyadi','1508270001','','01',' ','','','','PENJUALAN OBAT',0,0),('Tunai','','1512220001',66409.00,'Kasir IGD','2015-12-22','Tn.Yasir Maulana','','','01',' ','','','','PENJUALAN OBAT',0,0),('Tunai','','1601060001',47000.00,'Kasir Rawat Jalan 3','2016-01-06','Tn.Mulyadi','1408260001','','01','JKN-NON PBI','','','','LAYANAN',0,0),('','','',47000.00,'PIUTANG JASA LAYANAN','2014-08-26','Tn.Mulyadi','1408260001','','','JKN-NON PBI','','','','PIUTANG LAYANAN',0,0);
/*!40000 ALTER TABLE `tampunglayanansimrs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tampunglayanansimrsgrouppasien`
--

DROP TABLE IF EXISTS `tampunglayanansimrsgrouppasien`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tampunglayanansimrsgrouppasien` (
  `NOCM` varchar(10) DEFAULT NULL,
  `NAMALENGKAP` varchar(250) DEFAULT NULL,
  `JENISPASIEN` varchar(250) DEFAULT NULL,
  `RUANGAN` varchar(250) DEFAULT NULL,
  `NOMINAL` double(19,0) DEFAULT NULL,
  `NAMAPIHAKIII` varchar(250) DEFAULT NULL,
  `DATEMODIFIED` datetime DEFAULT NULL,
  `NOJOURNAL` varchar(30) DEFAULT NULL,
  `NAMAPELAYANAN` varchar(400) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tampunglayanansimrsgrouppasien`
--

LOCK TABLES `tampunglayanansimrsgrouppasien` WRITE;
/*!40000 ALTER TABLE `tampunglayanansimrsgrouppasien` DISABLE KEYS */;
INSERT INTO `tampunglayanansimrsgrouppasien` VALUES ('010193','Nn.LIDIA','JPS-JAMKESDA','Gedung A Lantai 2',98000,'SENDIRI','2016-02-12 00:00:00','P-1602090002','SEWA KAMAR'),('010193','Nn.LIDIA','JPS-JAMKESDA','Gedung A Lantai 2',100000,'SENDIRI','2016-02-12 00:00:00','P-1602090002','SUNTIK HEMORRHOID (DR)'),('010193','Nn.LIDIA','JPS-JAMKESDA','Gedung A Lantai 2',10000,'SENDIRI','2016-02-12 00:00:00','P-1602090002','ADMINISTRASI RUANGAN'),('009788','Nn.LINA','UMUM','Poli Diabetes - U',20000,' ','2016-02-12 00:00:00','P-1602090001','Pemeriksaan/Konsultasi  Rawat Jalan (JKN)'),('009788','Nn.LINA','UMUM','Poli Diabetes - U',15000,' ','2016-02-12 00:00:00','P-1602090001','Karcis Poli Tanpa Rujukan '),('010193','Nn.LIDIA','JPS-JAMKESDA','Gedung A Lantai 2',100000,'SENDIRI','2016-02-12 00:00:00','P-1602090002','FAAL PARU  (DR)');
/*!40000 ALTER TABLE `tampunglayanansimrsgrouppasien` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tampunglayanansimrsretur`
--

DROP TABLE IF EXISTS `tampunglayanansimrsretur`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tampunglayanansimrsretur` (
  `CARABAYAR` char(20) DEFAULT NULL,
  `NAMABANK` char(20) DEFAULT NULL,
  `NOPEMBAYARAN` char(10) DEFAULT NULL,
  `JUMLAHBAYAR` double(19,2) DEFAULT NULL,
  `NAMARUANGAN` varchar(120) DEFAULT NULL,
  `TGLSTRUK` date DEFAULT NULL,
  `NAMALENGKAP` varchar(250) DEFAULT NULL,
  `NOREGISTRASI` char(10) DEFAULT NULL,
  `KDBANK` char(10) DEFAULT NULL,
  `KDCARABAYAR` char(10) DEFAULT NULL,
  `NAMAJENISPASIEN` varchar(50) DEFAULT NULL,
  `NORESEP` char(10) DEFAULT NULL,
  `NOCM` char(10) DEFAULT NULL,
  `NOPEMAKAIAN` char(10) DEFAULT NULL,
  `JENISLAYANAN` varchar(60) DEFAULT NULL,
  `STATUSPOSTING` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tampunglayanansimrsretur`
--

LOCK TABLES `tampunglayanansimrsretur` WRITE;
/*!40000 ALTER TABLE `tampunglayanansimrsretur` DISABLE KEYS */;
INSERT INTO `tampunglayanansimrsretur` VALUES ('','','',-37838.00,'Depo Umum','2015-12-22','Tn.Mulyadi','1508270001','','','UMUM','testreg','000001','1512220004','RETUR',0),('','','',-66409.00,'Depo Umum','2015-12-22','Tn.Yasir Maulana','','','',' ','testakun','000000','1512220002','RETUR',0);
/*!40000 ALTER TABLE `tampunglayanansimrsretur` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tampungobatalkes`
--

DROP TABLE IF EXISTS `tampungobatalkes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tampungobatalkes` (
  `KDJENISOBATALKES` char(20) DEFAULT NULL,
  `IDACCOUNTINV` char(20) DEFAULT NULL,
  `IDACCOUNTREV` char(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tampungobatalkes`
--

LOCK TABLES `tampungobatalkes` WRITE;
/*!40000 ALTER TABLE `tampungobatalkes` DISABLE KEYS */;
/*!40000 ALTER TABLE `tampungobatalkes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tampungpembeliansimrs`
--

DROP TABLE IF EXISTS `tampungpembeliansimrs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tampungpembeliansimrs` (
  `NOPO` char(20) DEFAULT NULL,
  `NAMASUPPLIER` char(250) DEFAULT NULL,
  `NOFAKTUR` char(20) DEFAULT NULL,
  `TGLFAKTUR` date DEFAULT NULL,
  `KDOBATALKES` char(20) DEFAULT NULL,
  `NAMAOBATALKES` varchar(250) DEFAULT NULL,
  `SUBTOTALFAKTUR` double(19,2) DEFAULT NULL,
  `TOTALDISCOUNT` double(19,2) DEFAULT NULL,
  `TOTALPPN` double(19,2) DEFAULT NULL,
  `TOTALTAGIHAN` double(19,2) DEFAULT NULL,
  `JENISTRANSAKSI` char(10) DEFAULT NULL,
  `IDSUPPLIER` char(20) DEFAULT NULL,
  `STATUSPOSTING` int(11) DEFAULT NULL,
  `KDJENISOBATALKES` char(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tampungpembeliansimrs`
--

LOCK TABLES `tampungpembeliansimrs` WRITE;
/*!40000 ALTER TABLE `tampungpembeliansimrs` DISABLE KEYS */;
INSERT INTO `tampungpembeliansimrs` VALUES ('1508030001','ABYUDA','123','2015-08-03','102050586','Able  CVC  2  LUMEN  FV 24296',1000000.00,50000.00,95000.00,1045000.00,'BELI','0001',0,'05'),('1408260001','ABYUDA','test','2014-08-26','102020003','AHA 15%',5000000.00,0.00,500000.00,5500000.00,'BELI','0001',0,'02'),('1408260002','ARI PRIMA','test2 s/a -4','2014-08-26','102020004','AHA 4 %',10000000.00,0.00,1000000.00,11000000.00,'BELI','0014',0,'02');
/*!40000 ALTER TABLE `tampungpembeliansimrs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tbl_close_income`
--

DROP TABLE IF EXISTS `tbl_close_income`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tbl_close_income` (
  `id_account` varchar(60) DEFAULT NULL,
  `nominal` double DEFAULT NULL,
  `closed_date` date DEFAULT NULL,
  `closed_period` int(11) DEFAULT NULL,
  `closed_year` int(11) DEFAULT NULL,
  `id_account_income` varchar(60) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tbl_close_income`
--

LOCK TABLES `tbl_close_income` WRITE;
/*!40000 ALTER TABLE `tbl_close_income` DISABLE KEYS */;
/*!40000 ALTER TABLE `tbl_close_income` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_aktiva`
--

DROP TABLE IF EXISTS `temp_aktiva`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_aktiva` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `saldo` double DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_aktiva`
--

LOCK TABLES `temp_aktiva` WRITE;
/*!40000 ALTER TABLE `temp_aktiva` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_aktiva` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_aktiva_consol`
--

DROP TABLE IF EXISTS `temp_aktiva_consol`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_aktiva_consol` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `account_parent` varchar(255) DEFAULT NULL,
  `saldo` double DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_aktiva_consol`
--

LOCK TABLES `temp_aktiva_consol` WRITE;
/*!40000 ALTER TABLE `temp_aktiva_consol` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_aktiva_consol` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_aktiva_tahunlalu`
--

DROP TABLE IF EXISTS `temp_aktiva_tahunlalu`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_aktiva_tahunlalu` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `saldo` double DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_aktiva_tahunlalu`
--

LOCK TABLES `temp_aktiva_tahunlalu` WRITE;
/*!40000 ALTER TABLE `temp_aktiva_tahunlalu` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_aktiva_tahunlalu` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_income`
--

DROP TABLE IF EXISTS `temp_income`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_income` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `saldo` double DEFAULT NULL,
  `header_group` varchar(255) DEFAULT NULL,
  `company_name` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_income`
--

LOCK TABLES `temp_income` WRITE;
/*!40000 ALTER TABLE `temp_income` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_income` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_income_consol`
--

DROP TABLE IF EXISTS `temp_income_consol`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_income_consol` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `account_parent` varchar(255) DEFAULT NULL,
  `saldo` double DEFAULT NULL,
  `header_group` varchar(255) DEFAULT NULL,
  `company_name` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_income_consol`
--

LOCK TABLES `temp_income_consol` WRITE;
/*!40000 ALTER TABLE `temp_income_consol` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_income_consol` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_income_lra`
--

DROP TABLE IF EXISTS `temp_income_lra`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_income_lra` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `saldo` double DEFAULT NULL,
  `header_group` varchar(255) DEFAULT NULL,
  `company_name` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_income_lra`
--

LOCK TABLES `temp_income_lra` WRITE;
/*!40000 ALTER TABLE `temp_income_lra` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_income_lra` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_income_lra_tahunlalu`
--

DROP TABLE IF EXISTS `temp_income_lra_tahunlalu`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_income_lra_tahunlalu` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `account_parent` varchar(255) DEFAULT NULL,
  `saldo` double DEFAULT NULL,
  `header_group` varchar(255) DEFAULT NULL,
  `company_name` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_income_lra_tahunlalu`
--

LOCK TABLES `temp_income_lra_tahunlalu` WRITE;
/*!40000 ALTER TABLE `temp_income_lra_tahunlalu` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_income_lra_tahunlalu` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_income_period`
--

DROP TABLE IF EXISTS `temp_income_period`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_income_period` (
  `period` int(11) NOT NULL,
  `years` int(11) NOT NULL,
  `nominal` varchar(255) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_income_period`
--

LOCK TABLES `temp_income_period` WRITE;
/*!40000 ALTER TABLE `temp_income_period` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_income_period` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_income_period_lo`
--

DROP TABLE IF EXISTS `temp_income_period_lo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_income_period_lo` (
  `period` int(11) NOT NULL,
  `years` int(11) NOT NULL,
  `nominal` varchar(255) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_income_period_lo`
--

LOCK TABLES `temp_income_period_lo` WRITE;
/*!40000 ALTER TABLE `temp_income_period_lo` DISABLE KEYS */;
INSERT INTO `temp_income_period_lo` VALUES (12,2015,'0','2015-12-15 00:00:00');
/*!40000 ALTER TABLE `temp_income_period_lo` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_income_period_lra`
--

DROP TABLE IF EXISTS `temp_income_period_lra`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_income_period_lra` (
  `period` int(11) NOT NULL,
  `years` int(11) NOT NULL,
  `nominal` varchar(255) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_income_period_lra`
--

LOCK TABLES `temp_income_period_lra` WRITE;
/*!40000 ALTER TABLE `temp_income_period_lra` DISABLE KEYS */;
INSERT INTO `temp_income_period_lra` VALUES (12,2015,'0','2015-12-15 00:00:00');
/*!40000 ALTER TABLE `temp_income_period_lra` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_income_stats`
--

DROP TABLE IF EXISTS `temp_income_stats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_income_stats` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `account_parent` varchar(255) DEFAULT NULL,
  `saldo` double DEFAULT NULL,
  `header_group` varchar(255) DEFAULT NULL,
  `company_name` varchar(255) DEFAULT NULL,
  `flag_revenue` int(11) DEFAULT NULL,
  `flag_expense` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_income_stats`
--

LOCK TABLES `temp_income_stats` WRITE;
/*!40000 ALTER TABLE `temp_income_stats` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_income_stats` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_income_tahunlalu`
--

DROP TABLE IF EXISTS `temp_income_tahunlalu`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_income_tahunlalu` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `account_parent` varchar(255) DEFAULT NULL,
  `saldo` double DEFAULT NULL,
  `header_group` varchar(255) DEFAULT NULL,
  `company_name` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_income_tahunlalu`
--

LOCK TABLES `temp_income_tahunlalu` WRITE;
/*!40000 ALTER TABLE `temp_income_tahunlalu` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_income_tahunlalu` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_mutasi_stock`
--

DROP TABLE IF EXISTS `temp_mutasi_stock`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_mutasi_stock` (
  `nobukti` varchar(120) DEFAULT NULL,
  `date_trn` date DEFAULT NULL,
  `id_item` varchar(60) DEFAULT NULL,
  `item_name` varchar(250) DEFAULT NULL,
  `qty_in` int(11) DEFAULT NULL,
  `qty_out` int(11) DEFAULT NULL,
  `notes` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_mutasi_stock`
--

LOCK TABLES `temp_mutasi_stock` WRITE;
/*!40000 ALTER TABLE `temp_mutasi_stock` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_mutasi_stock` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_neraca`
--

DROP TABLE IF EXISTS `temp_neraca`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_neraca` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `account_parent` varchar(255) DEFAULT NULL,
  `bdebet` double DEFAULT NULL,
  `bkredit` double DEFAULT NULL,
  `debet` double DEFAULT NULL,
  `kredit` double DEFAULT NULL,
  `edebet` double DEFAULT NULL,
  `ekredit` double DEFAULT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_neraca`
--

LOCK TABLES `temp_neraca` WRITE;
/*!40000 ALTER TABLE `temp_neraca` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_neraca` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_neraca_consol`
--

DROP TABLE IF EXISTS `temp_neraca_consol`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_neraca_consol` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `account_parent` varchar(255) DEFAULT NULL,
  `bdebet` double DEFAULT NULL,
  `bkredit` double DEFAULT NULL,
  `debet` double DEFAULT NULL,
  `kredit` double DEFAULT NULL,
  `edebet` double DEFAULT NULL,
  `ekredit` double DEFAULT NULL,
  PRIMARY KEY (`id_account`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_neraca_consol`
--

LOCK TABLES `temp_neraca_consol` WRITE;
/*!40000 ALTER TABLE `temp_neraca_consol` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_neraca_consol` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_no_nota`
--

DROP TABLE IF EXISTS `temp_no_nota`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_no_nota` (
  `no_sales` varchar(200) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_no_nota`
--

LOCK TABLES `temp_no_nota` WRITE;
/*!40000 ALTER TABLE `temp_no_nota` DISABLE KEYS */;
INSERT INTO `temp_no_nota` VALUES ('CSH/09-2016-00006');
/*!40000 ALTER TABLE `temp_no_nota` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_no_nota_pesanan`
--

DROP TABLE IF EXISTS `temp_no_nota_pesanan`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_no_nota_pesanan` (
  `no_sales` varchar(200) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_no_nota_pesanan`
--

LOCK TABLES `temp_no_nota_pesanan` WRITE;
/*!40000 ALTER TABLE `temp_no_nota_pesanan` DISABLE KEYS */;
INSERT INTO `temp_no_nota_pesanan` VALUES ('PSN061500004');
/*!40000 ALTER TABLE `temp_no_nota_pesanan` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_pasiva`
--

DROP TABLE IF EXISTS `temp_pasiva`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_pasiva` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `saldo` double DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_pasiva`
--

LOCK TABLES `temp_pasiva` WRITE;
/*!40000 ALTER TABLE `temp_pasiva` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_pasiva` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_pasiva_consol`
--

DROP TABLE IF EXISTS `temp_pasiva_consol`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_pasiva_consol` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `account_parent` varchar(255) DEFAULT NULL,
  `saldo` double DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_pasiva_consol`
--

LOCK TABLES `temp_pasiva_consol` WRITE;
/*!40000 ALTER TABLE `temp_pasiva_consol` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_pasiva_consol` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_pasiva_tahunlalu`
--

DROP TABLE IF EXISTS `temp_pasiva_tahunlalu`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_pasiva_tahunlalu` (
  `id_account` varchar(255) NOT NULL,
  `account_name` varchar(255) DEFAULT NULL,
  `parent` varchar(255) DEFAULT NULL,
  `saldo` double DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_pasiva_tahunlalu`
--

LOCK TABLES `temp_pasiva_tahunlalu` WRITE;
/*!40000 ALTER TABLE `temp_pasiva_tahunlalu` DISABLE KEYS */;
/*!40000 ALTER TABLE `temp_pasiva_tahunlalu` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tempx_component_cashflow_simrs_det`
--

DROP TABLE IF EXISTS `tempx_component_cashflow_simrs_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tempx_component_cashflow_simrs_det` (
  `id_component` int(11) NOT NULL AUTO_INCREMENT,
  `id_account` varchar(255) DEFAULT NULL,
  `modified_user` varchar(250) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  KEY `id_account` (`id_account`),
  KEY `id_component` (`id_component`),
  CONSTRAINT `tempx_component_cashflow_simrs_det_ibfk_2` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE,
  CONSTRAINT `tempx_component_cashflow_simrs_det_ibfk_3` FOREIGN KEY (`id_component`) REFERENCES `tempx_component_cashflow_simrs_head` (`id_component`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tempx_component_cashflow_simrs_det`
--

LOCK TABLES `tempx_component_cashflow_simrs_det` WRITE;
/*!40000 ALTER TABLE `tempx_component_cashflow_simrs_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `tempx_component_cashflow_simrs_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tempx_component_cashflow_simrs_head`
--

DROP TABLE IF EXISTS `tempx_component_cashflow_simrs_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tempx_component_cashflow_simrs_head` (
  `id_component` int(11) NOT NULL,
  `notes` text,
  `id_type` int(2) DEFAULT NULL,
  `id_trans` int(1) DEFAULT NULL,
  PRIMARY KEY (`id_component`),
  KEY `id_type` (`id_type`),
  CONSTRAINT `tempx_component_cashflow_simrs_head_ibfk_1` FOREIGN KEY (`id_type`) REFERENCES `tempx_component_cashflow_simrs_type` (`id_type`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tempx_component_cashflow_simrs_head`
--

LOCK TABLES `tempx_component_cashflow_simrs_head` WRITE;
/*!40000 ALTER TABLE `tempx_component_cashflow_simrs_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `tempx_component_cashflow_simrs_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tempx_component_cashflow_simrs_type`
--

DROP TABLE IF EXISTS `tempx_component_cashflow_simrs_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tempx_component_cashflow_simrs_type` (
  `id_type` int(11) NOT NULL AUTO_INCREMENT,
  `type` varchar(400) DEFAULT NULL,
  `type2` varchar(400) DEFAULT NULL,
  PRIMARY KEY (`id_type`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tempx_component_cashflow_simrs_type`
--

LOCK TABLES `tempx_component_cashflow_simrs_type` WRITE;
/*!40000 ALTER TABLE `tempx_component_cashflow_simrs_type` DISABLE KEYS */;
INSERT INTO `tempx_component_cashflow_simrs_type` VALUES (1,'ARUS KAS DARI AKTIVITAS OPERASIONAL','ARUS KAS BERSIH DARI AKTIVITAS OPERASIONAL'),(2,'ARUS KAS DARI AKTIVITAS INVESTASI ASET','ARUS KAS BERSIH DARI AKTIVITAS INVESTASI ASET'),(3,'ARUS KAS DARI AKTIVITAS LAIN','ARUS KAS BERSIH DARI AKTIVITAS PENDANAAN LAIN');
/*!40000 ALTER TABLE `tempx_component_cashflow_simrs_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_adjust_stock_det`
--

DROP TABLE IF EXISTS `trn_adjust_stock_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_adjust_stock_det` (
  `no_adjust_stock` varchar(25) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` text,
  `positive` double(10,0) DEFAULT NULL,
  `negative` double(10,0) DEFAULT NULL,
  `id_unit` varchar(30) DEFAULT NULL,
  `weight_plus` double DEFAULT NULL,
  `weight_minus` double DEFAULT NULL,
  KEY `trn_adjust_det_fkey1` (`no_adjust_stock`),
  KEY `trn_adjust_det_fkey2` (`id_item`),
  KEY `trn_adjust_stock_det_ibfk_3` (`id_unit`),
  CONSTRAINT `trn_adjust_stock_det_ibfk_1` FOREIGN KEY (`no_adjust_stock`) REFERENCES `trn_adjust_stock_head` (`no_adjust_stock`) ON UPDATE CASCADE,
  CONSTRAINT `trn_adjust_stock_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_adjust_stock_det_ibfk_3` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_adjust_stock_det`
--

LOCK TABLES `trn_adjust_stock_det` WRITE;
/*!40000 ALTER TABLE `trn_adjust_stock_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_adjust_stock_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_adjust_stock_head`
--

DROP TABLE IF EXISTS `trn_adjust_stock_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_adjust_stock_head` (
  `no_adjust_stock` varchar(25) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `id_warehouse` varchar(25) DEFAULT NULL,
  `total_adjust` double(10,0) DEFAULT NULL,
  `notes` text,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`no_adjust_stock`),
  KEY `fk_id_warehouse_fkey` (`id_warehouse`),
  CONSTRAINT `fk_id_warehouse_fkey` FOREIGN KEY (`id_warehouse`) REFERENCES `mst_warehouse` (`id_warehouse`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_adjust_stock_head`
--

LOCK TABLES `trn_adjust_stock_head` WRITE;
/*!40000 ALTER TABLE `trn_adjust_stock_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_adjust_stock_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_save_adjstock` AFTER INSERT ON `trn_adjust_stock_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_adjust_stock, 'Koreksi Stock', NEW.created_user, 'Input', NEW.created_date, concat('Input Koreksi Stock Baru - ',NEW.id_warehouse)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_edit_adjstock` AFTER UPDATE ON `trn_adjust_stock_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_adjust_stock, 'Koreksi Stock', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Koreksi Stock - ',OLD.id_warehouse)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_hapus_adjstock` AFTER DELETE ON `trn_adjust_stock_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_adjust_stock, 'Koreksi Stock', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Koreksi Stock - ',OLD.id_warehouse)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_adjustjournal_det`
--

DROP TABLE IF EXISTS `trn_adjustjournal_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_adjustjournal_det` (
  `journal_no` varchar(30) DEFAULT NULL,
  `id_account` varchar(25) DEFAULT NULL,
  `notes` text,
  `amount` double DEFAULT NULL,
  KEY `journal_det_fkey2` (`id_account`),
  KEY `journal_det_fkey3` (`journal_no`),
  CONSTRAINT `trn_adjustjournal_det_ibfk_1` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_adjustjournal_det_ibfk_2` FOREIGN KEY (`journal_no`) REFERENCES `trn_adjustjournal_head` (`journal_no`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_adjustjournal_det`
--

LOCK TABLES `trn_adjustjournal_det` WRITE;
/*!40000 ALTER TABLE `trn_adjustjournal_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_adjustjournal_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_adjustjournal_head`
--

DROP TABLE IF EXISTS `trn_adjustjournal_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_adjustjournal_head` (
  `journal_no` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `description` text,
  `total` double DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `id_currency` varchar(30) DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  PRIMARY KEY (`journal_no`),
  KEY `id_currency` (`id_currency`),
  CONSTRAINT `trn_adjustjournal_head_ibfk_1` FOREIGN KEY (`id_currency`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_adjustjournal_head`
--

LOCK TABLES `trn_adjustjournal_head` WRITE;
/*!40000 ALTER TABLE `trn_adjustjournal_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_adjustjournal_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_journal_save_copy` AFTER INSERT ON `trn_adjustjournal_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.journal_no, 'Jurnal Umum', NEW.created_user, 'Input', NEW.created_date, concat('Input Jurnal Umum Baru - ',NEW.journal_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_journal_edit_copy` AFTER UPDATE ON `trn_adjustjournal_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.journal_no, 'Jurnal Umum', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Jurnal Umum - ',OLD.journal_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_journal_hapus_copy` AFTER DELETE ON `trn_adjustjournal_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.journal_no, 'Jurnal Umum', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Jurnal Umum - ',OLD.journal_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_asetbeli_det`
--

DROP TABLE IF EXISTS `trn_asetbeli_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_asetbeli_det` (
  `id_asetbeli` varchar(15) DEFAULT NULL,
  `id_aset` varchar(25) DEFAULT NULL,
  `qty` double DEFAULT NULL,
  `nilai` double DEFAULT NULL,
  `id_coa` varchar(30) DEFAULT NULL,
  `id_golongan` varchar(30) DEFAULT NULL,
  `id_satuan` varchar(30) DEFAULT NULL,
  KEY `id_asetbeli` (`id_asetbeli`),
  KEY `id_aset` (`id_aset`),
  KEY `id_coa` (`id_coa`),
  KEY `id_golongan` (`id_golongan`),
  KEY `id_satuan` (`id_satuan`),
  CONSTRAINT `trn_asetbeli_det_ibfk_1` FOREIGN KEY (`id_asetbeli`) REFERENCES `trn_asetbeli_head` (`id_asetbeli`) ON UPDATE CASCADE,
  CONSTRAINT `trn_asetbeli_det_ibfk_2` FOREIGN KEY (`id_aset`) REFERENCES `mst_aset` (`id_aset`) ON UPDATE CASCADE,
  CONSTRAINT `trn_asetbeli_det_ibfk_3` FOREIGN KEY (`id_coa`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE,
  CONSTRAINT `trn_asetbeli_det_ibfk_4` FOREIGN KEY (`id_golongan`) REFERENCES `mst_golaset` (`id_golongan`) ON UPDATE CASCADE,
  CONSTRAINT `trn_asetbeli_det_ibfk_5` FOREIGN KEY (`id_satuan`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_asetbeli_det`
--

LOCK TABLES `trn_asetbeli_det` WRITE;
/*!40000 ALTER TABLE `trn_asetbeli_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_asetbeli_det` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `del_asetbeli` AFTER DELETE ON `trn_asetbeli_det` FOR EACH ROW begin

delete from m_aset where id_aset=old.id_aset;
end */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_asetbeli_head`
--

DROP TABLE IF EXISTS `trn_asetbeli_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_asetbeli_head` (
  `id_asetbeli` varchar(25) NOT NULL DEFAULT '',
  `date_trn` date DEFAULT NULL,
  `id_supplier` varchar(30) DEFAULT NULL,
  `notes` varchar(120) DEFAULT NULL,
  `nominal` double DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`id_asetbeli`),
  KEY `id_supplier` (`id_supplier`),
  KEY `id_asetbeli` (`id_asetbeli`),
  CONSTRAINT `trn_asetbeli_head_ibfk_1` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_asetbeli_head`
--

LOCK TABLES `trn_asetbeli_head` WRITE;
/*!40000 ALTER TABLE `trn_asetbeli_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_asetbeli_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_asetkeluar_det`
--

DROP TABLE IF EXISTS `trn_asetkeluar_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_asetkeluar_det` (
  `id_asetkeluar` varchar(60) NOT NULL DEFAULT '',
  `id_aset` varchar(30) DEFAULT NULL,
  `qty` varchar(30) DEFAULT NULL,
  `id_satuan` varchar(255) DEFAULT NULL,
  `ket` text,
  PRIMARY KEY (`id_asetkeluar`),
  KEY `id_asetkeluar` (`id_asetkeluar`) USING BTREE,
  KEY `id_aset` (`id_aset`) USING BTREE,
  KEY `id_satuan` (`id_satuan`) USING BTREE,
  CONSTRAINT `trn_asetkeluar_det_ibfk_1` FOREIGN KEY (`id_asetkeluar`) REFERENCES `trn_asetkeluar_head` (`id_asetkeluar`) ON UPDATE CASCADE,
  CONSTRAINT `trn_asetkeluar_det_ibfk_2` FOREIGN KEY (`id_aset`) REFERENCES `mst_aset` (`id_aset`) ON UPDATE CASCADE,
  CONSTRAINT `trn_asetkeluar_det_ibfk_3` FOREIGN KEY (`id_satuan`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_asetkeluar_det`
--

LOCK TABLES `trn_asetkeluar_det` WRITE;
/*!40000 ALTER TABLE `trn_asetkeluar_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_asetkeluar_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_asetkeluar_head`
--

DROP TABLE IF EXISTS `trn_asetkeluar_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_asetkeluar_head` (
  `id_asetkeluar` varchar(60) NOT NULL DEFAULT '',
  `date_trn` date DEFAULT NULL,
  `notes` text,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`id_asetkeluar`),
  KEY `id_asetkeluar` (`id_asetkeluar`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_asetkeluar_head`
--

LOCK TABLES `trn_asetkeluar_head` WRITE;
/*!40000 ALTER TABLE `trn_asetkeluar_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_asetkeluar_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_asetmasuk_det`
--

DROP TABLE IF EXISTS `trn_asetmasuk_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_asetmasuk_det` (
  `id_asetmasuk` varchar(30) NOT NULL DEFAULT '',
  `id_aset` varchar(30) DEFAULT NULL,
  `qty` varchar(30) DEFAULT NULL,
  `id_satuan` varchar(255) DEFAULT NULL,
  `ket` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`id_asetmasuk`),
  KEY `id_asetkeluar` (`id_asetmasuk`) USING BTREE,
  KEY `id_aset` (`id_aset`) USING BTREE,
  KEY `id_satuan` (`id_satuan`) USING BTREE,
  CONSTRAINT `trn_asetmasuk_det_ibfk_2` FOREIGN KEY (`id_aset`) REFERENCES `mst_aset` (`id_aset`) ON UPDATE CASCADE,
  CONSTRAINT `trn_asetmasuk_det_ibfk_3` FOREIGN KEY (`id_satuan`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_asetmasuk_det_ibfk_4` FOREIGN KEY (`id_asetmasuk`) REFERENCES `trn_asetmasuk_head` (`id_asetmasuk`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_asetmasuk_det`
--

LOCK TABLES `trn_asetmasuk_det` WRITE;
/*!40000 ALTER TABLE `trn_asetmasuk_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_asetmasuk_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_asetmasuk_head`
--

DROP TABLE IF EXISTS `trn_asetmasuk_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_asetmasuk_head` (
  `id_asetmasuk` varchar(25) NOT NULL DEFAULT '',
  `date_trn` date DEFAULT NULL,
  `notes` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`id_asetmasuk`),
  KEY `id_asetkeluar` (`id_asetmasuk`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_asetmasuk_head`
--

LOCK TABLES `trn_asetmasuk_head` WRITE;
/*!40000 ALTER TABLE `trn_asetmasuk_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_asetmasuk_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_cashbank_det`
--

DROP TABLE IF EXISTS `trn_cashbank_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashbank_det` (
  `cashbank_no` varchar(30) NOT NULL,
  `id_account` varchar(30) DEFAULT NULL,
  `notes` text,
  `amount` double DEFAULT NULL,
  KEY `fk_cash_bank_no` (`cashbank_no`),
  CONSTRAINT `trn_cashbank_det_ibfk_1` FOREIGN KEY (`cashbank_no`) REFERENCES `trn_cashbank_head` (`cashbank_no`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashbank_det`
--

LOCK TABLES `trn_cashbank_det` WRITE;
/*!40000 ALTER TABLE `trn_cashbank_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashbank_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_cashbank_head`
--

DROP TABLE IF EXISTS `trn_cashbank_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashbank_head` (
  `cashbank_no` varchar(30) NOT NULL,
  `id_account` varchar(30) DEFAULT NULL,
  `date_trn` date DEFAULT NULL,
  `total` double DEFAULT NULL,
  `notes` text,
  `flag_trans` varchar(2) DEFAULT NULL,
  `evidence_no` varchar(255) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `id_currency` varchar(30) DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  PRIMARY KEY (`cashbank_no`),
  KEY `fk_account_id` (`id_account`),
  KEY `id_currency` (`id_currency`),
  CONSTRAINT `trn_cashbank_head_ibfk_1` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE,
  CONSTRAINT `trn_cashbank_head_ibfk_2` FOREIGN KEY (`id_currency`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashbank_head`
--

LOCK TABLES `trn_cashbank_head` WRITE;
/*!40000 ALTER TABLE `trn_cashbank_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashbank_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_cashbank_save` AFTER INSERT ON `trn_cashbank_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.cashbank_no, concat('Kas Bank',NEW.flag_trans), NEW.created_user, 'Input', NEW.created_date, concat('Input Transaksi Kas Bank Baru - ',NEW.id_account)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_cashbank_edit` AFTER UPDATE ON `trn_cashbank_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.cashbank_no, concat('Kas Bank',NEW.flag_trans), NEW.created_user, 'Edit', NEW.created_date, concat('Edit Transaksi Kas Bank - ',OLD.id_account)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_cashbank_hapus` AFTER DELETE ON `trn_cashbank_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.cashbank_no, concat('Kas Bank',OLD.flag_trans), OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Transaksi Kas Bank - ',OLD.id_account)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_cashier_det`
--

DROP TABLE IF EXISTS `trn_cashier_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashier_det` (
  `no_sales` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `disc_nom` double(19,0) DEFAULT NULL,
  `nominal_net` double(19,0) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  `weight` double(19,2) DEFAULT NULL,
  `priceperweight` double(19,0) DEFAULT NULL,
  KEY `trn_sales_det_ibfk_1` (`no_sales`),
  KEY `trn_sales_det_ibfk_2` (`id_item`),
  KEY `trn_sales_det_ibfk_5` (`id_unit`),
  CONSTRAINT `trn_cashier_det_ibfk_1` FOREIGN KEY (`no_sales`) REFERENCES `trn_cashier_head` (`no_sales`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_cashier_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_cashier_det_ibfk_3` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashier_det`
--

LOCK TABLES `trn_cashier_det` WRITE;
/*!40000 ALTER TABLE `trn_cashier_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashier_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_cashier_discbrand_det`
--

DROP TABLE IF EXISTS `trn_cashier_discbrand_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashier_discbrand_det` (
  `no_cashier` varchar(255) NOT NULL,
  `id_item` varchar(255) NOT NULL,
  `item_name` varchar(255) NOT NULL,
  `nom_disc` double NOT NULL,
  KEY `no_sales_order` (`no_cashier`),
  KEY `id_item` (`id_item`),
  CONSTRAINT `trn_cashier_discbrand_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_cashier_discbrand_det_ibfk_3` FOREIGN KEY (`no_cashier`) REFERENCES `trn_cashier_head` (`no_sales`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashier_discbrand_det`
--

LOCK TABLES `trn_cashier_discbrand_det` WRITE;
/*!40000 ALTER TABLE `trn_cashier_discbrand_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashier_discbrand_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_cashier_disccat_det`
--

DROP TABLE IF EXISTS `trn_cashier_disccat_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashier_disccat_det` (
  `no_cashier` varchar(255) NOT NULL,
  `id_item` varchar(255) NOT NULL,
  `item_name` varchar(255) NOT NULL,
  `nom_disc` double NOT NULL,
  KEY `no_sales_order` (`no_cashier`),
  KEY `id_item` (`id_item`),
  CONSTRAINT `trn_cashier_disccat_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_cashier_disccat_det_ibfk_3` FOREIGN KEY (`no_cashier`) REFERENCES `trn_cashier_head` (`no_sales`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashier_disccat_det`
--

LOCK TABLES `trn_cashier_disccat_det` WRITE;
/*!40000 ALTER TABLE `trn_cashier_disccat_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashier_disccat_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_cashier_discitem_det`
--

DROP TABLE IF EXISTS `trn_cashier_discitem_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashier_discitem_det` (
  `no_cashier` varchar(255) NOT NULL,
  `id_item` varchar(255) NOT NULL,
  `item_name` varchar(255) NOT NULL,
  `qty` double NOT NULL,
  `id_unit` varchar(60) NOT NULL,
  KEY `no_sales_order` (`no_cashier`),
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  CONSTRAINT `trn_cashier_discitem_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_cashier_discitem_det_ibfk_3` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_cashier_discitem_det_ibfk_4` FOREIGN KEY (`no_cashier`) REFERENCES `trn_cashier_head` (`no_sales`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashier_discitem_det`
--

LOCK TABLES `trn_cashier_discitem_det` WRITE;
/*!40000 ALTER TABLE `trn_cashier_discitem_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashier_discitem_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_cashier_disctype_det`
--

DROP TABLE IF EXISTS `trn_cashier_disctype_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashier_disctype_det` (
  `no_cashier` varchar(255) NOT NULL,
  `id_item` varchar(255) NOT NULL,
  `item_name` varchar(255) NOT NULL,
  `nom_disc` double NOT NULL,
  KEY `no_sales_order` (`no_cashier`),
  KEY `id_item` (`id_item`),
  CONSTRAINT `trn_cashier_disctype_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_cashier_disctype_det_ibfk_3` FOREIGN KEY (`no_cashier`) REFERENCES `trn_cashier_head` (`no_sales`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashier_disctype_det`
--

LOCK TABLES `trn_cashier_disctype_det` WRITE;
/*!40000 ALTER TABLE `trn_cashier_disctype_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashier_disctype_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_cashier_head`
--

DROP TABLE IF EXISTS `trn_cashier_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashier_head` (
  `no_sales` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `customer` varchar(255) DEFAULT NULL,
  `cust_address` text,
  `cust_phone` varchar(255) DEFAULT NULL,
  `payment_method` int(11) DEFAULT NULL,
  `subtotal` double(19,4) DEFAULT NULL,
  `discount` double(19,4) DEFAULT NULL,
  `tax` double(19,4) DEFAULT NULL,
  `total` double(19,4) DEFAULT NULL,
  `term` int(11) DEFAULT NULL,
  `termpaydisc` int(11) DEFAULT NULL,
  `discpay` int(11) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `flag_member` int(1) DEFAULT NULL,
  `id_customer` varchar(120) DEFAULT NULL,
  `paid` double DEFAULT NULL,
  `terbilang` varchar(600) DEFAULT NULL,
  PRIMARY KEY (`no_sales`),
  KEY `trn_sales_head_ibfk_1` (`customer`),
  KEY `trn_sales_head_ibfk_3` (`payment_method`),
  CONSTRAINT `trn_cashier_head_ibfk_1` FOREIGN KEY (`payment_method`) REFERENCES `ref_pay_method` (`ref_status_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashier_head`
--

LOCK TABLES `trn_cashier_head` WRITE;
/*!40000 ALTER TABLE `trn_cashier_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashier_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_cashier_return_det`
--

DROP TABLE IF EXISTS `trn_cashier_return_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashier_return_det` (
  `no_sales_return` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  `no_sales` varchar(30) DEFAULT NULL,
  `disc_nom` double DEFAULT NULL,
  `nominal_net` double DEFAULT NULL,
  `weight` double(19,2) DEFAULT NULL,
  `priceperweight` double(19,0) DEFAULT NULL,
  KEY `trn_sales_return_nosalesreturn` (`no_sales_return`),
  KEY `trn_sales_return_nosales` (`no_sales`),
  KEY `trn_sales_return_nosalesreturn_fkey3` (`id_item`),
  KEY `trn_sales_return_nosalesreturn_fkey4` (`id_unit`),
  CONSTRAINT `trn_cashier_return_det_ibfk_1` FOREIGN KEY (`no_sales`) REFERENCES `trn_cashier_head` (`no_sales`) ON UPDATE CASCADE,
  CONSTRAINT `trn_cashier_return_det_ibfk_2` FOREIGN KEY (`no_sales_return`) REFERENCES `trn_cashier_return_head` (`no_sales_return`) ON UPDATE CASCADE,
  CONSTRAINT `trn_cashier_return_det_ibfk_3` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_cashier_return_det_ibfk_4` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashier_return_det`
--

LOCK TABLES `trn_cashier_return_det` WRITE;
/*!40000 ALTER TABLE `trn_cashier_return_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashier_return_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_cashier_return_head`
--

DROP TABLE IF EXISTS `trn_cashier_return_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashier_return_head` (
  `no_sales_return` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `customer` varchar(250) DEFAULT NULL,
  `payment_method` int(25) DEFAULT NULL,
  `subtotal` double(19,4) DEFAULT NULL,
  `disc` double(19,4) DEFAULT NULL,
  `tax` double(19,4) DEFAULT NULL,
  `total` double(19,4) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  `id_warehouse` varchar(60) DEFAULT NULL,
  `customer_addr` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`no_sales_return`),
  KEY `trn_sales_return_id_customer_fkey` (`customer`),
  KEY `trn_sales_return_id_paymethod_fkey` (`payment_method`),
  CONSTRAINT `trn_cashier_return_head_ibfk_2` FOREIGN KEY (`payment_method`) REFERENCES `ref_pay_method` (`ref_status_id`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashier_return_head`
--

LOCK TABLES `trn_cashier_return_head` WRITE;
/*!40000 ALTER TABLE `trn_cashier_return_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashier_return_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_sales_return_save_copy` AFTER INSERT ON `trn_cashier_return_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_sales_return, 'Retur Transaksi Kasir', NEW.created_user, 'Input', NEW.created_date, concat('Input Retur Jual Baru - ',NEW.customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_sales_return_edit_copy` AFTER UPDATE ON `trn_cashier_return_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_sales_return, 'Retur Penjualan Kasir', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Retur Jual - ',OLD.customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_sales_return_hapus_copy` AFTER DELETE ON `trn_cashier_return_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_sales_return, 'Retur Penjualan Kasir', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Retur Jual - ',OLD.customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_cashier_service_det`
--

DROP TABLE IF EXISTS `trn_cashier_service_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashier_service_det` (
  `no_sales` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_service` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `disc_nom` double(19,0) DEFAULT NULL,
  `nominal_net` double(19,0) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  KEY `trn_sales_det_ibfk_1` (`no_sales`),
  KEY `trn_sales_det_ibfk_2` (`id_service`),
  KEY `trn_sales_det_ibfk_5` (`id_unit`),
  CONSTRAINT `trn_cashier_service_det_ibfk_1` FOREIGN KEY (`no_sales`) REFERENCES `trn_cashier_head` (`no_sales`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_cashier_service_det_ibfk_3` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_cashier_service_det_ibfk_4` FOREIGN KEY (`id_service`) REFERENCES `mst_service` (`id_service`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashier_service_det`
--

LOCK TABLES `trn_cashier_service_det` WRITE;
/*!40000 ALTER TABLE `trn_cashier_service_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashier_service_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_cashpurchase_det`
--

DROP TABLE IF EXISTS `trn_cashpurchase_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashpurchase_det` (
  `no_purchase` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  KEY `trn_purchase_det_item_ibfk_1` (`id_item`),
  KEY `trn_purchase_det_ibfk_1` (`no_purchase`),
  KEY `trn_purchase_det_item_ibfk_4` (`id_unit`),
  CONSTRAINT `trn_cashpurchase_det_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_cashpurchase_det_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashpurchase_det`
--

LOCK TABLES `trn_cashpurchase_det` WRITE;
/*!40000 ALTER TABLE `trn_cashpurchase_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashpurchase_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_cashpurchase_head`
--

DROP TABLE IF EXISTS `trn_cashpurchase_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashpurchase_head` (
  `no_purchase` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `no_purchase_order` varchar(30) DEFAULT NULL,
  `id_supplier` varchar(25) DEFAULT NULL,
  `payment_method` int(25) DEFAULT NULL,
  `payment_term_days` int(11) DEFAULT NULL,
  `disc_term_days` int(11) DEFAULT NULL,
  `disc_term_nominal` decimal(19,4) DEFAULT NULL,
  `subtotal` decimal(19,4) DEFAULT NULL,
  `freight` decimal(19,4) DEFAULT NULL,
  `tax` decimal(19,4) DEFAULT NULL,
  `disc` decimal(10,0) DEFAULT NULL,
  `total` decimal(19,4) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  PRIMARY KEY (`no_purchase`),
  KEY `trn_purchase_head_ibfk_1` (`no_purchase_order`),
  KEY `trn_purchase_head_ibfk_2` (`id_supplier`),
  KEY `trn_purchase_head_ibfk_3` (`payment_method`),
  CONSTRAINT `trn_cashpurchase_head_ibfk_1` FOREIGN KEY (`no_purchase_order`) REFERENCES `trn_purchase_order_head` (`no_purchase_order`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_cashpurchase_head_ibfk_2` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_cashpurchase_head_ibfk_3` FOREIGN KEY (`payment_method`) REFERENCES `ref_pay_method` (`ref_status_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashpurchase_head`
--

LOCK TABLES `trn_cashpurchase_head` WRITE;
/*!40000 ALTER TABLE `trn_cashpurchase_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashpurchase_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_cashro_det`
--

DROP TABLE IF EXISTS `trn_cashro_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashro_det` (
  `no_request_order` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `flag_status` int(11) DEFAULT NULL,
  `approve_date` datetime DEFAULT NULL,
  `approve_qty` int(11) DEFAULT NULL,
  `flag_po` int(11) DEFAULT NULL,
  KEY `trn_purchase_order_det_item_ibfk_1` (`id_item`),
  KEY `trn_purchase_order_det_ibfk_1` (`no_request_order`),
  KEY `trn_purchase_order_det_item_ibfk_6` (`id_unit`),
  CONSTRAINT `trn_cashro_det_ibfk_1` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_cashro_det_ibfk_2` FOREIGN KEY (`no_request_order`) REFERENCES `trn_request_order_head` (`no_request_order`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashro_det`
--

LOCK TABLES `trn_cashro_det` WRITE;
/*!40000 ALTER TABLE `trn_cashro_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashro_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_cashro_head`
--

DROP TABLE IF EXISTS `trn_cashro_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_cashro_head` (
  `no_request_order` varchar(30) NOT NULL,
  `id_supplier` varchar(25) DEFAULT NULL,
  `date_trn` date DEFAULT NULL,
  `notes` longtext,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`no_request_order`),
  KEY `id_supplier` (`id_supplier`),
  CONSTRAINT `trn_cashro_head_ibfk_1` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_cashro_head`
--

LOCK TABLES `trn_cashro_head` WRITE;
/*!40000 ALTER TABLE `trn_cashro_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_cashro_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_completedpo_det`
--

DROP TABLE IF EXISTS `trn_completedpo_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_completedpo_det` (
  `no_purchase` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `item_name` varchar(200) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  KEY `trn_purchase_det_item_ibfk_1` (`id_item`),
  KEY `trn_purchase_det_ibfk_1` (`no_purchase`),
  KEY `trn_purchase_det_item_ibfk_4` (`id_unit`),
  KEY `id_curr` (`id_curr`),
  CONSTRAINT `trn_completedpo_det_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_completedpo_det_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_completedpo_det_ibfk_3` FOREIGN KEY (`id_curr`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE,
  CONSTRAINT `trn_completedpo_det_ibfk_4` FOREIGN KEY (`no_purchase`) REFERENCES `trn_completedpo_head` (`no_purchase`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_completedpo_det`
--

LOCK TABLES `trn_completedpo_det` WRITE;
/*!40000 ALTER TABLE `trn_completedpo_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_completedpo_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_completedpo_head`
--

DROP TABLE IF EXISTS `trn_completedpo_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_completedpo_head` (
  `no_purchase` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `no_purchase_order` varchar(30) DEFAULT NULL,
  `id_supplier` varchar(25) DEFAULT NULL,
  `id_account` varchar(60) DEFAULT NULL,
  `subtotal` decimal(19,4) DEFAULT NULL,
  `freight` decimal(19,4) DEFAULT NULL,
  `tax` decimal(19,4) DEFAULT NULL,
  `disc` decimal(10,0) DEFAULT NULL,
  `total` decimal(19,4) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  `uangmuka` double(19,0) DEFAULT NULL,
  `pelunasan` double(19,0) DEFAULT NULL,
  PRIMARY KEY (`no_purchase`),
  KEY `trn_purchase_head_ibfk_1` (`no_purchase_order`),
  KEY `trn_purchase_head_ibfk_2` (`id_supplier`),
  KEY `id_account` (`id_account`),
  CONSTRAINT `trn_completedpo_head_ibfk_1` FOREIGN KEY (`no_purchase_order`) REFERENCES `trn_purchase_order_head` (`no_purchase_order`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_completedpo_head_ibfk_2` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_completedpo_head_ibfk_4` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_completedpo_head`
--

LOCK TABLES `trn_completedpo_head` WRITE;
/*!40000 ALTER TABLE `trn_completedpo_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_completedpo_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_save_copy2` AFTER INSERT ON `trn_completedpo_head`
FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_purchase, 'Pelunasan PO', NEW.created_user, 'Input', NEW.created_date, concat('Input Pelunasan PO Baru - ',NEW.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_edit_copy2` AFTER UPDATE ON `trn_completedpo_head`
FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase, 'Pelunasan PO', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Pelunasan PO - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_hapus_copy2` AFTER DELETE ON `trn_completedpo_head`
FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase, 'Pelunasan PO', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Pelunasan PO - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_completedso_head`
--

DROP TABLE IF EXISTS `trn_completedso_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_completedso_head` (
  `no_sales_order` varchar(30) NOT NULL,
  `id_customer` varchar(25) DEFAULT NULL,
  `date_trn` date DEFAULT NULL,
  `notes` text,
  `subtotal` double(19,2) DEFAULT NULL,
  `tax` double(19,2) DEFAULT NULL,
  `total` double(19,2) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `flag_status_invoice` int(11) DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  `id_employee` varchar(60) DEFAULT NULL,
  `discount` double DEFAULT NULL,
  `nett_total` double DEFAULT NULL,
  `is_discbrand` int(1) DEFAULT NULL,
  `is_disctype` int(1) DEFAULT NULL,
  `is_disccat` int(1) DEFAULT NULL,
  `is_discitem` int(1) DEFAULT NULL,
  `uang_muka` double(19,2) DEFAULT NULL,
  `id_account` varchar(30) DEFAULT NULL,
  `id_curr_um` varchar(30) DEFAULT NULL,
  `kurs_um` varchar(30) DEFAULT NULL,
  `id_ekspedisi` varchar(30) DEFAULT NULL,
  `freight_est` double(19,2) DEFAULT NULL,
  `tgl_uang_muka` date DEFAULT NULL,
  PRIMARY KEY (`no_sales_order`),
  KEY `id_customer` (`id_customer`),
  KEY `id_employee` (`id_employee`),
  KEY `id_account` (`id_account`),
  KEY `id_ekspedisi` (`id_ekspedisi`),
  CONSTRAINT `trn_completedso_head_ibfk_1` FOREIGN KEY (`id_customer`) REFERENCES `mst_customer` (`id_customer`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_completedso_head`
--

LOCK TABLES `trn_completedso_head` WRITE;
/*!40000 ALTER TABLE `trn_completedso_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_completedso_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_so_save_copy` AFTER INSERT ON `trn_completedso_head`
FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_sales_order, 'Pelunasan SO', NEW.created_user, 'Input', NEW.created_date, concat('Input Pelunasan SO Baru - ',NEW.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_so_edit_copy` AFTER UPDATE ON `trn_completedso_head`
FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_sales_order, 'Pelunasan SO', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Pelunasan SO - ',OLD.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_so_hapus_copy` AFTER DELETE ON `trn_completedso_head`
FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_sales_order, 'Pelunasan SO', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Pelunasan SO- ',OLD.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_delivery_order_det`
--

DROP TABLE IF EXISTS `trn_delivery_order_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_delivery_order_det` (
  `no_delivery_order` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `sent_qty` int(11) DEFAULT NULL,
  KEY `trn_sales_order_det_ibfk_1` (`no_delivery_order`),
  KEY `trn_sales_order_det_ibfk_2` (`id_item`),
  CONSTRAINT `trn_delivery_order_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_delivery_order_det_ibfk_3` FOREIGN KEY (`no_delivery_order`) REFERENCES `trn_delivery_order_head` (`no_delivery_order`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_delivery_order_det`
--

LOCK TABLES `trn_delivery_order_det` WRITE;
/*!40000 ALTER TABLE `trn_delivery_order_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_delivery_order_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_delivery_order_head`
--

DROP TABLE IF EXISTS `trn_delivery_order_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_delivery_order_head` (
  `no_delivery_order` varchar(30) NOT NULL,
  `no_sales_order` varchar(30) DEFAULT NULL,
  `id_customer` varchar(25) DEFAULT NULL,
  `date_trn` date DEFAULT NULL,
  `notes` text,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `id_warehouse` varchar(60) DEFAULT NULL,
  `id_ekspedisi` varchar(30) DEFAULT NULL,
  `shipping_address` varchar(250) DEFAULT NULL,
  `shipping_city` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`no_delivery_order`),
  KEY `id_customer` (`id_customer`),
  KEY `no_sales_order` (`no_sales_order`),
  CONSTRAINT `trn_delivery_order_head_ibfk_1` FOREIGN KEY (`id_customer`) REFERENCES `mst_customer` (`id_customer`),
  CONSTRAINT `trn_delivery_order_head_ibfk_2` FOREIGN KEY (`no_sales_order`) REFERENCES `trn_sales_order_head` (`no_sales_order`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_delivery_order_head`
--

LOCK TABLES `trn_delivery_order_head` WRITE;
/*!40000 ALTER TABLE `trn_delivery_order_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_delivery_order_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_do_save` AFTER INSERT ON `trn_delivery_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_delivery_order, 'Surat Jalan', NEW.created_user, 'Input', NEW.created_date, concat('Input Surat Jalan Baru - ',NEW.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_do_edit` AFTER UPDATE ON `trn_delivery_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_delivery_order, 'Surat Jalan', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Surat Jalan - ',OLD.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_do_hapus` AFTER DELETE ON `trn_delivery_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_delivery_order, 'Surat Jalan', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Surat Jalan - ',OLD.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_directpurchase_det`
--

DROP TABLE IF EXISTS `trn_directpurchase_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_directpurchase_det` (
  `no_purchase` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `item_name` varchar(200) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  KEY `trn_purchase_det_item_ibfk_1` (`id_item`),
  KEY `trn_purchase_det_ibfk_1` (`no_purchase`),
  KEY `trn_purchase_det_item_ibfk_4` (`id_unit`),
  KEY `id_curr` (`id_curr`),
  CONSTRAINT `trn_directpurchase_det_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_directpurchase_det_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_directpurchase_det_ibfk_3` FOREIGN KEY (`id_curr`) REFERENCES `mst_currency` (`id_currency`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_directpurchase_det`
--

LOCK TABLES `trn_directpurchase_det` WRITE;
/*!40000 ALTER TABLE `trn_directpurchase_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_directpurchase_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_directpurchase_head`
--

DROP TABLE IF EXISTS `trn_directpurchase_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_directpurchase_head` (
  `no_purchase` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `no_purchase_order` varchar(30) DEFAULT NULL,
  `id_supplier` varchar(25) DEFAULT NULL,
  `id_account` varchar(60) DEFAULT NULL,
  `payment_method` int(25) DEFAULT NULL,
  `payment_term_days` int(11) DEFAULT NULL,
  `disc_term_days` int(11) DEFAULT NULL,
  `disc_term_nominal` decimal(19,4) DEFAULT NULL,
  `subtotal` decimal(19,4) DEFAULT NULL,
  `freight` decimal(19,4) DEFAULT NULL,
  `tax` decimal(19,4) DEFAULT NULL,
  `disc` decimal(10,0) DEFAULT NULL,
  `total` decimal(19,4) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  PRIMARY KEY (`no_purchase`),
  KEY `trn_purchase_head_ibfk_1` (`no_purchase_order`),
  KEY `trn_purchase_head_ibfk_2` (`id_supplier`),
  KEY `trn_purchase_head_ibfk_3` (`payment_method`),
  KEY `id_account` (`id_account`),
  CONSTRAINT `trn_directpurchase_head_ibfk_1` FOREIGN KEY (`no_purchase_order`) REFERENCES `trn_purchase_order_head` (`no_purchase_order`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_directpurchase_head_ibfk_2` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_directpurchase_head_ibfk_3` FOREIGN KEY (`payment_method`) REFERENCES `ref_pay_method` (`ref_status_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_directpurchase_head_ibfk_4` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_directpurchase_head`
--

LOCK TABLES `trn_directpurchase_head` WRITE;
/*!40000 ALTER TABLE `trn_directpurchase_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_directpurchase_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_save_copy` AFTER INSERT ON `trn_directpurchase_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_purchase, 'Faktur Pembelian', NEW.created_user, 'Input', NEW.created_date, concat('Input Faktur Beli Baru - ',NEW.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_edit_copy` AFTER UPDATE ON `trn_directpurchase_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase, 'Faktur Pembelian', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Faktur Beli - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_hapus_copy` AFTER DELETE ON `trn_directpurchase_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase, 'Faktur Pembelian', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Faktur Beli - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_do_discitem_det`
--

DROP TABLE IF EXISTS `trn_do_discitem_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_do_discitem_det` (
  `no_do` varchar(255) NOT NULL,
  `id_item` varchar(255) NOT NULL,
  `item_name` varchar(255) NOT NULL,
  `qty` double NOT NULL,
  `id_unit` varchar(60) NOT NULL,
  KEY `no_sales_order` (`no_do`),
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  CONSTRAINT `trn_do_discitem_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_do_discitem_det_ibfk_3` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_do_discitem_det_ibfk_4` FOREIGN KEY (`no_do`) REFERENCES `trn_delivery_order_head` (`no_delivery_order`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_do_discitem_det`
--

LOCK TABLES `trn_do_discitem_det` WRITE;
/*!40000 ALTER TABLE `trn_do_discitem_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_do_discitem_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_ekspedisi_det`
--

DROP TABLE IF EXISTS `trn_ekspedisi_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_ekspedisi_det` (
  `no_ekspedisi` varchar(60) DEFAULT NULL,
  `no_do` varchar(60) DEFAULT NULL,
  `no_resi` varchar(120) DEFAULT NULL,
  `freight_address` varchar(250) DEFAULT NULL,
  `freight_city` varchar(120) DEFAULT NULL,
  `freight_cost` double(19,2) DEFAULT NULL,
  KEY `no_do` (`no_do`),
  CONSTRAINT `trn_ekspedisi_det_ibfk_1` FOREIGN KEY (`no_do`) REFERENCES `trn_delivery_order_head` (`no_delivery_order`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_ekspedisi_det`
--

LOCK TABLES `trn_ekspedisi_det` WRITE;
/*!40000 ALTER TABLE `trn_ekspedisi_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_ekspedisi_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_ekspedisi_head`
--

DROP TABLE IF EXISTS `trn_ekspedisi_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_ekspedisi_head` (
  `no_ekspedisi` varchar(60) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `total` double(19,2) DEFAULT NULL,
  `id_currency` varchar(30) DEFAULT NULL,
  `id_account` varchar(30) DEFAULT NULL,
  `kurs` double(19,2) DEFAULT NULL,
  `notes` text,
  `created_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`no_ekspedisi`),
  KEY `id_currency` (`id_currency`),
  KEY `id_account` (`id_account`),
  CONSTRAINT `trn_ekspedisi_head_ibfk_1` FOREIGN KEY (`id_currency`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE,
  CONSTRAINT `trn_ekspedisi_head_ibfk_2` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_ekspedisi_head`
--

LOCK TABLES `trn_ekspedisi_head` WRITE;
/*!40000 ALTER TABLE `trn_ekspedisi_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_ekspedisi_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_journal_det`
--

DROP TABLE IF EXISTS `trn_journal_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_journal_det` (
  `journal_no` varchar(30) DEFAULT NULL,
  `id_account` varchar(25) DEFAULT NULL,
  `notes` varchar(500) DEFAULT NULL,
  `amount` double DEFAULT NULL,
  KEY `journal_det_fkey2` (`id_account`),
  KEY `journal_det_fkey3` (`journal_no`),
  CONSTRAINT `trn_journal_det_ibfk_1` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_journal_det_ibfk_2` FOREIGN KEY (`journal_no`) REFERENCES `trn_journal_head` (`journal_no`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_journal_det`
--

LOCK TABLES `trn_journal_det` WRITE;
/*!40000 ALTER TABLE `trn_journal_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_journal_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_journal_head`
--

DROP TABLE IF EXISTS `trn_journal_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_journal_head` (
  `journal_no` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `description` varchar(500) DEFAULT NULL,
  `total` double DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `id_currency` varchar(30) DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  PRIMARY KEY (`journal_no`),
  KEY `id_currency` (`id_currency`),
  CONSTRAINT `trn_journal_head_ibfk_1` FOREIGN KEY (`id_currency`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_journal_head`
--

LOCK TABLES `trn_journal_head` WRITE;
/*!40000 ALTER TABLE `trn_journal_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_journal_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_journal_save` AFTER INSERT ON `trn_journal_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.journal_no, 'Jurnal Umum', NEW.created_user, 'Input', NEW.created_date, concat('Input Jurnal Umum Baru - ',NEW.journal_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_journal_edit` AFTER UPDATE ON `trn_journal_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.journal_no, 'Jurnal Umum', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Jurnal Umum - ',OLD.journal_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_journal_hapus` AFTER DELETE ON `trn_journal_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.journal_no, 'Jurnal Umum', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Jurnal Umum - ',OLD.journal_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_journallayananmedik_det`
--

DROP TABLE IF EXISTS `trn_journallayananmedik_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_journallayananmedik_det` (
  `journal_no` varchar(30) DEFAULT NULL,
  `id_account` varchar(25) DEFAULT NULL,
  `notes` varchar(500) DEFAULT NULL,
  `amount` double DEFAULT NULL,
  KEY `journal_det_fkey2` (`id_account`),
  KEY `journal_det_fkey3` (`journal_no`),
  CONSTRAINT `trn_journallayananmedik_det_ibfk_1` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE,
  CONSTRAINT `trn_journallayananmedik_det_ibfk_2` FOREIGN KEY (`journal_no`) REFERENCES `trn_journallayananmedik_head` (`journal_no`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_journallayananmedik_det`
--

LOCK TABLES `trn_journallayananmedik_det` WRITE;
/*!40000 ALTER TABLE `trn_journallayananmedik_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_journallayananmedik_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_journallayananmedik_head`
--

DROP TABLE IF EXISTS `trn_journallayananmedik_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_journallayananmedik_head` (
  `journal_no` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `description` varchar(500) DEFAULT NULL,
  `total` double DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `id_currency` varchar(30) DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  PRIMARY KEY (`journal_no`),
  KEY `id_currency` (`id_currency`),
  CONSTRAINT `trn_journallayananmedik_head_ibfk_1` FOREIGN KEY (`id_currency`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_journallayananmedik_head`
--

LOCK TABLES `trn_journallayananmedik_head` WRITE;
/*!40000 ALTER TABLE `trn_journallayananmedik_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_journallayananmedik_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_journal_save_copy1` AFTER INSERT ON `trn_journallayananmedik_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.journal_no, 'Jurnal Umum', NEW.created_user, 'Input', NEW.created_date, concat('Input Jurnal Umum Baru - ',NEW.journal_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_journal_edit_copy1` AFTER UPDATE ON `trn_journallayananmedik_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.journal_no, 'Jurnal Umum', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Jurnal Umum - ',OLD.journal_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_journal_hapus_copy1` AFTER DELETE ON `trn_journallayananmedik_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.journal_no, 'Jurnal Umum', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Jurnal Umum - ',OLD.journal_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_journalpembelian_det`
--

DROP TABLE IF EXISTS `trn_journalpembelian_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_journalpembelian_det` (
  `journal_no` varchar(30) DEFAULT NULL,
  `id_account` varchar(25) DEFAULT NULL,
  `notes` text,
  `amount` double DEFAULT NULL,
  KEY `journal_det_fkey2` (`id_account`) USING BTREE,
  KEY `journal_det_fkey3` (`journal_no`) USING BTREE,
  CONSTRAINT `trn_journalpembelian_det_ibfk_1` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE,
  CONSTRAINT `trn_journalpembelian_det_ibfk_2` FOREIGN KEY (`journal_no`) REFERENCES `trn_journalpembelian_head` (`journal_no`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_journalpembelian_det`
--

LOCK TABLES `trn_journalpembelian_det` WRITE;
/*!40000 ALTER TABLE `trn_journalpembelian_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_journalpembelian_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_journalpembelian_head`
--

DROP TABLE IF EXISTS `trn_journalpembelian_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_journalpembelian_head` (
  `journal_no` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `description` text,
  `total` double DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `id_currency` varchar(30) DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  PRIMARY KEY (`journal_no`),
  KEY `id_currency` (`id_currency`) USING BTREE,
  CONSTRAINT `trn_journalpembelian_head_ibfk_1` FOREIGN KEY (`id_currency`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_journalpembelian_head`
--

LOCK TABLES `trn_journalpembelian_head` WRITE;
/*!40000 ALTER TABLE `trn_journalpembelian_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_journalpembelian_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_journaluploadpemrov_det`
--

DROP TABLE IF EXISTS `trn_journaluploadpemrov_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_journaluploadpemrov_det` (
  `journal_no` varchar(30) DEFAULT NULL,
  `id_account` varchar(25) DEFAULT NULL,
  `notes` varchar(500) DEFAULT NULL,
  `amount` double DEFAULT NULL,
  KEY `journal_det_fkey2` (`id_account`),
  KEY `journal_det_fkey3` (`journal_no`),
  CONSTRAINT `trn_journaluploadpemrov_det_ibfk_1` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE,
  CONSTRAINT `trn_journaluploadpemrov_det_ibfk_2` FOREIGN KEY (`journal_no`) REFERENCES `trn_journaluploadpemrov_head` (`journal_no`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_journaluploadpemrov_det`
--

LOCK TABLES `trn_journaluploadpemrov_det` WRITE;
/*!40000 ALTER TABLE `trn_journaluploadpemrov_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_journaluploadpemrov_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_journaluploadpemrov_head`
--

DROP TABLE IF EXISTS `trn_journaluploadpemrov_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_journaluploadpemrov_head` (
  `journal_no` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `description` varchar(500) DEFAULT NULL,
  `total` double DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `id_currency` varchar(30) DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  PRIMARY KEY (`journal_no`),
  KEY `id_currency` (`id_currency`),
  CONSTRAINT `trn_journaluploadpemrov_head_ibfk_1` FOREIGN KEY (`id_currency`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_journaluploadpemrov_head`
--

LOCK TABLES `trn_journaluploadpemrov_head` WRITE;
/*!40000 ALTER TABLE `trn_journaluploadpemrov_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_journaluploadpemrov_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_journal_save_copy1_copy` AFTER INSERT ON `trn_journaluploadpemrov_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.journal_no, 'Jurnal Umum', NEW.created_user, 'Input', NEW.created_date, concat('Input Jurnal Umum Baru - ',NEW.journal_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_journal_edit_copy1_copy` AFTER UPDATE ON `trn_journaluploadpemrov_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.journal_no, 'Jurnal Umum', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Jurnal Umum - ',OLD.journal_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_journal_hapus_copy1_copy` AFTER DELETE ON `trn_journaluploadpemrov_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.journal_no, 'Jurnal Umum', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Jurnal Umum - ',OLD.journal_no)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_ledger_det`
--

DROP TABLE IF EXISTS `trn_ledger_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_ledger_det` (
  `no_ledger` varchar(25) DEFAULT NULL,
  `id_account` varchar(25) DEFAULT NULL,
  `notes` text,
  `nominal` double(255,0) DEFAULT NULL,
  KEY `ledger_det_fkey1` (`no_ledger`),
  KEY `ledger_det_fkey2` (`id_account`),
  CONSTRAINT `trn_ledger_det_ibfk_1` FOREIGN KEY (`no_ledger`) REFERENCES `trn_ledger_head` (`no_ledger`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_ledger_det_ibfk_2` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_ledger_det`
--

LOCK TABLES `trn_ledger_det` WRITE;
/*!40000 ALTER TABLE `trn_ledger_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_ledger_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_ledger_det_consol`
--

DROP TABLE IF EXISTS `trn_ledger_det_consol`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_ledger_det_consol` (
  `no_ledger` varchar(25) DEFAULT NULL,
  `id_account` varchar(25) DEFAULT NULL,
  `notes` text,
  `nominal` double(255,0) DEFAULT NULL,
  KEY `ledger_det_fkey1` (`no_ledger`),
  KEY `ledger_det_fkey2` (`id_account`),
  CONSTRAINT `trn_ledger_det_consol_ibfk_1` FOREIGN KEY (`no_ledger`) REFERENCES `trn_ledger_head_consol` (`no_ledger`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_ledger_det_consol_ibfk_2` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_ledger_det_consol`
--

LOCK TABLES `trn_ledger_det_consol` WRITE;
/*!40000 ALTER TABLE `trn_ledger_det_consol` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_ledger_det_consol` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_ledger_head`
--

DROP TABLE IF EXISTS `trn_ledger_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_ledger_head` (
  `no_ledger` varchar(25) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `description` text,
  `total` double DEFAULT NULL,
  `created_user` varchar(25) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(25) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `post_from` varchar(255) DEFAULT NULL,
  KEY `no_ledger` (`no_ledger`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_ledger_head`
--

LOCK TABLES `trn_ledger_head` WRITE;
/*!40000 ALTER TABLE `trn_ledger_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_ledger_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_ledger_head_consol`
--

DROP TABLE IF EXISTS `trn_ledger_head_consol`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_ledger_head_consol` (
  `no_ledger` varchar(25) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `description` text,
  `total` double DEFAULT NULL,
  `created_user` varchar(25) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(25) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `post_from` varchar(255) DEFAULT NULL,
  `branch_from` varchar(120) DEFAULT NULL,
  KEY `no_ledger` (`no_ledger`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_ledger_head_consol`
--

LOCK TABLES `trn_ledger_head_consol` WRITE;
/*!40000 ALTER TABLE `trn_ledger_head_consol` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_ledger_head_consol` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_material_usage_det`
--

DROP TABLE IF EXISTS `trn_material_usage_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_material_usage_det` (
  `no_material_usage` varchar(60) DEFAULT NULL,
  `id_item` varchar(120) DEFAULT NULL,
  `qty_spk` double DEFAULT NULL,
  `qty` double DEFAULT NULL,
  `id_unit` varchar(30) DEFAULT NULL,
  `notes_det` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_material_usage_det`
--

LOCK TABLES `trn_material_usage_det` WRITE;
/*!40000 ALTER TABLE `trn_material_usage_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_material_usage_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_material_usage_head`
--

DROP TABLE IF EXISTS `trn_material_usage_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_material_usage_head` (
  `no_material_usage` varchar(60) NOT NULL,
  `no_spk` varchar(60) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `notes` text,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`no_material_usage`),
  KEY `no_spk` (`no_spk`),
  CONSTRAINT `trn_material_usage_head_ibfk_1` FOREIGN KEY (`no_spk`) REFERENCES `trn_spk_head` (`no_spk`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_material_usage_head`
--

LOCK TABLES `trn_material_usage_head` WRITE;
/*!40000 ALTER TABLE `trn_material_usage_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_material_usage_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_payment_ap_det`
--

DROP TABLE IF EXISTS `trn_payment_ap_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_payment_ap_det` (
  `no_payment_ap` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `no_purchase` varchar(30) DEFAULT NULL,
  `invoice_date` date DEFAULT NULL,
  `ap_amount` double(19,4) DEFAULT NULL,
  `ap_return` double(19,4) DEFAULT NULL,
  `discount` double(19,4) DEFAULT NULL,
  `ap_amount_net` double(19,4) DEFAULT NULL,
  `paid_amount` double(19,4) DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  KEY `no_payment_ap` (`no_payment_ap`),
  KEY `no_purchase` (`no_purchase`),
  CONSTRAINT `trn_payment_ap_det_ibfk_1` FOREIGN KEY (`no_payment_ap`) REFERENCES `trn_payment_ap_head` (`no_payment_ap`),
  CONSTRAINT `trn_payment_ap_det_ibfk_2` FOREIGN KEY (`no_purchase`) REFERENCES `trn_purchase_head` (`no_purchase`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_payment_ap_det`
--

LOCK TABLES `trn_payment_ap_det` WRITE;
/*!40000 ALTER TABLE `trn_payment_ap_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_payment_ap_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_payment_ap_head`
--

DROP TABLE IF EXISTS `trn_payment_ap_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_payment_ap_head` (
  `no_payment_ap` varchar(30) NOT NULL,
  `id_supplier` varchar(25) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `notes` longtext,
  `total` decimal(19,4) DEFAULT NULL,
  `id_account` varchar(25) DEFAULT NULL,
  `created_user` varchar(25) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(25) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `id_currency` varchar(30) DEFAULT NULL,
  `flag_kurs_pu` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`no_payment_ap`),
  KEY `trn_payment_ap_head_ibfk_2` (`id_account`),
  KEY `trn_payment_ap_head_ibfk_1` (`id_supplier`),
  KEY `id_currency` (`id_currency`),
  CONSTRAINT `trn_payment_ap_head_ibfk_1` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_payment_ap_head_ibfk_2` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_payment_ap_head_ibfk_3` FOREIGN KEY (`id_currency`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_payment_ap_head`
--

LOCK TABLES `trn_payment_ap_head` WRITE;
/*!40000 ALTER TABLE `trn_payment_ap_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_payment_ap_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_ap_save` AFTER INSERT ON `trn_payment_ap_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_payment_ap, 'Pembayaran Pembelian', NEW.created_user, 'Input', NEW.created_date, concat('Input Pembayaran Hutang Baru - ',NEW.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_ap_edit` AFTER UPDATE ON `trn_payment_ap_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_payment_ap, 'Pembayaran Pembelian', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Pembayaran Hutang- ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_ap_hapus` AFTER DELETE ON `trn_payment_ap_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_payment_ap, 'Pembayaran Pembelian', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Pembayaran Pembelian - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_payment_ar_det`
--

DROP TABLE IF EXISTS `trn_payment_ar_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_payment_ar_det` (
  `no_payment_ar` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `no_invoice` varchar(30) DEFAULT NULL,
  `invoice_date` date DEFAULT NULL,
  `ap_amount` double(19,4) DEFAULT NULL,
  `ap_return` double(19,4) DEFAULT NULL,
  `discount` double(19,4) DEFAULT NULL,
  `ap_amount_net` double(19,4) DEFAULT NULL,
  `paid_amount` double(19,4) DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  KEY `trn_payment_ar_no_payment_fkey` (`no_payment_ar`),
  KEY `trn_payment_ar_no_payment_fkey2` (`no_invoice`),
  CONSTRAINT `trn_payment_ar_det_ibfk_1` FOREIGN KEY (`no_payment_ar`) REFERENCES `trn_payment_ar_head` (`no_payment_ar`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_payment_ar_det_ibfk_2` FOREIGN KEY (`no_invoice`) REFERENCES `trn_sales_head` (`no_sales`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_payment_ar_det`
--

LOCK TABLES `trn_payment_ar_det` WRITE;
/*!40000 ALTER TABLE `trn_payment_ar_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_payment_ar_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_payment_ar_head`
--

DROP TABLE IF EXISTS `trn_payment_ar_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_payment_ar_head` (
  `no_payment_ar` varchar(30) NOT NULL,
  `id_customer` varchar(25) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `notes` longtext,
  `total` double(19,4) DEFAULT NULL,
  `id_account` varchar(25) DEFAULT NULL,
  `created_user` varchar(25) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(25) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `id_currency` varchar(30) DEFAULT NULL,
  `flag_kurs_pu` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`no_payment_ar`),
  KEY `trn_payment_ar_customer_fkey` (`id_customer`),
  KEY `trn_payment_ar_customer_fkey2` (`id_account`),
  KEY `id_currency` (`id_currency`),
  CONSTRAINT `trn_payment_ar_head_ibfk_1` FOREIGN KEY (`id_customer`) REFERENCES `mst_customer` (`id_customer`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_payment_ar_head_ibfk_2` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_payment_ar_head_ibfk_3` FOREIGN KEY (`id_currency`) REFERENCES `mst_currency` (`id_currency`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_payment_ar_head`
--

LOCK TABLES `trn_payment_ar_head` WRITE;
/*!40000 ALTER TABLE `trn_payment_ar_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_payment_ar_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_payar_save` AFTER INSERT ON `trn_payment_ar_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_payment_ar, 'Pembayaran Piutang', NEW.created_user, 'Input', NEW.created_date, concat('Input Pembayaran Piutang Baru - ',NEW.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_payar_edit` AFTER UPDATE ON `trn_payment_ar_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_payment_ar, 'Pembayaran Piutang', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Pembayaran Piutang - ',OLD.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_payar_hapus` AFTER DELETE ON `trn_payment_ar_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_payment_ar, 'Pembayaran Piutang', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Pembayaran Piutang - ',OLD.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_payoff_po_det`
--

DROP TABLE IF EXISTS `trn_payoff_po_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_payoff_po_det` (
  `no_purchase` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `item_name` varchar(200) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  `weight` double(19,2) DEFAULT NULL,
  `priceperweight` double(19,2) DEFAULT NULL,
  KEY `trn_purchase_det_item_ibfk_1` (`id_item`),
  KEY `trn_purchase_det_ibfk_1` (`no_purchase`),
  KEY `trn_purchase_det_item_ibfk_4` (`id_unit`),
  KEY `id_curr` (`id_curr`),
  CONSTRAINT `trn_payoff_po_det_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_payoff_po_det_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_payoff_po_det_ibfk_3` FOREIGN KEY (`id_curr`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE,
  CONSTRAINT `trn_payoff_po_det_ibfk_4` FOREIGN KEY (`no_purchase`) REFERENCES `trn_payoff_po_head` (`no_purchase`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_payoff_po_det`
--

LOCK TABLES `trn_payoff_po_det` WRITE;
/*!40000 ALTER TABLE `trn_payoff_po_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_payoff_po_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_payoff_po_head`
--

DROP TABLE IF EXISTS `trn_payoff_po_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_payoff_po_head` (
  `no_purchase` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `no_purchase_order` varchar(30) DEFAULT NULL,
  `id_supplier` varchar(25) DEFAULT NULL,
  `id_account` varchar(60) DEFAULT NULL,
  `payment_method` int(25) DEFAULT NULL,
  `payment_term_days` int(11) DEFAULT NULL,
  `disc_term_days` int(11) DEFAULT NULL,
  `disc_term_nominal` decimal(19,4) DEFAULT NULL,
  `subtotal` decimal(19,4) DEFAULT NULL,
  `freight` decimal(19,4) DEFAULT NULL,
  `tax` decimal(19,4) DEFAULT NULL,
  `disc` decimal(10,0) DEFAULT NULL,
  `total` decimal(19,4) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  `um` double(19,0) DEFAULT NULL,
  PRIMARY KEY (`no_purchase`),
  KEY `trn_purchase_head_ibfk_1` (`no_purchase_order`),
  KEY `trn_purchase_head_ibfk_2` (`id_supplier`),
  KEY `trn_purchase_head_ibfk_3` (`payment_method`),
  KEY `id_account` (`id_account`),
  CONSTRAINT `trn_payoff_po_head_ibfk_1` FOREIGN KEY (`no_purchase_order`) REFERENCES `trn_purchase_order_head` (`no_purchase_order`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_payoff_po_head_ibfk_2` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_payoff_po_head_ibfk_3` FOREIGN KEY (`payment_method`) REFERENCES `ref_pay_method` (`ref_status_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_payoff_po_head_ibfk_4` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_payoff_po_head`
--

LOCK TABLES `trn_payoff_po_head` WRITE;
/*!40000 ALTER TABLE `trn_payoff_po_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_payoff_po_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_save_copy3` AFTER INSERT ON `trn_payoff_po_head`
FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_purchase, 'Pelunasan PO', NEW.created_user, 'Input', NEW.created_date, concat('Input Pelunasan PO Baru - ',NEW.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_edit_copy3` AFTER UPDATE ON `trn_payoff_po_head`
FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase, 'Pelunasan PO', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Pelunasan PO - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_hapus_copy3` AFTER DELETE ON `trn_payoff_po_head`
FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase, 'Pelunasan PO', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Pelunasan PO - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_payoff_so_det`
--

DROP TABLE IF EXISTS `trn_payoff_so_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_payoff_so_det` (
  `no_purchase` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `item_name` varchar(200) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  `weight` double(19,2) DEFAULT NULL,
  `priceperweight` double(19,2) DEFAULT NULL,
  KEY `trn_purchase_det_item_ibfk_1` (`id_item`),
  KEY `trn_purchase_det_ibfk_1` (`no_purchase`),
  KEY `trn_purchase_det_item_ibfk_4` (`id_unit`),
  KEY `id_curr` (`id_curr`),
  CONSTRAINT `trn_payoff_so_det_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_payoff_so_det_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_payoff_so_det_ibfk_3` FOREIGN KEY (`id_curr`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE,
  CONSTRAINT `trn_payoff_so_det_ibfk_4` FOREIGN KEY (`no_purchase`) REFERENCES `trn_payoff_so_head` (`no_purchase`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_payoff_so_det`
--

LOCK TABLES `trn_payoff_so_det` WRITE;
/*!40000 ALTER TABLE `trn_payoff_so_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_payoff_so_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_payoff_so_head`
--

DROP TABLE IF EXISTS `trn_payoff_so_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_payoff_so_head` (
  `no_purchase` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `no_purchase_order` varchar(30) DEFAULT NULL,
  `id_supplier` varchar(25) DEFAULT NULL,
  `id_account` varchar(60) DEFAULT NULL,
  `payment_method` int(25) DEFAULT NULL,
  `payment_term_days` int(11) DEFAULT NULL,
  `disc_term_days` int(11) DEFAULT NULL,
  `disc_term_nominal` decimal(19,4) DEFAULT NULL,
  `subtotal` decimal(19,4) DEFAULT NULL,
  `freight` decimal(19,4) DEFAULT NULL,
  `tax` decimal(19,4) DEFAULT NULL,
  `disc` decimal(10,0) DEFAULT NULL,
  `total` decimal(19,4) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  `um` double(19,0) DEFAULT NULL,
  PRIMARY KEY (`no_purchase`),
  KEY `trn_purchase_head_ibfk_1` (`no_purchase_order`),
  KEY `trn_purchase_head_ibfk_2` (`id_supplier`),
  KEY `trn_purchase_head_ibfk_3` (`payment_method`),
  KEY `id_account` (`id_account`),
  CONSTRAINT `trn_payoff_so_head_ibfk_1` FOREIGN KEY (`no_purchase_order`) REFERENCES `trn_sales_order_head` (`no_sales_order`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_payoff_so_head_ibfk_2` FOREIGN KEY (`id_supplier`) REFERENCES `mst_customer` (`id_customer`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_payoff_so_head_ibfk_3` FOREIGN KEY (`payment_method`) REFERENCES `ref_pay_method` (`ref_status_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_payoff_so_head_ibfk_4` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_payoff_so_head`
--

LOCK TABLES `trn_payoff_so_head` WRITE;
/*!40000 ALTER TABLE `trn_payoff_so_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_payoff_so_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_save_copy3_copy` AFTER INSERT ON `trn_payoff_so_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_purchase, 'Pelunasan PO', NEW.created_user, 'Input', NEW.created_date, concat('Input Pelunasan PO Baru - ',NEW.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_edit_copy3_copy` AFTER UPDATE ON `trn_payoff_so_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase, 'Pelunasan PO', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Pelunasan PO - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_hapus_copy3_copy` AFTER DELETE ON `trn_payoff_so_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase, 'Pelunasan PO', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Pelunasan PO - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_pinjam`
--

DROP TABLE IF EXISTS `trn_pinjam`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_pinjam` (
  `no_pinjam` varchar(255) NOT NULL,
  `id_customer` varchar(120) DEFAULT NULL,
  `id_item` varchar(30) DEFAULT NULL,
  `item_name` varchar(250) DEFAULT NULL,
  `nominal` double(19,2) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `flag_surat` int(11) DEFAULT NULL,
  `berat` double(19,2) DEFAULT NULL,
  `status_lunas` int(11) DEFAULT NULL,
  `created_user` varchar(30) NOT NULL,
  `created_date` datetime NOT NULL,
  `modified_user` varchar(30) NOT NULL,
  `modified_date` datetime NOT NULL,
  `bunga` double(19,2) DEFAULT NULL,
  `jangka_waktu` int(11) DEFAULT NULL,
  PRIMARY KEY (`no_pinjam`),
  KEY `no_pinjam` (`no_pinjam`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_pinjam`
--

LOCK TABLES `trn_pinjam` WRITE;
/*!40000 ALTER TABLE `trn_pinjam` DISABLE KEYS */;
INSERT INTO `trn_pinjam` VALUES ('PNJ/08-2016-00001','C.2016000001','','',3000000.00,'2016-08-18 00:00:00',1,0.00,1,'tokoemas','2016-08-18 01:31:04','tokoemas','2016-08-24 10:24:50',2.00,5);
/*!40000 ALTER TABLE `trn_pinjam` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_pinjam_bayar`
--

DROP TABLE IF EXISTS `trn_pinjam_bayar`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_pinjam_bayar` (
  `no_bayar` varchar(255) DEFAULT NULL,
  `no_pinjam` varchar(120) DEFAULT NULL,
  `saldo_pinjaman` varchar(30) DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `nominal_bayar` double(19,0) DEFAULT NULL,
  `nominal_bunga` double(19,0) DEFAULT NULL,
  `print_status` int(11) DEFAULT NULL,
  `due_date` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_pinjam_bayar`
--

LOCK TABLES `trn_pinjam_bayar` WRITE;
/*!40000 ALTER TABLE `trn_pinjam_bayar` DISABLE KEYS */;
INSERT INTO `trn_pinjam_bayar` VALUES ('BNJ/10-2016-00001','PNJ/08-2016-00001','3000000','2016-10-26 00:00:00',0,60000,NULL,'2016-09-18 00:00:00'),('BNJ/10-2016-00002','PNJ/08-2016-00001','3000000','2016-10-26 00:00:00',0,76000,NULL,'2016-10-18 00:00:00'),('BNJ/12-2016-00003','PNJ/08-2016-00001','3000000','2016-12-26 00:00:00',0,60000,NULL,'2016-11-18 00:00:00'),('BNJ/12-2016-00004','PNJ/08-2016-00001','3000000','2016-12-26 00:00:00',0,76000,NULL,'2016-12-18 00:00:00');
/*!40000 ALTER TABLE `trn_pinjam_bayar` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_pinjam_det`
--

DROP TABLE IF EXISTS `trn_pinjam_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_pinjam_det` (
  `no_pinjam` varchar(60) DEFAULT NULL,
  `no_asc` double DEFAULT NULL,
  `id_item` varchar(60) DEFAULT NULL,
  `weight` double(19,2) DEFAULT NULL,
  `item_name` varchar(250) DEFAULT NULL,
  KEY `no_pinjam` (`no_pinjam`),
  KEY `id_item` (`id_item`),
  CONSTRAINT `trn_pinjam_det_ibfk_1` FOREIGN KEY (`no_pinjam`) REFERENCES `trn_pinjam` (`no_pinjam`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_pinjam_det`
--

LOCK TABLES `trn_pinjam_det` WRITE;
/*!40000 ALTER TABLE `trn_pinjam_det` DISABLE KEYS */;
INSERT INTO `trn_pinjam_det` VALUES ('PNJ/08-2016-00001',1,'0816000003',4.00,'Cincin Motif Bunga'),('PNJ/08-2016-00001',2,'0816000004',3.00,'Gelang Polos');
/*!40000 ALTER TABLE `trn_pinjam_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_purchase_det`
--

DROP TABLE IF EXISTS `trn_purchase_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_purchase_det` (
  `no_purchase` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `item_name` varchar(200) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  KEY `trn_purchase_det_item_ibfk_1` (`id_item`),
  KEY `trn_purchase_det_ibfk_1` (`no_purchase`),
  KEY `trn_purchase_det_item_ibfk_4` (`id_unit`),
  KEY `id_curr` (`id_curr`),
  CONSTRAINT `trn_purchase_det_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_purchase_det_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_purchase_det_ibfk_3` FOREIGN KEY (`id_curr`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE,
  CONSTRAINT `trn_purchase_det_ibfk_4` FOREIGN KEY (`no_purchase`) REFERENCES `trn_purchase_head` (`no_purchase`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_purchase_det`
--

LOCK TABLES `trn_purchase_det` WRITE;
/*!40000 ALTER TABLE `trn_purchase_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_purchase_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_purchase_head`
--

DROP TABLE IF EXISTS `trn_purchase_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_purchase_head` (
  `no_purchase` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `no_purchase_order` varchar(30) DEFAULT NULL,
  `id_supplier` varchar(25) DEFAULT NULL,
  `id_account` varchar(60) DEFAULT NULL,
  `payment_method` int(25) DEFAULT NULL,
  `payment_term_days` int(11) DEFAULT NULL,
  `disc_term_days` int(11) DEFAULT NULL,
  `disc_term_nominal` decimal(19,4) DEFAULT NULL,
  `subtotal` decimal(19,4) DEFAULT NULL,
  `freight` decimal(19,4) DEFAULT NULL,
  `tax` decimal(19,4) DEFAULT NULL,
  `disc` decimal(10,0) DEFAULT NULL,
  `total` decimal(19,4) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  `um` double(19,0) DEFAULT NULL,
  PRIMARY KEY (`no_purchase`),
  KEY `trn_purchase_head_ibfk_1` (`no_purchase_order`),
  KEY `trn_purchase_head_ibfk_2` (`id_supplier`),
  KEY `trn_purchase_head_ibfk_3` (`payment_method`),
  KEY `id_account` (`id_account`),
  CONSTRAINT `trn_purchase_head_ibfk_1` FOREIGN KEY (`no_purchase_order`) REFERENCES `trn_purchase_order_head` (`no_purchase_order`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_purchase_head_ibfk_2` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_purchase_head_ibfk_3` FOREIGN KEY (`payment_method`) REFERENCES `ref_pay_method` (`ref_status_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_purchase_head_ibfk_4` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_purchase_head`
--

LOCK TABLES `trn_purchase_head` WRITE;
/*!40000 ALTER TABLE `trn_purchase_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_purchase_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_save` AFTER INSERT ON `trn_purchase_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_purchase, 'Faktur Pembelian', NEW.created_user, 'Input', NEW.created_date, concat('Input Faktur Beli Baru - ',NEW.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_edit` AFTER UPDATE ON `trn_purchase_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase, 'Faktur Pembelian', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Faktur Beli - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_hapus` AFTER DELETE ON `trn_purchase_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase, 'Faktur Pembelian', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Faktur Beli - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_purchase_order_det`
--

DROP TABLE IF EXISTS `trn_purchase_order_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_purchase_order_det` (
  `no_purchase_order` varchar(30) DEFAULT NULL,
  `no_request_order` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` decimal(19,4) DEFAULT NULL,
  `nominal` decimal(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  `qty_received` int(11) DEFAULT NULL,
  `weight` double(19,0) DEFAULT NULL,
  `priceperweight` double(19,0) DEFAULT NULL,
  KEY `trn_purchase_order_det_item_ibfk_1` (`id_item`),
  KEY `trn_purchase_order_det_ibfk_1` (`no_purchase_order`),
  KEY `trn_purchase_order_det_item_ibfk_6` (`id_unit`),
  KEY `trn_request_order_key` (`no_request_order`),
  CONSTRAINT `trn_purchase_order_det_ibfk_1` FOREIGN KEY (`no_purchase_order`) REFERENCES `trn_purchase_order_head` (`no_purchase_order`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_purchase_order_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_purchase_order_det_ibfk_3` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_purchase_order_det`
--

LOCK TABLES `trn_purchase_order_det` WRITE;
/*!40000 ALTER TABLE `trn_purchase_order_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_purchase_order_det` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trig_update_flagPO` AFTER INSERT ON `trn_purchase_order_det` FOR EACH ROW update trn_request_order_det set flag_po = 1 where no_request_order = new.no_request_order and id_item = new.id_item */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `trig_delete_flagPO` AFTER DELETE ON `trn_purchase_order_det` FOR EACH ROW update trn_request_order_det set flag_po = 0 where no_request_order = old.no_request_order and id_item = old.id_item */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_purchase_order_head`
--

DROP TABLE IF EXISTS `trn_purchase_order_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_purchase_order_head` (
  `no_purchase_order` varchar(30) NOT NULL,
  `id_supplier` varchar(25) DEFAULT NULL,
  `date_trn` date DEFAULT NULL,
  `notes` longtext,
  `subtotal` double(19,4) DEFAULT NULL,
  `freight` double(19,4) DEFAULT NULL,
  `tax` double(19,4) DEFAULT NULL,
  `total` double(19,4) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `flag_status_invoice` int(11) DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  `um` double(19,0) DEFAULT NULL,
  `account_um` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`no_purchase_order`),
  KEY `id_supplier` (`id_supplier`),
  CONSTRAINT `trn_purchase_order_head_ibfk_1` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_purchase_order_head`
--

LOCK TABLES `trn_purchase_order_head` WRITE;
/*!40000 ALTER TABLE `trn_purchase_order_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_purchase_order_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_save_po` AFTER INSERT ON `trn_purchase_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_purchase_order, 'Purchase Order', NEW.created_user, 'Input', NEW.created_date, concat('Input Purchase Order Baru - ',NEW.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_edit_po` AFTER UPDATE ON `trn_purchase_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase_order, 'Purchase Order', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Purchase Order - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_hapus_po` AFTER DELETE ON `trn_purchase_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase_order, 'Purchase Order', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Purchase Order - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_purchase_return_det`
--

DROP TABLE IF EXISTS `trn_purchase_return_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_purchase_return_det` (
  `no_purchase_return` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `qty_purch` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  `no_purchase` varchar(30) DEFAULT NULL,
  `weight` double(19,2) DEFAULT NULL,
  `priceperweight` double(19,0) DEFAULT NULL,
  KEY `trn_purchase_return_det_ibfk_1` (`no_purchase`),
  KEY `trn_purchase_return_det_ibfk_2` (`no_purchase_return`),
  KEY `trn_purchase_return_det_item_ibfk_2` (`id_item`),
  KEY `trn_purchase_return_det_item_ibfk_7` (`id_unit`),
  CONSTRAINT `trn_purchase_return_det_ibfk_1` FOREIGN KEY (`no_purchase`) REFERENCES `trn_payoff_po_head` (`no_purchase`) ON UPDATE CASCADE,
  CONSTRAINT `trn_purchase_return_det_ibfk_2` FOREIGN KEY (`no_purchase_return`) REFERENCES `trn_purchase_return_head` (`no_purchase_return`) ON UPDATE CASCADE,
  CONSTRAINT `trn_purchase_return_det_ibfk_3` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_purchase_return_det_ibfk_4` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_purchase_return_det`
--

LOCK TABLES `trn_purchase_return_det` WRITE;
/*!40000 ALTER TABLE `trn_purchase_return_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_purchase_return_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_purchase_return_head`
--

DROP TABLE IF EXISTS `trn_purchase_return_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_purchase_return_head` (
  `no_purchase_return` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `id_supplier` varchar(25) DEFAULT NULL,
  `payment_method` int(25) DEFAULT NULL,
  `subtotal` double(19,4) DEFAULT NULL,
  `freight` double(19,4) DEFAULT NULL,
  `disc` double(19,4) DEFAULT NULL,
  `tax` double(19,4) DEFAULT NULL,
  `total` double(19,4) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  `id_warehouse` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`no_purchase_return`),
  KEY `trn_purchase_return_head_ibfk_1` (`id_supplier`),
  KEY `trn_purchase_return_head_ibfk_2` (`payment_method`),
  CONSTRAINT `trn_purchase_return_head_ibfk_1` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_purchase_return_head_ibfk_2` FOREIGN KEY (`payment_method`) REFERENCES `ref_pay_method` (`ref_status_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_purchase_return_head`
--

LOCK TABLES `trn_purchase_return_head` WRITE;
/*!40000 ALTER TABLE `trn_purchase_return_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_purchase_return_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_return_save` AFTER INSERT ON `trn_purchase_return_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_purchase_return, 'Retur Pembelian', NEW.created_user, 'Input', NEW.created_date, concat('Input Retur Beli Baru - ',NEW.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_return_edit` AFTER UPDATE ON `trn_purchase_return_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase_return, 'Retur Pembelian', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Retur Beli - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_return_hapus` AFTER DELETE ON `trn_purchase_return_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase_return, 'Retur Pembelian', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Retur Beli - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_purchasedirect_det`
--

DROP TABLE IF EXISTS `trn_purchasedirect_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_purchasedirect_det` (
  `no_purchase` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `item_name` varchar(200) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  `weight` double(19,2) DEFAULT NULL,
  `perweight` double(19,0) DEFAULT NULL,
  KEY `trn_purchase_det_item_ibfk_1` (`id_item`),
  KEY `trn_purchase_det_ibfk_1` (`no_purchase`),
  KEY `trn_purchase_det_item_ibfk_4` (`id_unit`),
  KEY `id_curr` (`id_curr`),
  CONSTRAINT `trn_purchasedirect_det_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_purchasedirect_det_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_purchasedirect_det_ibfk_3` FOREIGN KEY (`id_curr`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE,
  CONSTRAINT `trn_purchasedirect_det_ibfk_4` FOREIGN KEY (`no_purchase`) REFERENCES `trn_purchasedirect_head` (`no_purchase`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_purchasedirect_det`
--

LOCK TABLES `trn_purchasedirect_det` WRITE;
/*!40000 ALTER TABLE `trn_purchasedirect_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_purchasedirect_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_purchasedirect_head`
--

DROP TABLE IF EXISTS `trn_purchasedirect_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_purchasedirect_head` (
  `no_purchase` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `no_purchase_order` varchar(30) DEFAULT NULL,
  `id_supplier` varchar(25) DEFAULT NULL,
  `id_account` varchar(60) DEFAULT NULL,
  `payment_method` int(25) DEFAULT NULL,
  `payment_term_days` int(11) DEFAULT NULL,
  `disc_term_days` int(11) DEFAULT NULL,
  `disc_term_nominal` decimal(19,4) DEFAULT NULL,
  `subtotal` decimal(19,4) DEFAULT NULL,
  `freight` decimal(19,4) DEFAULT NULL,
  `tax` decimal(19,4) DEFAULT NULL,
  `disc` decimal(10,0) DEFAULT NULL,
  `total` decimal(19,4) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  PRIMARY KEY (`no_purchase`),
  KEY `trn_purchase_head_ibfk_1` (`no_purchase_order`),
  KEY `trn_purchase_head_ibfk_2` (`id_supplier`),
  KEY `trn_purchase_head_ibfk_3` (`payment_method`),
  KEY `id_account` (`id_account`),
  CONSTRAINT `trn_purchasedirect_head_ibfk_2` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_purchasedirect_head_ibfk_3` FOREIGN KEY (`payment_method`) REFERENCES `ref_pay_method` (`ref_status_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_purchasedirect_head_ibfk_4` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_purchasedirect_head`
--

LOCK TABLES `trn_purchasedirect_head` WRITE;
/*!40000 ALTER TABLE `trn_purchasedirect_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_purchasedirect_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_save_copy1` AFTER INSERT ON `trn_purchasedirect_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_purchase, 'Faktur Pembelian', NEW.created_user, 'Input', NEW.created_date, concat('Input Pembelian Langsung - ',NEW.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_edit_copy1` AFTER UPDATE ON `trn_purchasedirect_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase, 'Faktur Pembelian', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Pembelian Langsung - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_purchase_hapus_copy1` AFTER DELETE ON `trn_purchasedirect_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_purchase, 'Faktur Pembelian', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Pembelian Langsung - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_real_conversion_det`
--

DROP TABLE IF EXISTS `trn_real_conversion_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_real_conversion_det` (
  `cost_realized_no` varchar(60) NOT NULL,
  `cost_id` varchar(60) NOT NULL,
  `qty_hour` int(11) DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` varchar(400) DEFAULT NULL,
  `total_cost` double DEFAULT NULL,
  KEY `cost_realized_no` (`cost_realized_no`),
  KEY `cost_id` (`cost_id`),
  CONSTRAINT `trn_real_conversion_det_ibfk_1` FOREIGN KEY (`cost_realized_no`) REFERENCES `trn_real_conversion_head` (`cost_realized_no`) ON UPDATE CASCADE,
  CONSTRAINT `trn_real_conversion_det_ibfk_2` FOREIGN KEY (`cost_id`) REFERENCES `mst_standard_cost` (`id_cost`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_real_conversion_det`
--

LOCK TABLES `trn_real_conversion_det` WRITE;
/*!40000 ALTER TABLE `trn_real_conversion_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_real_conversion_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_real_conversion_head`
--

DROP TABLE IF EXISTS `trn_real_conversion_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_real_conversion_head` (
  `cost_realized_no` varchar(60) NOT NULL,
  `wo_no` varchar(60) NOT NULL,
  `id_item_production` varchar(60) NOT NULL,
  `date_trn` datetime NOT NULL,
  `department_id` int(11) NOT NULL,
  `notes` varchar(400) DEFAULT NULL,
  `total_cost` double(19,0) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`cost_realized_no`),
  KEY `wo_no` (`wo_no`),
  KEY `id_item_production` (`id_item_production`),
  KEY `department_id` (`department_id`),
  CONSTRAINT `trn_real_conversion_head_ibfk_1` FOREIGN KEY (`wo_no`) REFERENCES `trn_wo_head` (`wo_no`) ON UPDATE CASCADE,
  CONSTRAINT `trn_real_conversion_head_ibfk_2` FOREIGN KEY (`id_item_production`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_real_conversion_head_ibfk_3` FOREIGN KEY (`department_id`) REFERENCES `mst_department_produksi` (`department_id`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_real_conversion_head`
--

LOCK TABLES `trn_real_conversion_head` WRITE;
/*!40000 ALTER TABLE `trn_real_conversion_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_real_conversion_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_received_order_det`
--

DROP TABLE IF EXISTS `trn_received_order_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_received_order_det` (
  `no_received_order` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `received_qty` int(11) DEFAULT NULL,
  `id_warehouse` varchar(30) DEFAULT NULL,
  `warehouse_name` varchar(250) DEFAULT NULL,
  KEY `trn_purchase_order_det_item_ibfk_1` (`id_item`),
  KEY `trn_purchase_order_det_ibfk_1` (`no_received_order`),
  KEY `trn_purchase_order_det_item_ibfk_6` (`id_unit`),
  KEY `id_warehouse` (`id_warehouse`),
  CONSTRAINT `trn_received_order_det_ibfk_1` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_received_order_det_ibfk_2` FOREIGN KEY (`no_received_order`) REFERENCES `trn_received_order_head` (`no_received_order`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_received_order_det_ibfk_3` FOREIGN KEY (`id_warehouse`) REFERENCES `mst_warehouse` (`id_warehouse`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_received_order_det`
--

LOCK TABLES `trn_received_order_det` WRITE;
/*!40000 ALTER TABLE `trn_received_order_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_received_order_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_received_order_head`
--

DROP TABLE IF EXISTS `trn_received_order_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_received_order_head` (
  `no_received_order` varchar(30) NOT NULL,
  `no_purchase_order` varchar(30) DEFAULT NULL,
  `id_supplier` varchar(25) DEFAULT NULL,
  `date_trn` date DEFAULT NULL,
  `notes` longtext,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`no_received_order`),
  KEY `id_supplier` (`id_supplier`),
  KEY `no_purchase_order` (`no_purchase_order`),
  CONSTRAINT `trn_received_order_head_ibfk_1` FOREIGN KEY (`id_supplier`) REFERENCES `mst_supplier` (`id_supplier`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_received_order_head_ibfk_2` FOREIGN KEY (`no_purchase_order`) REFERENCES `trn_purchase_order_head` (`no_purchase_order`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_received_order_head`
--

LOCK TABLES `trn_received_order_head` WRITE;
/*!40000 ALTER TABLE `trn_received_order_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_received_order_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_rec_save` AFTER INSERT ON `trn_received_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_received_order, 'Received Order', NEW.created_user, 'Input', NEW.created_date, concat('Input Received Order Baru - ',NEW.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_rec_edit` AFTER UPDATE ON `trn_received_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_received_order, 'Received Order', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Received Order - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_rec_hapus` AFTER DELETE ON `trn_received_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_received_order, 'Received Order', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Received Order - ',OLD.id_supplier)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_reconcile_det`
--

DROP TABLE IF EXISTS `trn_reconcile_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_reconcile_det` (
  `no_reconcile` varchar(30) NOT NULL,
  `id_account` varchar(25) NOT NULL,
  `notes` text,
  `amount_in` double DEFAULT NULL,
  `amount_out` double DEFAULT NULL,
  KEY `fk_acc_recon_det` (`id_account`),
  KEY `fk_no_reconcile` (`no_reconcile`),
  CONSTRAINT `trn_reconcile_det_ibfk_1` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_reconcile_det_ibfk_2` FOREIGN KEY (`no_reconcile`) REFERENCES `trn_reconcile_head` (`no_reconcile`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_reconcile_det`
--

LOCK TABLES `trn_reconcile_det` WRITE;
/*!40000 ALTER TABLE `trn_reconcile_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_reconcile_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_reconcile_head`
--

DROP TABLE IF EXISTS `trn_reconcile_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_reconcile_head` (
  `no_reconcile` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `id_account_bank` varchar(25) DEFAULT NULL,
  `balance_before` double DEFAULT NULL,
  `reconcile` double DEFAULT NULL,
  `balance_after` double DEFAULT NULL,
  `notes` text,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `id_currency` varchar(30) DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  PRIMARY KEY (`no_reconcile`),
  KEY `id_account_bank` (`id_account_bank`),
  KEY `id_currency` (`id_currency`),
  CONSTRAINT `trn_reconcile_head_ibfk_1` FOREIGN KEY (`id_account_bank`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE,
  CONSTRAINT `trn_reconcile_head_ibfk_2` FOREIGN KEY (`id_currency`) REFERENCES `mst_currency` (`id_currency`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_reconcile_head`
--

LOCK TABLES `trn_reconcile_head` WRITE;
/*!40000 ALTER TABLE `trn_reconcile_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_reconcile_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_reconcile_save` AFTER INSERT ON `trn_reconcile_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_reconcile, 'Rekonsiliasi Bank', NEW.created_user, 'Input', NEW.created_date, concat('Input Rekonsiliasi Bank Baru - ',NEW.id_account_bank)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_reconcile_edit` AFTER UPDATE ON `trn_reconcile_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_reconcile, 'Rekonsiliasi Bank', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Rekonsiliasi Bank - ',OLD.id_account_bank)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_reconcile_del` AFTER DELETE ON `trn_reconcile_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_reconcile, 'Rekonsiliasi Bank', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Rekonsiliasi Bank - ',OLD.id_account_bank)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_request_order_det`
--

DROP TABLE IF EXISTS `trn_request_order_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_request_order_det` (
  `no_request_order` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `flag_status` int(11) DEFAULT NULL,
  `approve_date` datetime DEFAULT NULL,
  `approve_qty` int(11) DEFAULT NULL,
  `flag_po` int(11) DEFAULT NULL,
  KEY `trn_purchase_order_det_item_ibfk_1` (`id_item`),
  KEY `trn_purchase_order_det_ibfk_1` (`no_request_order`),
  KEY `trn_purchase_order_det_item_ibfk_6` (`id_unit`),
  CONSTRAINT `trn_request_order_det_ibfk_3` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_request_order_det_ibfk_4` FOREIGN KEY (`no_request_order`) REFERENCES `trn_request_order_head` (`no_request_order`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_request_order_det`
--

LOCK TABLES `trn_request_order_det` WRITE;
/*!40000 ALTER TABLE `trn_request_order_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_request_order_det` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_edit_ro_det` AFTER UPDATE ON `trn_request_order_det` FOR EACH ROW begin



if case when OLD.flag_status is null then 0 else OLD.flag_status end <> case when NEW.flag_status is null then 0 else NEW.flag_status end then
      insert into log_transaction(transaction_no,form,username,action,created_date,value)
      values (OLD.no_request_order, 'Request Order', 'Admin', 'Approve RO', NEW.approve_date, concat('Approve Request Order',NEW.id_item));
end if;

end */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_request_order_head`
--

DROP TABLE IF EXISTS `trn_request_order_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_request_order_head` (
  `no_request_order` varchar(30) NOT NULL,
  `id_warehouse` varchar(30) DEFAULT NULL,
  `date_trn` date DEFAULT NULL,
  `date_required` date DEFAULT NULL,
  `notes` longtext,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`no_request_order`),
  KEY `trn_request_order_head_ibfk_2` (`id_warehouse`),
  CONSTRAINT `trn_request_order_head_ibfk_2` FOREIGN KEY (`id_warehouse`) REFERENCES `mst_warehouse` (`id_warehouse`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_request_order_head`
--

LOCK TABLES `trn_request_order_head` WRITE;
/*!40000 ALTER TABLE `trn_request_order_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_request_order_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_save_ro` AFTER INSERT ON `trn_request_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_request_order, 'Request Order', NEW.created_user, 'Input', NEW.created_date, concat('Input Request Order Baru - ',NEW.id_warehouse)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_edit_ro` AFTER UPDATE ON `trn_request_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_request_order, 'Request Order', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Request Order - ',OLD.id_warehouse)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_hapus_ro` AFTER DELETE ON `trn_request_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_request_order, 'Request Order', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Request Order - ',OLD.id_warehouse)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_sales_det`
--

DROP TABLE IF EXISTS `trn_sales_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_sales_det` (
  `no_sales` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  KEY `trn_sales_det_ibfk_1` (`no_sales`),
  KEY `trn_sales_det_ibfk_2` (`id_item`),
  KEY `trn_sales_det_ibfk_5` (`id_unit`),
  CONSTRAINT `trn_sales_det_ibfk_1` FOREIGN KEY (`no_sales`) REFERENCES `trn_sales_head` (`no_sales`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_sales_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_sales_det_ibfk_3` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_sales_det`
--

LOCK TABLES `trn_sales_det` WRITE;
/*!40000 ALTER TABLE `trn_sales_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_sales_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_sales_discitem_det`
--

DROP TABLE IF EXISTS `trn_sales_discitem_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_sales_discitem_det` (
  `no_sales` varchar(255) NOT NULL,
  `id_item` varchar(255) NOT NULL,
  `item_name` varchar(255) NOT NULL,
  `qty` double NOT NULL,
  `id_unit` varchar(60) NOT NULL,
  KEY `no_sales_order` (`no_sales`),
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  CONSTRAINT `trn_sales_discitem_det_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_sales_discitem_det_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_sales_discitem_det_ibfk_3` FOREIGN KEY (`no_sales`) REFERENCES `trn_sales_head` (`no_sales`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_sales_discitem_det`
--

LOCK TABLES `trn_sales_discitem_det` WRITE;
/*!40000 ALTER TABLE `trn_sales_discitem_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_sales_discitem_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_sales_head`
--

DROP TABLE IF EXISTS `trn_sales_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_sales_head` (
  `no_sales` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `no_sales_order` varchar(30) DEFAULT NULL,
  `id_customer` varchar(25) DEFAULT NULL,
  `payment_method` int(11) DEFAULT NULL,
  `subtotal` double(19,2) DEFAULT NULL,
  `discount` double(19,2) DEFAULT NULL,
  `tax` double(19,2) DEFAULT NULL,
  `total` double(19,2) DEFAULT NULL,
  `term` int(11) DEFAULT NULL,
  `termpaydisc` int(11) DEFAULT NULL,
  `discpay` int(11) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `id_account` varchar(60) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  `uang_muka` double(19,2) DEFAULT NULL,
  `freight` double(19,2) DEFAULT NULL,
  PRIMARY KEY (`no_sales`),
  KEY `trn_sales_head_ibfk_1` (`id_customer`),
  KEY `trn_sales_head_ibfk_2` (`no_sales_order`),
  KEY `trn_sales_head_ibfk_3` (`payment_method`),
  KEY `id_account` (`id_account`),
  CONSTRAINT `trn_sales_head_ibfk_1` FOREIGN KEY (`payment_method`) REFERENCES `ref_pay_method` (`ref_status_id`) ON UPDATE CASCADE,
  CONSTRAINT `trn_sales_head_ibfk_2` FOREIGN KEY (`id_customer`) REFERENCES `mst_customer` (`id_customer`) ON UPDATE CASCADE,
  CONSTRAINT `trn_sales_head_ibfk_3` FOREIGN KEY (`id_account`) REFERENCES `mst_account` (`id_account`) ON UPDATE CASCADE,
  CONSTRAINT `trn_sales_head_ibfk_4` FOREIGN KEY (`no_sales_order`) REFERENCES `trn_sales_order_head` (`no_sales_order`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_sales_head`
--

LOCK TABLES `trn_sales_head` WRITE;
/*!40000 ALTER TABLE `trn_sales_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_sales_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_sales_save` AFTER INSERT ON `trn_sales_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_sales, 'Penjualan', NEW.created_user, 'Input', NEW.created_date, concat('Input Faktur Jual Baru - ',NEW.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_sales_edit` AFTER UPDATE ON `trn_sales_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_sales, 'Penjualan', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Faktur Jual - ',OLD.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_sales_hapus` AFTER DELETE ON `trn_sales_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_sales, 'Penjualan', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Faktur Jual - ',OLD.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_sales_order_det`
--

DROP TABLE IF EXISTS `trn_sales_order_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_sales_order_det` (
  `no_sales_order` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  `sent_qty` int(11) DEFAULT NULL,
  `id_type` varchar(30) DEFAULT NULL,
  `id_category` varchar(30) DEFAULT NULL,
  `id_brand` varchar(30) DEFAULT NULL,
  `weight` double(19,2) DEFAULT NULL,
  `perweight` double(19,0) DEFAULT NULL,
  KEY `trn_sales_order_det_ibfk_1` (`no_sales_order`),
  KEY `trn_sales_order_det_ibfk_2` (`id_item`),
  KEY `id_type` (`id_type`),
  KEY `id_category` (`id_category`),
  KEY `id_brand` (`id_brand`),
  CONSTRAINT `trn_sales_order_det_ibfk_1` FOREIGN KEY (`no_sales_order`) REFERENCES `trn_sales_order_head` (`no_sales_order`) ON UPDATE CASCADE,
  CONSTRAINT `trn_sales_order_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_sales_order_det_ibfk_3` FOREIGN KEY (`id_type`) REFERENCES `mst_itemjenis` (`mst_itemjenis_id`) ON UPDATE CASCADE,
  CONSTRAINT `trn_sales_order_det_ibfk_4` FOREIGN KEY (`id_category`) REFERENCES `mst_itemcat` (`mst_itemcat_id`) ON UPDATE CASCADE,
  CONSTRAINT `trn_sales_order_det_ibfk_5` FOREIGN KEY (`id_brand`) REFERENCES `mst_itembrand` (`mst_itembrand_id`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_sales_order_det`
--

LOCK TABLES `trn_sales_order_det` WRITE;
/*!40000 ALTER TABLE `trn_sales_order_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_sales_order_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_sales_order_head`
--

DROP TABLE IF EXISTS `trn_sales_order_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_sales_order_head` (
  `no_sales_order` varchar(30) NOT NULL,
  `id_customer` varchar(25) DEFAULT NULL,
  `date_trn` date DEFAULT NULL,
  `notes` text,
  `subtotal` double(19,2) DEFAULT NULL,
  `tax` double(19,2) DEFAULT NULL,
  `total` double(19,2) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `flag_status_invoice` int(11) DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  `id_employee` varchar(60) DEFAULT NULL,
  `discount` double DEFAULT NULL,
  `nett_total` double DEFAULT NULL,
  `is_discbrand` int(1) DEFAULT NULL,
  `is_disctype` int(1) DEFAULT NULL,
  `is_disccat` int(1) DEFAULT NULL,
  `is_discitem` int(1) DEFAULT NULL,
  `uang_muka` double(19,2) DEFAULT NULL,
  `id_account` varchar(30) DEFAULT NULL,
  `id_curr_um` varchar(30) DEFAULT NULL,
  `kurs_um` varchar(30) DEFAULT NULL,
  `id_ekspedisi` varchar(30) DEFAULT NULL,
  `freight_est` double(19,2) DEFAULT NULL,
  `tgl_uang_muka` date DEFAULT NULL,
  PRIMARY KEY (`no_sales_order`),
  KEY `id_customer` (`id_customer`),
  KEY `id_employee` (`id_employee`),
  KEY `id_account` (`id_account`),
  KEY `id_ekspedisi` (`id_ekspedisi`),
  CONSTRAINT `trn_sales_order_head_ibfk_1` FOREIGN KEY (`id_customer`) REFERENCES `mst_customer` (`id_customer`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_sales_order_head`
--

LOCK TABLES `trn_sales_order_head` WRITE;
/*!40000 ALTER TABLE `trn_sales_order_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_sales_order_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_so_save` AFTER INSERT ON `trn_sales_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_sales_order, 'Sales Order', NEW.created_user, 'Input', NEW.created_date, concat('Input Sales Order Baru - ',NEW.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_so_edit` AFTER UPDATE ON `trn_sales_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_sales_order, 'Sales Order', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Sales Order - ',OLD.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_so_hapus` AFTER DELETE ON `trn_sales_order_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_sales_order, 'Sales Order', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Sales Order - ',OLD.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_sales_return_det`
--

DROP TABLE IF EXISTS `trn_sales_return_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_sales_return_det` (
  `no_sales_return` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  `no_sales` varchar(30) DEFAULT NULL,
  `weight` double(19,2) DEFAULT NULL,
  `priceperweight` double(19,0) DEFAULT NULL,
  KEY `trn_sales_return_nosalesreturn` (`no_sales_return`),
  KEY `trn_sales_return_nosales` (`no_sales`),
  KEY `trn_sales_return_nosalesreturn_fkey3` (`id_item`),
  KEY `trn_sales_return_nosalesreturn_fkey4` (`id_unit`),
  CONSTRAINT `trn_sales_return_det_ibfk_1` FOREIGN KEY (`no_sales`) REFERENCES `trn_payoff_so_head` (`no_purchase`) ON UPDATE CASCADE,
  CONSTRAINT `trn_sales_return_det_ibfk_2` FOREIGN KEY (`no_sales_return`) REFERENCES `trn_sales_return_head` (`no_sales_return`) ON UPDATE CASCADE,
  CONSTRAINT `trn_sales_return_det_ibfk_3` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_sales_return_det_ibfk_4` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_sales_return_det`
--

LOCK TABLES `trn_sales_return_det` WRITE;
/*!40000 ALTER TABLE `trn_sales_return_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_sales_return_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_sales_return_head`
--

DROP TABLE IF EXISTS `trn_sales_return_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_sales_return_head` (
  `no_sales_return` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `id_customer` varchar(30) DEFAULT NULL,
  `payment_method` int(25) DEFAULT NULL,
  `subtotal` double(19,4) DEFAULT NULL,
  `disc` double(19,4) DEFAULT NULL,
  `tax` double(19,4) DEFAULT NULL,
  `total` double(19,4) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `kurs` double DEFAULT NULL,
  `id_warehouse` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`no_sales_return`),
  KEY `trn_sales_return_id_customer_fkey` (`id_customer`),
  KEY `trn_sales_return_id_paymethod_fkey` (`payment_method`),
  CONSTRAINT `trn_sales_return_head_ibfk_2` FOREIGN KEY (`payment_method`) REFERENCES `ref_pay_method` (`ref_status_id`) ON UPDATE CASCADE,
  CONSTRAINT `trn_sales_return_head_ibfk_3` FOREIGN KEY (`id_customer`) REFERENCES `mst_customer` (`id_customer`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_sales_return_head`
--

LOCK TABLES `trn_sales_return_head` WRITE;
/*!40000 ALTER TABLE `trn_sales_return_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_sales_return_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_sales_return_save` AFTER INSERT ON `trn_sales_return_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_sales_return, 'Retur Penjualan', NEW.created_user, 'Input', NEW.created_date, concat('Input Retur Jual Baru - ',NEW.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_sales_return_edit` AFTER UPDATE ON `trn_sales_return_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_sales_return, 'Retur Penjualan', NEW.created_user, 'Edit', NEW.created_date, concat('Edit Retur Jual - ',OLD.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_sales_return_hapus` AFTER DELETE ON `trn_sales_return_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_sales_return, 'Retur Penjualan', OLD.created_user, 'Hapus', OLD.created_date, concat('Hapus Retur Jual - ',OLD.id_customer)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_service_det`
--

DROP TABLE IF EXISTS `trn_service_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_service_det` (
  `no_service` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_service` varchar(25) DEFAULT NULL,
  `id_employee` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  KEY `no_sales` (`no_service`),
  KEY `trn_service_det_id_employee_fkey` (`id_employee`),
  KEY `trn_service_det_no_service_fkey3` (`id_service`),
  CONSTRAINT `trn_service_det_ibfk_1` FOREIGN KEY (`no_service`) REFERENCES `trn_service_head` (`no_service`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_service_det_ibfk_2` FOREIGN KEY (`id_service`) REFERENCES `mst_service` (`id_service`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_service_det_ibfk_3` FOREIGN KEY (`id_employee`) REFERENCES `mst_employee` (`id_employee`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_service_det`
--

LOCK TABLES `trn_service_det` WRITE;
/*!40000 ALTER TABLE `trn_service_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_service_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_service_head`
--

DROP TABLE IF EXISTS `trn_service_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_service_head` (
  `no_service` varchar(30) NOT NULL,
  `id_customer` varchar(25) DEFAULT NULL,
  `payment_method` int(25) DEFAULT NULL,
  `subtotal` double(19,4) DEFAULT NULL,
  `discount` double(19,4) DEFAULT NULL,
  `tax` double(19,4) DEFAULT NULL,
  `total` double(19,4) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `created_user` varchar(30) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_user` varchar(30) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `date_trn` datetime DEFAULT NULL,
  `cust_name` varchar(250) DEFAULT NULL,
  `flag_member` tinyint(1) DEFAULT NULL,
  `cust_address` text,
  `cust_phone` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`no_service`),
  KEY `id_customer` (`id_customer`),
  KEY `trn_service_payment_method` (`payment_method`),
  CONSTRAINT `trn_service_head_ibfk_1` FOREIGN KEY (`id_customer`) REFERENCES `mst_customer` (`id_customer`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `trn_service_head_ibfk_2` FOREIGN KEY (`payment_method`) REFERENCES `ref_pay_method` (`ref_status_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_service_head`
--

LOCK TABLES `trn_service_head` WRITE;
/*!40000 ALTER TABLE `trn_service_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_service_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_service_item_det`
--

DROP TABLE IF EXISTS `trn_service_item_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_service_item_det` (
  `no_service` varchar(30) DEFAULT NULL,
  `number_asc` int(11) DEFAULT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(15) DEFAULT NULL,
  `price` double(19,4) DEFAULT NULL,
  `nominal` double(19,4) DEFAULT NULL,
  `id_curr` varchar(25) DEFAULT NULL,
  KEY `no_sales` (`no_service`),
  KEY `trn_service_noservice_det_ibfk_3` (`id_unit`),
  CONSTRAINT `trn_service_item_det_ibfk_1` FOREIGN KEY (`no_service`) REFERENCES `trn_service_head` (`no_service`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_service_item_det`
--

LOCK TABLES `trn_service_item_det` WRITE;
/*!40000 ALTER TABLE `trn_service_item_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_service_item_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_so_discbrand_det`
--

DROP TABLE IF EXISTS `trn_so_discbrand_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_so_discbrand_det` (
  `no_sales_order` varchar(255) NOT NULL,
  `id_item` varchar(255) NOT NULL,
  `item_name` varchar(255) NOT NULL,
  `nom_disc` double NOT NULL,
  KEY `no_sales_order` (`no_sales_order`),
  KEY `id_item` (`id_item`),
  CONSTRAINT `trn_so_discbrand_det_ibfk_1` FOREIGN KEY (`no_sales_order`) REFERENCES `trn_sales_order_head` (`no_sales_order`) ON UPDATE CASCADE,
  CONSTRAINT `trn_so_discbrand_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_so_discbrand_det`
--

LOCK TABLES `trn_so_discbrand_det` WRITE;
/*!40000 ALTER TABLE `trn_so_discbrand_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_so_discbrand_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_so_disccat_det`
--

DROP TABLE IF EXISTS `trn_so_disccat_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_so_disccat_det` (
  `no_sales_order` varchar(255) NOT NULL,
  `id_item` varchar(255) NOT NULL,
  `item_name` varchar(255) NOT NULL,
  `nom_disc` double NOT NULL,
  KEY `no_sales_order` (`no_sales_order`),
  KEY `id_item` (`id_item`),
  CONSTRAINT `trn_so_disccat_det_ibfk_1` FOREIGN KEY (`no_sales_order`) REFERENCES `trn_sales_order_head` (`no_sales_order`) ON UPDATE CASCADE,
  CONSTRAINT `trn_so_disccat_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_so_disccat_det`
--

LOCK TABLES `trn_so_disccat_det` WRITE;
/*!40000 ALTER TABLE `trn_so_disccat_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_so_disccat_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_so_discitem_det`
--

DROP TABLE IF EXISTS `trn_so_discitem_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_so_discitem_det` (
  `no_sales_order` varchar(255) NOT NULL,
  `id_item` varchar(255) NOT NULL,
  `item_name` varchar(255) NOT NULL,
  `qty` double NOT NULL,
  `id_unit` varchar(60) NOT NULL,
  KEY `no_sales_order` (`no_sales_order`),
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  CONSTRAINT `trn_so_discitem_det_ibfk_1` FOREIGN KEY (`no_sales_order`) REFERENCES `trn_sales_order_head` (`no_sales_order`) ON UPDATE CASCADE,
  CONSTRAINT `trn_so_discitem_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_so_discitem_det_ibfk_3` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_so_discitem_det`
--

LOCK TABLES `trn_so_discitem_det` WRITE;
/*!40000 ALTER TABLE `trn_so_discitem_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_so_discitem_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_so_disctype_det`
--

DROP TABLE IF EXISTS `trn_so_disctype_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_so_disctype_det` (
  `no_sales_order` varchar(255) NOT NULL,
  `id_item` varchar(255) NOT NULL,
  `item_name` varchar(255) NOT NULL,
  `nom_disc` double NOT NULL,
  KEY `no_sales_order` (`no_sales_order`),
  KEY `id_item` (`id_item`),
  CONSTRAINT `trn_so_disctype_det_ibfk_1` FOREIGN KEY (`no_sales_order`) REFERENCES `trn_sales_order_head` (`no_sales_order`) ON UPDATE CASCADE,
  CONSTRAINT `trn_so_disctype_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_so_disctype_det`
--

LOCK TABLES `trn_so_disctype_det` WRITE;
/*!40000 ALTER TABLE `trn_so_disctype_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_so_disctype_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_spk_head`
--

DROP TABLE IF EXISTS `trn_spk_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_spk_head` (
  `no_spk` varchar(30) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `start_date` datetime DEFAULT NULL,
  `end_date` datetime DEFAULT NULL,
  `notes` varchar(255) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`no_spk`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_spk_head`
--

LOCK TABLES `trn_spk_head` WRITE;
/*!40000 ALTER TABLE `trn_spk_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_spk_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_spk_item_det`
--

DROP TABLE IF EXISTS `trn_spk_item_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_spk_item_det` (
  `no_spk` varchar(60) DEFAULT NULL,
  `id_item` varchar(30) DEFAULT NULL,
  `no_bom` varchar(60) DEFAULT NULL,
  `qty` double DEFAULT NULL,
  `notes` text,
  KEY `no_spk` (`no_spk`),
  KEY `id_item` (`id_item`),
  KEY `no_bom` (`no_bom`),
  CONSTRAINT `trn_spk_item_det_ibfk_1` FOREIGN KEY (`no_spk`) REFERENCES `trn_spk_head` (`no_spk`) ON UPDATE CASCADE,
  CONSTRAINT `trn_spk_item_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_spk_item_det_ibfk_3` FOREIGN KEY (`no_bom`) REFERENCES `mst_bom_head` (`no_bom`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_spk_item_det`
--

LOCK TABLES `trn_spk_item_det` WRITE;
/*!40000 ALTER TABLE `trn_spk_item_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_spk_item_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_spk_konversi_det`
--

DROP TABLE IF EXISTS `trn_spk_konversi_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_spk_konversi_det` (
  `no_spk` varchar(60) DEFAULT NULL,
  `id_cost` varchar(30) DEFAULT NULL,
  `qty_hour` double DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` text,
  `total_cost` decimal(10,0) DEFAULT NULL,
  KEY `no_spk` (`no_spk`),
  KEY `id_cost` (`id_cost`),
  CONSTRAINT `trn_spk_konversi_det_ibfk_2` FOREIGN KEY (`no_spk`) REFERENCES `trn_spk_head` (`no_spk`) ON UPDATE CASCADE,
  CONSTRAINT `trn_spk_konversi_det_ibfk_3` FOREIGN KEY (`id_cost`) REFERENCES `mst_standard_cost` (`id_cost`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_spk_konversi_det`
--

LOCK TABLES `trn_spk_konversi_det` WRITE;
/*!40000 ALTER TABLE `trn_spk_konversi_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_spk_konversi_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_spk_material_det`
--

DROP TABLE IF EXISTS `trn_spk_material_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_spk_material_det` (
  `no_spk` varchar(60) DEFAULT NULL,
  `id_item` varchar(120) DEFAULT NULL,
  `qty_material` double DEFAULT NULL,
  `qty_sisa_spk` double DEFAULT NULL,
  `id_unit` varchar(30) DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` text,
  `total_cost` double DEFAULT NULL,
  KEY `no_spk` (`no_spk`),
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  CONSTRAINT `trn_spk_material_det_ibfk_1` FOREIGN KEY (`no_spk`) REFERENCES `trn_spk_head` (`no_spk`) ON UPDATE CASCADE,
  CONSTRAINT `trn_spk_material_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_spk_material_det_ibfk_3` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_spk_material_det`
--

LOCK TABLES `trn_spk_material_det` WRITE;
/*!40000 ALTER TABLE `trn_spk_material_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_spk_material_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_transfer_stock_det`
--

DROP TABLE IF EXISTS `trn_transfer_stock_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_transfer_stock_det` (
  `no_tranfer_stock` varchar(25) NOT NULL,
  `id_item` varchar(25) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `unit` varchar(25) DEFAULT NULL,
  `notes` text,
  PRIMARY KEY (`no_tranfer_stock`),
  KEY `fk_id_item_trf` (`id_item`),
  CONSTRAINT `fk_id_item_trf` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_no_bukti` FOREIGN KEY (`no_tranfer_stock`) REFERENCES `trn_transfer_stock_head` (`no_tranfer_stock`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_transfer_stock_det`
--

LOCK TABLES `trn_transfer_stock_det` WRITE;
/*!40000 ALTER TABLE `trn_transfer_stock_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_transfer_stock_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_transfer_stock_head`
--

DROP TABLE IF EXISTS `trn_transfer_stock_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_transfer_stock_head` (
  `no_tranfer_stock` varchar(25) NOT NULL,
  `date_trn` datetime DEFAULT NULL,
  `id_warehouse_from` varchar(25) DEFAULT NULL,
  `id_warehouse_to` varchar(25) DEFAULT NULL,
  `notes` text,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`no_tranfer_stock`),
  KEY `fk_wh_from` (`id_warehouse_from`),
  KEY `fk_wh_to` (`id_warehouse_to`),
  CONSTRAINT `fk_wh_from` FOREIGN KEY (`id_warehouse_from`) REFERENCES `mst_warehouse` (`id_warehouse`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_wh_to` FOREIGN KEY (`id_warehouse_to`) REFERENCES `mst_warehouse` (`id_warehouse`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_transfer_stock_head`
--

LOCK TABLES `trn_transfer_stock_head` WRITE;
/*!40000 ALTER TABLE `trn_transfer_stock_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_transfer_stock_head` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_pindahgudang_save` AFTER INSERT ON `trn_transfer_stock_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (NEW.no_tranfer_stock, 'Pindah Gudang', NEW.created_user, 'Input', NEW.created_date, concat('Input Pindah Gudang - ',NEW.no_tranfer_stock)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_pindahgudang_edit` AFTER UPDATE ON `trn_transfer_stock_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_tranfer_stock, 'Pindah Gudang', NEW.modified_user, 'Edit', NEW.modified_date, concat('Edit Pindah Gudang - ',OLD.no_tranfer_stock)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`localhost`*/ /*!50003 TRIGGER `tgr_pindahgudang_del` AFTER DELETE ON `trn_transfer_stock_head` FOR EACH ROW insert into log_transaction(transaction_no,form,username,action,created_date,value)
values (OLD.no_tranfer_stock, 'Pindah Gudang', OLD.modified_user, 'Hapus', OLD.modified_date, concat('Hapus Pindah Gudang - ',OLD.no_tranfer_stock)) */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `trn_usage_material_det`
--

DROP TABLE IF EXISTS `trn_usage_material_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_usage_material_det` (
  `usage_no` varchar(60) NOT NULL,
  `item_id` varchar(60) NOT NULL,
  `qty` int(11) DEFAULT NULL,
  `id_unit` varchar(60) DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `total_cost` double DEFAULT NULL,
  `material_type_id` int(11) DEFAULT NULL,
  KEY `item_id` (`item_id`),
  KEY `id_unit` (`id_unit`),
  KEY `usage_no` (`usage_no`),
  CONSTRAINT `trn_usage_material_det_ibfk_2` FOREIGN KEY (`item_id`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_usage_material_det_ibfk_3` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_usage_material_det_ibfk_4` FOREIGN KEY (`usage_no`) REFERENCES `trn_usage_material_head` (`usage_no`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_usage_material_det`
--

LOCK TABLES `trn_usage_material_det` WRITE;
/*!40000 ALTER TABLE `trn_usage_material_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_usage_material_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_usage_material_head`
--

DROP TABLE IF EXISTS `trn_usage_material_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_usage_material_head` (
  `usage_no` varchar(60) NOT NULL,
  `wo_no` varchar(60) NOT NULL,
  `id_item_production` varchar(60) NOT NULL,
  `date_trn` datetime NOT NULL,
  `department_id` int(11) NOT NULL,
  `notes` varchar(400) DEFAULT NULL,
  `total_cost` double(19,0) DEFAULT NULL,
  `modified_user` varchar(120) DEFAULT NULL,
  `created_date` datetime DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `created_user` varchar(120) DEFAULT NULL,
  `id_warehouse` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`usage_no`),
  KEY `wo_no` (`wo_no`),
  KEY `department_id` (`department_id`),
  KEY `id_item_production` (`id_item_production`),
  KEY `id_warehouse` (`id_warehouse`),
  CONSTRAINT `trn_usage_material_head_ibfk_1` FOREIGN KEY (`wo_no`) REFERENCES `trn_wo_head` (`wo_no`) ON UPDATE CASCADE,
  CONSTRAINT `trn_usage_material_head_ibfk_2` FOREIGN KEY (`department_id`) REFERENCES `mst_department` (`department_id`) ON UPDATE CASCADE,
  CONSTRAINT `trn_usage_material_head_ibfk_3` FOREIGN KEY (`id_item_production`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_usage_material_head_ibfk_4` FOREIGN KEY (`id_warehouse`) REFERENCES `mst_warehouse` (`id_warehouse`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_usage_material_head`
--

LOCK TABLES `trn_usage_material_head` WRITE;
/*!40000 ALTER TABLE `trn_usage_material_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_usage_material_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_wo_conversion_det`
--

DROP TABLE IF EXISTS `trn_wo_conversion_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_wo_conversion_det` (
  `wo_no` varchar(60) NOT NULL,
  `no_bom` varchar(60) NOT NULL,
  `id_cost` varchar(30) DEFAULT NULL,
  `qty_hour` double DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` text,
  `total_cost` decimal(10,0) DEFAULT NULL,
  KEY `no_bom` (`no_bom`),
  KEY `id_cost` (`id_cost`),
  KEY `wo_no` (`wo_no`),
  CONSTRAINT `trn_wo_conversion_det_ibfk_1` FOREIGN KEY (`no_bom`) REFERENCES `mst_bom_head` (`no_bom`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_conversion_det_ibfk_2` FOREIGN KEY (`id_cost`) REFERENCES `mst_standard_cost` (`id_cost`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_conversion_det_ibfk_3` FOREIGN KEY (`wo_no`) REFERENCES `trn_wo_head` (`wo_no`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_wo_conversion_det`
--

LOCK TABLES `trn_wo_conversion_det` WRITE;
/*!40000 ALTER TABLE `trn_wo_conversion_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_wo_conversion_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_wo_head`
--

DROP TABLE IF EXISTS `trn_wo_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_wo_head` (
  `wo_no` varchar(60) NOT NULL,
  `expected_date` datetime NOT NULL,
  `realized_date` datetime NOT NULL,
  `start_date` datetime NOT NULL,
  `date_trn` datetime NOT NULL,
  `pic` varchar(200) NOT NULL,
  `department_id` int(11) NOT NULL,
  `cost_total` double NOT NULL,
  `notes` varchar(400) DEFAULT NULL,
  `finished` int(11) DEFAULT NULL,
  `modified_user` varchar(120) NOT NULL,
  `created_date` datetime NOT NULL,
  `modified_date` datetime NOT NULL,
  `created_user` varchar(120) NOT NULL,
  PRIMARY KEY (`wo_no`),
  KEY `department_id` (`department_id`),
  CONSTRAINT `trn_wo_head_ibfk_1` FOREIGN KEY (`department_id`) REFERENCES `mst_department_produksi` (`department_id`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_wo_head`
--

LOCK TABLES `trn_wo_head` WRITE;
/*!40000 ALTER TABLE `trn_wo_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_wo_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_wo_item_det`
--

DROP TABLE IF EXISTS `trn_wo_item_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_wo_item_det` (
  `wo_no` varchar(60) NOT NULL,
  `no_bom` varchar(60) NOT NULL,
  `item_notes` varchar(400) NOT NULL,
  `qty_item_production` double NOT NULL,
  `id_unit` varchar(30) NOT NULL,
  `cost_total_wo` double NOT NULL,
  `persentage_finished` double NOT NULL,
  PRIMARY KEY (`wo_no`),
  KEY `no_bom` (`no_bom`),
  CONSTRAINT `trn_wo_item_det_ibfk_1` FOREIGN KEY (`wo_no`) REFERENCES `trn_wo_head` (`wo_no`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_item_det_ibfk_2` FOREIGN KEY (`no_bom`) REFERENCES `mst_bom_head` (`no_bom`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_wo_item_det`
--

LOCK TABLES `trn_wo_item_det` WRITE;
/*!40000 ALTER TABLE `trn_wo_item_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_wo_item_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_wo_material_det`
--

DROP TABLE IF EXISTS `trn_wo_material_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_wo_material_det` (
  `no_wo` varchar(60) NOT NULL,
  `no_bom` varchar(60) NOT NULL,
  `id_item` varchar(60) NOT NULL,
  `qty_material` double DEFAULT NULL,
  `id_unit` varchar(60) DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` text,
  `total_cost` double DEFAULT NULL,
  `real_qty` double DEFAULT NULL,
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  KEY `no_bom` (`no_bom`),
  KEY `no_wo` (`no_wo`),
  CONSTRAINT `trn_wo_material_det_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_material_det_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_material_det_ibfk_3` FOREIGN KEY (`no_bom`) REFERENCES `mst_bom_head` (`no_bom`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_material_det_ibfk_4` FOREIGN KEY (`no_wo`) REFERENCES `trn_wo_head` (`wo_no`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_wo_material_det`
--

LOCK TABLES `trn_wo_material_det` WRITE;
/*!40000 ALTER TABLE `trn_wo_material_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_wo_material_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_wo_realized_conversion_det`
--

DROP TABLE IF EXISTS `trn_wo_realized_conversion_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_wo_realized_conversion_det` (
  `realized_no` varchar(60) NOT NULL,
  `id_cost` varchar(30) DEFAULT NULL,
  `qty_hour` double DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` text,
  `total_cost` decimal(10,0) DEFAULT NULL,
  KEY `id_cost` (`id_cost`),
  KEY `trn_wo_realized_conversion_det_ibfk_3` (`realized_no`),
  CONSTRAINT `trn_wo_realized_conversion_det_ibfk_2` FOREIGN KEY (`id_cost`) REFERENCES `mst_standard_cost` (`id_cost`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_realized_conversion_det_ibfk_3` FOREIGN KEY (`realized_no`) REFERENCES `trn_wo_realized_head` (`realized_no`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_wo_realized_conversion_det`
--

LOCK TABLES `trn_wo_realized_conversion_det` WRITE;
/*!40000 ALTER TABLE `trn_wo_realized_conversion_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_wo_realized_conversion_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_wo_realized_head`
--

DROP TABLE IF EXISTS `trn_wo_realized_head`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_wo_realized_head` (
  `realized_no` varchar(60) NOT NULL,
  `wo_no` varchar(60) NOT NULL,
  `expected_date` datetime NOT NULL,
  `realized_date` datetime NOT NULL,
  `date_trn` date NOT NULL,
  `pic` varchar(200) NOT NULL,
  `department_id` int(11) NOT NULL,
  `cost_total` double NOT NULL,
  `notes` varchar(400) DEFAULT NULL,
  `modified_user` varchar(120) NOT NULL,
  `created_date` datetime NOT NULL,
  `modified_date` datetime NOT NULL,
  `created_user` varchar(120) NOT NULL,
  `id_warehouse` varchar(60) DEFAULT NULL,
  PRIMARY KEY (`realized_no`),
  KEY `department_id` (`department_id`),
  KEY `wo_no` (`wo_no`),
  CONSTRAINT `trn_wo_realized_head_ibfk_1` FOREIGN KEY (`department_id`) REFERENCES `mst_department_produksi` (`department_id`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_realized_head_ibfk_2` FOREIGN KEY (`wo_no`) REFERENCES `trn_wo_head` (`wo_no`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_wo_realized_head`
--

LOCK TABLES `trn_wo_realized_head` WRITE;
/*!40000 ALTER TABLE `trn_wo_realized_head` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_wo_realized_head` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_wo_realized_item_det`
--

DROP TABLE IF EXISTS `trn_wo_realized_item_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_wo_realized_item_det` (
  `realized_no` varchar(60) NOT NULL,
  `id_item` varchar(60) NOT NULL,
  `item_name` varchar(400) NOT NULL,
  `qty_item_production` double NOT NULL,
  `id_unit` varchar(30) NOT NULL,
  `cost_total` double NOT NULL,
  `persentage_finished` double NOT NULL,
  PRIMARY KEY (`realized_no`),
  KEY `trn_wo_realized_item_det_ibfk_2` (`id_item`),
  CONSTRAINT `trn_wo_realized_item_det_ibfk_1` FOREIGN KEY (`realized_no`) REFERENCES `trn_wo_realized_head` (`realized_no`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_realized_item_det_ibfk_2` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_wo_realized_item_det`
--

LOCK TABLES `trn_wo_realized_item_det` WRITE;
/*!40000 ALTER TABLE `trn_wo_realized_item_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_wo_realized_item_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_wo_realized_material_det`
--

DROP TABLE IF EXISTS `trn_wo_realized_material_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_wo_realized_material_det` (
  `realized_no` varchar(60) NOT NULL,
  `id_item` varchar(60) NOT NULL,
  `qty_material` double DEFAULT NULL,
  `id_unit` varchar(60) DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` text,
  `total_cost` double DEFAULT NULL,
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  KEY `realized_no` (`realized_no`),
  CONSTRAINT `trn_wo_realized_material_det_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_realized_material_det_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_realized_material_det_ibfk_3` FOREIGN KEY (`realized_no`) REFERENCES `trn_wo_realized_head` (`realized_no`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_wo_realized_material_det`
--

LOCK TABLES `trn_wo_realized_material_det` WRITE;
/*!40000 ALTER TABLE `trn_wo_realized_material_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_wo_realized_material_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_wo_realized_wip_det`
--

DROP TABLE IF EXISTS `trn_wo_realized_wip_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_wo_realized_wip_det` (
  `realized_no` varchar(60) NOT NULL,
  `id_item` varchar(120) DEFAULT NULL,
  `qty_material` double DEFAULT NULL,
  `id_unit` varchar(255) DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` text,
  `total_cost` double DEFAULT NULL,
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  KEY `trn_wo_realized_wip_det_ibfk_4` (`realized_no`),
  CONSTRAINT `trn_wo_realized_wip_det_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_realized_wip_det_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_realized_wip_det_ibfk_4` FOREIGN KEY (`realized_no`) REFERENCES `trn_wo_realized_head` (`realized_no`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_wo_realized_wip_det`
--

LOCK TABLES `trn_wo_realized_wip_det` WRITE;
/*!40000 ALTER TABLE `trn_wo_realized_wip_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_wo_realized_wip_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trn_wo_wip_det`
--

DROP TABLE IF EXISTS `trn_wo_wip_det`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trn_wo_wip_det` (
  `wo_no` varchar(60) NOT NULL,
  `no_bom` varchar(30) NOT NULL,
  `id_item` varchar(120) DEFAULT NULL,
  `qty_material` double DEFAULT NULL,
  `id_unit` varchar(255) DEFAULT NULL,
  `cost` double DEFAULT NULL,
  `notes` text,
  `total_cost` double DEFAULT NULL,
  `real_qty` double DEFAULT NULL,
  KEY `id_item` (`id_item`),
  KEY `id_unit` (`id_unit`),
  KEY `no_bom` (`no_bom`),
  KEY `wo_no` (`wo_no`),
  CONSTRAINT `trn_wo_wip_det_ibfk_1` FOREIGN KEY (`id_item`) REFERENCES `mst_item` (`id_item`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_wip_det_ibfk_2` FOREIGN KEY (`id_unit`) REFERENCES `mst_unit` (`id_unit`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_wip_det_ibfk_3` FOREIGN KEY (`no_bom`) REFERENCES `mst_bom_head` (`no_bom`) ON UPDATE CASCADE,
  CONSTRAINT `trn_wo_wip_det_ibfk_4` FOREIGN KEY (`wo_no`) REFERENCES `trn_wo_head` (`wo_no`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trn_wo_wip_det`
--

LOCK TABLES `trn_wo_wip_det` WRITE;
/*!40000 ALTER TABLE `trn_wo_wip_det` DISABLE KEYS */;
/*!40000 ALTER TABLE `trn_wo_wip_det` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary table structure for view `usage_material_view_report`
--

DROP TABLE IF EXISTS `usage_material_view_report`;
/*!50001 DROP VIEW IF EXISTS `usage_material_view_report`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `usage_material_view_report` (
  `wo_no` varchar(60),
  `usage_no` varchar(60),
  `item_name` varchar(60),
  `total_cost` double(19,0),
  `notes` varchar(400),
  `material_name` varchar(60),
  `qty` int(11),
  `unit` varchar(60),
  `cost` double,
  `total_cost_material` double,
  `material_type_id` int(11)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_adjuststock`
--

DROP TABLE IF EXISTS `view_adjuststock`;
/*!50001 DROP VIEW IF EXISTS `view_adjuststock`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_adjuststock` (
  `no_adjust_stock` varchar(25),
  `warehouse_name` varchar(60),
  `date_trn` datetime,
  `total_adjust` double(10,0),
  `notes` text
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_aktiva`
--

DROP TABLE IF EXISTS `view_aktiva`;
/*!50001 DROP VIEW IF EXISTS `view_aktiva`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_aktiva` (
  `id_account` varchar(255),
  `account_name` varchar(255),
  `parent` varchar(25),
  `account_parent` varchar(250),
  `saldo` double,
  `golongan` varchar(9),
  `id_golongan` bigint(11),
  `id_parent2` varchar(25),
  `parent2` varchar(250),
  `header_text` varchar(250),
  `total_pasiva` double,
  `total_pasiva_lalu` double,
  `total_aktiva` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_aktiva_stafel`
--

DROP TABLE IF EXISTS `view_aktiva_stafel`;
/*!50001 DROP VIEW IF EXISTS `view_aktiva_stafel`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_aktiva_stafel` (
  `id_account` varchar(255),
  `account_name` varchar(255),
  `parent` varchar(25),
  `account_parent` varchar(250),
  `saldo` double,
  `saldo_lalu` double,
  `golongan` varchar(9),
  `id_golongan` bigint(20),
  `id_parent2` varchar(25),
  `parent2` varchar(250),
  `header_text` varchar(250),
  `total_pasiva` double,
  `total_pasiva_lalu` double,
  `total_aktiva` double,
  `company_name` varchar(200),
  `curr_def` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ap_status`
--

DROP TABLE IF EXISTS `view_ap_status`;
/*!50001 DROP VIEW IF EXISTS `view_ap_status`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ap_status` (
  `no_purchase` varchar(30),
  `date_trn` date,
  `nama` varchar(401),
  `purchase_amount` double,
  `return_amount` double,
  `disc_amount` double,
  `paid_amount` double,
  `balance` double,
  `notes` varchar(255),
  `lebih_bayar` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_appayment`
--

DROP TABLE IF EXISTS `view_appayment`;
/*!50001 DROP VIEW IF EXISTS `view_appayment`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_appayment` (
  `no_payment_ap` varchar(30),
  `supplier_name` varchar(400),
  `date_trn` datetime,
  `notes` longtext,
  `total` int(1),
  `account_name` varchar(60),
  `id_supplier` varchar(25),
  `id_account` varchar(25),
  `number_asc` int(11),
  `no_purchase` varchar(30),
  `invoice_date` date,
  `ap_amount` double(19,4),
  `discount` double(19,4),
  `ap_amount_net` double(21,4),
  `paid_amount` double,
  `supplier_addr` text,
  `ap_return` double(19,4),
  `city` varchar(120),
  `company_name` varchar(200),
  `pembayaran` double(19,4)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ar_status`
--

DROP TABLE IF EXISTS `view_ar_status`;
/*!50001 DROP VIEW IF EXISTS `view_ar_status`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ar_status` (
  `no_sales` varchar(30),
  `date_trn` datetime,
  `nama` varchar(401),
  `sales_amount` double,
  `return_amount` double,
  `disc_amount` double,
  `paid_amount` double,
  `balance` double,
  `notes` varchar(255),
  `lebih_bayar` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_arpayment`
--

DROP TABLE IF EXISTS `view_arpayment`;
/*!50001 DROP VIEW IF EXISTS `view_arpayment`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_arpayment` (
  `no_payment_ar` varchar(30),
  `supplier_name` varchar(401),
  `date_trn` datetime,
  `notes` longtext,
  `total` int(1),
  `account_name` varchar(60),
  `id_customer` varchar(25),
  `id_account` varchar(25),
  `number_asc` int(11),
  `no_invoice` varchar(30),
  `invoice_date` date,
  `ap_amount` double(19,4),
  `discount` double(19,4),
  `ap_amount_net` double(21,4),
  `paid_amount` double,
  `supplier_addr` text,
  `ap_return` double(19,4),
  `city` varchar(120),
  `company_name` varchar(200),
  `pembayaran` double(19,4)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_aset_coa`
--

DROP TABLE IF EXISTS `view_aset_coa`;
/*!50001 DROP VIEW IF EXISTS `view_aset_coa`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_aset_coa` (
  `id_aset` varchar(25),
  `nama` varchar(60),
  `type` varchar(120),
  `id_coa_penyusutan` varchar(30),
  `id_coa_aset` varchar(30),
  `id_coa_akumulasi` varchar(30)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_aset_in_period`
--

DROP TABLE IF EXISTS `view_aset_in_period`;
/*!50001 DROP VIEW IF EXISTS `view_aset_in_period`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_aset_in_period` (
  `nama` varchar(60),
  `nilai_perolehan` double,
  `period` varchar(7)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_begin_penyusutan`
--

DROP TABLE IF EXISTS `view_begin_penyusutan`;
/*!50001 DROP VIEW IF EXISTS `view_begin_penyusutan`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_begin_penyusutan` (
  `id_aset` varchar(25),
  `nama` varchar(60),
  `department_name` varchar(100),
  `type` varchar(120),
  `rate_penyusutan` double,
  `penyusutan` double,
  `id_coa_aset` varchar(30),
  `id_coa_penyusutan` varchar(30),
  `id_coa_akumulasi` varchar(30)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_billofmaterial_report`
--

DROP TABLE IF EXISTS `view_billofmaterial_report`;
/*!50001 DROP VIEW IF EXISTS `view_billofmaterial_report`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_billofmaterial_report` (
  `no_bom` varchar(60),
  `item_name` varchar(60),
  `date_trn` datetime,
  `qty_item_production` double,
  `unit` varchar(60),
  `notes` text,
  `total_cost` double,
  `id_material` varchar(120),
  `item_material` varchar(120),
  `qty_material` double,
  `unit_material` varchar(60),
  `cost_material` double,
  `total_material` double,
  `type` varchar(15),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_cash_bank`
--

DROP TABLE IF EXISTS `view_cash_bank`;
/*!50001 DROP VIEW IF EXISTS `view_cash_bank`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_cash_bank` (
  `cashbank_no` varchar(30),
  `date_trn` date,
  `total` double,
  `notes` text,
  `flag_trans` varchar(2),
  `notes_detail` text,
  `amount` double,
  `id_account` varchar(30),
  `account_name` varchar(60)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_cashbank_report`
--

DROP TABLE IF EXISTS `view_cashbank_report`;
/*!50001 DROP VIEW IF EXISTS `view_cashbank_report`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_cashbank_report` (
  `cashbank_no` varchar(30),
  `nama` varchar(60),
  `date_trn` date,
  `notes` text,
  `id_account` varchar(30),
  `id_account_det` varchar(30),
  `account_name` varchar(60),
  `amount` double,
  `notes_det` text,
  `company_name` varchar(200),
  `id_currency` varchar(30)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_cashbank_setup`
--

DROP TABLE IF EXISTS `view_cashbank_setup`;
/*!50001 DROP VIEW IF EXISTS `view_cashbank_setup`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_cashbank_setup` (
  `id_account` varchar(255),
  `account_name` varchar(60),
  `id_cashbank` varchar(4)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_combo_cashbank`
--

DROP TABLE IF EXISTS `view_combo_cashbank`;
/*!50001 DROP VIEW IF EXISTS `view_combo_cashbank`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_combo_cashbank` (
  `id_account` varchar(255),
  `account_name` varchar(60),
  `id_cashbank` varchar(255)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_combo_sales`
--

DROP TABLE IF EXISTS `view_combo_sales`;
/*!50001 DROP VIEW IF EXISTS `view_combo_sales`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_combo_sales` (
  `date_trn` datetime,
  `no_sales` varchar(30),
  `nm_customer` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `total` double(19,2)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_combo_umso`
--

DROP TABLE IF EXISTS `view_combo_umso`;
/*!50001 DROP VIEW IF EXISTS `view_combo_umso`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_combo_umso` (
  `date_trn` date,
  `no_sales_order` varchar(30),
  `nm_customer` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `uang_muka` double(19,2)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_component_accpurch_simrs`
--

DROP TABLE IF EXISTS `view_component_accpurch_simrs`;
/*!50001 DROP VIEW IF EXISTS `view_component_accpurch_simrs`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_component_accpurch_simrs` (
  `notes` text,
  `id_account` varchar(30),
  `account_name` varchar(60),
  `table_name` varchar(250),
  `field_name` varchar(250),
  `position_dk` varchar(60),
  `is_dependent_itemacc` bigint(11)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_component_accpurchreturn_simrs`
--

DROP TABLE IF EXISTS `view_component_accpurchreturn_simrs`;
/*!50001 DROP VIEW IF EXISTS `view_component_accpurchreturn_simrs`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_component_accpurchreturn_simrs` (
  `notes` text,
  `id_account` varchar(30),
  `account_name` varchar(60),
  `table_name` varchar(250),
  `field_name` varchar(250),
  `position_dk` varchar(60),
  `is_dependent_itemacc` bigint(11)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_component_cashflow`
--

DROP TABLE IF EXISTS `view_component_cashflow`;
/*!50001 DROP VIEW IF EXISTS `view_component_cashflow`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_component_cashflow` (
  `id_component` int(11),
  `notes` text,
  `type` varchar(400),
  `jenistransaksi` varchar(11)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_adjustjurnal`
--

DROP TABLE IF EXISTS `view_ctk_adjustjurnal`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_adjustjurnal`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_adjustjurnal` (
  `journal_no` varchar(30),
  `date_trn` datetime,
  `description` text,
  `total` double,
  `id_account` varchar(25),
  `account_name` varchar(60),
  `notes_det` text,
  `debet` double,
  `credit` double,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_bbk`
--

DROP TABLE IF EXISTS `view_ctk_bbk`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_bbk`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_bbk` (
  `id_account` varchar(30),
  `account_name` varchar(60),
  `cashbank_no` varchar(30),
  `date_trn` date,
  `namaakundet` varchar(60),
  `ketdetail` text,
  `total` double,
  `notes` text,
  `evidence_no` varchar(255),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `amount` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_bbm`
--

DROP TABLE IF EXISTS `view_ctk_bbm`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_bbm`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_bbm` (
  `id_account` varchar(30),
  `account_name` varchar(60),
  `cashbank_no` varchar(30),
  `date_trn` date,
  `namaakundet` varchar(60),
  `ketdetail` text,
  `total` double,
  `notes` text,
  `evidence_no` varchar(255),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `amount` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_bkk`
--

DROP TABLE IF EXISTS `view_ctk_bkk`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_bkk`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_bkk` (
  `id_account` varchar(30),
  `account_name` varchar(60),
  `cashbank_no` varchar(30),
  `date_trn` date,
  `namaakundet` varchar(60),
  `ketdetail` text,
  `total` double,
  `notes` text,
  `evidence_no` varchar(255),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `amount` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_bkm`
--

DROP TABLE IF EXISTS `view_ctk_bkm`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_bkm`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_bkm` (
  `id_account` varchar(30),
  `account_name` varchar(60),
  `cashbank_no` varchar(30),
  `date_trn` date,
  `namaakundet` varchar(60),
  `ketdetail` text,
  `total` double,
  `notes` text,
  `evidence_no` varchar(255),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `amount` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_cashier`
--

DROP TABLE IF EXISTS `view_ctk_cashier`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_cashier`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_cashier` (
  `customer` varchar(255),
  `cust_address` text,
  `cust_phone` varchar(255),
  `no_sales` varchar(30),
  `date_trn` datetime,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(60),
  `price` double(19,4),
  `weight` double,
  `priceperweight` double,
  `total_net` double(25,8),
  `price_net` double(25,8),
  `nominal` double(19,4),
  `payment_method` int(11),
  `term` int(11),
  `termpaydisc` int(11),
  `discpay` int(11),
  `notes` varchar(255),
  `subtotal` double(19,4),
  `discount` double(19,4),
  `tax` double(19,4),
  `total` double(19,4),
  `paid` double,
  `kadar` double,
  `path` varchar(500),
  `terbilang` text,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `modified_user` varchar(30)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_cashier2`
--

DROP TABLE IF EXISTS `view_ctk_cashier2`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_cashier2`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_cashier2` (
  `customer` varchar(255),
  `cust_address` text,
  `cust_phone` varchar(255),
  `no_sales` varchar(30),
  `date_trn` datetime,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(60),
  `price` double(19,4),
  `weight` double,
  `priceperweight` double,
  `total_net` double(25,8),
  `price_net` double(25,8),
  `nominal` double(19,4),
  `payment_method` int(11),
  `term` int(11),
  `termpaydisc` int(11),
  `discpay` int(11),
  `notes` varchar(255),
  `subtotal` double(19,4),
  `discount` double(19,4),
  `tax` double(19,4),
  `total` double(19,4),
  `paid` double,
  `kadar` double,
  `path` varchar(500),
  `case when x.terbilang is null then '' else x.terbilang end` text,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `modified_user` varchar(30)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_cashier_return`
--

DROP TABLE IF EXISTS `view_ctk_cashier_return`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_cashier_return`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_cashier_return` (
  `nm_customer` varchar(250),
  `address` varchar(255),
  `no_sales_return` varchar(30),
  `no_sales` varchar(30),
  `date_trn` datetime,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(60),
  `price` double(19,4),
  `nominal` double(19,4),
  `payment_method` int(25),
  `notes` varchar(255),
  `subtotal` double(19,4),
  `disc` double(19,4),
  `tax` double(19,4),
  `total` double(19,4),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_do`
--

DROP TABLE IF EXISTS `view_ctk_do`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_do`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_do` (
  `id_customer` varchar(25),
  `nm_customer` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `phone1` varchar(120),
  `phone2` varchar(120),
  `phone3` varchar(120),
  `no_delivery_order` varchar(255),
  `date_trn` datetime,
  `id_item` varchar(255),
  `item_name` varchar(255),
  `qty` double,
  `id_unit` varchar(60),
  `unit` varchar(60),
  `notes_det` varchar(255),
  `notes` text,
  `no_sales_order` varchar(30),
  `id_ekspedisi` varchar(250),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_exppayment`
--

DROP TABLE IF EXISTS `view_ctk_exppayment`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_exppayment`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_exppayment` (
  `date_trn` datetime,
  `no_ekspedisi` varchar(60),
  `id_currency` varchar(30),
  `notes` text,
  `total` double(19,2),
  `id_account` varchar(30),
  `no_do` varchar(60),
  `no_resi` varchar(120),
  `freight_address` varchar(250),
  `freight_city` varchar(120),
  `freight_cost` double(19,2),
  `account_name` varchar(60),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_faktur_pajak`
--

DROP TABLE IF EXISTS `view_ctk_faktur_pajak`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_faktur_pajak`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_faktur_pajak` (
  `id_customer` varchar(25),
  `nm_customer` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `phone1` varchar(120),
  `phone2` varchar(120),
  `phone3` varchar(120),
  `no_sales` varchar(30),
  `no_sales_order` varchar(30),
  `date_trn` datetime,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(60),
  `price` double(19,4),
  `nominal` double(19,4),
  `payment_method` int(11),
  `term` int(11),
  `termpaydisc` int(11),
  `discpay` int(11),
  `notes` varchar(255),
  `subtotal` double(19,2),
  `discount` double(19,2),
  `tax` double(19,2),
  `total` double(19,2),
  `uang_muka` double(19,2),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_fp_um`
--

DROP TABLE IF EXISTS `view_ctk_fp_um`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_fp_um`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_fp_um` (
  `id_customer` varchar(25),
  `nm_customer` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `phone1` varchar(120),
  `phone2` varchar(120),
  `phone3` varchar(120),
  `no_sales_order` varchar(30),
  `date_trn` date,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(60),
  `price` double,
  `nominal` double,
  `subtotal` double(19,2),
  `discount` double,
  `nett_total` double,
  `tax` double(19,2),
  `total` double(19,2),
  `notes` text,
  `uang_muka` double(19,2),
  `id_curr_um` varchar(30),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `marketing` varchar(401)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_jurnal`
--

DROP TABLE IF EXISTS `view_ctk_jurnal`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_jurnal`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_jurnal` (
  `journal_no` varchar(30),
  `date_trn` datetime,
  `description` varchar(500),
  `total` double,
  `id_account` varchar(25),
  `account_name` varchar(60),
  `notes_det` varchar(500),
  `debet` double,
  `credit` double,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_koreksistock`
--

DROP TABLE IF EXISTS `view_ctk_koreksistock`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_koreksistock`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_koreksistock` (
  `no_adjust_stock` varchar(25),
  `date_trn` datetime,
  `id_warehouse` varchar(25),
  `id_item` varchar(25),
  `item_name` varchar(60),
  `negative` double(10,0),
  `positive` double(10,0),
  `notes` text,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `warehouse_name` varchar(60),
  `notes_det` text
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_pindahgudang`
--

DROP TABLE IF EXISTS `view_ctk_pindahgudang`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_pindahgudang`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_pindahgudang` (
  `no_tranfer_stock` varchar(25),
  `date_trn` datetime,
  `id_warehouse_from` varchar(25),
  `id_warehouse_to` varchar(25),
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `notes` text,
  `unit` varchar(25),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `warehouse_name_from` varchar(60),
  `warehouse_name_to` varchar(60),
  `notes_det` text
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_po`
--

DROP TABLE IF EXISTS `view_ctk_po`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_po`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_po` (
  `id_supplier` varchar(25),
  `nm_customer` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `phone1` varchar(120),
  `phone2` varchar(120),
  `phone3` varchar(120),
  `no_purchase_order` varchar(30),
  `date_trn` date,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(60),
  `price` decimal(19,4),
  `nominal` decimal(19,4),
  `subtotal` double(19,4),
  `tax` double(19,4),
  `total` double(19,4),
  `notes` longtext,
  `freight` double(19,4),
  `photo` varchar(500),
  `weight` double(19,0),
  `priceperweight` double(19,0),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_purchase`
--

DROP TABLE IF EXISTS `view_ctk_purchase`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_purchase`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_purchase` (
  `id_supplier` varchar(25),
  `nm_supplier` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `phone1` varchar(120),
  `phone2` varchar(120),
  `phone3` varchar(120),
  `no_purchase` varchar(30),
  `no_purchase_order` varchar(30),
  `date_trn` datetime,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(60),
  `price` double(19,4),
  `nominal` double(19,4),
  `payment_method` int(25),
  `payment_term_days` int(11),
  `disc_term_days` int(11),
  `disc_term_nominal` decimal(19,4),
  `notes` varchar(255),
  `subtotal` decimal(19,4),
  `disc` decimal(10,0),
  `tax` decimal(19,4),
  `total` decimal(19,4),
  `freight` decimal(19,4),
  `weight` double(19,2),
  `priceperweight` double(19,2),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_purchase_return`
--

DROP TABLE IF EXISTS `view_ctk_purchase_return`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_purchase_return`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_purchase_return` (
  `id_supplier` varchar(25),
  `nm_supplier` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `phone1` varchar(120),
  `phone2` varchar(120),
  `phone3` varchar(120),
  `no_purchase_return` varchar(30),
  `no_purchase` varchar(30),
  `date_trn` datetime,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(60),
  `price` double(19,4),
  `nominal` double(19,4),
  `payment_method` int(25),
  `notes` varchar(255),
  `subtotal` double(19,4),
  `disc` double(19,4),
  `tax` double(19,4),
  `weight` double(19,2),
  `priceperweight` double(19,0),
  `total` double(25,8),
  `freight` double(19,4),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_rec`
--

DROP TABLE IF EXISTS `view_ctk_rec`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_rec`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_rec` (
  `id_supplier` varchar(25),
  `nm_customer` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `phone1` varchar(120),
  `phone2` varchar(120),
  `phone3` varchar(120),
  `no_received_order` varchar(30),
  `date_trn` date,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(15),
  `notes_det` varchar(255),
  `notes` longtext,
  `no_purchase_order` varchar(30),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_reconcile`
--

DROP TABLE IF EXISTS `view_ctk_reconcile`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_reconcile`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_reconcile` (
  `no_reconcile` varchar(30),
  `date_trn` datetime,
  `id_account_bank` varchar(25),
  `acc_nm_bank` varchar(60),
  `notes` text,
  `balance_before` double,
  `reconcile` double,
  `balance_after` double,
  `id_account` varchar(25),
  `account_name` varchar(60),
  `notes_det` text,
  `amount_in` double,
  `amount_out` double,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_ro`
--

DROP TABLE IF EXISTS `view_ctk_ro`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_ro`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_ro` (
  `no_request_order` varchar(30),
  `date_trn` date,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(60),
  `notes_det` varchar(255),
  `notes` longtext,
  `date_required` date,
  `id_warehouse` varchar(30),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_sales`
--

DROP TABLE IF EXISTS `view_ctk_sales`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_sales`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_sales` (
  `id_customer` varchar(25),
  `nm_customer` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `phone1` varchar(120),
  `phone2` varchar(120),
  `phone3` varchar(120),
  `no_sales` varchar(30),
  `no_sales_order` varchar(30),
  `date_trn` datetime,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(60),
  `price` double(19,4),
  `nominal` double(19,4),
  `payment_method` int(25),
  `term` int(11),
  `termpaydisc` int(11),
  `discpay` decimal(19,4),
  `notes` varchar(255),
  `subtotal` decimal(19,4),
  `discount` decimal(10,0),
  `tax` decimal(19,4),
  `total` decimal(19,4),
  `weight` double(19,2),
  `priceperweight` double(19,2),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_sales_return`
--

DROP TABLE IF EXISTS `view_ctk_sales_return`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_sales_return`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_sales_return` (
  `id_customer` varchar(30),
  `nm_customer` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `phone1` varchar(120),
  `phone2` varchar(120),
  `phone3` varchar(120),
  `no_sales_return` varchar(30),
  `no_sales` varchar(30),
  `date_trn` datetime,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(60),
  `price` double(19,4),
  `nominal` double(19,4),
  `payment_method` int(25),
  `notes` varchar(255),
  `subtotal` double(19,4),
  `disc` double(19,4),
  `tax` double(19,4),
  `total` double(19,4),
  `weight` double(19,2),
  `priceperweight` double(19,0),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_service`
--

DROP TABLE IF EXISTS `view_ctk_service`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_service`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_service` (
  `cust_name` varchar(250),
  `cust_address` text,
  `cust_phone` varchar(200),
  `no_service` varchar(30),
  `date_trn` datetime,
  `id_service` varchar(25),
  `service_name` varchar(60),
  `Unit` varchar(15),
  `qty` int(11),
  `price` double(19,4),
  `nominal` double(19,4),
  `payment_method` int(25),
  `notes` varchar(255),
  `subtotal` double(19,4),
  `discount` double(19,4),
  `tax` double(19,4),
  `total` double(19,4),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `company_phone` varchar(255)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_so`
--

DROP TABLE IF EXISTS `view_ctk_so`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_so`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_so` (
  `id_customer` varchar(25),
  `nm_customer` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `phone1` varchar(120),
  `phone2` varchar(120),
  `phone3` varchar(120),
  `no_sales_order` varchar(30),
  `date_trn` date,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(60),
  `weight` double(19,2),
  `perweight` double(19,0),
  `price` double,
  `nominal` double,
  `subtotal` double(19,2),
  `discount` double,
  `nett_total` double,
  `tax` double(19,2),
  `total` double(19,2),
  `notes` text,
  `uang_muka` double(19,2),
  `freight_est` double(19,2),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `marketing` varchar(401)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ctk_so_um`
--

DROP TABLE IF EXISTS `view_ctk_so_um`;
/*!50001 DROP VIEW IF EXISTS `view_ctk_so_um`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ctk_so_um` (
  `id_customer` varchar(25),
  `nm_customer` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `phone1` varchar(120),
  `phone2` varchar(120),
  `phone3` varchar(120),
  `no_sales_order` varchar(30),
  `date_trn` date,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `unit` varchar(60),
  `price` double,
  `nominal` double,
  `subtotal` double(19,2),
  `discount` double,
  `nett_total` double,
  `tax` double(19,2),
  `total` double(19,2),
  `notes` text,
  `uang_muka` double(19,2),
  `id_curr_um` varchar(30),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `marketing` varchar(401)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_curr_def`
--

DROP TABLE IF EXISTS `view_curr_def`;
/*!50001 DROP VIEW IF EXISTS `view_curr_def`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_curr_def` (
  `id_currency` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_current_100sales`
--

DROP TABLE IF EXISTS `view_current_100sales`;
/*!50001 DROP VIEW IF EXISTS `view_current_100sales`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_current_100sales` (
  `no_sales` varchar(30),
  `date_trn` datetime,
  `customer` varchar(401),
  `total` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_do`
--

DROP TABLE IF EXISTS `view_dataset_do`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_do`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_do` (
  `no_sales_order` varchar(30),
  `id_customer` varchar(25),
  `customer_name` varchar(401),
  `address` varchar(400),
  `date_trn` date
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_po`
--

DROP TABLE IF EXISTS `view_dataset_po`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_po` (
  `no_purchase_order` varchar(30),
  `id_supplier` varchar(25),
  `supplier_name` varchar(401),
  `address` varchar(400),
  `date_trn` date
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_po_pelunasan`
--

DROP TABLE IF EXISTS `view_dataset_po_pelunasan`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po_pelunasan`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_po_pelunasan` (
  `no_purchase_order` varchar(30),
  `id_supplier` varchar(25),
  `supplier_name` varchar(401),
  `address` varchar(400),
  `date_trn` date
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_po_pelunasan_all`
--

DROP TABLE IF EXISTS `view_dataset_po_pelunasan_all`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po_pelunasan_all`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_po_pelunasan_all` (
  `no_purchase_order` varchar(30),
  `id_supplier` varchar(25),
  `supplier_name` varchar(401),
  `address` varchar(400),
  `date_trn` date
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_po_purch`
--

DROP TABLE IF EXISTS `view_dataset_po_purch`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po_purch`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_po_purch` (
  `no_purchase_order` varchar(30),
  `id_supplier` varchar(25),
  `supplier_name` varchar(401),
  `address` varchar(400),
  `date_trn` date
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_po_purch_all`
--

DROP TABLE IF EXISTS `view_dataset_po_purch_all`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po_purch_all`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_po_purch_all` (
  `no_purchase_order` varchar(30),
  `id_supplier` varchar(25),
  `supplier_name` varchar(401),
  `address` varchar(400),
  `date_trn` date
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_po_rec`
--

DROP TABLE IF EXISTS `view_dataset_po_rec`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po_rec`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_po_rec` (
  `no_purchase_order` varchar(30),
  `id_supplier` varchar(25),
  `supplier_name` varchar(401),
  `address` varchar(400),
  `date_trn` date
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_po_rec_all`
--

DROP TABLE IF EXISTS `view_dataset_po_rec_all`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po_rec_all`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_po_rec_all` (
  `no_purchase_order` varchar(30),
  `id_supplier` varchar(25),
  `supplier_name` varchar(401),
  `address` varchar(400),
  `date_trn` date
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_purch`
--

DROP TABLE IF EXISTS `view_dataset_purch`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_purch`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_purch` (
  `no_purchase` varchar(30),
  `id_supplier` varchar(25),
  `supplier_name` varchar(401),
  `address` varchar(400),
  `date_trn` datetime
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_purch_all`
--

DROP TABLE IF EXISTS `view_dataset_purch_all`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_purch_all`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_purch_all` (
  `no_purchase` varchar(30),
  `id_supplier` varchar(25),
  `supplier_name` varchar(401),
  `address` varchar(400),
  `date_trn` datetime
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_purchdirect_all`
--

DROP TABLE IF EXISTS `view_dataset_purchdirect_all`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_purchdirect_all`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_purchdirect_all` (
  `no_purchase` varchar(30),
  `id_supplier` varchar(25),
  `supplier_name` varchar(401),
  `address` varchar(400),
  `date_trn` datetime
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_so`
--

DROP TABLE IF EXISTS `view_dataset_so`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_so`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_so` (
  `no_sales_order` varchar(30),
  `id_customer` varchar(25),
  `customer_name` varchar(401),
  `address` varchar(400),
  `date_trn` date
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_so_dev`
--

DROP TABLE IF EXISTS `view_dataset_so_dev`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_so_dev`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_so_dev` (
  `no_sales_order` varchar(30),
  `id_customer` varchar(25),
  `customer_name` varchar(401),
  `address` varchar(400),
  `date_trn` date
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_so_pelunasan`
--

DROP TABLE IF EXISTS `view_dataset_so_pelunasan`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_so_pelunasan`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_so_pelunasan` (
  `no_purchase_order` varchar(30),
  `id_supplier` varchar(25),
  `supplier_name` varchar(401),
  `address` varchar(400),
  `date_trn` date
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_dataset_so_pelunasan_all`
--

DROP TABLE IF EXISTS `view_dataset_so_pelunasan_all`;
/*!50001 DROP VIEW IF EXISTS `view_dataset_so_pelunasan_all`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_dataset_so_pelunasan_all` (
  `no_purchase_order` varchar(30),
  `id_supplier` varchar(25),
  `supplier_name` varchar(401),
  `address` varchar(400),
  `date_trn` date
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_department_produksi`
--

DROP TABLE IF EXISTS `view_department_produksi`;
/*!50001 DROP VIEW IF EXISTS `view_department_produksi`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_department_produksi` (
  `department_id` int(11),
  `department_name` varchar(100),
  `notes` text,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_depproduksi_coa`
--

DROP TABLE IF EXISTS `view_depproduksi_coa`;
/*!50001 DROP VIEW IF EXISTS `view_depproduksi_coa`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_depproduksi_coa` (
  `department_id` int(11),
  `department_name` varchar(100),
  `id_account_bdp` varchar(60),
  `id_account_bop_real` varchar(60),
  `id_account_bop_std` varchar(60),
  `id_account_directlabor` varchar(60),
  `id_account_material_cost` varchar(60),
  `id_account_wages_payable` varchar(60),
  `id_account_wip_cost` varchar(60)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_depreciation_history`
--

DROP TABLE IF EXISTS `view_depreciation_history`;
/*!50001 DROP VIEW IF EXISTS `view_depreciation_history`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_depreciation_history` (
  `id_aset` varchar(30),
  `nama` varchar(60),
  `type` varchar(120),
  `date_trn` date,
  `nominal` double,
  `period` int(11),
  `years` int(11),
  `department_name` varchar(100),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `header_text` varchar(250)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_detail_component_cashflow`
--

DROP TABLE IF EXISTS `view_detail_component_cashflow`;
/*!50001 DROP VIEW IF EXISTS `view_detail_component_cashflow`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_detail_component_cashflow` (
  `id_account` varchar(25),
  `account_name` varchar(60),
  `id_component` bigint(11)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_disc_brand_item`
--

DROP TABLE IF EXISTS `view_disc_brand_item`;
/*!50001 DROP VIEW IF EXISTS `view_disc_brand_item`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_disc_brand_item` (
  `id_item` varchar(25),
  `item_name` varchar(60),
  `disc` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_disc_cat_item`
--

DROP TABLE IF EXISTS `view_disc_cat_item`;
/*!50001 DROP VIEW IF EXISTS `view_disc_cat_item`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_disc_cat_item` (
  `id_item` varchar(25),
  `item_name` varchar(60),
  `disc` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_disc_item_do`
--

DROP TABLE IF EXISTS `view_disc_item_do`;
/*!50001 DROP VIEW IF EXISTS `view_disc_item_do`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_disc_item_do` (
  `no_do` varchar(255),
  `id_item` varchar(255),
  `item_name` varchar(60),
  `qty` double,
  `id_unit` varchar(60)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_disc_item_so`
--

DROP TABLE IF EXISTS `view_disc_item_so`;
/*!50001 DROP VIEW IF EXISTS `view_disc_item_so`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_disc_item_so` (
  `no_sales_order` varchar(255),
  `id_item` varchar(255),
  `item_name` varchar(60),
  `qty` double,
  `id_unit` varchar(60)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_disc_type_item`
--

DROP TABLE IF EXISTS `view_disc_type_item`;
/*!50001 DROP VIEW IF EXISTS `view_disc_type_item`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_disc_type_item` (
  `id_item` varchar(25),
  `item_name` varchar(60),
  `disc` double(19,2)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_do_list`
--

DROP TABLE IF EXISTS `view_do_list`;
/*!50001 DROP VIEW IF EXISTS `view_do_list`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_do_list` (
  `no_delivery_order` varchar(30),
  `date_trn` date,
  `pelanggan` varchar(401),
  `address` varchar(400),
  `city` varchar(120),
  `freight_est` double(19,2)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_employee`
--

DROP TABLE IF EXISTS `view_employee`;
/*!50001 DROP VIEW IF EXISTS `view_employee`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_employee` (
  `id_employee` varchar(25),
  `employee_nm` varchar(401),
  `position_id` int(11),
  `department_id` int(11)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_event_attendance`
--

DROP TABLE IF EXISTS `view_event_attendance`;
/*!50001 DROP VIEW IF EXISTS `view_event_attendance`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_event_attendance` (
  `id_member` varchar(30),
  `id_attendance` varchar(30),
  `event_name` varchar(120),
  `start_date` datetime,
  `end_date` datetime,
  `nip_member` varchar(30),
  `member_name` varchar(120),
  `position` varchar(120),
  `area` varchar(120),
  `region` varchar(120),
  `status_hadir` varchar(11),
  `attendance_date` varchar(19)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_event_member`
--

DROP TABLE IF EXISTS `view_event_member`;
/*!50001 DROP VIEW IF EXISTS `view_event_member`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_event_member` (
  `id_event` varchar(30),
  `id_member` varchar(30),
  `event_name` varchar(120),
  `start_date` datetime,
  `end_date` datetime,
  `member_name` varchar(120),
  `nip_member` varchar(30),
  `position` varchar(120),
  `area` varchar(120),
  `region` varchar(120),
  `photo_path` text
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_grafik_currentaset`
--

DROP TABLE IF EXISTS `view_grafik_currentaset`;
/*!50001 DROP VIEW IF EXISTS `view_grafik_currentaset`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_grafik_currentaset` (
  `account_name` varchar(60),
  `debet` double(17,0),
  `credit` double(17,0)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_grafikbiaya_bln`
--

DROP TABLE IF EXISTS `view_grafikbiaya_bln`;
/*!50001 DROP VIEW IF EXISTS `view_grafikbiaya_bln`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_grafikbiaya_bln` (
  `account_name` varchar(60),
  `persent` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_grafikbiaya_th`
--

DROP TABLE IF EXISTS `view_grafikbiaya_th`;
/*!50001 DROP VIEW IF EXISTS `view_grafikbiaya_th`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_grafikbiaya_th` (
  `account_name` varchar(60),
  `persent` double(17,0)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_group_bayarkop`
--

DROP TABLE IF EXISTS `view_group_bayarkop`;
/*!50001 DROP VIEW IF EXISTS `view_group_bayarkop`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_group_bayarkop` (
  `nominal_bayar` double(17,0),
  `no_pinjam` varchar(120)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_hpp_calculated`
--

DROP TABLE IF EXISTS `view_hpp_calculated`;
/*!50001 DROP VIEW IF EXISTS `view_hpp_calculated`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_hpp_calculated` (
  `no_bukti` varchar(60),
  `date_trn` datetime,
  `id_item` varchar(50),
  `item_name` varchar(300),
  `masuk` double,
  `keluar` double,
  `id_unit` varchar(30),
  `price` double,
  `saldo` double,
  `company` text,
  `notes` text,
  `nmb_asc` int(11),
  `price_in` double,
  `price_out` double,
  `main_unit` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_hutang_jt`
--

DROP TABLE IF EXISTS `view_hutang_jt`;
/*!50001 DROP VIEW IF EXISTS `view_hutang_jt`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_hutang_jt` (
  `no_purchase` varchar(30),
  `id_supplier` varchar(30),
  `supplier` varchar(401),
  `date_trn` datetime,
  `total_ap` double,
  `paid_amount` double,
  `balance` double,
  `payment_term_days` int(11),
  `jatuh_tempo` date,
  `company_name` varchar(200),
  `kurs` double,
  `id_curr` varchar(25),
  `convert_value` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_item_beg_balance`
--

DROP TABLE IF EXISTS `view_item_beg_balance`;
/*!50001 DROP VIEW IF EXISTS `view_item_beg_balance`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_item_beg_balance` (
  `id_item` varchar(25),
  `item_name` varchar(60),
  `id_unit` varchar(25),
  `balance` double(10,0),
  `price` double,
  `notes` text,
  `id_warehouse` varchar(25),
  `weight` double(18,2),
  `kadar` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_item_disc`
--

DROP TABLE IF EXISTS `view_item_disc`;
/*!50001 DROP VIEW IF EXISTS `view_item_disc`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_item_disc` (
  `id_item` varchar(60),
  `id_item_disc` varchar(60),
  `item_name_disc` varchar(60),
  `qty` double,
  `id_unit` varchar(255)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_kartu_bayar`
--

DROP TABLE IF EXISTS `view_kartu_bayar`;
/*!50001 DROP VIEW IF EXISTS `view_kartu_bayar`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_kartu_bayar` (
  `no_pinjam` varchar(255),
  `no_bayar` varchar(255),
  `first_name` varchar(200),
  `address` varchar(400),
  `date_trn` datetime,
  `nominal_bunga` double(19,0),
  `print_status` bigint(11)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_laba_rugi`
--

DROP TABLE IF EXISTS `view_laba_rugi`;
/*!50001 DROP VIEW IF EXISTS `view_laba_rugi`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_laba_rugi` (
  `id_account` varchar(255),
  `account_name` varchar(255),
  `parent` varchar(255),
  `saldo` double,
  `header_group` varchar(255),
  `company_name` varchar(255),
  `account_parent` varchar(60),
  `saldo_th_lalu` double,
  `curr` varchar(25),
  `parent2` varchar(25),
  `account_parent2` varchar(60),
  `parent3` varchar(25),
  `account_parent3` varchar(60),
  `header_text` varchar(250),
  `profit_notes` varchar(250),
  `tInc` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_laba_rugi_lra`
--

DROP TABLE IF EXISTS `view_laba_rugi_lra`;
/*!50001 DROP VIEW IF EXISTS `view_laba_rugi_lra`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_laba_rugi_lra` (
  `id_account` varchar(255),
  `account_name` varchar(255),
  `parent` varchar(255),
  `saldo` double,
  `header_group` varchar(255),
  `company_name` varchar(255),
  `account_parent` varchar(60),
  `saldo_th_lalu` double,
  `curr` varchar(25),
  `parent2` varchar(25),
  `account_parent2` varchar(60),
  `parent3` varchar(25),
  `account_parent3` varchar(60),
  `header_text` varchar(250),
  `profit_notes` varchar(250)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_datacustomer`
--

DROP TABLE IF EXISTS `view_lap_datacustomer`;
/*!50001 DROP VIEW IF EXISTS `view_lap_datacustomer`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_datacustomer` (
  `ID` varchar(25),
  `Nama` varchar(401),
  `Alamat` varchar(400),
  `Kota` varchar(120),
  `Propinsi` varchar(255),
  `Telepon` varchar(241),
  `Email` varchar(120),
  `Wesite` varchar(120),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_datacustomer_2`
--

DROP TABLE IF EXISTS `view_lap_datacustomer_2`;
/*!50001 DROP VIEW IF EXISTS `view_lap_datacustomer_2`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_datacustomer_2` (
  `ID` varchar(25),
  `Nama` varchar(401),
  `Alamat` varchar(400),
  `Kota` varchar(120),
  `Propinsi` varchar(255),
  `Telepon` varchar(241),
  `Email` varchar(120),
  `Wesite` varchar(120),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_dataemployee`
--

DROP TABLE IF EXISTS `view_lap_dataemployee`;
/*!50001 DROP VIEW IF EXISTS `view_lap_dataemployee`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_dataemployee` (
  `ID` varchar(25),
  `Nama` varchar(401),
  `Alamat` varchar(400),
  `Kota` varchar(120),
  `Propinsi` varchar(255),
  `Telepon` varchar(241),
  `Email` varchar(120),
  `Wesite` varchar(120),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_datasupplier`
--

DROP TABLE IF EXISTS `view_lap_datasupplier`;
/*!50001 DROP VIEW IF EXISTS `view_lap_datasupplier`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_datasupplier` (
  `ID` varchar(25),
  `Nama` varchar(401),
  `Alamat` varchar(400),
  `Kota` varchar(120),
  `Propinsi` varchar(255),
  `Telepon` varchar(241),
  `Email` varchar(120),
  `Wesite` varchar(120),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_detail_transjasa`
--

DROP TABLE IF EXISTS `view_lap_detail_transjasa`;
/*!50001 DROP VIEW IF EXISTS `view_lap_detail_transjasa`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_detail_transjasa` (
  `no_service` varchar(30),
  `date_trn` date,
  `id_customer` varchar(25),
  `id_service` varchar(25),
  `service_name` varchar(60),
  `price` double(19,4),
  `qty` int(11),
  `nominal` double(19,4),
  `nama_customer` varchar(401),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `status_member` varchar(10)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_detail_transkasir`
--

DROP TABLE IF EXISTS `view_lap_detail_transkasir`;
/*!50001 DROP VIEW IF EXISTS `view_lap_detail_transkasir`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_detail_transkasir` (
  `no_sales` varchar(30),
  `date_trn` date,
  `id_customer` varchar(120),
  `id_item` varchar(25),
  `item_name` varchar(60),
  `price` double(19,4),
  `qty` int(11),
  `nominal` double(19,4),
  `nama_customer` varchar(401),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `status_member` varchar(10),
  `subtotal` double(19,4),
  `discount` double(25,8),
  `tax` double(25,8),
  `total` double(19,4),
  `id_currency` varchar(25),
  `number_asc` int(11)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_hutang_lunas`
--

DROP TABLE IF EXISTS `view_lap_hutang_lunas`;
/*!50001 DROP VIEW IF EXISTS `view_lap_hutang_lunas`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_hutang_lunas` (
  `no_purchase` varchar(30),
  `supplier` varchar(401),
  `purchase_amount` double,
  `return_amount` double,
  `nett_purch` double,
  `no_payment_ap` varchar(30),
  `date_trn` datetime,
  `disc_amount` double,
  `paid_amount` double(19,4),
  `notes` longtext,
  `id_supplier` varchar(25),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `id_currency` varchar(30)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_jurnal`
--

DROP TABLE IF EXISTS `view_lap_jurnal`;
/*!50001 DROP VIEW IF EXISTS `view_lap_jurnal`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_jurnal` (
  `date_trn` date,
  `no_ledger` varchar(25),
  `id_account` varchar(25),
  `account_name` varchar(60),
  `notes` text,
  `debit` double(255,0),
  `kredit` double(17,0),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `curr` varchar(25),
  `header_text` varchar(250)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_koreksi_stock`
--

DROP TABLE IF EXISTS `view_lap_koreksi_stock`;
/*!50001 DROP VIEW IF EXISTS `view_lap_koreksi_stock`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_koreksi_stock` (
  `no_adjust_stock` varchar(25),
  `date_trn` datetime,
  `warehouse_name` varchar(60),
  `koreksi_negative` double(10,0),
  `koreksi_positive` double(10,0),
  `weight_plus` double,
  `weight_minus` double,
  `notes_det` text,
  `notes` text,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_pembelian_std`
--

DROP TABLE IF EXISTS `view_lap_pembelian_std`;
/*!50001 DROP VIEW IF EXISTS `view_lap_pembelian_std`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_pembelian_std` (
  `no_purchase` varchar(30),
  `date_trn` date,
  `id_supplier` varchar(25),
  `nama_supplier` varchar(401),
  `subtotal` decimal(19,4),
  `freight` decimal(19,4),
  `discount` decimal(34,8),
  `subtotal_nett` decimal(35,8),
  `PPN` decimal(57,16),
  `total` double(21,4),
  `notes` varchar(255),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `id_curr` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_pemby_hutang`
--

DROP TABLE IF EXISTS `view_lap_pemby_hutang`;
/*!50001 DROP VIEW IF EXISTS `view_lap_pemby_hutang`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_pemby_hutang` (
  `no_payment_ap` varchar(30),
  `supplier_name` varchar(401),
  `date_trn` datetime,
  `notes` longtext,
  `total` int(1),
  `account_name` varchar(60),
  `id_supplier` varchar(25),
  `id_account` varchar(25),
  `number_asc` int(11),
  `no_purchase` varchar(30),
  `invoice_date` date,
  `ap_amount` double,
  `discount` double,
  `ap_amount_net` double,
  `paid_amount` double,
  `supplier_addr` text,
  `ap_return` double,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `id_currency` varchar(30),
  `kurs` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_pemby_piutang`
--

DROP TABLE IF EXISTS `view_lap_pemby_piutang`;
/*!50001 DROP VIEW IF EXISTS `view_lap_pemby_piutang`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_pemby_piutang` (
  `no_payment_ar` varchar(30),
  `customer_name` varchar(400),
  `date_trn` datetime,
  `notes` longtext,
  `total` int(1),
  `account_name` varchar(60),
  `id_customer` varchar(25),
  `id_account` varchar(25),
  `number_asc` int(11),
  `no_invoice` varchar(30),
  `invoice_date` date,
  `ap_amount` double,
  `discount` double,
  `ap_amount_net` double,
  `paid_amount` double,
  `supplier_addr` text,
  `ap_return` double,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `id_currency` varchar(30),
  `kurs` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_penjualan_std`
--

DROP TABLE IF EXISTS `view_lap_penjualan_std`;
/*!50001 DROP VIEW IF EXISTS `view_lap_penjualan_std`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_penjualan_std` (
  `no_sales` varchar(30),
  `date_trn` date,
  `id_customer` varchar(120),
  `nama_customer` varchar(401),
  `subtotal` double,
  `discount` double,
  `subtotal_nett` double,
  `PPN` double,
  `total` double,
  `notes` varchar(255),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `id_curr` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_piutang_lunas`
--

DROP TABLE IF EXISTS `view_lap_piutang_lunas`;
/*!50001 DROP VIEW IF EXISTS `view_lap_piutang_lunas`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_piutang_lunas` (
  `no_sales` varchar(30),
  `customer` varchar(401),
  `sales_amount` double,
  `return_amount` double,
  `nett_sales` double,
  `no_payment_ar` varchar(30),
  `date_trn` datetime,
  `disc_amount` double,
  `paid_amount` double(19,4),
  `notes` longtext,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `id_currency` varchar(30)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_ranking_pembperbarang`
--

DROP TABLE IF EXISTS `view_lap_ranking_pembperbarang`;
/*!50001 DROP VIEW IF EXISTS `view_lap_ranking_pembperbarang`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_ranking_pembperbarang` (
  `no_purchase` varchar(30),
  `id_item` varchar(25),
  `item_name` varchar(60),
  `date_trn` datetime,
  `qty` decimal(32,0),
  `id_supplier` varchar(25),
  `supplier_name` varchar(401),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_ranking_penjperbarang`
--

DROP TABLE IF EXISTS `view_lap_ranking_penjperbarang`;
/*!50001 DROP VIEW IF EXISTS `view_lap_ranking_penjperbarang`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_ranking_penjperbarang` (
  `no_sales` varchar(30),
  `id_item` varchar(25),
  `item_name` varchar(60),
  `date_trn` datetime,
  `qty` decimal(32,0),
  `id_customer` varchar(25),
  `customer_name` varchar(401),
  `price` double(19,4),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_rekap_kasbank`
--

DROP TABLE IF EXISTS `view_lap_rekap_kasbank`;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekap_kasbank`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_rekap_kasbank` (
  `cashbank_no` varchar(30),
  `date_trn` date,
  `id_account` varchar(30),
  `account_name` varchar(60),
  `total` double,
  `notes` text,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `id_currency` varchar(30)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_rekap_pemb_supplier`
--

DROP TABLE IF EXISTS `view_lap_rekap_pemb_supplier`;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekap_pemb_supplier`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_rekap_pemb_supplier` (
  `no_purchase` varchar(30),
  `date_trn` date,
  `id_supplier` varchar(25),
  `nama_supplier` varchar(401),
  `subtotal` decimal(19,4),
  `freight` decimal(19,4),
  `discount` decimal(34,8),
  `subtotal_nett` decimal(35,8),
  `PPN` decimal(57,16),
  `total` decimal(19,4),
  `notes` varchar(255),
  `id_item` varchar(25),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_rekap_penjper_category`
--

DROP TABLE IF EXISTS `view_lap_rekap_penjper_category`;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekap_penjper_category`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_rekap_penjper_category` (
  `id_category` varchar(120),
  `total` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_rekap_penjualan_bykategori`
--

DROP TABLE IF EXISTS `view_lap_rekap_penjualan_bykategori`;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekap_penjualan_bykategori`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_rekap_penjualan_bykategori` (
  `id_category` varchar(120),
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `weight` double(19,2),
  `nominal` double(19,4),
  `date_trn` datetime,
  `mst_itemcat_nm` varchar(120),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_rekap_transjasa`
--

DROP TABLE IF EXISTS `view_lap_rekap_transjasa`;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekap_transjasa`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_rekap_transjasa` (
  `no_service` varchar(30),
  `date_trn` date,
  `id_customer` varchar(25),
  `nama_customer` varchar(401),
  `subtotal` double(19,4),
  `discount` double(25,8),
  `subtotal_nett` double(25,8),
  `PPN` double(25,8),
  `total` double(19,4),
  `notes` varchar(255),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `status_member` varchar(10)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_rekap_transkasir`
--

DROP TABLE IF EXISTS `view_lap_rekap_transkasir`;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekap_transkasir`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_rekap_transkasir` (
  `no_sales` varchar(30),
  `date_trn` date,
  `id_customer` varchar(120),
  `nama_customer` varchar(401),
  `subtotal` double(19,4),
  `discount` double(25,8),
  `subtotal_nett` double(25,8),
  `PPN` double(25,8),
  `total` double(19,4),
  `notes` varchar(255),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `status_member` varchar(10),
  `id_curr` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_rekappemb_bln_persupp`
--

DROP TABLE IF EXISTS `view_lap_rekappemb_bln_persupp`;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekappemb_bln_persupp`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_rekappemb_bln_persupp` (
  `no_purchase` varchar(30),
  `date_trn` date,
  `id_supplier` varchar(25),
  `nama_supplier` varchar(401),
  `subtotal` decimal(19,4),
  `freight` decimal(19,4),
  `discount` decimal(34,8),
  `subtotal_nett` decimal(35,8),
  `PPN` decimal(57,16),
  `total` decimal(19,4),
  `notes` varchar(255),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lap_stockopname`
--

DROP TABLE IF EXISTS `view_lap_stockopname`;
/*!50001 DROP VIEW IF EXISTS `view_lap_stockopname`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lap_stockopname` (
  `no_opname` varchar(30),
  `date_trn` datetime,
  `id_warehouse` varchar(25),
  `id_item` varchar(25),
  `item_name` varchar(60),
  `id_unit` varchar(25),
  `qty_onhand` double,
  `qty_opname` double,
  `notes` text,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `warehouse_name` varchar(60)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_laphutang_per_supplier`
--

DROP TABLE IF EXISTS `view_laphutang_per_supplier`;
/*!50001 DROP VIEW IF EXISTS `view_laphutang_per_supplier`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_laphutang_per_supplier` (
  `no_purchase` varchar(30),
  `date_trn` datetime,
  `supplier_name` varchar(401),
  `notes` varchar(255),
  `payment_term_days` int(11),
  `purchase_amount` double,
  `return_amount` double,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `id_supplier` varchar(25),
  `est_disc` double(17,0),
  `total` double,
  `paid_amount` double,
  `curr` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_laporan_simpanpinjam`
--

DROP TABLE IF EXISTS `view_laporan_simpanpinjam`;
/*!50001 DROP VIEW IF EXISTS `view_laporan_simpanpinjam`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_laporan_simpanpinjam` (
  `no_pinjam` varchar(255),
  `bunga` double(19,2),
  `date_trn` datetime,
  `jangka_waktu` int(11),
  `customer` varchar(401),
  `tglbayar` datetime,
  `tgljt` datetime,
  `nominal_bunga` double(19,0),
  `nominal` double(19,2)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_laporan_stok_per_category`
--

DROP TABLE IF EXISTS `view_laporan_stok_per_category`;
/*!50001 DROP VIEW IF EXISTS `view_laporan_stok_per_category`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_laporan_stok_per_category` (
  `id_item` varchar(25),
  `item_name` varchar(60),
  `id_category` varchar(25),
  `category_nm` varchar(120),
  `weight` double(18,2),
  `stok` bigint(11),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lappiutang_per_cust`
--

DROP TABLE IF EXISTS `view_lappiutang_per_cust`;
/*!50001 DROP VIEW IF EXISTS `view_lappiutang_per_cust`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lappiutang_per_cust` (
  `no_sales` varchar(30),
  `date_trn` datetime,
  `customer_name` varchar(401),
  `notes` varchar(255),
  `term` int(11),
  `sales_amount` double,
  `return_amount` double,
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200),
  `id_customer` varchar(25),
  `est_disc` double,
  `total` double,
  `paid_amount` double,
  `curr` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_lapwo_head`
--

DROP TABLE IF EXISTS `view_lapwo_head`;
/*!50001 DROP VIEW IF EXISTS `view_lapwo_head`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_lapwo_head` (
  `no_bom` varchar(60),
  `notes` text,
  `qty_item_production` double,
  `unit` varchar(60),
  `date_trn` datetime,
  `total_cost` double,
  `id_item` varchar(120),
  `item_name` varchar(60),
  `qty_material` double,
  `unit_material` varchar(60),
  `cost` double,
  `total_cost_material` double,
  `Detail` varchar(8)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_layanan_grouppasien`
--

DROP TABLE IF EXISTS `view_layanan_grouppasien`;
/*!50001 DROP VIEW IF EXISTS `view_layanan_grouppasien`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_layanan_grouppasien` (
  `NOCM` varchar(10),
  `NAMALENGKAP` varchar(250),
  `JENISPASIEN` varchar(250),
  `RUANGAN` varchar(250),
  `NAMAPELAYANAN` varchar(400),
  `NOMINAL` double(19,0)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_list_item`
--

DROP TABLE IF EXISTS `view_list_item`;
/*!50001 DROP VIEW IF EXISTS `view_list_item`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_list_item` (
  `id_item` varchar(25),
  `item_name` varchar(60),
  `id_category` varchar(25),
  `id_jenis` varchar(25),
  `id_account` varchar(25),
  `main_unit` varchar(25),
  `buy_unit` varchar(25),
  `sell_unit` varchar(25),
  `flag_buy` int(1),
  `flag_sell` int(1),
  `flag_inv` int(1),
  `blob_image` varchar(500),
  `sell_price` double,
  `modified_user` varchar(120),
  `created_date` datetime,
  `modified_date` datetime,
  `created_user` varchar(120),
  `id_warehouse` varchar(120),
  `max_qty` int(11),
  `min_qty` int(11),
  `notes` text,
  `length` float(18,2),
  `width` float(18,2),
  `height` float(18,2),
  `weight` float(18,2),
  `kadar` double,
  `id_barcode` varchar(30),
  `brand` varchar(120),
  `category` varchar(120),
  `type` varchar(120),
  `id_brand` varchar(255)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_list_item_ro`
--

DROP TABLE IF EXISTS `view_list_item_ro`;
/*!50001 DROP VIEW IF EXISTS `view_list_item_ro`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_list_item_ro` (
  `id_item` varchar(25),
  `item_name` varchar(60),
  `no_request_order` varchar(30),
  `approve_qty` int(11),
  `id_unit` varchar(15),
  `id_barcode` varchar(30)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_list_item_stokaktif`
--

DROP TABLE IF EXISTS `view_list_item_stokaktif`;
/*!50001 DROP VIEW IF EXISTS `view_list_item_stokaktif`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_list_item_stokaktif` (
  `id_item` varchar(25),
  `item_name` varchar(60),
  `id_category` varchar(25),
  `id_jenis` varchar(25),
  `id_account` varchar(25),
  `main_unit` varchar(25),
  `buy_unit` varchar(25),
  `sell_unit` varchar(25),
  `flag_buy` int(1),
  `flag_sell` int(1),
  `flag_inv` int(1),
  `blob_image` varchar(500),
  `sell_price` double,
  `modified_user` varchar(120),
  `created_date` datetime,
  `modified_date` datetime,
  `created_user` varchar(120),
  `id_warehouse` varchar(120),
  `max_qty` int(11),
  `min_qty` int(11),
  `notes` text,
  `length` float(18,2),
  `width` float(18,2),
  `height` float(18,2),
  `weight` double(18,2),
  `kadar` double,
  `id_barcode` varchar(30),
  `brand` varchar(120),
  `category` varchar(120),
  `type` varchar(120),
  `id_brand` varchar(255)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_list_material`
--

DROP TABLE IF EXISTS `view_list_material`;
/*!50001 DROP VIEW IF EXISTS `view_list_material`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_list_material` (
  `id_item` varchar(25),
  `item_name` varchar(60),
  `id_category` varchar(25),
  `id_jenis` varchar(25),
  `id_account` varchar(25),
  `main_unit` varchar(25),
  `buy_unit` varchar(25),
  `sell_unit` varchar(25),
  `flag_buy` int(1),
  `flag_sell` int(1),
  `flag_inv` int(1),
  `blob_image` varchar(500),
  `sell_price` double,
  `modified_user` varchar(120),
  `created_date` datetime,
  `modified_date` datetime,
  `created_user` varchar(120),
  `id_warehouse` varchar(120),
  `max_qty` int(11),
  `min_qty` int(11),
  `notes` text,
  `length` float(18,2),
  `width` float(18,2),
  `height` float(18,2),
  `weight` float(18,2),
  `id_barcode` varchar(30)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_list_po`
--

DROP TABLE IF EXISTS `view_list_po`;
/*!50001 DROP VIEW IF EXISTS `view_list_po`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_list_po` (
  `no_purchase_order` varchar(30),
  `nm_supplier` varchar(401),
  `date_trn` date,
  `subtotal` double(19,4),
  `freight` double(19,4),
  `tax` double(19,4),
  `total` double(19,4),
  `notes` longtext
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_main_unit_item`
--

DROP TABLE IF EXISTS `view_main_unit_item`;
/*!50001 DROP VIEW IF EXISTS `view_main_unit_item`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_main_unit_item` (
  `id_item` varchar(25),
  `main_unit` varchar(25),
  `flag_buy` int(1),
  `flag_inv` int(1),
  `flag_sell` int(1)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_marketing`
--

DROP TABLE IF EXISTS `view_marketing`;
/*!50001 DROP VIEW IF EXISTS `view_marketing`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_marketing` (
  `id_employee` varchar(60),
  `nama` varchar(401)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_marketing_combo`
--

DROP TABLE IF EXISTS `view_marketing_combo`;
/*!50001 DROP VIEW IF EXISTS `view_marketing_combo`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_marketing_combo` (
  `id_employee` varchar(60),
  `nama` varchar(401)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_menu`
--

DROP TABLE IF EXISTS `view_menu`;
/*!50001 DROP VIEW IF EXISTS `view_menu`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_menu` (
  `username` varchar(60),
  `ismenu` int(11),
  `notes` varchar(400),
  `parentkey` varchar(120),
  `childkey` varchar(120),
  `icon_webapp` varchar(250),
  `link_webapp` varchar(500)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_pasiva`
--

DROP TABLE IF EXISTS `view_pasiva`;
/*!50001 DROP VIEW IF EXISTS `view_pasiva`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_pasiva` (
  `id_account` varchar(255),
  `account_name` varchar(255),
  `parent` varchar(25),
  `account_parent` varchar(250),
  `saldo` double,
  `golongan` varchar(9),
  `id_golongan` bigint(11),
  `id_parent2` varchar(25),
  `parent2` varchar(250),
  `header_text` varchar(250),
  `total_pasiva` double,
  `total_pasiva_lalu` double,
  `total_aktiva` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_path_userphoto`
--

DROP TABLE IF EXISTS `view_path_userphoto`;
/*!50001 DROP VIEW IF EXISTS `view_path_userphoto`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_path_userphoto` (
  `username` varchar(25),
  `id_employee` varchar(25),
  `photo` text
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_piutang_jt`
--

DROP TABLE IF EXISTS `view_piutang_jt`;
/*!50001 DROP VIEW IF EXISTS `view_piutang_jt`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_piutang_jt` (
  `no_sales` varchar(30),
  `id_customer` varchar(30),
  `customer` varchar(401),
  `date_trn` datetime,
  `total_ar` double,
  `paid_amount` double,
  `balance` double,
  `termpaydisc` int(11),
  `jatuh_tempo` date,
  `company_name` varchar(200),
  `id_curr` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_po_detail`
--

DROP TABLE IF EXISTS `view_po_detail`;
/*!50001 DROP VIEW IF EXISTS `view_po_detail`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_po_detail` (
  `id_supplier` varchar(25),
  `nama` varchar(401),
  `address` varchar(400),
  `no_purchase_order` varchar(30),
  `date_trn` date,
  `id_curr` varchar(25),
  `notes` longtext,
  `subtotal` double(19,4),
  `tax` double(19,4),
  `total_head` double(19,4),
  `number_asc` int(11),
  `id_item` varchar(25),
  `id_unit` varchar(15),
  `item_name` varchar(60),
  `description` varchar(255),
  `qty` int(11),
  `price` decimal(19,4),
  `total` decimal(29,4),
  `freight` double(19,4)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_po_report`
--

DROP TABLE IF EXISTS `view_po_report`;
/*!50001 DROP VIEW IF EXISTS `view_po_report`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_po_report` (
  `no_purchase_order` varchar(30),
  `nama` varchar(401),
  `date_trn` date,
  `freight` double(19,4),
  `tax` double(25,8),
  `notes` longtext,
  `id_supplier` varchar(25),
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `qty_received` int(11),
  `id_unit` varchar(15),
  `price` decimal(19,4),
  `nominal` decimal(19,4),
  `no_request_order` varchar(30),
  `notes_det` varchar(255),
  `weight` double(19,0),
  `priceperweight` double(19,0),
  `company_name` varchar(200),
  `id_curr` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_recitem_report`
--

DROP TABLE IF EXISTS `view_recitem_report`;
/*!50001 DROP VIEW IF EXISTS `view_recitem_report`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_recitem_report` (
  `no_received_order` varchar(30),
  `nama` varchar(401),
  `date_trn` date,
  `notes` longtext,
  `id_supplier` varchar(25),
  `no_purchase_order` varchar(30),
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `received_qty` int(11),
  `id_unit` varchar(15),
  `notes_det` text,
  `company_name` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_rekonsiliasi_report`
--

DROP TABLE IF EXISTS `view_rekonsiliasi_report`;
/*!50001 DROP VIEW IF EXISTS `view_rekonsiliasi_report`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_rekonsiliasi_report` (
  `no_reconcile` varchar(30),
  `nama` varchar(60),
  `date_trn` datetime,
  `notes` text,
  `id_account_bank` varchar(25),
  `id_account_det` varchar(25),
  `account_name` varchar(60),
  `amount_in` double,
  `amount_out` double,
  `notes_det` text,
  `company_name` varchar(200),
  `balance_before` double,
  `balance_after` double,
  `reconcile` double
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_report_header`
--

DROP TABLE IF EXISTS `view_report_header`;
/*!50001 DROP VIEW IF EXISTS `view_report_header`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_report_header` (
  `header_text` varchar(250),
  `company_name` varchar(200),
  `id_currency` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_ro_report`
--

DROP TABLE IF EXISTS `view_ro_report`;
/*!50001 DROP VIEW IF EXISTS `view_ro_report`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_ro_report` (
  `no_request_order` varchar(30),
  `date_trn` date,
  `notes` longtext,
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `approve_qty` int(11),
  `approve_date` datetime,
  `id_unit` varchar(15),
  `id_warehouse` varchar(30),
  `warehouse_name` varchar(60),
  `notes_approve` varchar(16),
  `company_name` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_sales_nowadays`
--

DROP TABLE IF EXISTS `view_sales_nowadays`;
/*!50001 DROP VIEW IF EXISTS `view_sales_nowadays`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_sales_nowadays` (
  `date_trn` date,
  `no_sales` varchar(30),
  `no_sales_order` varchar(30),
  `customer` varchar(401),
  `total` double(19,2),
  `id_curr` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_sentitem_report`
--

DROP TABLE IF EXISTS `view_sentitem_report`;
/*!50001 DROP VIEW IF EXISTS `view_sentitem_report`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_sentitem_report` (
  `no_delivery_order` varchar(30),
  `nama` varchar(401),
  `date_trn` date,
  `notes` text,
  `id_customer` varchar(25),
  `no_sales_order` varchar(30),
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `sent_qty` int(11),
  `id_unit` varchar(15),
  `notes_det` text,
  `company_name` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_so_detail`
--

DROP TABLE IF EXISTS `view_so_detail`;
/*!50001 DROP VIEW IF EXISTS `view_so_detail`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_so_detail` (
  `id_customer` varchar(25),
  `nama` varchar(401),
  `address` varchar(400),
  `no_sales_order` varchar(30),
  `date_trn` date,
  `id_curr` varchar(25),
  `notes` text,
  `subtotal` double(19,2),
  `tax` double(19,2),
  `total_head` double(19,2),
  `number_asc` int(11),
  `id_item` varchar(25),
  `id_unit` varchar(15),
  `item_name` varchar(60),
  `description` varchar(255),
  `qty` int(11),
  `sent_qty` bigint(11),
  `price` double,
  `total` double,
  `kurs` double,
  `discount` double,
  `nett_total` double,
  `uang_muka` double(19,2)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_so_expedition`
--

DROP TABLE IF EXISTS `view_so_expedition`;
/*!50001 DROP VIEW IF EXISTS `view_so_expedition`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_so_expedition` (
  `no_delivery_order` varchar(30),
  `no_sales_order` varchar(30),
  `no_ekspedisi` varchar(60)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_so_nowadays`
--

DROP TABLE IF EXISTS `view_so_nowadays`;
/*!50001 DROP VIEW IF EXISTS `view_so_nowadays`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_so_nowadays` (
  `date_trn` date,
  `no_sales_order` varchar(30),
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `id_unit` varchar(15),
  `price` double(19,4),
  `nominal` double(19,4),
  `id_curr` varchar(25)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_so_report`
--

DROP TABLE IF EXISTS `view_so_report`;
/*!50001 DROP VIEW IF EXISTS `view_so_report`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_so_report` (
  `no_sales_order` varchar(30),
  `nama` varchar(401),
  `date_trn` date,
  `tax` double(23,6),
  `notes` text,
  `id_customer` varchar(25),
  `id_item` varchar(25),
  `item_name` varchar(60),
  `qty` int(11),
  `sent_qty` int(11),
  `id_unit` varchar(15),
  `price` double(19,4),
  `nominal` double(19,4),
  `notes_det` varchar(255),
  `weight` double(19,2),
  `perweight` double(19,0),
  `company_name` varchar(200),
  `marketing` varchar(401)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_total_purchase_return`
--

DROP TABLE IF EXISTS `view_total_purchase_return`;
/*!50001 DROP VIEW IF EXISTS `view_total_purchase_return`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_total_purchase_return` (
  `qty` decimal(32,0),
  `no_purchase_return` varchar(30),
  `id_item` varchar(25),
  `no_purchase` varchar(30)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_upload_pemrov_simrs`
--

DROP TABLE IF EXISTS `view_upload_pemrov_simrs`;
/*!50001 DROP VIEW IF EXISTS `view_upload_pemrov_simrs`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_upload_pemrov_simrs` (
  `date_trn` date,
  `evidence_no` varchar(250),
  `reff_acc_cost` varchar(120),
  `reff_prog` varchar(120),
  `reff_keg` varchar(120),
  `reff_acc_cashbank` varchar(120),
  `notes` text,
  `receipt_amount` double(19,2),
  `spend_amount` double(19,2),
  `posting_status` varchar(24),
  `convert_tgl` date,
  `id_import` varchar(120)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `view_user`
--

DROP TABLE IF EXISTS `view_user`;
/*!50001 DROP VIEW IF EXISTS `view_user`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `view_user` (
  `username` varchar(25),
  `password` varchar(250),
  `flag_active` bigint(11),
  `nama` varchar(401),
  `position` varchar(100),
  `departement` varchar(100)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `wip_goods_view`
--

DROP TABLE IF EXISTS `wip_goods_view`;
/*!50001 DROP VIEW IF EXISTS `wip_goods_view`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `wip_goods_view` (
  `id_item` varchar(25),
  `item_name` varchar(60),
  `id_barcode` varchar(30),
  `mst_itemcat_nm` varchar(120)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `wo_realized_view_report`
--

DROP TABLE IF EXISTS `wo_realized_view_report`;
/*!50001 DROP VIEW IF EXISTS `wo_realized_view_report`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `wo_realized_view_report` (
  `realized_no` varchar(60),
  `pic` varchar(200),
  `cost_total` double,
  `date_trn` date,
  `item_name` varchar(400),
  `item_detail` varchar(120),
  `type` varchar(10)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `wo_view_report`
--

DROP TABLE IF EXISTS `wo_view_report`;
/*!50001 DROP VIEW IF EXISTS `wo_view_report`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `wo_view_report` (
  `wo_no` varchar(60),
  `pic` varchar(401),
  `cost_total` double,
  `start_date` datetime,
  `realized_date` datetime,
  `item_notes` varchar(400),
  `no_bom` varchar(60),
  `item_detail` varchar(120),
  `type` varchar(15),
  `company_name` varchar(200),
  `company_address` text,
  `company_city` varchar(200)
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Dumping routines for database 'smarterp_tokoemas'
--
/*!50003 DROP FUNCTION IF EXISTS `func_check_qty_adjuststok` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_check_qty_adjuststok`(var_criteria varchar(120), var_start_date date, var_end_date date) RETURNS int(11)
BEGIN

declare stock_awal integer;
declare stock_in_bef_period integer;
declare stock_out_bef_period integer;
declare stock_bef_period integer;

select balance into stock_awal from i_item_beg_balance where id_item = var_criteria;
select qty into stock_in_bef_period from i_stock_in where id_item = var_criteria
and date_trn < var_start_date;
select qty into stock_out_bef_period from i_stock_out where id_item = var_criteria
and date_trn < var_start_date;

set stock_bef_period = stock_in_bef_period-stock_out_bef_period;

return stock_bef_period;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_count_outlet` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_count_outlet`() RETURNS int(11)
BEGIN

declare var_jml_outlet integer;

select count(id_warehouse) into var_jml_outlet from mst_warehouse where is_outlet = 1 limit 1;
return var_jml_outlet;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_count_period` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_count_period`() RETURNS int(11)
BEGIN

declare var_jml_outlet integer;

select count(periode) into var_jml_outlet from i_accounting_period limit 1;
return var_jml_outlet;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_getQty_DO` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_getQty_DO`(var_criteria varchar(120), var_id_item varchar(30)) RETURNS int(11)
BEGIN
	declare total_received integer;

	select 
	case when sum(d.sent_qty) is null then 0 else sum(d.sent_qty) end as qty 
	into total_received from trn_sales_order_det d 
	where d.no_sales_order = var_criteria and d.id_item = var_id_item ;

	RETURN total_received;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_getQty_Rec` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_getQty_Rec`(var_criteria varchar(120), var_id_item varchar(30)) RETURNS int(11)
BEGIN
	declare total_received integer;

	select 
	case when sum(d.qty_received) is null then 0 else sum(d.qty_received) end as qty 
	into total_received from trn_purchase_order_det d 
	where d.no_purchase_order = var_criteria and d.id_item = var_id_item ;

	RETURN total_received;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_account_no` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_account_no`(var_parent TEXT, header integer) RETURNS varchar(50) CHARSET utf8
    READS SQL DATA
BEGIN
		
		declare nourut_acc VARCHAR(10);
		declare nourut_int INTEGER;
		declare variable_parent varchar(10);
		declare jumlah_nol INTEGER;
		declare jumlah integer;
		declare i integer;
		declare prefix_temp varchar(10);
		declare is_use_separator INTEGER;
		declare length_account integer;
		declare separator_type varchar(1);
		declare var_is_bumn integer;

					select count(id_account) into nourut_acc from mst_account where parent = var_parent and RIGHT(id_account,2) <> '99'; 
					select is_bumn into var_is_bumn from i_project_name where project_default = 1;
					

					if header = 1 then
						select id_account into variable_parent from mst_account where id_account = var_parent limit 1;
					else
						if var_is_bumn = 0 then 
							select parent into variable_parent from mst_account where id_account = var_parent limit 1;
						ELSE
							select id_account into variable_parent from mst_account where id_account = var_parent limit 1;
						end if;
					end if;
					set nourut_int = cast(nourut_acc as unsigned);
					set jumlah = LENGTH(variable_parent); 
					set i=1;

					set jumlah_nol=0;
					while i <= jumlah do	
						if substr(variable_parent,i,1) = '0' THEN
							set jumlah_nol = jumlah_nol +1; 
						end if;
						set i=i+1;
					end while;
	
				select account_length into length_account from account_general_setup;
				select use_separator into is_use_separator from account_general_setup;
				select separator_text into separator_type from account_general_setup;
		if var_is_bumn = 0 then
			if is_use_separator = 1 then
				if header = 1 then
						if jumlah_nol = 4 THEN
							select left(id_account,2) into prefix_temp from mst_account where id_account = var_parent limit 1;
							return concat(prefix_temp,nourut_int+1,'000');
						elseif jumlah_nol = 3 THEN
							select left(id_account,3) into prefix_temp from mst_account where id_account = var_parent limit 1;
							return concat(prefix_temp,nourut_int+1,'00');
						end if;
				 ELSEif header =0 then
							select left(id_account,4) into prefix_temp from mst_account where id_account = var_parent limit 1;
							return concat(prefix_temp,'0',nourut_int+1);
				 end if;
			end IF;
		
			if is_use_separator = 0 then
				if header = 1 then
						if jumlah_nol = 4 THEN
							select left(id_account,1) into prefix_temp from mst_account where id_account = var_parent limit 1;
						  return concat(prefix_temp,nourut_int+1,'000');
						elseif jumlah_nol = 3 THEN
							select left(id_account,2) into prefix_temp from mst_account where id_account = var_parent limit 1;
							return concat(prefix_temp,nourut_int+1,'00');
						end if;
				 ELSEif header =0 then
							select left(id_account,3) into prefix_temp from mst_account where id_account = var_parent limit 1;
							return concat(prefix_temp,'0',nourut_int+1);
				 end if;
			END IF;
		else
			if header = 1 then
						if jumlah = 1 THEN
							select left(id_account,1) into prefix_temp from mst_account where id_account = var_parent limit 1;
							return concat(prefix_temp,nourut_int+1);
						elseif jumlah = 2 THEN
							select left(id_account,2) into prefix_temp from mst_account where id_account = var_parent limit 1;
							return concat(prefix_temp,nourut_int+1);
						elseif jumlah = 3 THEN
							select left(id_account,3) into prefix_temp from mst_account where id_account = var_parent limit 1;
							return concat(prefix_temp,'0',nourut_int+1);
						elseif jumlah = 5 THEN
							select left(id_account,5) into prefix_temp from mst_account where id_account = var_parent limit 1;
							return concat(prefix_temp,'0',nourut_int+1);
						end if;
				 ELSEif header =0 then
						if jumlah = 1 THEN
							select left(id_account,1) into prefix_temp from mst_account where id_account = var_parent limit 1;
							return concat(prefix_temp,nourut_int+1);
						elseif jumlah = 2 THEN
							select left(id_account,2) into prefix_temp from mst_account where id_account = var_parent limit 1;
							return concat(prefix_temp,nourut_int+1);
						elseif jumlah = 3 THEN
							select left(id_account,3) into prefix_temp from mst_account where id_account = var_parent limit 1;
							return concat(prefix_temp,'0',nourut_int+1);
						elseif jumlah = 5 THEN
							select left(id_account,5) into prefix_temp from mst_account where id_account = var_parent limit 1;
							return concat(prefix_temp,'0',nourut_int+1);
						end if;
				 end if;
		end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_acc_cogs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_acc_cogs`() RETURNS varchar(60) CHARSET utf8
BEGIN
		
		declare var_id_account varchar(60);
		select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_def_cogs';

return var_id_account;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_acc_inventory` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_acc_inventory`() RETURNS varchar(60) CHARSET utf8
BEGIN
		
		declare var_id_account varchar(60);
		select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_def_inventory';

return var_id_account;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_apterm_disc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_apterm_disc`(var_criteria varchar(120), var_no_purchase varchar(200)) RETURNS double
BEGIN
declare var_result double;


	select 
case 
	when DATEDIFF((select now()),a.date_trn) <= b.disc_term_days THEN (b.disc_term_nominal * a.purchase_amount/100)
	else 0 end as disc into var_result 
from ap_status a
inner join trn_purchase_head b on b.no_purchase = a.no_purchase
where b.id_supplier = var_criteria AND  b.payment_method=2
and a.no_purchase = var_no_purchase;

	RETURN var_result;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_arterm_disc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_arterm_disc`(var_criteria varchar(120), var_no_sales varchar(200)) RETURNS double
BEGIN
declare var_result double;


	select case
when DATEDIFF((select now()),a.date_trn) <= b.termpaydisc THEN (b.discpay * a.sales_amount/100)
	else 0 end as disc into var_result 
from ar_status a
inner join trn_sales_head b on b.no_sales = a.no_sales
where b.id_customer = var_criteria AND  b.payment_method=2
and a.no_sales = var_no_sales;

	RETURN var_result;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_cogs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_cogs`(var_criteria varchar(120), var_start_date date, var_end_date date) RETURNS int(11)
BEGIN

declare stock_awal integer;
declare stock_in_bef_period integer;
declare stock_out_bef_period integer;
declare stock_bef_period integer;

select balance into stock_awal from i_item_beg_balance where id_item = var_criteria;
select qty into stock_in_bef_period from i_stock_in where id_item = var_criteria
and date_trn < var_start_date;
select qty into stock_out_bef_period from i_stock_out where id_item = var_criteria
and date_trn < var_start_date;

set stock_bef_period = stock_in_bef_period-stock_out_bef_period;

return stock_bef_period;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_cogs_2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_cogs_2`(var_criteria varchar(120), var_start_date date, var_end_date date) RETURNS int(11)
BEGIN

declare stock_awal integer;
declare stock_in_bef_period integer;
declare stock_out_bef_period integer;
declare stock_bef_period integer;

select balance into stock_awal from i_item_beg_balance where id_item = var_criteria;
select qty into stock_in_bef_period from i_stock_in where id_item = var_criteria
and date_trn < var_start_date;
select qty into stock_out_bef_period from i_stock_out where id_item = var_criteria
and date_trn < var_start_date;

set stock_bef_period = stock_in_bef_period-stock_out_bef_period;

return stock_bef_period;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_cogs_avg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_cogs_avg`(var_criteria varchar(120), transactions varchar(250)) RETURNS int(11)
BEGIN
declare var_qty_terakhir double;
declare var_price_terakhir double;
declare var_nominal_terakhir double;
declare var_qty_trans double;
declare var_price_trans double;
declare var_nominal_trans double;
declare var_cogs double;

if transactions = 'MASUK' then
	select case when price is null then 0 else price end into var_price_terakhir from lap_mutasi_hpp where id_item = var_criteria order by nmb_asc desc limit 1;
	select case when saldo is null then 0 else saldo end into var_qty_terakhir from lap_mutasi_hpp where id_item = var_criteria order by nmb_asc desc limit 1;
	set var_nominal_terakhir = var_price_terakhir * var_qty_terakhir;
	
	select case when masuk is null then 0 else masuk end into var_qty_trans from lap_mutasi_hpp where id_item = var_criteria order by nmb_asc desc limit 1;
	select case when price_in is null then 0 else price_in end into var_price_trans from lap_mutasi_hpp where id_item = var_criteria order by nmb_asc desc limit 1;
	set var_nominal_trans = var_qty_trans * var_price_trans;
	set var_cogs = (var_nominal_terakhir + var_nominal_trans) / (var_qty_terakhir + var_qty_trans);
	if var_cogs is null THEN
		set var_cogs = 0;
	end if;
elseif transactions = 'KELUAR' THEN
	select saldo into var_cogs from lap_mutasi_hpp where id_item = var_criteria order by nmb_asc desc limit 1;
end if;


return var_cogs;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_company_type` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_company_type`() RETURNS int(11)
BEGIN

declare var_type integer;

select flag_type into var_type from mst_company where flag_active =1;
return var_type;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_convert_curr` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_convert_curr`(var_id_curr varchar(30)) RETURNS double
BEGIN
		
		declare var_convert_nom double;
		select case when convert_value is null then 1 else convert_value end into var_convert_nom from mst_setcurrency where id_currency = var_id_curr;	
	
		return var_convert_nom;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_convert_curr_cashier` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_convert_curr_cashier`(var_no_po varchar(60)) RETURNS double
BEGIN
		
		declare var_kurs double;
		select case when kurs is null then 1 else kurs end into var_kurs from trn_sales_head where no_sales = var_no_po;	
	
		return var_kurs;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_convert_curr_po` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_convert_curr_po`(var_no_po varchar(60)) RETURNS double
BEGIN
		
		declare var_kurs double;
		select case when kurs is null then 1 else kurs end into var_kurs from trn_purchase_order_head where no_purchase_order = var_no_po;	
	
		return var_kurs;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_convert_curr_pu` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_convert_curr_pu`(var_no_po varchar(60)) RETURNS double
BEGIN
		
		declare var_kurs double;
		select case when kurs is null then 1 else kurs end into var_kurs from trn_purchase_head where no_purchase = var_no_po;	
	
		return var_kurs;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_convert_curr_sales` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_convert_curr_sales`(var_no_po varchar(60)) RETURNS double
BEGIN
		
		declare var_kurs double;
		select case when kurs is null then 1 else kurs end into var_kurs from trn_payoff_so_head where no_purchase = var_no_po;	
	
		return var_kurs;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_curr_pu` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_curr_pu`(var_no_pu varchar(120)) RETURNS varchar(30) CHARSET utf8
BEGIN
		
		declare var_id_curr varchar(30);
		select id_curr into var_id_curr from trn_purchase_det where no_purchase = var_no_pu limit 1;

return var_id_curr;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_curr_sales` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_curr_sales`(var_no_pu varchar(120)) RETURNS varchar(30) CHARSET utf8
BEGIN
		
		declare var_id_curr varchar(30);
		select id_curr into var_id_curr from trn_sales_det where no_sales = var_no_pu limit 1;

return var_id_curr;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_defcurr` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_defcurr`() RETURNS varchar(30) CHARSET utf8
BEGIN
		
		declare var_id_curr varchar(30);
		select id_currency into var_id_curr from mst_setcurrency where convert_value = 1;

return var_id_curr;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_defunit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_defunit`(var_criteria varchar(60)) RETURNS varchar(30) CHARSET utf8
BEGIN
		
		declare var_price varchar(30);
		select sell_unit into var_price from mst_item where id_item = var_criteria;

return var_price;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_exp_cost_sales` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_exp_cost_sales`(var_no_sales_order varchar(120)) RETURNS double
BEGIN
declare var_total double;

select case when sum(a.freight_cost) is null then 0 else sum(a.freight_cost) end as freight_cost into var_total from trn_ekspedisi_det a
inner join trn_delivery_order_head b on b.no_delivery_order = a.no_do
inner join trn_sales_order_head c on c.no_sales_order = b.no_sales_order
where c.no_sales_order = var_no_sales_order;
	
return var_total;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_harga_jual` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_harga_jual`(var_criteria varchar(60)) RETURNS int(11)
BEGIN
		
		declare var_price double;
		select case when sell_price is null then 0 else sell_price end into var_price from mst_item where id_item = var_criteria;

return var_price;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_harga_jual_basedon_jenis` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_harga_jual_basedon_jenis`(var_criteria varchar(60)) RETURNS int(11)
BEGIN
		
		declare var_price double;
		select case when default_price is null then 0 else default_price end into var_price from mst_itemjenis where mst_itemjenis_id = var_criteria;

return var_price;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_harga_service` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_harga_service`(var_criteria varchar(60)) RETURNS int(11)
BEGIN
		
		declare var_price double;
		select case when price is null then 0 else price end into var_price from mst_service where id_service = var_criteria;

return var_price;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_itemweight` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_itemweight`(var_criteria varchar(60)) RETURNS varchar(30) CHARSET utf8
BEGIN
		
		declare var_weight double;
		select case when weight is null then 0 else weight end into var_weight from mst_item where id_item = var_criteria;

return var_weight;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_last_cogs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_last_cogs`(var_id_item varchar(60)) RETURNS double
BEGIN
		
		declare var_cogs double;
		select case when price is null then 0 else price end into var_cogs from lap_mutasi_hpp where id_item = var_id_item order by nmb_asc desc limit 1;

		return var_cogs;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_max_approve_ro` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_max_approve_ro`(var_criteria varchar(120), var_id_item varchar(60)) RETURNS int(11)
    READS SQL DATA
BEGIN
		declare var_item_saldo integer;
		
		select 
		CASE when qty is null then 0 else qty end - case when approve_qty is null then 0 else approve_qty end into var_item_saldo
		from trn_request_order_det where no_request_order = var_criteria and id_item = var_id_item;
		return var_item_saldo;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_period` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_period`() RETURNS double
BEGIN
		
		declare var_count double;
		select count(periode) into var_count from i_accounting_period;

return var_count;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_pricepergram` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_pricepergram`(var_criteria varchar(60)) RETURNS double
BEGIN
		
		declare var_price double;
		select case when b.default_price is null then '' else b.default_price end into var_price from mst_item a 
		inner join mst_itemjenis b on b.mst_itemjenis_id = a.id_jenis where a.id_item = var_criteria;

return var_price;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_qtyreturbeli` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_qtyreturbeli`(var_criteria varchar(120),var_item varchar(60)) RETURNS double
    READS SQL DATA
BEGIN

		declare qty_retur double;
		declare qty_purchase double;
		declare qty_max_beli double;
	
		select case when sum(qty) is null then 0 else sum(qty) end into qty_purchase from trn_payoff_po_det where no_purchase = var_criteria 
		and id_item = var_item;
		select case when sum(qty) is null then 0 else sum(qty) end into qty_retur from trn_purchase_return_det where no_purchase = var_criteria and id_item = var_item;
		set qty_max_beli = qty_purchase - qty_retur;

		return qty_max_beli;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_qtyreturbeli_langsung` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_qtyreturbeli_langsung`(var_criteria varchar(120),var_item varchar(60)) RETURNS double
    READS SQL DATA
BEGIN

		declare qty_retur double;
		declare qty_purchase double;
		declare qty_max_beli double;
	
		select case when sum(qty) is null then 0 else sum(qty) end into qty_purchase from trn_purchasedirect_det where no_purchase = var_criteria 
		and id_item = var_item;
		select case when sum(qty) is null then 0 else sum(qty) end into qty_retur from trn_purchase_return_det where no_purchase = var_criteria and id_item = var_item;
		set qty_max_beli = qty_purchase - qty_retur;

		return qty_max_beli;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_qtyreturcashier` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_qtyreturcashier`(var_criteria varchar(120),var_item varchar(60)) RETURNS double
    READS SQL DATA
BEGIN

		declare qty_retur_jual double;
		declare qty_sales double;
		declare qty_max_jual double;
	
		select case when sum(qty) is null then 0 else sum(qty) end into qty_sales from trn_cashier_det where no_sales = var_criteria 
		and id_item = var_item;
		select case when sum(qty) is null then 0 else sum(qty) end into qty_retur_jual from trn_cashier_return_det where no_sales = var_criteria and id_item = var_item;
		set qty_max_jual = qty_sales - qty_retur_jual;

		return qty_max_jual;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_qtyreturjual` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_qtyreturjual`(var_criteria varchar(120),var_item varchar(60)) RETURNS double
    READS SQL DATA
BEGIN

		declare qty_retur_jual double;
		declare qty_sales double;
		declare qty_max_jual double;
	
		select case when sum(qty) is null then 0 else sum(qty) end into qty_sales from trn_payoff_so_det where no_purchase = var_criteria 
		and id_item = var_item;
		select case when sum(qty) is null then 0 else sum(qty) end into qty_retur_jual from trn_sales_return_det where no_sales = var_criteria and id_item = var_item;
		set qty_max_jual = qty_sales - qty_retur_jual;

		return qty_max_jual;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_sawal_stock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_sawal_stock`(var_criteria varchar(120), var_start_date date, var_end_date date) RETURNS int(11)
BEGIN

declare stock_awal integer;
declare stock_in_bef_period integer;
declare stock_out_bef_period integer;
declare stock_bef_period integer;

select balance into stock_awal from i_item_beg_balance where id_item = var_criteria;
select qty into stock_in_bef_period from i_stock_in where id_item = var_criteria
and date_trn < var_start_date;
select qty into stock_out_bef_period from i_stock_out where id_item = var_criteria
and date_trn < var_start_date;

set stock_bef_period = stock_in_bef_period-stock_out_bef_period;

return stock_bef_period;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_stock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_stock`(var_criteria varchar(120)) RETURNS int(11)
    READS SQL DATA
BEGIN
		declare var_beg_balance integer;
		declare var_stock_in integer;
		declare var_stock_out integer;
		declare var_item_saldo integer;

		select balance * b.qty into var_beg_balance from i_item_beg_balance a 
		inner join mst_setunit b on b.id_item = a.id_item and b.id_unit = a.id_unit
		where a.id_item = var_criteria;
		
		select sum(a.qty * b.qty ) into var_stock_in from i_stock_in a
		inner join mst_setunit b on b.id_item = a.id_item and b.id_unit = a.id_unit
		where a.id_item = var_criteria;

		select sum(a.qty * b.qty ) into var_stock_out from i_stock_out a
		inner join mst_setunit b on b.id_item = a.id_item and b.id_unit = a.id_unit
		where a.id_item = var_criteria;
		
		if var_beg_balance is null THEN
			set var_beg_balance = 0;
		end if;

		if var_stock_in is null THEN
			set var_stock_in = 0;
		end if;

		if var_stock_out is null THEN
			set var_stock_out = 0;
		end if;

		set var_item_saldo = var_beg_balance + var_stock_in-var_stock_out;

		return var_item_saldo;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_unit_beli` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_unit_beli`(var_criteria varchar(60)) RETURNS varchar(30) CHARSET utf8
BEGIN
		
		declare var_unit varchar(30);
		select case when buy_unit is null then '' else buy_unit end into var_unit from mst_item where id_item = var_criteria;

return var_unit;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_unit_general` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_unit_general`() RETURNS varchar(30) CHARSET utf8
BEGIN
		
		declare var_price varchar(30);
		select id_unit into var_price from mst_unit where flag_default = 1 limit 1;

return var_price;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_get_unit_jual` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_get_unit_jual`(var_criteria varchar(60)) RETURNS varchar(30) CHARSET utf8
BEGIN
		
		declare var_unit varchar(30);
		select case when sell_unit is null then '' else sell_unit end into var_unit from mst_item where id_item = var_criteria;

return var_unit;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_login` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_login`(var_user varchar(120),var_password varchar(120)) RETURNS int(11)
BEGIN
		
		declare ada_user integer;
		select count(username) as username into ada_user from mst_user where username = var_user and password = md5(var_password) and flag_active = 1;

		return ada_user;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_nobukti` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_nobukti`(NAMAFORM TEXT,VAR_BULAN  INTeger,VAR_TAHUN INTEGER) RETURNS varchar(60) CHARSET utf8
    READS SQL DATA
BEGIN
		
		declare prefix_temp_cust VARCHAR(10);
		declare nourut_cust VARCHAR(10);
		declare nourut_int INTEGER;
		declare jumlah_nol INTEGER;
		declare jumlah integer;
		declare bulan_str varchar(2);
		declare tahun_str varchar(4);
		declare i integer;
		
					
					set bulan_str = concat('',var_bulan);
					IF NAMAFORM <> "MASTER_ITEM" AND NAMAFORM <> "MASTER_EXPEDITION" AND NAMAFORM <> "MASTER_GOLASET" AND NAMAFORM <> "MASTER_ASET" and NAMAFORM <> "FAKTUR_PAJAK_NORMAL" and NAMAFORM <> "FAKTUR_PAJAK_PENGGANTI" AND NAMAFORM <> "MASTER_EVENT" AND NAMAFORM <> "MASTER_EVENT_MEMBER" AND NAMAFORM <> "MASTER_EVENT_ATTENDANCE" and NAMAFORM <> "MASTER_ITEM_JENIS" and NAMAFORM <> "MASTER_ITEM_KATEGORI" and NAMAFORM <> "MASTER_ITEM_BRAND" and NAMAFORM <> "IMPORT_SIMRS_PEMROV" and NAMAFORM <> "MASTER_SERVICE" THEN
						set tahun_str = right(concat('',var_tahun),4);
					ELSE
						set tahun_str = right(concat('',var_tahun),2);
					end IF;

					if LENGTH(bulan_str) = 1 THEN
						set bulan_str = concat('0',var_bulan);
					end if;
					select nourut into nourut_cust from control_no_trans where form = NAMAFORM  and bulan = VAR_BULAN and tahun = VAR_TAHUN;
					select IFNULL(PREFIX,'') into prefix_temp_cust from control_no_trans where form = NAMAFORM and bulan = VAR_BULAN and tahun = VAR_TAHUN; 
					set jumlah = length(nourut_cust);
					
					set nourut_int = cast(nourut_cust as unsigned);

					set i=1;
					set jumlah_nol=0;
					while i <= jumlah do	
						if left(nourut_cust,i) = 0 THEN
							set jumlah_nol = jumlah_nol +1; 
						end if;
						set i=i+1;
					end while;
			IF NAMAFORM <> "MASTER_ITEM" AND NAMAFORM <> "MASTER_KATEGORI_ITEM" AND NAMAFORM <> "MASTER_JENIS_ITEM" and NAMAFORM <> "MASTER_EXPEDITION" and NAMAFORM <> "MASTER_GOLASET" and NAMAFORM <> "MASTER_ASET" and NAMAFORM <> "FAKTUR_PAJAK_NORMAL" and NAMAFORM <> "FAKTUR_PAJAK_PENGGANTI" AND NAMAFORM <> "MASTER_EVENT" AND NAMAFORM <> "MASTER_EVENT_MEMBER" AND NAMAFORM <> "MASTER_EVENT_ATTENDANCE" and NAMAFORM <> "MASTER_ITEM_JENIS" and NAMAFORM <> "MASTER_ITEM_KATEGORI" and NAMAFORM <> "MASTER_ITEM_BRAND" and NAMAFORM <> "IMPORT_SIMRS_PEMROV" and NAMAFORM <> "MASTER_SERVICE" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','0000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','0000',nourut_int+1);
					elseif jumlah_nol = 4 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "MASTER_ITEM" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,jenis,kategori,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,jenis,kategori,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,jenis,kategori,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,jenis,kategori,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,jenis,kategori,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,jenis,kategori,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,jenis,kategori,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,jenis,kategori,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,jenis,kategori,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,jenis,kategori,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,jenis,kategori,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,jenis,kategori,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "MASTER_KATEGORI_ITEM" OR NAMAFORM = "MASTER_JENIS_ITEM" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "MASTER_SERVICE" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "IMPORT_SIMRS_PEMROV" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "MASTER_ITEM_JENIS" THEN
					if jumlah_nol = 3 THEN
							return concat(prefix_temp_cust,'00',nourut_int+1);
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "MASTER_ITEM_KATEGORI" THEN
					if jumlah_nol = 3 THEN
							return concat(prefix_temp_cust,'00',nourut_int+1);
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,'',nourut_int+1);
					end if;
			END IF;

			IF NAMAFORM = "MASTER_ITEM_BRAND" THEN
					if jumlah_nol = 3 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;
			END IF;
			
			IF NAMAFORM = "MASTER_EXPEDITION" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;
		
			IF NAMAFORM = "MASTER_GOLASET" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

IF NAMAFORM = "MASTER_ASET" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "FAKTUR_PAJAK_NORMAL" or NAMAFORM = "FAKTUR_PAJAK_PENGGANTI" THEN
					if jumlah_nol >= 8 THEN
						return concat('0000000',nourut_int+1);
					elseif jumlah_nol = 7 THEN
						if nourut_int = 9 THEN
							return concat('000000',nourut_int+1);
						ELSE
							return concat('0000000',nourut_int+1);
						end if;
					elseif jumlah_nol = 6 THEN
						if nourut_int = 99 THEN
							return concat('00000',nourut_int+1);
						ELSE
							return concat('000000',nourut_int+1);
						end if;
					elseif jumlah_nol = 5 THEN
						if nourut_int = 999 THEN
							return concat('0000',nourut_int+1);
						ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 9999 THEN
							return concat('000',nourut_int+1);
						ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 99999 THEN
							return concat('00',nourut_int+1);
						ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 99999 THEN
							return concat('0',nourut_int+1);
						ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
						ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;

			END IF;


			IF NAMAFORM = "MASTER_EVENT" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "MASTER_EVENT_MEMBER" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "MASTER_EVENT_ATTENDANCE" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_nobukti_item` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_nobukti_item`(NAMAFORM TEXT,VAR_BULAN  INTeger,VAR_TAHUN INTEGER, var_jenis varchar(20), var_kategori varchar(20)) RETURNS varchar(60) CHARSET utf8
    READS SQL DATA
BEGIN
		
		declare prefix_temp_cust VARCHAR(10);
		declare nourut_cust VARCHAR(10);
		declare nourut_int INTEGER;
		declare jumlah_nol INTEGER;
		declare jumlah integer;
		declare bulan_str varchar(2);
		declare tahun_str varchar(4);
		declare i integer;
		
					
					set bulan_str = concat('',var_bulan);
					IF NAMAFORM <> "MASTER_ITEM_NEW" AND NAMAFORM <> "MASTER_EXPEDITION" AND NAMAFORM <> "MASTER_GOLASET" AND NAMAFORM <> "MASTER_ASET" and NAMAFORM <> "FAKTUR_PAJAK_NORMAL" and NAMAFORM <> "FAKTUR_PAJAK_PENGGANTI" AND NAMAFORM <> "MASTER_EVENT" AND NAMAFORM <> "MASTER_EVENT_MEMBER" AND NAMAFORM <> "MASTER_EVENT_ATTENDANCE" and NAMAFORM <> "MASTER_ITEM_JENIS_NEW" and NAMAFORM <> "MASTER_ITEM_KATEGORI_NEW" and NAMAFORM <> "MASTER_ITEM_NEW_BRAND" and NAMAFORM <> "IMPORT_SIMRS_PEMROV" and NAMAFORM <> "MASTER_SERVICE" THEN
						set tahun_str = right(concat('',var_tahun),4);
					ELSE
						set tahun_str = right(concat('',var_tahun),2);
					end IF;

					if LENGTH(bulan_str) = 1 THEN
						set bulan_str = concat('0',var_bulan);
					end if;
					IF NAMAFORM <> "MASTER_ITEM_NEW" then
						select nourut into nourut_cust from control_no_trans where form = NAMAFORM;
					ELSE
						select nourut into nourut_cust from control_no_trans where form = NAMAFORM and jenis = var_jenis and kategori = var_kategori;
					end if;
					
					IF NAMAFORM <> "MASTER_ITEM_NEW" THEN
						select IFNULL(PREFIX,'') into prefix_temp_cust from control_no_trans where form = NAMAFORM;
					ELSE
						select IFNULL(PREFIX,'') into prefix_temp_cust from control_no_trans where form = NAMAFORM and jenis = var_jenis and kategori = var_kategori;
					END IF;
					set jumlah = length(nourut_cust);
					
					set nourut_int = cast(nourut_cust as unsigned);

					set i=1;
					set jumlah_nol=0;
					while i <= jumlah do	
						if left(nourut_cust,i) = 0 THEN
							set jumlah_nol = jumlah_nol +1; 
						end if;
						set i=i+1;
					end while;

			IF NAMAFORM <> "MASTER_ITEM_NEW" AND NAMAFORM <> "MASTER_KATEGORI_ITEM" AND NAMAFORM <> "MASTER_JENIS_ITEM" and NAMAFORM <> "MASTER_EXPEDITION" and NAMAFORM <> "MASTER_GOLASET" and NAMAFORM <> "MASTER_ASET" and NAMAFORM <> "FAKTUR_PAJAK_NORMAL" and NAMAFORM <> "FAKTUR_PAJAK_PENGGANTI" AND NAMAFORM <> "MASTER_EVENT" AND NAMAFORM <> "MASTER_EVENT_MEMBER" AND NAMAFORM <> "MASTER_EVENT_ATTENDANCE" and NAMAFORM <> "MASTER_ITEM_JENIS_NEW" and NAMAFORM <> "MASTER_ITEM_KATEGORI_NEW" and NAMAFORM <> "MASTER_ITEM_NEW_BRAND" and NAMAFORM <> "IMPORT_SIMRS_PEMROV" and NAMAFORM <> "MASTER_SERVICE" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','0000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','0000',nourut_int+1);
					elseif jumlah_nol = 4 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-','0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,'/',bulan_str,'-',tahun_str,'-',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "MASTER_ITEM_NEW" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,var_jenis,var_kategori,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,var_jenis,var_kategori,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,var_jenis,var_kategori,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,var_jenis,var_kategori,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,var_jenis,var_kategori,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,var_jenis,var_kategori,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,var_jenis,var_kategori,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,var_jenis,var_kategori,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,var_jenis,var_kategori,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,var_jenis,var_kategori,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,var_jenis,var_kategori,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,var_jenis,var_kategori,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "MASTER_KATEGORI_ITEM" OR NAMAFORM = "MASTER_JENIS_ITEM" THEN
		
					if jumlah_nol = 2 THEN
							return concat(prefix_temp_cust,'0',nourut_int+1);
					elseif jumlah_nol = 1 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,'0',nourut_int+1);
						end if;
					ELSEIF nourut_int = 10 THEN
						return concat(prefix_temp_cust,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "MASTER_SERVICE" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "IMPORT_SIMRS_PEMROV" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "MASTER_ITEM_JENIS_NEW" THEN
				if jumlah_nol = 2 THEN
							return concat(prefix_temp_cust,var_jenis,var_kategori,'0',nourut_int+1);
					elseif jumlah_nol = 1 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,var_jenis,var_kategori,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,var_jenis,var_kategori,'0',nourut_int+1);
						end if;
					ELSEif jumlah_nol = 0 or nourut_int = 10 THEN
						return concat(prefix_temp_cust,var_jenis,var_kategori,'',nourut_int+1);
					end if;
			END IF;

			IF NAMAFORM = "MASTER_ITEM_KATEGORI_NEW" THEN
					if jumlah_nol = 1 THEN
							return concat(prefix_temp_cust,var_jenis,var_kategori,'',nourut_int+1);
					ELSE
						return concat(prefix_temp_cust,var_jenis,var_kategori,'',nourut_int+1);
					end if;
			END IF;

			IF NAMAFORM = "MASTER_ITEM_NEW_BRAND" THEN
					if jumlah_nol = 3 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;
			END IF;
			
			IF NAMAFORM = "MASTER_EXPEDITION" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;
		
			IF NAMAFORM = "MASTER_GOLASET" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

IF NAMAFORM = "MASTER_ASET" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "FAKTUR_PAJAK_NORMAL" or NAMAFORM = "FAKTUR_PAJAK_PENGGANTI" THEN
					if jumlah_nol >= 8 THEN
						return concat('0000000',nourut_int+1);
					elseif jumlah_nol = 7 THEN
						if nourut_int = 9 THEN
							return concat('000000',nourut_int+1);
						ELSE
							return concat('0000000',nourut_int+1);
						end if;
					elseif jumlah_nol = 6 THEN
						if nourut_int = 99 THEN
							return concat('00000',nourut_int+1);
						ELSE
							return concat('000000',nourut_int+1);
						end if;
					elseif jumlah_nol = 5 THEN
						if nourut_int = 999 THEN
							return concat('0000',nourut_int+1);
						ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 9999 THEN
							return concat('000',nourut_int+1);
						ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 99999 THEN
							return concat('00',nourut_int+1);
						ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 99999 THEN
							return concat('0',nourut_int+1);
						ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
						ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;

			END IF;


			IF NAMAFORM = "MASTER_EVENT" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "MASTER_EVENT_MEMBER" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

			IF NAMAFORM = "MASTER_EVENT_ATTENDANCE" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
						ELSE
							return concat(prefix_temp_cust,bulan_str,tahun_str,'0',nourut_int+1);
						end if;
					ELSE
						return concat(prefix_temp_cust,bulan_str,tahun_str,'',nourut_int+1);
					end if;

			END IF;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_nomor` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_nomor`(NAMAFORM TEXT) RETURNS varchar(50) CHARSET utf8
    READS SQL DATA
BEGIN
		
		declare prefix_temp_cust VARCHAR(10);
		declare nourut_cust VARCHAR(10);
		declare nourut_int INTEGER;
		declare jumlah_nol INTEGER;
		declare jumlah integer;
		declare i integer;
		
		
					select nourut into nourut_cust from control_no_master where form = NAMAFORM; 
					select IFNULL(PREFIX,'') into prefix_temp_cust from control_no_master where form = NAMAFORM; 
					set jumlah = length(nourut_cust);
					
					set nourut_int = cast(nourut_cust as unsigned);

					set i=1;
					set jumlah_nol=0;
					while i <= jumlah do	
						if left(nourut_cust,i) = 0 THEN
							set jumlah_nol = jumlah_nol +1; 
						end if;
						set i=i+1;
					end while;
					
					if nourut_int = 999999 then 
						set nourut_int = 0;
						set jumlah_nol = 6;
					end if;

				IF NAMAFORM = "MASTER CUSTOMER" OR NAMAFORM = "MASTER SUPPLIER" OR NAMAFORM = "MASTER MARKETING" OR NAMAFORM = "MASTER BIAYA" OR NAMAFORM ="FORMULA PRODUCT" OR NAMAFORM ="MASTER ITEM" OR NAMAFORM = "ASSEMBLY PRODUCT" THEN
					if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,get_year(),'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 then
							return concat(prefix_temp_cust,get_year(),'0000',nourut_int+1);
						else
							return concat(prefix_temp_cust,get_year(),'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 then
							return concat(prefix_temp_cust,get_year(),'000',nourut_int+1);
						else
							return concat(prefix_temp_cust,get_year(),'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 then
							return concat(prefix_temp_cust,get_year(),'00',nourut_int+1);
						else
							return concat(prefix_temp_cust,get_year(),'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
							if nourut_int = 9999 then
							return concat(prefix_temp_cust,get_year(),'0',nourut_int+1);
						else
							return concat(prefix_temp_cust,get_year(),'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
							if nourut_int = 99999 then
							return concat(prefix_temp_cust,get_year(),'',nourut_int+1);
						else
							return concat(prefix_temp_cust,get_year(),'0',nourut_int+1);
						end if;
					elseif jumlah_nol = 0 THEN
						return concat(prefix_temp_cust,get_year(),'',nourut_int+1);
					end if;
						
		END IF;
		
		IF NAMAFORM = "MASTER CARA BAYAR SIMRS" THEN
				if jumlah_nol >= 6 THEN
						return concat(prefix_temp_cust,get_year(),'00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 then
							return concat(prefix_temp_cust,'0000',nourut_int+1);
						else
							return concat(prefix_temp_cust,'00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 then
							return concat(prefix_temp_cust,'000',nourut_int+1);
						else
							return concat(prefix_temp_cust,'0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 then
							return concat(prefix_temp_cust,'00',nourut_int+1);
						else
							return concat(prefix_temp_cust,'000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
							if nourut_int = 9999 then
							return concat(prefix_temp_cust,'0',nourut_int+1);
						else
							return concat(prefix_temp_cust,'00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
							if nourut_int = 99999 then
							return concat(prefix_temp_cust,'',nourut_int+1);
						else
							return concat(prefix_temp_cust,'0',nourut_int+1);
						end if;
					elseif jumlah_nol = 0 THEN
						return concat(prefix_temp_cust,'',nourut_int+1);
					end if;
		end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_old_password` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_old_password`(var_username varchar(120)) RETURNS varchar(120) CHARSET utf8
BEGIN
		
		declare var_password varchar(120);
		select password into var_password from mst_user where username = var_username;

		return var_password;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_paymentmethod_def` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_paymentmethod_def`(var_criteria varchar(120), var_transaction text) RETURNS int(11)
    READS SQL DATA
BEGIN
declare payment_method integer;

		if var_transaction = 'sales' THEN
			select def_payment_method into payment_method from mst_customer where id_customer = var_criteria;
		elseif var_transaction = 'purchase' THEN
			select def_payment_method into payment_method from mst_supplier where id_supplier = var_criteria;
		end if;
	
		return payment_method;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_rem_qty_material_wo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_rem_qty_material_wo`(var_type varchar(120), var_no_wo varchar(60), var_id_item varchar(60)) RETURNS double
BEGIN
	declare remaining_qty double;

	if var_type = 'Bahan Baku' then
		select 
		(case when qty_material is null then 0 else qty_material end) -
		(case when real_qty is null then 0 else real_qty end) into remaining_qty from trn_wo_material_det
		where no_wo = var_no_wo and id_item = var_id_item;
	end if;

	if var_type = 'Barang Dalam Proses' THEN
		select 
		(case when qty_material is null then 0 else qty_material end) -
		(case when real_qty is null then 0 else real_qty end) into remaining_qty from trn_wo_material_det
		where wo_no = var_no_wo and id_item = var_id_item;
	end if;
	RETURN remaining_qty;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_update_nobukti` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_update_nobukti`(NAMAFORM TEXT, VAR_BULAN  INTEGER,VAR_TAHUN INTEGER) RETURNS varchar(50) CHARSET utf8
    READS SQL DATA
BEGIN	
		declare prefix_temp_cust VARCHAR(10);
		declare nourut_cust VARCHAR(10);
		declare nourut_int INTEGER;
		declare jumlah_nol INTEGER;
		declare jumlah integer;
		declare i integer;
	
		IF NAMAFORM = "JOURNAL" 
									or NAMAFORM = "OPNAME" 
									or NAMAFORM = "ADJUSTSTOCK" 
									or NAMAFORM = "SPENDMONEY" 
									or NAMAFORM = "RECEIVEMONEY" 
									OR NAMAFORM = "PAYAP" 
									or NAMAFORM = "PAYAR" 
									or NAMAFORM = "PURCHASE_RETURN" 
									or NAMAFORM = "PO" 
									or NAMAFORM = "PURCHASE" 
									or NAMAFORM = "DIRECT_PURCHASE" 
									or NAMAFORM = "SALES" 
									or NAMAFORM = "SALES_ORDER" 
									or NAMAFORM = "SALES_SERVICE" 
									or NAMAFORM = "SALES_RETURN" 
									or NAMAFORM = "RECONCILE" 
									or NAMAFORM = "TRFSTOCK" 
									or NAMAFORM = "RO"
									or NAMAFORM = "RECEIVED_ORDER"
									or NAMAFORM = "DELIVERED_ITEM"
									or NAMAFORM = "CASHIER"
									or NAMAFORM = "CASHIER_RETURN"
									or NAMAFORM = "PINJAMAN"
									or NAMAFORM = "BAYAR_PINJAMAN"
									or NAMAFORM = "MASTER_ITEM_NEW"
									or NAMAFORM = "MASTER_EXPEDITION"
									or NAMAFORM = "MASTER_ASET"
									or NAMAFORM = "MASTER_GOLASET"
									or NAMAFORM = "MASTER_CUSTOMER"
									or NAMAFORM = "REDEMPTION"
									or NAMAFORM = "SERVICE"
									or NAMAFORM = "SERVICEPAY"
									or NAMAFORM = "PESANAN"
									or NAMAFORM = "PESANANPAY"
									or NAMAFORM = "TANPANOTA"
									or NAMAFORM = "ADJUST_JOURNAL"
									or NAMAFORM = "DEPR_JOURNAL"
									or NAMAFORM = "EXPEDITION_JOURNAL"
									OR NAMAFORM = "FAKTUR_PAJAK_NORMAL"
								  OR NAMAFORM = "FAKTUR_PAJAK_PENGGANTI"
									or NAMAFORM = "MASTER_EVENT"
									or NAMAFORM = "MASTER_EVENT_MEMBER"
									OR NAMAFORM = "MASTER_EVENT_ATTENDANCE"
									OR NAMAFORM = "PURCHASE_DIRECT"
									or NAMAFORM = "MASTER_ITEM_JENIS_NEW"
									or NAMAFORM = "MASTER_ITEM_KATEGORI_NEW"
									or NAMAFORM = "MASTER_ITEM_NEW_BRAND"
									or NAMAFORM = "IMPORT_SIMRS_PEMROV"
									or NAMAFORM = "MASTER_SERVICE"
									or NAMAFORM = "WORKING_ORDER"
									or NAMAFORM = "MATERIAL_USAGE"
									or NAMAFORM = "REALISASI_WORKING_ORDER"
									or NAMAFORM = "PELUNASAN_PO"
									or NAMAFORM = "PELUNASAN_SO"
								THEN

			if NAMAFORM = "MASTER_ITEM_JENIS_NEW" OR NAMAFORM = "MASTER_ITEM_KATEGORI_NEW" THEN
						select nourut into nourut_cust from control_no_trans where form = NAMAFORM;
			else
						select nourut into nourut_cust from control_no_trans where form = NAMAFORM and bulan = VAR_BULAN and tahun = VAR_TAHUN;
			end if;
					select IFNULL(PREFIX,'') into prefix_temp_cust from control_no_trans where form = NAMAFORM limit 1; 
					set jumlah = length(nourut_cust);
					
					set nourut_int = cast(nourut_cust as unsigned);

					set i=1;
					set jumlah_nol=0;
					while i <= jumlah do	
						if left(nourut_cust,i) = 0 THEN
							set jumlah_nol = jumlah_nol +1; 
						end if;
						set i=i+1;
					end while;
					
				IF NAMAFORM <> "MASTER_ITEM_NEW" AND NAMAFORM <> "MASTER_EXPEDITION" AND NAMAFORM <> "MASTER_GOLASET" AND NAMAFORM <> "MASTER_ASET" and NAMAFORM <> "FAKTUR_PAJAK_NORMAL" and NAMAFORM <> "FAKTUR_PAJAK_PENGGANTI" and NAMAFORM <> "MASTER_EVENT" and NAMAFORM <> "MASTER_EVENT_MEMBER" and NAMAFORM <> "MASTER_EVENT_ATTENDANCE" AND NAMAFORM <> "MASTER_ITEM_JENIS_NEW" AND NAMAFORM <> "MASTER_ITEM_KATEGORI_NEW" AND NAMAFORM <> "MASTER_ITEM_NEW_BRAND" AND NAMAFORM <> "IMPORT_SIMRS_PEMROV" AND NAMAFORM <> "MASTER_SERVICE" THEN
					if jumlah_nol >= 6 THEN
						return concat('0000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						return concat('0000',nourut_int+1);
					elseif jumlah_nol = 4 THEN
						if nourut_int = 9 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 99 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 9999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
				end if;

			IF NAMAFORM = "MASTER_ITEM_NEW" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "MASTER_SERVICE" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "IMPORT_SIMRS_PEMROV" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "MASTER_ITEM_JENIS_NEW" THEN
					if jumlah_nol = 3 THEN
							return concat('00',nourut_int+1);
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "MASTER_ITEM_KATEGORI_NEW" THEN
				if jumlah_nol = 3 THEN
							return concat('00',nourut_int+1);
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;
	
			IF NAMAFORM = "MASTER_ITEM_NEW_BRAND" THEN
				if jumlah_nol = 3 THEN
							return concat('00',nourut_int+1);
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "MASTER_EVENT" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "MASTER_EVENT_MEMBER" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;
			
			IF NAMAFORM = "MASTER_EVENT_ATTENDANCE" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "MASTER_EXPEDITION" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;
			
			IF NAMAFORM = "MASTER_GOLASET" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

IF NAMAFORM = "MASTER_ASET" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "FAKTUR_PAJAK_NORMAL" OR NAMAFORM = "FAKTUR_PAJAK_PENGGANTI" THEN
				if jumlah_nol >= 8 THEN
						return concat('0000000',nourut_int+1);
					elseif jumlah_nol = 7 THEN
						if nourut_int = 9 THEN
							return concat('000000',nourut_int+1);
					  ELSE
							return concat('0000000',nourut_int+1);
						end if;
					elseif jumlah_nol = 6 THEN
							if nourut_int = 99 THEN
							return concat('00000',nourut_int+1);
					  ELSE
							return concat('000000',nourut_int+1);
						end if;
					elseif jumlah_nol = 5 THEN
							if nourut_int = 999 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 9999 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 99999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 99999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;


		END IF;
		

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_update_nobukti_item` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_update_nobukti_item`(NAMAFORM TEXT, VAR_BULAN  INTEGER,VAR_TAHUN INTEGER, var_jenis varchar(20), var_kategori varchar(20)) RETURNS varchar(50) CHARSET utf8
    READS SQL DATA
BEGIN	
		declare prefix_temp_cust VARCHAR(10);
		declare nourut_cust VARCHAR(10);
		declare nourut_int INTEGER;
		declare jumlah_nol INTEGER;
		declare jumlah integer;
		declare i integer;
	
		IF NAMAFORM = "JOURNAL" 
									or NAMAFORM = "OPNAME" 
									or NAMAFORM = "ADJUSTSTOCK" 
									or NAMAFORM = "SPENDMONEY" 
									or NAMAFORM = "RECEIVEMONEY" 
									OR NAMAFORM = "PAYAP" 
									or NAMAFORM = "PAYAR" 
									or NAMAFORM = "PURCHASE_RETURN" 
									or NAMAFORM = "PO" 
									or NAMAFORM = "PURCHASE" 
									or NAMAFORM = "DIRECT_PURCHASE" 
									or NAMAFORM = "SALES" 
									or NAMAFORM = "SALES_ORDER" 
									or NAMAFORM = "SALES_SERVICE" 
									or NAMAFORM = "SALES_RETURN" 
									or NAMAFORM = "RECONCILE" 
									or NAMAFORM = "TRFSTOCK" 
									or NAMAFORM = "RO"
									or NAMAFORM = "RECEIVED_ORDER"
									or NAMAFORM = "DELIVERED_ITEM"
									or NAMAFORM = "CASHIER"
									or NAMAFORM = "CASHIER_RETURN"
									or NAMAFORM = "PINJAMAN"
									or NAMAFORM = "BAYAR_PINJAMAN"
									or NAMAFORM = "MASTER_ITEM_NEW"
									or NAMAFORM = "MASTER_EXPEDITION"
									or NAMAFORM = "MASTER_ASET"
									or NAMAFORM = "MASTER_GOLASET"
									or NAMAFORM = "MASTER_CUSTOMER"
									or NAMAFORM = "REDEMPTION"
									or NAMAFORM = "SERVICE"
									or NAMAFORM = "SERVICEPAY"
									or NAMAFORM = "PESANAN"
									or NAMAFORM = "PESANANPAY"
									or NAMAFORM = "TANPANOTA"
									or NAMAFORM = "ADJUST_JOURNAL"
									or NAMAFORM = "DEPR_JOURNAL"
									or NAMAFORM = "EXPEDITION_JOURNAL"
									OR NAMAFORM = "FAKTUR_PAJAK_NORMAL"
								  OR NAMAFORM = "FAKTUR_PAJAK_PENGGANTI"
									or NAMAFORM = "MASTER_EVENT"
									or NAMAFORM = "MASTER_EVENT_MEMBER"
									OR NAMAFORM = "MASTER_EVENT_ATTENDANCE"
									OR NAMAFORM = "PURCHASE_DIRECT"
									or NAMAFORM = "MASTER_ITEM_JENIS_NEW"
									or NAMAFORM = "MASTER_ITEM_KATEGORI_NEW"
									or NAMAFORM = "MASTER_ITEM_NEW_BRAND"
									or NAMAFORM = "IMPORT_SIMRS_PEMROV"
									or NAMAFORM = "MASTER_SERVICE"
									or NAMAFORM = "WORKING_ORDER"
									or NAMAFORM = "MATERIAL_USAGE"
									or NAMAFORM = "REALISASI_WORKING_ORDER"
									or NAMAFORM = "PELUNASAN_PO"
									or NAMAFORM = "PELUNASAN_SO"
								THEN

					if NAMAFORM = "MASTER_ITEM_JENIS_NEW" OR NAMAFORM = "MASTER_ITEM_KATEGORI_NEW" THEN
						select nourut into nourut_cust from control_no_trans where form = NAMAFORM;
					ELSEIF NAMAFORM = "MASTER_ITEM_NEW" THEN
						select nourut into nourut_cust from control_no_trans where form = NAMAFORM and jenis = var_jenis and kategori = var_kategori;
					ELSE
						select nourut into nourut_cust from control_no_trans where form = NAMAFORM and bulan = VAR_BULAN and tahun = VAR_TAHUN;
					END IF;

					select IFNULL(PREFIX,'') into prefix_temp_cust from control_no_trans where form = NAMAFORM limit 1; 
					set jumlah = length(nourut_cust);
					
					set nourut_int = cast(nourut_cust as unsigned);

					set i=1;
					set jumlah_nol=0;
					while i <= jumlah do	
						if left(nourut_cust,i) = 0 THEN
							set jumlah_nol = jumlah_nol +1; 
						end if;
						set i=i+1;
					end while;
					
				IF NAMAFORM <> "MASTER_ITEM_NEW" AND NAMAFORM <> "MASTER_EXPEDITION" AND NAMAFORM <> "MASTER_GOLASET" AND NAMAFORM <> "MASTER_ASET" and NAMAFORM <> "FAKTUR_PAJAK_NORMAL" and NAMAFORM <> "FAKTUR_PAJAK_PENGGANTI" and NAMAFORM <> "MASTER_EVENT" and NAMAFORM <> "MASTER_EVENT_MEMBER" and NAMAFORM <> "MASTER_EVENT_ATTENDANCE" AND NAMAFORM <> "MASTER_ITEM_JENIS_NEW" AND NAMAFORM <> "MASTER_ITEM_KATEGORI_NEW" AND NAMAFORM <> "MASTER_ITEM_NEW_BRAND" AND NAMAFORM <> "IMPORT_SIMRS_PEMROV" AND NAMAFORM <> "MASTER_SERVICE" THEN
					if jumlah_nol >= 6 THEN
						return concat('0000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						return concat('0000',nourut_int+1);
					elseif jumlah_nol = 4 THEN
						if nourut_int = 9 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 99 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 9999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
				end if;

			IF NAMAFORM = "MASTER_ITEM_NEW" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "MASTER_SERVICE" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "IMPORT_SIMRS_PEMROV" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "MASTER_ITEM_JENIS_NEW" THEN
					if jumlah_nol = 2 THEN

							return concat('0',nourut_int+1);
					elseif jumlah_nol = 1 THEN
						if nourut_int = 9 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSEif jumlah_nol= 0 or nourut_int = 10 THEN
						return concat('',nourut_int+1);
					end if;

			end if;

			IF NAMAFORM = "MASTER_ITEM_KATEGORI_NEW" THEN
					if jumlah_nol = 1 THEN
							return concat('',nourut_int+1);
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;
	
			IF NAMAFORM = "MASTER_ITEM_NEW_BRAND" THEN
				if jumlah_nol = 3 THEN
							return concat('00',nourut_int+1);
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "MASTER_EVENT" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "MASTER_EVENT_MEMBER" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;
			
			IF NAMAFORM = "MASTER_EVENT_ATTENDANCE" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "MASTER_EXPEDITION" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;
			
			IF NAMAFORM = "MASTER_GOLASET" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

IF NAMAFORM = "MASTER_ASET" THEN
				if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
							if nourut_int = 99 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
							if nourut_int = 999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 9999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;

			IF NAMAFORM = "FAKTUR_PAJAK_NORMAL" OR NAMAFORM = "FAKTUR_PAJAK_PENGGANTI" THEN
				if jumlah_nol >= 8 THEN
						return concat('0000000',nourut_int+1);
					elseif jumlah_nol = 7 THEN
						if nourut_int = 9 THEN
							return concat('000000',nourut_int+1);
					  ELSE
							return concat('0000000',nourut_int+1);
						end if;
					elseif jumlah_nol = 6 THEN
							if nourut_int = 99 THEN
							return concat('00000',nourut_int+1);
					  ELSE
							return concat('000000',nourut_int+1);
						end if;
					elseif jumlah_nol = 5 THEN
							if nourut_int = 999 THEN
							return concat('0000',nourut_int+1);
					  ELSE
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 9999 THEN
							return concat('000',nourut_int+1);
					  ELSE
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 99999 THEN
							return concat('00',nourut_int+1);
					  ELSE
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
						if nourut_int = 99999 THEN
							return concat('0',nourut_int+1);
					  ELSE
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
						if nourut_int = 99999 THEN
							return concat('',nourut_int+1);
					  ELSE
							return concat('0',nourut_int+1);
						end if;
					ELSE
						return concat('',nourut_int+1);
					end if;
			end if;


		END IF;
		

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `func_update_nomor` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `func_update_nomor`(NAMAFORM TEXT) RETURNS varchar(50) CHARSET utf8
    READS SQL DATA
BEGIN
		
		declare prefix_temp_cust VARCHAR(10);
		declare nourut_cust VARCHAR(10);
		declare nourut_int INTEGER;
		declare jumlah_nol INTEGER;
		declare jumlah integer;
		declare i integer;
		
		IF NAMAFORM = "MASTER CUSTOMER" OR NAMAFORM = "MASTER SUPPLIER" OR NAMAFORM = "MASTER MARKETING" OR NAMAFORM = "MASTER BIAYA" OR NAMAFORM ="FORMULA PRODUCT" OR NAMAFORM ="MASTER ITEM" OR NAMAFORM ="MASTER CARA BAYAR SIMRS" OR NAMAFORM = "ASSEMBLY PRODUCT" THEN
					select nourut into nourut_cust from control_no_master where form = NAMAFORM; 
					select IFNULL(PREFIX,'') into prefix_temp_cust from control_no_master where form = NAMAFORM; 
					set jumlah = length(nourut_cust);
					
					set nourut_int = cast(nourut_cust as unsigned);

					set i=1;
					set jumlah_nol=0;
					while i <= jumlah do	
						if left(nourut_cust,i) = 0 THEN
							set jumlah_nol = jumlah_nol +1; 
						end if;
						set i=i+1;
					end while;
					
					if nourut_int = 999999 then 
						set nourut_int = 0;
						set jumlah_nol = 6;
					end if;

					if jumlah_nol >= 6 THEN
						return concat('00000',nourut_int+1);
					elseif jumlah_nol = 5 THEN
						if nourut_int = 9 then
							return concat('0000',nourut_int+1);
						else
							return concat('00000',nourut_int+1);
						end if;
					elseif jumlah_nol = 4 THEN
						if nourut_int = 99 then
							return concat('000',nourut_int+1);
						else
							return concat('0000',nourut_int+1);
						end if;
					elseif jumlah_nol = 3 THEN
						if nourut_int = 999 then
							return concat('00',nourut_int+1);
						else
							return concat('000',nourut_int+1);
						end if;
					elseif jumlah_nol = 2 THEN
							if nourut_int = 9999 then
							return concat('0',nourut_int+1);
						else
							return concat('00',nourut_int+1);
						end if;
					elseif jumlah_nol = 1 THEN
							if nourut_int = 99999 then
							return concat('',nourut_int+1);
						else
							return concat('0',nourut_int+1);
						end if;
					elseif jumlah_nol = 0 THEN
						return concat('',nourut_int+1);
					end if;
						
		END IF;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_acc_period_month` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_acc_period_month`() RETURNS int(11)
BEGIN
	declare tahun integer;
	select month(periode) into tahun from i_accounting_period;
	return tahun;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_acc_period_year` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_acc_period_year`() RETURNS int(11)
BEGIN
	declare tahun integer;
	select year(periode) into tahun from i_accounting_period;
	return tahun;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_begbalance_ap` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_begbalance_ap`(var_id_supplier varchar(60)) RETURNS double
BEGIN
	declare beg_balance double;
	select case when sum(amount_of) is null then 0 else sum(amount_of) end into beg_balance from mst_ap_initialbalance
	where id_supplier = var_id_supplier;

	RETURN beg_balance;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_begbalance_ar` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_begbalance_ar`(var_id_customer varchar(60)) RETURNS double
BEGIN
	declare beg_balance double;
	select case when sum(amount_of) is null then 0 else sum(amount_of) end into beg_balance from mst_ar_initialbalance
	where id_customer = var_id_customer;

	RETURN beg_balance;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_income` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_income`() RETURNS double
BEGIN
declare tRev double;
declare tExp double;
declare tInc double;


	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tRev from temp_income a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan = 4;

	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tExp from temp_income a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (5,6,7);

	set tInc = tRev - tExp;
	return tInc;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_income_lo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_income_lo`() RETURNS double
BEGIN
declare tRev double;
declare tExp double;
declare tInc double;


	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tRev from temp_income a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan = 6;

	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tExp from temp_income a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (7);

	set tInc = tRev - tExp;
	return tInc;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_income_lo_tahunlalu` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_income_lo_tahunlalu`() RETURNS double
BEGIN
declare tRev double;
declare tExp double;
declare tInc double;


	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tRev from temp_income_tahunlalu a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan = 6;

	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tExp from temp_income_tahunlalu a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (7);

	set tInc = tRev - tExp;
	return tInc;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_income_lra` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_income_lra`() RETURNS double
BEGIN
declare tRev double;
declare tExp double;
declare tInc double;


	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tRev from temp_income_lra a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (4,6);

	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tExp from temp_income_lra a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (5);

	set tInc = tRev - tExp;
	return tInc;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_income_lra_tahunlalu` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_income_lra_tahunlalu`() RETURNS double
BEGIN
declare tRev double;
declare tExp double;
declare tInc double;


	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tRev from temp_income_lra_tahunlalu a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (4,6);

	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tExp from temp_income_lra_tahunlalu a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (5);

	set tInc = tRev - tExp;
	return tInc;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_jml_tunggak` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_jml_tunggak`(var_criteria varchar(120)) RETURNS int(11)
BEGIN
declare jml_bunga_tunggak integer;
declare bulan_pinjam DOUBLE;
declare bulan_sekarang DOUBLE;
declare year_pinjam DOUBLE;
declare year_sekarang DOUBLE;
declare jml_terbayar DOUBLE;
declare tgl_akhir_bayar date;
declare filter text;
select concat('%',var_criteria,'%') into filter;

	select count(no_bayar) into jml_terbayar from trn_pinjam_bayar where no_pinjam = var_criteria ;
	if jml_terbayar > 0 then
		select due_date into tgl_akhir_bayar from  trn_pinjam_bayar where no_pinjam = var_criteria order by due_date desc limit 1;
	else 
		select date_trn into tgl_akhir_bayar from trn_pinjam where no_pinjam = var_criteria order by date_trn desc limit 1;
	end if;
	select abs(ROUND(DATEDIFF(tgl_akhir_bayar,NOW())/30,0)) into jml_bunga_tunggak;

if jml_terbayar is null THEN
	set jml_terbayar = 0;
end if;

return jml_terbayar;
	

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_jml_tunggak_copy` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_jml_tunggak_copy`(var_criteria varchar(120)) RETURNS int(11)
BEGIN
declare jml_bunga_tunggak integer;
declare bulan_pinjam DOUBLE;
declare bulan_sekarang DOUBLE;
declare year_pinjam DOUBLE;
declare year_sekarang DOUBLE;
declare jml_terbayar DOUBLE;
declare tgl_akhir_bayar date;
declare filter text;
select concat('%',var_criteria,'%') into filter;

	select count(no_bayar) into jml_terbayar from trn_pinjam_bayar where no_pinjam = var_criteria ;
	if jml_terbayar > 0 then
		select due_date into tgl_akhir_bayar from  trn_pinjam_bayar where no_pinjam = var_criteria order by due_date desc limit 1;
	else 
		select date_trn into tgl_akhir_bayar from trn_pinjam where no_pinjam = var_criteria order by date_trn desc limit 1;
	end if;
	select abs(ROUND(DATEDIFF(tgl_akhir_bayar,NOW())/30,0)) into jml_bunga_tunggak;

if jml_bunga_tunggak is null THEN
	set jml_bunga_tunggak = 0;
end if;

return jml_bunga_tunggak;
	

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_month` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_month`() RETURNS int(11)
BEGIN
	declare bulan integer;
	select month(now()) into bulan;
	return bulan;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_nilai_buku_aset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_nilai_buku_aset`(var_id_golongan varchar(30), var_nilai_perolehan double, var_tgl_perolehan date, var_rate_penyusutan double) RETURNS double
BEGIN
declare var_masa_penyusutan double;
declare var_th_penyusutan double;
declare var_sisa_nilai_buku double;
declare var_tgl_server date;
declare var_bln_server double;
declare var_th_server double;


set var_tgl_server = (select now());
set var_bln_server = month(var_tgl_server);
set var_th_server = year(var_tgl_server);

if var_th_server = year(var_tgl_perolehan) THEN
		set var_masa_penyusutan = MONTH(var_tgl_server) - month(var_tgl_perolehan);
elseif var_th_server > year(var_tgl_perolehan) THEN
		if var_bln_server > month(var_tgl_perolehan) THEN
			set var_th_penyusutan = var_th_server -  (year(var_tgl_perolehan));
			set var_masa_penyusutan = (var_th_penyusutan * 12) + var_bln_server - month(var_tgl_perolehan);
		elseif var_bln_server < month(var_tgl_perolehan) then 
			set var_th_penyusutan = var_th_server -  (year(var_tgl_perolehan)) -1;
			set var_masa_penyusutan = (var_th_penyusutan * 12) + 12 - (month(var_tgl_perolehan)) + var_bln_server;
		elseif var_bln_server = month(var_tgl_perolehan) THEN
			set var_th_penyusutan = var_th_server -  (year(var_tgl_perolehan));
			set var_masa_penyusutan = var_th_penyusutan * 12;
		end if;
ELSE
		set var_masa_penyusutan = 0;
end if;

set var_sisa_nilai_buku = var_nilai_perolehan - (var_nilai_perolehan * var_rate_penyusutan/100/12 * var_masa_penyusutan);

return var_sisa_nilai_buku; 



END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_totalcost_month` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_totalcost_month`() RETURNS double
BEGIN
	declare bulan integer;
	declare total double;
	select month(now()) into bulan;
	select sum(a.nominal) into total from trn_ledger_det a inner join trn_ledger_head b on b.no_ledger = a.no_ledger 
	inner join mst_account c on c.id_account = a.id_account
	where c.golongan = 6 and MONTH(b.date_trn) = get_month() AND YEAR(B.date_trn) = get_year() and b.post_from <> 'Close Period';

	return total;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_totalcost_year` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_totalcost_year`() RETURNS double
BEGIN
	declare bulan integer;
	declare total double;
	select month(now()) into bulan;
	select sum(a.nominal) into total from trn_ledger_det a inner join trn_ledger_head b on b.no_ledger = a.no_ledger 
	inner join mst_account c on c.id_account = a.id_account
	where c.golongan = 6 AND YEAR(B.date_trn) = get_year() and b.post_from <> 'Close Period';

	return total;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_year` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `get_year`() RETURNS int(11)
BEGIN
	declare tahun integer;
	select year(now()) into tahun;
	return tahun;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `validate_trn` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 FUNCTION `validate_trn`(NAMAFORM TEXT, var_no varchar(120)) RETURNS int(11)
    READS SQL DATA
BEGIN
		
	declare jml integer;
  declare po_purch varchar(60);
	if NAMAFORM = 'Purchase Order' then
		select count(no_purchase_order) into jml from trn_purchase_head where no_purchase_order = var_no;
	elseif NAMAFORM = 'Sales Order' THEN
		select count(no_sales_order) into jml from trn_sales_head where no_sales_order = var_no;
  elseif NAMAFORM = 'Sales' THEN
		select count(no_invoice) into jml from trn_payment_ar_det where no_invoice = var_no;
	elseif NAMAFORM = 'Purchase' THEN
		select count(no_purchase) into jml from trn_payment_ap_det where no_purchase = var_no;
	elseif NAMAFORM = 'Request Order' THEN
		select count(no_request_order) into jml from trn_request_order_head where no_request_order = var_no and flag_status = 1;
	elseif NAMAFORM = 'RO PO' THEN
		select count(no_request_order) into jml from trn_purchase_order_det where no_request_order = var_no;
	elseif NAMAFORM = 'PURCH REC' THEN
		
		select count(no_purchase_order) into jml from trn_purchase_head where no_purchase_order = var_no;
	elseif NAMAFORM = 'PO REC' THEN
		
		select count(no_purchase_order) into jml from trn_received_order_head where no_purchase_order = var_no;
	elseif NAMAFORM = 'PURCH_PURCHRETUR' THEN
		
		select count(no_purchase) into jml from trn_purchase_return_det where no_purchase = var_no;
	elseif NAMAFORM = 'WO Material Usage' THEN
		select count(wo_no) into jml from trn_usage_material_head where wo_no = var_no;
	elseif NAMAFORM = 'WO Realized' THEN
		select count(wo_no) into jml from trn_wo_realized_head where wo_no = var_no;
	elseif NAMAFORM = 'Material Usage Realized' THEN
		select count(wo_no) into jml from trn_wo_realized_head where wo_no = var_no;
	end if;
	
		return jml;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `cash_bank_register` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `cash_bank_register`(in var_criteria text, in tgl_awal date, in tgl_akhir date)
BEGIN

declare filter text;
declare sawalD double;
declare sawalK double;
declare def varchar(3);

	
	select case when b.def_position ='D' then sum(a.nominal) else 0 end into sawalD
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
	where c.date_trn < tgl_awal and a.id_account = var_criteria;

	select case when b.def_position ='K' then -1*sum(a.nominal) else 0 end into sawalK
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
	where c.date_trn < tgl_awal and a.id_account = var_criteria;

	IF sawalD IS NULL THEN 
		 SET sawalD=0;
	END IF;


	IF sawalK IS NULL THEN 
		 SET sawalK=0;
	END IF;


	select def_position into def from mst_account where id_account = var_criteria;

select * from (
		select 'Saldo Awal' as no_ledger,tgl_awal as date_trn,'' as id_account,'' as account_name,'' as notes,sawalD AS DEBET,sawalK AS KREDIT
		union ALL
		select a.no_ledger, c.date_trn,a.id_account,b.account_name,a.notes,
		case when a.nominal >= 0 then a.nominal else 0 end as debet,
		case when a.nominal < 0 then -1*a.nominal else 0 end as credit
		from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head c on c.no_ledger=a.no_ledger
		WHERE (c.date_trn between tgl_awal and tgl_akhir) and a.id_account = var_criteria
	) x order by x.date_trn asc;

	

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `general_ledger` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `general_ledger`(in var_criteria text, in tgl_awal date, in tgl_akhir date, in date_filter integer,in pageIndex integer, in limitPage integer)
BEGIN

declare filter text;
declare sawalD double;
declare sawalK double;
declare def varchar(3);
declare tglsawal date;
declare saldo_awal double;

		select cast(date_trn as date) into tglsawal from trn_ledger_head order by date_trn asc limit 1;
if date_filter = 1 then
	if tglsawal < tgl_awal then
		set tglsawal = tgl_awal;
	end if;
end if;

if date_filter = 1 then
	
	select case when b.def_position ='D' then sum(a.nominal) else 0 end into sawalD
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
	where c.date_trn < tgl_awal and a.id_account = var_criteria;

	select case when b.def_position ='K' then -1*sum(a.nominal) else 0 end into sawalK
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
	where c.date_trn < tgl_awal and a.id_account = var_criteria;
elseif date_filter = 0 THEN
	
	select case when b.def_position ='D' then sum(a.nominal) else 0 end into sawalD
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
	where c.date_trn < tglsawal and a.id_account = var_criteria;

	select case when b.def_position ='K' then -1*sum(a.nominal) else 0 end into sawalK
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
	where c.date_trn < tglsawal and a.id_account = var_criteria;
end if;

	select def_position into def from mst_account where id_account = var_criteria;

	IF sawalD IS NULL THEN 
		 SET sawalD=0;
	END IF;


	IF sawalK IS NULL THEN 
		 SET sawalK=0;
	END IF;

	
	select beg_balance into saldo_awal from mst_account where id_account = var_criteria and flag_header=0;
	if def = 'D' THEN
		set sawalD = sawalD + saldo_awal;
	elseif def = 'K' THEN
		set sawalK = sawalK +saldo_awal; 
	end if;

	IF sawalD IS NULL THEN 
		 SET sawalD=0;
	END IF;


	IF sawalK IS NULL THEN 
		 SET sawalK=0;
	END IF;

	if date_filter = 1 then
	select * from (
		select 'Saldo Awal' as no_ledger,tglsawal as date_trn,'' as id_account,'' as account_name,'' as notes,sawalD AS DEBET,sawalK AS KREDIT
		union ALL
		select a.no_ledger, c.date_trn,a.id_account,b.account_name,a.notes,
		case when a.nominal >= 0 then a.nominal else 0 end as debet,
		case when a.nominal < 0 then -1*a.nominal else 0 end as credit
		from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head c on c.no_ledger=a.no_ledger
		WHERE (c.date_trn between tgl_awal and tgl_akhir) and a.id_account = var_criteria
	) x order by x.date_trn asc;
	elseif date_filter = 0 THEN
	select * from (
		select 'Saldo Awal' as no_ledger,tglsawal as date_trn,'' as id_account,'' as account_name,'' as notes,sawalD AS DEBET,sawalK AS KREDIT
		union ALL
		select a.no_ledger, c.date_trn,a.id_account,b.account_name,a.notes,
		case when a.nominal >= 0 then a.nominal else 0 end as debet,
		case when a.nominal < 0 then -1*a.nominal else 0 end as credit
		from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head c on c.no_ledger=a.no_ledger
		WHERE a.id_account = var_criteria
	) x order by x.date_trn asc;
	end if;

	

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_income` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `get_income`(in var_i integer)
BEGIN
declare tRev double;
declare tExp double;
declare tInc double;


	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tRev from temp_income a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan = 4;

	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tExp from temp_income a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (5,6,7);

	set tInc = tRev - tExp;
	select tInc;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_income_lo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `get_income_lo`(in var_i integer)
BEGIN
declare tRev double;
declare tExp double;
declare tInc double;


	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tRev from temp_income a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan = 6;

	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tExp from temp_income a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (7);

	set tInc = tRev - tExp;
	select tInc;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_income_lo_tahunlalu` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `get_income_lo_tahunlalu`(in var_i integer)
BEGIN
declare tRev double;
declare tExp double;
declare tInc double;


	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tRev from temp_income_tahunlalu a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan = 6;

	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tExp from temp_income_tahunlalu a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (7);

	set tInc = tRev - tExp;
	select tInc;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_income_lra` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `get_income_lra`(in var_i integer)
BEGIN
declare tRev double;
declare tExp double;
declare tInc double;


	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tRev from temp_income_lra a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (4,6);

	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tExp from temp_income_lra a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (5);

	set tInc = tRev - tExp;
	select tInc;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_income_lra_tahunlalu` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `get_income_lra_tahunlalu`(in var_i integer)
BEGIN
declare tRev double;
declare tExp double;
declare tInc double;


	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tRev from temp_income_lra_tahunlalu a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (4,6);

	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tExp from temp_income_lra_tahunlalu a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (5);

	set tInc = tRev - tExp;
	select tInc;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_income_tahunlalu` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `get_income_tahunlalu`(in var_i integer)
BEGIN
declare tRev double;
declare tExp double;
declare tInc double;


	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tRev from temp_income_tahunlalu a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan = 4;

	select case when sum(a.saldo) is null then 0 else sum(a.saldo) end into tExp from temp_income_tahunlalu a
	inner join mst_account b on b.id_account = a.id_account
	where b.golongan in (5,6,7);

	set tInc = tRev - tExp;
	select tInc;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_account` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_account`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN

	select * from mst_account where id_account = var_criteria;

else
	if var_date_filter = 0 then
		IF VAR_FIELD = 'Account No' THEN
			SELECT id_account,
			account_name,
			CASE WHEN flag_header = 1 THEN 'Header' else 'Detail' end as Type,
			case when def_position = 'D' then 'Debet' else 'Credit' end as Def, 
			notes 
			FROM mst_account where id_account like filter;
		elseif var_field = 'Account Name' THEN
			SELECT id_account,
			account_name,
			CASE WHEN flag_header = 1 THEN 'Header' else 'Detail' end as Type,
			case when def_position = 'D' then 'Debet' else 'Credit' end as Def, 
			notes 
			FROM mst_account where account_name like filter;
		end if;
	elseif var_date_filter = 1 THEN
		IF VAR_FIELD = 'Account No' THEN
			SELECT id_account,
			account_name,
			CASE WHEN flag_header = 1 THEN 'Header' else 'Detail' end as Type,
			case when def_position = 'D' then 'Debet' else 'Credit' end as Def, 
			notes 
			FROM mst_account where id_account like filter
			and (created_date between startdate and enddate);
		elseif var_field = 'Account Name' THEN
			SELECT id_account,
			account_name,
			CASE WHEN flag_header = 1 THEN 'Header' else 'Detail' end as Type,
			case when def_position = 'D' then 'Debet' else 'Credit' end as Def, 
			notes 
			FROM mst_account where account_name like filter
			and (created_date between startdate and enddate);
		end if;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_account_withoutlimit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_account_withoutlimit`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN

	select * from mst_account where id_account = var_criteria;

else
	if var_date_filter = 0 then
		IF VAR_FIELD = 'Account No' THEN
			SELECT a.id_account,
			a.account_name,
			CASE WHEN a.flag_header = 1 THEN 'Header' else 'Detail' end as Type,
			case when a.def_position = 'D' then 'Debet' else 'Credit' end as Def, 
			a.notes,a.parent,concat(a.parent,' ',b.account_name) as parent_name 
			FROM mst_account a inner join mst_account b on b.id_account = a.parent where a.id_account like filter
			and case when a.parent is null then '' else a.parent end <> '';
		elseif var_field = 'Account Name' THEN
			SELECT a.id_account,
			a.account_name,
			CASE WHEN a.flag_header = 1 THEN 'Header' else 'Detail' end as Type,
			case when a.def_position = 'D' then 'Debet' else 'Credit' end as Def, 
			a.notes,a.parent,concat(a.parent,' ',b.account_name) as parent_name
			FROM mst_account a inner join mst_account b on b.id_account = a.parent where a.account_name like filter  
			and case when a.parent is null then '' else a.parent end <> '';
		end if;
	elseif var_date_filter = 1 THEN
		IF VAR_FIELD = 'Account No' THEN
			SELECT a.id_account,
			a.account_name,
			CASE WHEN a.flag_header = 1 THEN 'Header' else 'Detail' end as Type,
			case when a.def_position = 'D' then 'Debet' else 'Credit' end as Def, 
			a.notes,a.parent,concat(a.parent,' ',b.account_name) as parent_name
			FROM mst_account a inner join mst_account b on b.id_account = a.parent where a.id_account like filter
			and (a.created_date between startdate and enddate)  
			and case when a.parent is null then '' else a.parent end <> '';
		elseif var_field = 'Account Name' THEN
			SELECT a.id_account,
			a.account_name,
			CASE WHEN a.flag_header = 1 THEN 'Header' else 'Detail' end as Type,
			case when a.def_position = 'D' then 'Debet' else 'Credit' end as Def, 
			a.notes,a.parent,concat(a.parent,' ',b.account_name) as parent_name
			FROM mst_account a inner join mst_account b on b.id_account = a.parent where a.account_name like filter
			and (a.created_date between startdate and enddate)  
			and case when a.parent is null then '' else a.parent end <> '';
		end if;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_adjust_stock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_adjust_stock`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select 
		a.no_adjust_stock,
		a.id_warehouse,
		a.date_trn,a.total_adjust,c.id_item,d.item_name,positive,negative,c.notes as description,
		case when a.notes is null then '' else a.notes end notes ,c.id_unit, 
		case when c.weight_plus is null then '' else c.weight_plus end as weight_plus,
		case when c.weight_minus is null then '' else c.weight_minus end as weight_minus
	from trn_adjust_stock_head a
	inner join mst_warehouse b on b.id_warehouse = a.id_warehouse
	inner join trn_adjust_stock_det c on c.no_adjust_stock = a.no_adjust_stock
	inner join mst_item d on d.id_item = c.id_item
	where a.no_adjust_stock = var_criteria;
else
	if var_date_filter = 0 then
		IF VAR_FIELD = 'Adjustment No' THEN
			select 
			a.no_adjust_stock,
			b.warehouse_name,
			a.date_trn,a.total_adjust,
			case when a.notes is null then '' else a.notes end notes  
			from trn_adjust_stock_head a
			inner join mst_warehouse b on b.id_warehouse = a.id_warehouse
			where a.no_adjust_stock like filter;	
		elseif var_field = 'Warehouse' THEN
			select 
			a.no_adjust_stock,
			b.warehouse_name,
			a.date_trn,a.total_adjust,
			case when a.notes is null then '' else a.notes end notes 
			from trn_adjust_stock_head a
			inner join mst_warehouse b on b.id_warehouse = a.id_warehouse
			where b.warehouse_name like filter;
		end if;
	elseif var_date_filter = 1 THEN
		IF VAR_FIELD = 'Adjustment No' THEN
			select 
			a.no_adjust_stock,
			b.warehouse_name,
			a.date_trn,a.total_adjust,
			case when a.notes is null then '' else a.notes end notes  
			from trn_adjust_stock_head a
			inner join mst_warehouse b on b.id_warehouse = a.id_warehouse
			where a.no_adjust_stock like filter
			and (a.date_trn between startdate and enddate);
		elseif var_field = 'Warehouse' THEN
			select 
			a.no_adjust_stock,
			b.warehouse_name,
			a.date_trn,a.total_adjust,
			case when a.notes is null then '' else a.notes end notes 
			from trn_adjust_stock_head a
			inner join mst_warehouse b on b.id_warehouse = a.id_warehouse
			where b.warehouse_name like filter	
			and (a.date_trn between startdate and enddate);
		end if;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_APpayment` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_APpayment`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN
	declare filter text;
	declare var_total_net double;
	declare var_total_ap double;
	declare var_total_return double;
	declare var_total_disc double;
	
	
	select concat('%',var_criteria,'%') into filter;
	IF detail = 1 THEN
		SELECT
		aph.no_payment_ap, CONCAT(case when ms.first_name is null then '' else ms.first_name end, case when ms.last_name is null then '' else ms.last_name end) AS supplier_name,
		aph.date_trn, aph.notes, aph.total as total, ma.account_name, aph.id_supplier,
		aph.id_account, CONCAT(ms.address,' ',ms.city) AS supplier_addr, 
		SUM(apd.paid_amount) as total_paid, apd.ap_return
		FROM
		trn_payment_ap_head aph INNER JOIN trn_payment_ap_det apd
		ON aph.no_payment_ap = apd.no_payment_ap
		INNER JOIN mst_supplier ms ON ms.id_supplier = aph.id_supplier
		INNER JOIN mst_account ma ON ma.id_account = aph.id_account
		GROUP BY aph.no_payment_ap;
	ELSE
	if var_date_filter = 0 then
		IF VAR_FIELD = 'Detail' THEN
			SELECT
			aph.no_payment_ap, CONCAT(case when ms.first_name is null then '' else ms.first_name end, case when ms.last_name is null then '' else ms.last_name end) AS supplier_name,
			aph.date_trn, aph.notes, 0 as total, ma.account_name, aph.id_supplier,
			aph.id_account,
			apd.number_asc, apd.no_purchase, apd.invoice_date, apd.ap_amount,
			apd.discount, SUM(apd.ap_amount_net) as ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS supplier_addr, apd.ap_return, aph.id_currency, 
			case when apd.kurs is null then 1 else apd.kurs end as kurs, 
			aph.flag_kurs_pu
			FROM
			trn_payment_ap_head aph INNER JOIN trn_payment_ap_det apd
			ON aph.no_payment_ap = apd.no_payment_ap
			INNER JOIN mst_supplier ms ON ms.id_supplier = aph.id_supplier
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE aph.no_payment_ap = var_criteria 
			GROUP BY apd.no_purchase;
		ELSEIF VAR_FIELD = 'Payment No' THEN
			SELECT
			aph.no_payment_ap, CONCAT(case when ms.first_name is null then '' else ms.first_name end, case when ms.last_name is null then '' else ms.last_name end) AS supplier_name,
			aph.date_trn, aph.notes, aph.total, ma.account_name, aph.id_supplier,
			aph.id_account,
			apd.number_asc, apd.no_purchase, apd.invoice_date, apd.ap_amount,
			apd.discount, apd.ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS supplier_addr, apd.ap_return
			FROM
			trn_payment_ap_head aph INNER JOIN trn_payment_ap_det apd
			ON aph.no_payment_ap = apd.no_payment_ap
			INNER JOIN mst_supplier ms ON ms.id_supplier = aph.id_supplier
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE aph.no_payment_ap like filter ;
		ELSEIF VAR_FIELD = 'Supplier' THEN
			SELECT
			aph.no_payment_ap, CONCAT(case when ms.first_name is null then '' else ms.first_name end, case when ms.last_name is null then '' else ms.last_name end) AS supplier_name,
			aph.date_trn, aph.notes, aph.total, ma.account_name, aph.id_supplier,
			aph.id_account,
			apd.number_asc, apd.no_purchase, apd.invoice_date, apd.ap_amount,
			apd.discount, apd.ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS supplier_addr, apd.ap_return
			FROM
			trn_payment_ap_head aph INNER JOIN trn_payment_ap_det apd
			ON aph.no_payment_ap = apd.no_payment_ap
			INNER JOIN mst_supplier ms ON ms.id_supplier = aph.id_supplier
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE CONCAT(ms.first_name, ms.last_name) like filter;
		END IF;
	ELSEIF var_date_filter = 1 THEN
		IF VAR_FIELD = 'Payment No' THEN
			SELECT
			aph.no_payment_ap, CONCAT(case when ms.first_name is null then '' else ms.first_name end, case when ms.last_name is null then '' else ms.last_name end) AS supplier_name,
			aph.date_trn, aph.notes, aph.total, ma.account_name, aph.id_supplier,
			aph.id_account,
			apd.number_asc, apd.no_purchase, apd.invoice_date, apd.ap_amount,
			apd.discount, apd.ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS supplier_addr, apd.ap_return
			FROM
			trn_payment_ap_head aph INNER JOIN trn_payment_ap_det apd
			ON aph.no_payment_ap = apd.no_payment_ap
			INNER JOIN mst_supplier ms ON ms.id_supplier = aph.id_supplier
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE aph.no_payment_ap like filter
			and (aph.date_trn between startdate and enddate);
		ELSEIF VAR_FIELD = 'Supplier' THEN
			SELECT
			aph.no_payment_ap, CONCAT(case when ms.first_name is null then '' else ms.first_name end, case when ms.last_name is null then '' else ms.last_name end) AS supplier_name,
			aph.date_trn, aph.notes, aph.total, ma.account_name, aph.id_supplier,
			aph.id_account,
			apd.number_asc, apd.no_purchase, apd.invoice_date, apd.ap_amount,
			apd.discount, apd.ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS supplier_addr, apd.ap_return
			FROM
			trn_payment_ap_head aph INNER JOIN trn_payment_ap_det apd
			ON aph.no_payment_ap = apd.no_payment_ap
			INNER JOIN mst_supplier ms ON ms.id_supplier = aph.id_supplier
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE CONCAT(ms.first_name, ms.last_name) like filter
			and (aph.date_trn between startdate and enddate);
		END IF;
	END IF;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_APpayment_simrs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `select_APpayment_simrs`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN
	declare filter text;
	declare var_total_net double;
	declare var_total_ap double;
	declare var_total_return double;
	declare var_total_disc double;
	
	
	select concat('%',var_criteria,'%') into filter;
	IF detail = 1 THEN
		SELECT
		aph.no_payment_ap, CONCAT(ms.first_name, case when ms.last_name is null then '' else ms.last_name end) AS supplier_name,
		aph.date_trn, aph.notes, aph.total as total, ma.account_name, aph.id_supplier,
		aph.id_account, CONCAT(ms.address,' ',ms.city) AS supplier_addr, 
		SUM(apd.paid_amount) as total_paid, apd.ap_return
		FROM
		trn_payment_ap_head aph INNER JOIN trn_payment_ap_det apd
		ON aph.no_payment_ap = apd.no_payment_ap
		INNER JOIN mst_supplier ms ON ms.id_supplier = aph.id_supplier
		INNER JOIN mst_account ma ON ma.id_account = aph.id_account
		GROUP BY aph.no_payment_ap;
	ELSE
	if var_date_filter = 0 then
		IF VAR_FIELD = 'Detail' THEN
			SELECT
			aph.no_payment_ap, '' AS supplier_name,
			aph.date_trn, aph.notes, 0 as total, ma.account_name, aph.id_supplier,
			aph.id_account,
			apd.number_asc, apd.no_purchase, apd.invoice_date, apd.ap_amount,
			apd.discount, SUM(apd.ap_amount_net) as ap_amount_net, apd.paid_amount,
		'' AS supplier_addr, apd.ap_return, aph.id_currency, 
			case when apd.kurs is null then 1 else apd.kurs end as kurs, 
			aph.flag_kurs_pu
			FROM
			trn_payment_ap_head aph INNER JOIN trn_payment_ap_det apd
			ON aph.no_payment_ap = apd.no_payment_ap
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE aph.no_payment_ap = var_criteria 
			GROUP BY apd.no_purchase;
		ELSEIF VAR_FIELD = 'Payment No' THEN
			SELECT
			aph.no_payment_ap, CONCAT(ms.first_name, ms.last_name) AS supplier_name,
			aph.date_trn, aph.notes, aph.total, ma.account_name, aph.id_supplier,
			aph.id_account,
			apd.number_asc, apd.no_purchase, apd.invoice_date, apd.ap_amount,
			apd.discount, apd.ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS supplier_addr, apd.ap_return
			FROM
			trn_payment_ap_head aph INNER JOIN trn_payment_ap_det apd
			ON aph.no_payment_ap = apd.no_payment_ap
			INNER JOIN mst_supplier ms ON ms.id_supplier = aph.id_supplier
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE aph.no_payment_ap like filter ;
		ELSEIF VAR_FIELD = 'Supplier' THEN
			SELECT
			aph.no_payment_ap, CONCAT(ms.first_name, ms.last_name) AS supplier_name,
			aph.date_trn, aph.notes, aph.total, ma.account_name, aph.id_supplier,
			aph.id_account,
			apd.number_asc, apd.no_purchase, apd.invoice_date, apd.ap_amount,
			apd.discount, apd.ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS supplier_addr, apd.ap_return
			FROM
			trn_payment_ap_head aph INNER JOIN trn_payment_ap_det apd
			ON aph.no_payment_ap = apd.no_payment_ap
			INNER JOIN mst_supplier ms ON ms.id_supplier = aph.id_supplier
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE CONCAT(ms.first_name, ms.last_name) like filter;
		END IF;
	ELSEIF var_date_filter = 1 THEN
		IF VAR_FIELD = 'Payment No' THEN
			SELECT
			aph.no_payment_ap, CONCAT(ms.first_name, ms.last_name) AS supplier_name,
			aph.date_trn, aph.notes, aph.total, ma.account_name, aph.id_supplier,
			aph.id_account,
			apd.number_asc, apd.no_purchase, apd.invoice_date, apd.ap_amount,
			apd.discount, apd.ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS supplier_addr, apd.ap_return
			FROM
			trn_payment_ap_head aph INNER JOIN trn_payment_ap_det apd
			ON aph.no_payment_ap = apd.no_payment_ap
			INNER JOIN mst_supplier ms ON ms.id_supplier = aph.id_supplier
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE aph.no_payment_ap like filter
			and (aph.date_trn between startdate and enddate);
		ELSEIF VAR_FIELD = 'Supplier' THEN
			SELECT
			aph.no_payment_ap, CONCAT(ms.first_name, ms.last_name) AS supplier_name,
			aph.date_trn, aph.notes, aph.total, ma.account_name, aph.id_supplier,
			aph.id_account,
			apd.number_asc, apd.no_purchase, apd.invoice_date, apd.ap_amount,
			apd.discount, apd.ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS supplier_addr, apd.ap_return
			FROM
			trn_payment_ap_head aph INNER JOIN trn_payment_ap_det apd
			ON aph.no_payment_ap = apd.no_payment_ap
			INNER JOIN mst_supplier ms ON ms.id_supplier = aph.id_supplier
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE CONCAT(ms.first_name, ms.last_name) like filter
			and (aph.date_trn between startdate and enddate);
		END IF;
	END IF;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_approve_ro` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_approve_ro`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
declare total_approve integer;
declare total_item integer;
declare notes_approve text;

select concat('%',var_criteria,'%') into filter;

select count(id_item) into total_approve from trn_request_order_det where flag_status = 1 and no_request_order = var_criteria;
select count(id_item) into total_item from trn_request_order_det where no_request_order = var_criteria;

if total_approve > 0 and total_approve < total_item THEN
	set notes_approve = 'Approve Sebagian';
elseif total_approve > 0 and total_approve = total_item THEN
	set notes_approve = 'Approve Seluruhnya';
elseif total_approve = 0 THEN
	set notes_approve = 'Belum di Approve';
end if;

if detail = 1 THEN

select a.id_supplier,concat(b.first_name,' ',b.last_name) as nama,
b.address,a.no_request_order, a.date_trn,a.notes,
c.number_asc,c.id_item,c.id_unit,f.item_name, c.notes as description, 
c.qty,notes_approve 
 from trn_request_order_head a
inner join mst_supplier b on b.id_supplier = a.id_supplier
inner join trn_request_order_det c on c.no_request_order=a.no_request_order
inner join mst_item f on f.id_item = c.id_item
where a.no_request_order = var_criteria;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'Requisition No' THEN
		select a.no_request_order, a.date_trn, a.notes, c.id_item, d.item_name,
		case when c.qty is null then 0 else c.qty end - case when c.approve_qty is null then 0 else c.approve_qty end as qty, c.id_unit
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_request_order like filter and (c.flag_status = 0) ;
	elseif VAR_FIELD = 'Item ID' THEN
		select a.no_request_order, a.date_trn, a.notes, c.id_item, d.item_name,
		case when c.qty is null then 0 else c.qty end - case when c.approve_qty is null then 0 else c.approve_qty end as qty, c.id_unit
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where c.id_item like filter and (c.flag_status = 0) ;
	elseif VAR_FIELD = 'Item Name' THEN
		select a.no_request_order, a.date_trn, a.notes, c.id_item, d.item_name,
		case when c.qty is null then 0 else c.qty end - case when c.approve_qty is null then 0 else c.approve_qty end as qty, c.id_unit
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where d.item_name like filter and (c.flag_status = 0) ;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'Requisition No' THEN
		select a.no_request_order, a.date_trn, a.notes, c.id_item, d.item_name,
		case when c.qty is null then 0 else c.qty end - case when c.approve_qty is null then 0 else c.approve_qty end as qty, c.id_unit
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_request_order like filter and (c.flag_status = 0)
		and (a.date_trn between startdate and enddate);
	elseif VAR_FIELD = 'Item ID' THEN
		select a.no_request_order, a.date_trn,a.notes, c.id_item,d.item_name,
		case when c.qty is null then 0 else c.qty end - case when c.approve_qty is null then 0 else c.approve_qty end as qty, c.id_unit
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where c.id_item like filter and (c.flag_status = 0)
		and (a.date_trn between startdate and enddate);
	elseif VAR_FIELD = 'Item Name' THEN
		select a.no_request_order, a.date_trn,a.notes, c.id_item,d.item_name,
		case when c.qty is null then 0 else c.qty end - case when c.approve_qty is null then 0 else c.approve_qty end as qty, c.id_unit
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where d.item_name like filter and (c.flag_status = 0)
		and (a.date_trn between startdate and enddate);
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_ap_initbalance` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_ap_initbalance`(in var_field varchar(255), in var_criteria text,in var_supplier varchar(120), in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.cutoff_date,
		a.invoice_no,
		a.id_supplier,
		concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as supplier_name,
		a.amount_of,
		a.notes
  from mst_ap_initialbalance a
	inner join mst_supplier b on b.id_supplier = a.id_supplier
	where invoice_no = var_criteria and a.id_supplier = var_supplier;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'Invoice No' THEN
		select a.cutoff_date,
		a.invoice_no,
		a.id_supplier,
		concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as supplier_name,
		a.amount_of,
		a.notes
		from mst_ap_initialbalance a
		inner join mst_supplier b on b.id_supplier = a.id_supplier
		where a.invoice_no like filter;
	elseif var_field = 'Supplier' THEN
		select a.cutoff_date,
		a.invoice_no,
		a.id_supplier,
		concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as supplier_name,
		a.amount_of,
		a.notes
		from mst_ap_initialbalance a
		inner join mst_supplier b on b.id_supplier = a.id_supplier
		where concat(b.first_name,' ',b.last_name) like filter;
	end if;
ELSEif var_date_filter = 1 THEN
IF VAR_FIELD = 'Invoice No' THEN
		select a.cutoff_date,
		a.invoice_no,
		a.id_supplier,
		concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as supplier_name,
		a.amount_of,
		a.notes
		from mst_ap_initialbalance a
		inner join mst_supplier b on b.id_supplier = a.id_supplier
		where a.invoice_no like filter
		and (a.created_date between startdate and enddate);
	elseif var_field = 'Supplier' THEN
		select a.cutoff_date,
		a.invoice_no,
		a.id_supplier,
		concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as supplier_name,
		a.amount_of,
		a.notes
		from mst_ap_initialbalance a
		inner join mst_supplier b on b.id_supplier = a.id_supplier
		where concat(b.first_name,' ',b.last_name) like filter
		and (a.created_date between startdate and enddate);
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_ARpayment` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_ARpayment`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN
	declare filter text;
	declare var_total_net double;
	declare var_total_ap double;
	declare var_total_return double;
	declare var_total_disc double;
	

	select concat('%',var_criteria,'%') into filter;
	IF detail = 1 THEN
		SELECT
		aph.no_payment_ar, CONCAT(case when ms.first_name is null then '' else ms.first_name end,' ',case when ms.last_name is null then '' else ms.last_name end) AS customer_name,
		aph.date_trn, aph.notes, aph.total, ma.account_name, aph.id_customer,
		aph.id_account, CONCAT(ms.address,' ',ms.city) AS customer_addr, 
		SUM(apd.paid_amount) as total_paid, apd.ap_return
		FROM
		trn_payment_ar_head aph INNER JOIN trn_payment_ar_det apd
		ON aph.no_payment_ar = apd.no_payment_ar
		INNER JOIN mst_customer ms ON ms.id_customer = aph.id_customer
		INNER JOIN mst_account ma ON ma.id_account = aph.id_account
		GROUP BY aph.no_payment_ar;
	ELSE
	if var_date_filter = 0 then
		IF VAR_FIELD = 'Detail' THEN
			SELECT
			aph.no_payment_ar, CONCAT(case when ms.first_name is null then '' else ms.first_name end,' ',case when ms.last_name is null then '' else ms.last_name end) AS customer_name,
			aph.date_trn, aph.notes, 0 as total, ma.account_name, aph.id_customer,
			aph.id_account,
			apd.number_asc, apd.no_invoice, apd.invoice_date, apd.ap_amount,
			apd.discount, SUM(apd.ap_amount_net) as ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS customer_addr, apd.ap_return,
			case when apd.kurs is null then 1 else apd.kurs end as kurs, 
			aph.flag_kurs_pu
			FROM
			trn_payment_ar_head aph INNER JOIN trn_payment_ar_det apd
			ON aph.no_payment_ar = apd.no_payment_ar
			INNER JOIN mst_customer ms ON ms.id_customer = aph.id_customer
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE aph.no_payment_ar = var_criteria
			GROUP BY apd.no_invoice;
		ELSEIF VAR_FIELD = 'Payment No' THEN
			SELECT
			aph.no_payment_ar, CONCAT(case when ms.first_name is null then '' else ms.first_name end,' ',case when ms.last_name is null then '' else ms.last_name end) AS customer_name,
			aph.date_trn, aph.notes, aph.total, ma.account_name, aph.id_customer,
			aph.id_account,
			apd.number_asc, apd.no_invoice, apd.invoice_date, apd.ap_amount,
			apd.discount, apd.ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS customer_addr, apd.ap_return
			FROM
			trn_payment_ar_head aph INNER JOIN trn_payment_ar_det apd
			ON aph.no_payment_ar = apd.no_payment_ar
			INNER JOIN mst_customer ms ON ms.id_customer = aph.id_customer
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE aph.no_payment_ar like filter;
		ELSEIF VAR_FIELD = 'Customer' THEN
			SELECT
			aph.no_payment_ar, CONCAT(case when ms.first_name is null then '' else ms.first_name end,' ',case when ms.last_name is null then '' else ms.last_name end) AS customer_name,
			aph.date_trn, aph.notes, aph.total, ma.account_name, aph.id_customer,
			aph.id_account,
			apd.number_asc, apd.no_invoice, apd.invoice_date, apd.ap_amount,
			apd.discount, apd.ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS customer_addr, apd.ap_return
			FROM
			trn_payment_ar_head aph INNER JOIN trn_payment_ar_det apd
			ON aph.no_payment_ar = apd.no_payment_ar
			INNER JOIN mst_customer ms ON ms.id_customer = aph.id_customer
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE aph.no_payment_ar like filter;
		END IF;
	ELSEIF var_date_filter = 1 then
		IF VAR_FIELD = 'Payment No' THEN
			SELECT
			aph.no_payment_ar, CONCAT(case when ms.first_name is null then '' else ms.first_name end,' ',case when ms.last_name is null then '' else ms.last_name end) AS customer_name,
			aph.date_trn, aph.notes, aph.total, ma.account_name, aph.id_customer,
			aph.id_account,
			apd.number_asc, apd.no_invoice, apd.invoice_date, apd.ap_amount,
			apd.discount, apd.ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS customer_addr, apd.ap_return
			FROM
			trn_payment_ar_head aph INNER JOIN trn_payment_ar_det apd
			ON aph.no_payment_ar = apd.no_payment_ar
			INNER JOIN mst_customer ms ON ms.id_customer = aph.id_customer
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE aph.no_payment_ar like filter
			and (aph.date_trn between startdate and enddate);
		ELSEIF VAR_FIELD = 'Customer' THEN
			SELECT
			aph.no_payment_ar, CONCAT(case when ms.first_name is null then '' else ms.first_name end,' ',case when ms.last_name is null then '' else ms.last_name end) AS customer_name,
			aph.date_trn, aph.notes, aph.total, ma.account_name, aph.id_customer,
			aph.id_account,
			apd.number_asc, apd.no_invoice, apd.invoice_date, apd.ap_amount,
			apd.discount, apd.ap_amount_net, apd.paid_amount,
			CONCAT(ms.address,' ',ms.city) AS customer_addr, apd.ap_return
			FROM
			trn_payment_ar_head aph INNER JOIN trn_payment_ar_det apd
			ON aph.no_payment_ar = apd.no_payment_ar
			INNER JOIN mst_customer ms ON ms.id_customer = aph.id_customer
			INNER JOIN mst_account ma ON ma.id_account = aph.id_account
			WHERE aph.no_payment_ar like filter
			and (aph.date_trn between startdate and enddate);
		END IF;
	end if;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_ar_initbalance` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_ar_initbalance`(in var_field varchar(255), in var_criteria text,in var_supplier varchar(120), in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.cutoff_date,
		a.invoice_no,
		a.id_customer,
		concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as customer_name,
		a.amount_of,
		a.notes
  from mst_ar_initialbalance a
	inner join mst_customer b on b.id_customer = a.id_customer
	where invoice_no = var_criteria and a.id_supplier = var_supplier;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'Invoice No' THEN
		select a.cutoff_date,
		a.invoice_no,
		a.id_customer,
		concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as customer_name,
		a.amount_of,
		a.notes
		from mst_ar_initialbalance a
		inner join mst_customer b on b.id_customer = a.id_customer
		where a.invoice_no like filter;
	elseif var_field = 'Customer' THEN
		select a.cutoff_date,
		a.invoice_no,
		a.id_customer,
		concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as customer_name,
		a.amount_of,
		a.notes
		from mst_ar_initialbalance a
		inner join mst_customer b on b.id_customer = a.id_customer
		where concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) like filter;
	end if;
ELSEif var_date_filter = 1 THEN
IF VAR_FIELD = 'Invoice No' THEN
		select a.cutoff_date,
		a.invoice_no,
		a.id_customer,
		concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as customer_name,
		a.amount_of,
		a.notes
		from mst_ar_initialbalance a
		inner join mst_customer b on b.id_customer = a.id_customer
		where a.invoice_no like filter
		and (a.created_date between startdate and enddate);
	elseif var_field = 'Customer' THEN
		select a.cutoff_date,
		a.invoice_no,
		a.id_customer,
		concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as customer_name,
		a.amount_of,
		a.notes
		from mst_ar_initialbalance a
		inner join mst_customer b on b.id_customer = a.id_customer
		where concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) like filter
		and (a.created_date between startdate and enddate);
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_aset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_aset`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.id_aset,
				 a.id_golongan,
				 b.type,
				 a.nama,
				 a.notes,
				 a.tanggal_perolehan,
				 a.nilai_perolehan,
				 a.sawal_nilai_buku,
				 a.created_date,
				 a.modified_date,
				 a.created_user,
				 a.modified_user,
				 a.id_department,
				 c.department_name
  from mst_aset a inner join mst_golaset b on b.id_golongan = a.id_golongan
	inner join mst_department c on c.department_id = a.id_department
	where a.id_aset = var_criteria;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'ID Aset' THEN
		SELECT 
				 a.id_aset,
				 a.id_golongan,
				 b.type,
				 a.nama,
				 a.notes,
				 a.tanggal_perolehan,
				 a.nilai_perolehan,
				 a.sawal_nilai_buku,
				 a.created_date,
				 a.modified_date,
				 a.created_user,
				 a.modified_user
		from mst_aset a inner join mst_golaset b on b.id_golongan = a.id_golongan
		where a.id_aset like filter;
	elseif var_field = 'Nama Aset' THEN
		SELECT 
				 a.id_aset,
				 a.id_golongan,
				 b.type,
				 a.nama,
				 a.notes,
				 a.tanggal_perolehan,
				 a.nilai_perolehan,
				 a.sawal_nilai_buku,
				 a.created_date,
				 a.modified_date,
				 a.created_user,
				 a.modified_user
		from mst_aset a inner join mst_golaset b on b.id_golongan = a.id_golongan
		where a.nama like filter;
	end if;
ELSEif var_date_filter = 1 THEN
IF VAR_FIELD = 'ID Aset' THEN
		SELECT 
				 a.id_aset,
				 a.id_golongan,
				 b.type,
				 a.nama,
				 a.notes,
				 a.tanggal_perolehan,
				 a.nilai_perolehan,
				 a.sawal_nilai_buku,
				 a.created_date,
				 a.modified_date,
				 a.created_user,
				 a.modified_user
		from mst_aset a inner join mst_golaset b on b.id_golongan = a.id_golongan
		where a.id_aset like filter
		and (a.created_date between startdate and enddate);
	elseif var_field = 'Nama Aset' THEN
			SELECT 
				 a.id_aset,
				 a.id_golongan,
				 b.type,
				 a.nama,
				 a.notes,
				 a.tanggal_perolehan,
				 a.nilai_perolehan,
				 a.sawal_nilai_buku,
				 a.created_date,
				 a.modified_date,
				 a.created_user,
				 a.modified_user
		from mst_aset a inner join mst_golaset b on b.id_golongan = a.id_golongan
		where a.nama like filter
		and (a.created_date between startdate and enddate);
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_assembly` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_assembly`(in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN

		select a.no_assembly,a.id_item,a.notes,a.qty_item_production,a.id_unit,a.date_trn
		from mst_assembly_head a 
		where a.no_assembly = var_criteria;

elseif detail = 2 then
		
		select e.id_item as id_item_material,
		e.qty_material,e.id_unit as id_unit_material,e.cost as material_cost,e.notes as notes_material,
		e.total_cost as total_cost_material,a.item_name
		from mst_assembly_sparepart e 
		inner join mst_item a on a.id_item = e.id_item
		where e.no_assembly = var_criteria;

elseif detail = 4 THEN

		select g.id_cost as id_cost_konversi,g.qty_hour,
		g.cost as cost_konversi,g.notes as notes_konversi,g.total_cost as total_cost_konversi, a.cost_name
		from mst_assembly_conversion g
		inner join mst_standard_cost a on a.id_cost = g.id_cost
		where g.no_assembly = var_criteria;


elseif detail = 0 then
	if var_date_filter = 0 then
		select a.date_trn,a.no_assembly,a.id_item,d.item_name,a.qty_item_production,c.unit,a.notes
		from mst_assembly_head a 
		inner join mst_unit c on c.id_unit = a.id_unit
		inner join mst_item d on d.id_item = a.id_item;
	elseif var_date_filter = 1 THEN
		select a.date_trn,a.no_assembly,a.id_item,d.item_name,a.qty_item_production,c.unit,a.notes
		from mst_assembly_head a 
		inner join mst_unit c on c.id_unit = a.id_unit
		inner join mst_item d on d.id_item = a.id_item where a.date_trn between startdate and enddate;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_begin_penyusutan` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_begin_penyusutan`(in var_period integer, in var_years integer)
BEGIN
	select a.id_aset, a.nama,c.department_name , b.type,b.rate_penyusutan,
case when get_nilai_buku_aset(a.id_golongan,a.nilai_perolehan,a.tanggal_perolehan,b.rate_penyusutan) 
>= (a.nilai_perolehan * b.rate_penyusutan/100/12)
then round((a.nilai_perolehan * b.rate_penyusutan/100/12),0) 
when get_nilai_buku_aset(a.id_golongan,a.nilai_perolehan,a.tanggal_perolehan,b.rate_penyusutan) 
< (a.nilai_perolehan * b.rate_penyusutan/100/12) and get_nilai_buku_aset(a.id_golongan,a.nilai_perolehan,a.tanggal_perolehan,b.rate_penyusutan) > 0 
then get_nilai_buku_aset(a.id_golongan,a.nilai_perolehan,a.tanggal_perolehan,b.rate_penyusutan)
else 0 end as penyusutan, 
case when a.id_coa_aset is null then '' else a.id_coa_aset end as id_coa_aset,
case when a.id_coa_penyusutan is null then '' else a.id_coa_penyusutan end as id_coa_penyusutan,
case when a.id_coa_akumulasi is null then '' else a.id_coa_akumulasi end as id_coa_akumulasi
 from mst_aset a inner join mst_golaset b on b.id_golongan = a.id_golongan 
inner join mst_department c on c.department_id = a.id_department 
where a.id_aset not in (select id_aset from i_aset_depreciation where period = var_period and years = var_years);

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_biaya` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_biaya`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN

	select a.*,b.account_name from mst_standard_cost a inner join mst_account b on b.id_account = a.id_account where a.id_cost = var_criteria;

else
	if var_date_filter = 0 then
		IF VAR_FIELD = 'Jenis Biaya' THEN
			SELECT id_cost,
			cost_name,
			cost_def, 
			notes 
			FROM mst_standard_cost where id_cost like filter;
		end if;
	elseif var_date_filter = 1 THEN
		IF VAR_FIELD = 'Jenis Biaya' THEN
			SELECT id_cost,
			cost_name,
			cost_def, 
			notes 
			FROM mst_standard_cost where id_cost like filter
			and (created_date between startdate and enddate);
		end if;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_bom` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_bom`(in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN

		select a.no_bom,a.id_item,a.notes,a.qty_item_production,a.id_unit,a.date_trn
		from mst_bom_head a 
		where a.no_bom = var_criteria;

elseif detail = 2 then
		
		select e.id_item as id_item_material,
		e.qty_material,e.id_unit as id_unit_material,e.cost as material_cost,e.notes as notes_material,
		e.total_cost as total_cost_material,a.item_name
		from mst_bom_material e 
		inner join mst_item a on a.id_item = e.id_item
		where e.no_bom = var_criteria;

elseif detail = 3 THEN
	
		select f.id_item as id_item_wip,f.qty_material as qty_wip,f.id_unit as id_unit_wip,
		f.cost as wip_cost,f.notes as notes_wip,f.total_cost as total_cost_wip,a.item_name
		from mst_bom_wip f 
		inner join mst_item a on a.id_item = f.id_item
		where f.no_bom = var_criteria;

elseif detail = 4 THEN

		select g.id_cost as id_cost_konversi,g.qty_hour,
		g.cost as cost_konversi,g.notes as notes_konversi,g.total_cost as total_cost_konversi, a.cost_name
		from mst_bom_conversion g
		inner join mst_standard_cost a on a.id_cost = g.id_cost
		where g.no_bom = var_criteria;

elseif detail =0 then
	if var_date_filter = 0 then
		select a.date_trn,a.no_bom,a.id_item,d.item_name,a.qty_item_production,c.unit,a.notes
		from mst_bom_head a 
		inner join mst_unit c on c.id_unit = a.id_unit
		inner join mst_item d on d.id_item = a.id_item;
	elseif var_date_filter = 1 THEN
		select a.date_trn,a.no_bom,a.id_item,d.item_name,a.qty_item_production,c.unit,a.notes
		from mst_bom_head a 
		inner join mst_unit c on c.id_unit = a.id_unit
		inner join mst_item d on d.id_item = a.id_item where a.date_trn between startdate and enddate;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_bom_conversion_det` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_bom_conversion_det`(in var_criteria text)
BEGIN
	select g.id_cost as id_cost_konversi,g.qty_hour,
		g.cost as cost_konversi,g.notes as notes_konversi,g.total_cost as total_cost_konversi, a.cost_name
		from mst_bom_conversion g
		inner join mst_standard_cost a on a.id_cost = g.id_cost
		where g.no_bom = var_criteria;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_bom_material_det` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_bom_material_det`(in var_criteria text)
BEGIN
	select e.id_item as id_item_material,
		e.qty_material,e.id_unit as id_unit_material,e.cost as material_cost,e.notes as notes_material,
		e.total_cost as total_cost_material,a.item_name
		from mst_bom_material e 
		inner join mst_item a on a.id_item = e.id_item
		where e.no_bom = var_criteria;


END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_bom_wip_det` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_bom_wip_det`(in var_criteria text)
BEGIN
	select f.id_item as id_item_wip,f.qty_material as qty_wip,f.id_unit as id_unit_wip,
		f.cost as wip_cost,f.notes as notes_wip,f.total_cost as total_cost_wip,a.item_name
		from mst_bom_wip f 
		inner join mst_item a on a.id_item = f.id_item
		where f.no_bom = var_criteria;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_brand_disc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_brand_disc`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN

	select * from mst_account where id_account = var_criteria;

else
	if var_date_filter = 0 then
		IF VAR_FIELD = 'Account No' THEN
			SELECT id_account,
			account_name,
			CASE WHEN flag_header = 1 THEN 'Header' else 'Detail' end as Type,
			case when def_position = 'D' then 'Debet' else 'Credit' end as Def, 
			notes 
			FROM mst_account where id_account like filter;
		elseif var_field = 'Account Name' THEN
			SELECT id_account,
			account_name,
			CASE WHEN flag_header = 1 THEN 'Header' else 'Detail' end as Type,
			case when def_position = 'D' then 'Debet' else 'Credit' end as Def, 
			notes 
			FROM mst_account where account_name like filter;
		end if;
	elseif var_date_filter = 1 THEN
		IF VAR_FIELD = 'Account No' THEN
			SELECT id_account,
			account_name,
			CASE WHEN flag_header = 1 THEN 'Header' else 'Detail' end as Type,
			case when def_position = 'D' then 'Debet' else 'Credit' end as Def, 
			notes 
			FROM mst_account where id_account like filter
			and (created_date between startdate and enddate);
		elseif var_field = 'Account Name' THEN
			SELECT id_account,
			account_name,
			CASE WHEN flag_header = 1 THEN 'Header' else 'Detail' end as Type,
			case when def_position = 'D' then 'Debet' else 'Credit' end as Def, 
			notes 
			FROM mst_account where account_name like filter
			and (created_date between startdate and enddate);
		end if;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_cancel_ro` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_cancel_ro`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
declare total_approve integer;
declare total_item integer;
declare notes_approve text;

select concat('%',var_criteria,'%') into filter;

select count(id_item) into total_approve from trn_request_order_det where flag_status = 1 and no_request_order = var_criteria;
select count(id_item) into total_item from trn_request_order_det where no_request_order = var_criteria;

if total_approve > 0 and total_approve < total_item THEN
	set notes_approve = 'Approve Sebagian';
elseif total_approve > 0 and total_approve = total_item THEN
	set notes_approve = 'Approve Seluruhnya';
elseif total_approve = 0 THEN
	set notes_approve = 'Belum di Approve';
end if;

if detail = 1 THEN

select a.id_supplier,concat(b.first_name,' ',b.last_name) as nama,
b.address,a.no_request_order, a.date_trn,a.notes,
c.number_asc,c.id_item,c.id_unit,f.item_name, c.notes as description, 
c.qty,notes_approve 
 from trn_request_order_head a
inner join mst_supplier b on b.id_supplier = a.id_supplier
inner join trn_request_order_det c on c.no_request_order=a.no_request_order
inner join mst_item f on f.id_item = c.id_item
where a.no_request_order = var_criteria;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'Requisition No' THEN
		select a.no_request_order, a.date_trn, a.notes, c.id_item, d.item_name,
		case when c.qty is null then 0 else c.qty end - case when c.approve_qty is null then 0 else c.approve_qty end as qty, c.id_unit
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_request_order like filter and (c.flag_status = 1 and case when c.approve_qty is null then 0 else c.approve_qty end < case when c.qty is null then 0 else c.qty end) ;
	elseif VAR_FIELD = 'Item ID' THEN
		select a.no_request_order, a.date_trn, a.notes, c.id_item, d.item_name,
		case when c.qty is null then 0 else c.qty end - case when c.approve_qty is null then 0 else c.approve_qty end as qty, c.id_unit
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where c.id_item like filter and (c.flag_status = 1 and case when c.approve_qty is null then 0 else c.approve_qty end < case when c.qty is null then 0 else c.qty end) ;
	elseif VAR_FIELD = 'Item Name' THEN
		select a.no_request_order, a.date_trn, a.notes, c.id_item, d.item_name,
		case when c.qty is null then 0 else c.qty end - case when c.approve_qty is null then 0 else c.approve_qty end as qty, c.id_unit
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where d.item_name like filter and (c.flag_status = 1 and case when c.approve_qty is null then 0 else c.approve_qty end < case when c.qty is null then 0 else c.qty end) ;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'Requisition No' THEN
		select a.no_request_order, a.date_trn, a.notes, c.id_item, d.item_name,
		case when c.qty is null then 0 else c.qty end - case when c.approve_qty is null then 0 else c.approve_qty end as qty, c.id_unit
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_request_order like filter and (c.flag_status = 1 and case when c.approve_qty is null then 0 else c.approve_qty end < case when c.qty is null then 0 else c.qty end)
		and (a.date_trn between startdate and enddate);
	elseif VAR_FIELD = 'Item ID' THEN
		select a.no_request_order, a.date_trn,a.notes, c.id_item,d.item_name,
		case when c.qty is null then 0 else c.qty end - case when c.approve_qty is null then 0 else c.approve_qty end as qty, c.id_unit
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where c.id_item like filter and (c.flag_status = 1 and case when c.approve_qty is null then 0 else c.approve_qty end < case when c.qty is null then 0 else c.qty end)
		and (a.date_trn between startdate and enddate);
	elseif VAR_FIELD = 'Item Name' THEN
		select a.no_request_order, a.date_trn,a.notes, c.id_item,d.item_name,
		case when c.qty is null then 0 else c.qty end - case when c.approve_qty is null then 0 else c.approve_qty end as qty, c.id_unit
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where d.item_name like filter and (c.flag_status = 1 and case when c.approve_qty is null then 0 else c.approve_qty end < case when c.qty is null then 0 else c.qty end)
		and (a.date_trn between startdate and enddate);
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_cashier` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_cashier`(in var_field varchar(255), in var_criteria text, in detail integer,in date_filter integer,in var_tgl_awal date,in var_tgl_akhir date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.customer,a.cust_address as address,a.cust_phone,a.no_sales, a.date_trn, 
c.id_curr,a.notes,a.subtotal,a.tax,a.total as total_head,
c.number_asc,c.id_item,c.id_unit,f.item_name, c.notes as description, 
c.qty, c.price, (c.qty * c.price) as total, a.discount,a.discpay,a.termpaydisc,a.term,a.payment_method,
c.disc_nom,c.nominal_net,case when a.flag_member is null then 0 else a.flag_member end as flag_member,
case when a.id_customer is null then '' else a.id_customer end as id_customer
 from trn_cashier_head a
inner join trn_cashier_det c on c.no_sales=a.no_sales
inner join mst_item f on f.id_item = c.id_item
where a.no_sales = var_criteria
union ALL
select a.customer,a.cust_address as address,a.cust_phone,a.no_sales, a.date_trn, 
c.id_curr,a.notes,a.subtotal,a.tax,a.total as total_head,
c.number_asc,c.id_service as id_item,c.id_unit,f.service_name as item_name, c.notes as description, 
c.qty, c.price, (c.qty * c.price) as total, a.discount,a.discpay,a.termpaydisc,a.term,a.payment_method,
c.disc_nom,c.nominal_net,
case when a.flag_member is null then 0 else a.flag_member end as flag_member,
case when a.id_customer is null then '' else a.id_customer end as id_customer
 from trn_cashier_head a
inner join trn_cashier_service_det c on c.no_sales=a.no_sales
inner join mst_service f on f.id_service = c.id_service
where a.no_sales = var_criteria;
else

if date_filter = 0 then
IF VAR_FIELD = 'Transaction No' THEN

select a.no_sales, a.customer as nama, a.date_trn, a.subtotal, (a.tax/100) * (a.subtotal -(a.discount/100 * a.subtotal)) as tax,
a.total,a.notes,a.customer,a.cust_address as address,a.discount/100 * a.subtotal as discount,a.payment_method
from trn_cashier_head a
where a.no_sales like filter;

elseif var_field = 'Customer' THEN
select a.no_sales, a.customer as nama, a.date_trn, a.subtotal, (a.tax/100) * (a.subtotal -(a.discount/100 * a.subtotal)) as tax,
a.total,a.notes,a.customer,a.cust_address as address,a.discount/100 * a.subtotal as discount,a.payment_method
from trn_cashier_head a
	where a.customer like filter;


end if;
elseIF VAR_FIELD = 'Transaction No' THEN

select a.no_sales, a.customer as nama, a.date_trn, a.subtotal, (a.tax/100) * (a.subtotal -(a.discount/100 * a.subtotal)) as tax,
a.total,a.notes,a.customer,a.cust_address as address,a.discount/100 * a.subtotal as discount,a.payment_method
from trn_cashier_head a
where a.no_sales like filter
and (date_trn between var_tgl_awal and var_tgl_akhir) ;

elseif var_field = 'Customer' THEN
select a.no_sales, a.customer as nama, a.date_trn, a.subtotal, (a.tax/100) * (a.subtotal -(a.discount/100 * a.subtotal)) as tax,
a.total,a.notes,a.customer,a.cust_address as address,a.discount/100 * a.subtotal as discount,a.payment_method
from trn_cashier_head a
	where a.customer like filter
and (date_trn between var_tgl_awal and var_tgl_akhir) ;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_cashier_2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_cashier_2`(in var_field varchar(255), in var_criteria text, in detail integer)
BEGIN
	declare filter text;
	select concat('%',var_criteria,'%') into filter;
	IF detail = 1 THEN
		SELECT
				DISTINCT(h.no_sales), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_customer,			
				h.no_sales_order,
				h.date_trn, h.subtotal, h.discount, h.tax, h.total, h.notes,
				h.payment_method, h.term, h.termpaydisc,h.discount,
				CONCAT(s.address,' ',s.city) as addr_customer, p.ref_status_name as nm_payment,
				s.id_customer
			FROM
				trn_sales_head h
			INNER JOIN trn_sales_det d ON h.no_sales = d.no_sales
			INNER JOIN mst_customer s ON h.id_customer =s.id_customer
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id;
	ELSE
		IF VAR_FIELD = 'detail' THEN
			SELECT
				h.no_sales, 
				h.customer,
				h.date_trn, h.subtotal, h.discount, h.tax, h.total, h.notes,
				d.number_asc, d.id_item, i.item_name, d.notes as notes_detail, d.qty, d.id_unit,
				d.price, d.nominal, d.id_curr, h.payment_method, h.term, 
				h.termpaydisc,h.discpay,
				h.cust_address, p.ref_status_name as nm_payment,
				s.id_customer,d.disc_nom,d.nominal_net,
				case when d.weight is null then 0 else d.weight end as weight,
				case when d.priceperweight is null then 0 else d.priceperweight end as priceperweight
			FROM
				trn_cashier_head h
			INNER JOIN trn_cashier_det d ON h.no_sales = d.no_sales
			left JOIN mst_customer s ON h.id_customer =s.id_customer
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_sales = var_criteria;
		END IF;
		IF VAR_FIELD = 'Invoice No' THEN
			select distinct h.no_sales, 
				h.customer,
				h.date_trn, h.subtotal, h.discount,(h.discount/100*h.subtotal) as discount_nom, h.tax,
				h.tax/100 * (h.subtotal-(h.discount/100*h.subtotal)) as tax_nom , h.total, h.notes,
				h.payment_method, h.term, 
				h.termpaydisc,h.discpay,
				h.cust_address, p.ref_status_name as nm_payment
			FROM
				trn_cashier_head h
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_sales like filter ;
		ELSEIF VAR_FIELD = 'Customer' THEN
				select distinct h.no_sales, 
				h.customer,
				h.date_trn, h.subtotal, h.discount,(h.discount/100*h.subtotal) as discount_nom, h.tax,
				h.tax/100 * (h.subtotal-(h.discount/100*h.subtotal)) as tax_nom , h.total, h.notes,
				h.payment_method, h.term, 
				h.termpaydisc,h.discpay,
				h.cust_address, p.ref_status_name as nm_payment
			FROM
				trn_cashier_head h
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			where h.customer like filter;
		END IF;
		IF VAR_FIELD = 'A/R Payment' THEN

select a.no_sales, a.date_trn, a.sales_amount, case when a.return_amount is null then 0 else a.return_amount end as return_amount,
case 
	when DATEDIFF((select now()),a.date_trn) <= b.termpaydisc THEN round((b.discpay * a.sales_amount/100),0)
	else 0 end as disc, 
case 
	when DATEDIFF((select now()),a.date_trn) <= b.termpaydisc THEN a.sales_amount - case when a.return_amount is null then 0 else a.return_amount end - case when a.disc_amount is null then 0 else a.disc_amount end - case when a.paid_amount is null then 0 else a.paid_amount end  
	else a.sales_amount - case when a.return_amount is null then 0 else a.return_amount end - case when a.paid_amount is null then 0 else a.paid_amount end end as total, case when a.paid_amount is null then 0 else a.paid_amount end as paid_amount,
case when b.kurs is null then 1 else b.kurs end as kurs, case when a.disc_amount is null then 0 else a.disc_amount end as diskon_bayar
from ar_status a
inner join trn_sales_head b on b.no_sales = a.no_sales
where b.id_customer = var_criteria AND  b.payment_method=2
and case 
	when DATEDIFF((select now()),a.date_trn) <= b.termpaydisc THEN a.sales_amount - case when a.return_amount is null then 0 else a.return_amount end - case when a.disc_amount is null then 0 else a.disc_amount end - case when a.paid_amount is null then 0 else a.paid_amount end  
	else a.sales_amount - case when a.return_amount is null then 0 else a.return_amount end - case when a.paid_amount is null then 0 else a.paid_amount end end <> 0;

			
		END IF;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_cashier_return` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_cashier_return`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN
	declare filter text;
	select concat('%',var_criteria,'%') into filter;
IF detail = 1 THEN
	SELECT 
	DISTINCT(prh.no_sales_return), prh.date_trn, prh.id_customer, 
	CONCAT(ms.first_name,' ',ms.last_name) as customer_name, 
	CONCAT(ms.address,' ',ms.city) AS customer_addr,
	prh.payment_method, rpm.ref_status_name, prh.`notes`,
	prh.subtotal, prh.disc, prh.tax, prh.total, prd.no_sales,prh.id_warehouse,
	case when prd.weight is null then 0 else prd.weight end as weight,
	case when prd.priceperweight is null then 0 else prd.priceperweight end as priceperweight
	FROM trn_sales_return_head prh INNER JOIN trn_sales_return_det prd ON
	prh.no_sales_return= prd.no_sales_return 
	INNER JOIN mst_customer ms ON prh.id_customer =ms.id_customer
	INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method;
ELSE
if var_date_filter = 0 then
	IF VAR_FIELD = 'detail' THEN
		SELECT 
		(prh.no_sales_return), prh.date_trn, 
		prh.customer as customer_name, 
		prh.customer_addr AS customer_addr,
		prh.payment_method, rpm.ref_status_name, prh.`notes`,
		prh.subtotal, prh.disc, prh.tax, prh.total,
		prd.number_asc, prd.id_item, msi.item_name, prd.notes as notes_detail,
		prd.qty, prd.id_unit as unit, prd.price, prd.nominal, prd.no_sales,
		prd.id_curr, case when prh.kurs is null then 1 else prh.kurs end as kurs, prh.id_warehouse,
    prd.disc_nom, prd.nominal_net,
		case when prd.weight is null then 0 else prd.weight end as weight,
	case when prd.priceperweight is null then 0 else prd.priceperweight end as priceperweight
		FROM trn_cashier_return_head prh INNER JOIN trn_cashier_return_det prd ON
		prh.no_sales_return= prd.no_sales_return 
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		INNER JOIN mst_item msi ON prd.id_item =msi.id_item
		INNER JOIN mst_unit mu ON prd.id_unit=mu.id_unit
		WHERE prh.no_sales_return =  var_criteria ;

	ELSEIF VAR_FIELD = 'Return No' THEN
		SELECT distinct
		(prh.no_sales_return), prh.date_trn, 
		prh.customer as customer_name, 
		prh.customer_addr AS customer_addr,
		prh.payment_method, rpm.ref_status_name, prh.`notes`,
		prh.subtotal, prh.disc, prh.tax, prh.total, prd.no_sales, prh.id_warehouse
		FROM trn_cashier_return_head prh inner join trn_cashier_return_det prd on prd.no_sales_return = prh.no_sales_return
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		WHERE prh.no_sales_return like filter;
	ELSEIF VAR_FIELD = 'Customer' THEN
			SELECT distinct
		(prh.no_sales_return), prh.date_trn, 
		prh.customer as customer_name, 
		prh.customer_addr AS customer_addr,
		prh.payment_method, rpm.ref_status_name, prh.`notes`,
		prh.subtotal, prh.disc, prh.tax, prh.total, prd.no_sales, prh.id_warehouse
		FROM trn_cashier_return_head prh inner join trn_cashier_return_det prd on prd.no_sales_return = prh.no_sales_return
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		WHERE CONCAT(ms.first_name,ms.last_name) like filter;
	END IF;
elseif var_date_filter = 1 THEN
IF VAR_FIELD = 'Return No' THEN
			SELECT distinct
		(prh.no_sales_return), prh.date_trn, 
		prh.customer as customer_name, 
		prh.customer_addr AS customer_addr,
		prh.payment_method, rpm.ref_status_name, prh.`notes`,
		prh.subtotal, prh.disc, prh.tax, prh.total, prd.no_sales, prh.id_warehouse
		FROM trn_cashier_return_head prh inner join trn_cashier_return_det prd on prd.no_sales_return = prh.no_sales_return
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		WHERE prh.no_sales_return like filter
		and (prh.date_trn between startdate and enddate);
	ELSEIF VAR_FIELD = 'Customer' THEN
			SELECT distinct
		(prh.no_sales_return), prh.date_trn, 
		prh.customer as customer_name, 
		prh.customer_addr AS customer_addr,
		prh.payment_method, rpm.ref_status_name, prh.`notes`,
		prh.subtotal, prh.disc, prh.tax, prh.total, prd.no_sales, prh.id_warehouse
		FROM trn_cashier_return_head prh inner join trn_cashier_return_det prd on prd.no_sales_return = prh.no_sales_return
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		WHERE CONCAT(ms.first_name,ms.last_name) like filter
		and (prh.date_trn between startdate and enddate);
	END IF;
end if;
END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_cash_bank` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_cash_bank`(in var_field varchar(255), in var_criteria text, in detail integer, in type varchar(30), in var_date_filter integer, in startdate date, in enddate date,in pageIndex integer, in limitPage integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.id_account, b.account_name,
	case when flag_trans = 'KM' then 'Cash'
	when flag_trans = 'KK' then 'Cash'
	when flag_trans = 'BM' then 'Bank'
	when flag_trans = 'BK' then 'Bank'
	end as type, 
	a.date_trn, a.cashbank_no, a.notes, a.total,c.id_account as acc_det, z.account_name as acc_nm_det, c.notes as notes_det, c.amount, a.evidence_no
,id_currency,kurs	
from trn_cashbank_head a
	inner join mst_account b on b.id_account = a.id_account
	inner join trn_cashbank_det c on c.cashbank_no=a.cashbank_no 
	inner join mst_account z on z.id_account = c.id_account
	where a.cashbank_no = var_criteria;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'Disbursement No' or VAR_FIELD = 'Receipt No'  THEN
		if type = 'IN' then
			select cashbank_no, 
			date_trn, 
			notes, 
			total from trn_cashbank_head
			where flag_trans in ('KM','BM')
			and cashbank_no like filter
			order by date_trn desc, cashbank_no desc;
		ELSEif type = 'OUT' then
			select cashbank_no, 
			date_trn, 
			notes, 
			total from trn_cashbank_head
			where flag_trans in ('KK','BK')
			and cashbank_no like filter
			order by date_trn desc, cashbank_no desc;
		end if;
	elseif var_field = 'Amount Of' THEN
		if type = 'IN' then
			select cashbank_no, 
			date_trn, 
			notes, 
			total from trn_cashbank_head
			where flag_trans in ('KM','BM')
			and total like filter
			order by date_trn desc, cashbank_no desc;
		ELSEif type = 'OUT' then
			select cashbank_no, 
			date_trn, 
			notes, 
			total from trn_cashbank_head
			where flag_trans in ('KK','BK')
			and total like filter
			order by date_trn desc, cashbank_no desc;
		end if;
	end if;
elseif var_date_filter = 1 THEN
IF VAR_FIELD = 'Disbursement No' or VAR_FIELD = 'Receipt No'  THEN
		if type = 'IN' then
			select cashbank_no, 
			date_trn, 
			notes, 
			total from trn_cashbank_head
			where flag_trans in ('KM','BM')
			and cashbank_no like filter
			and (date_trn between startdate and enddate)
			order by date_trn desc, cashbank_no desc;
		ELSEif type = 'OUT' then
			select cashbank_no, 
			date_trn, 
			notes, 
			total from trn_cashbank_head
			where flag_trans in ('KK','BK')
			and cashbank_no like filter
			and (date_trn between startdate and enddate)
			order by date_trn desc, cashbank_no desc;
		end if;
	elseif var_field = 'Amount Of' THEN
		if type = 'IN' then
			select cashbank_no, 
			date_trn, 
			notes, 
			total from trn_cashbank_head
			where flag_trans in ('KM','BM')
			and total like filter
			and (date_trn between startdate and enddate)
			order by date_trn desc, cashbank_no desc;
		ELSEif type = 'OUT' then
			select cashbank_no, 
			date_trn, 
			notes, 
			total from trn_cashbank_head
			where flag_trans in ('KK','BK')
			and total like filter
			and (date_trn between startdate and enddate)
			order by date_trn desc, cashbank_no desc;
		end if;
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_cash_bank_withoutlimit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_cash_bank_withoutlimit`(in var_field varchar(255), in var_criteria text, in detail integer, in type varchar(30), in var_date_filter integer, in startdate date, in enddate date,in pageIndex integer, in limitPage integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.id_account, b.account_name,
	case when flag_trans = 'KM' then 'Cash'
	when flag_trans = 'KK' then 'Cash'
	when flag_trans = 'BM' then 'Bank'
	when flag_trans = 'BK' then 'Bank'
	end as type, 
	a.date_trn, a.cashbank_no, a.notes, a.total,c.id_account as acc_det, z.account_name as acc_nm_det, c.notes as notes_det, c.amount, a.evidence_no
,id_currency,kurs	
from trn_cashbank_head a
	inner join mst_account b on b.id_account = a.id_account
	inner join trn_cashbank_det c on c.cashbank_no=a.cashbank_no 
	inner join mst_account z on z.id_account = c.id_account
	where a.cashbank_no = var_criteria;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'Disbursement No' or VAR_FIELD = 'Receipt No'  THEN
		if type = 'IN' then
			select cashbank_no, 
			date_trn, 
			notes, 
			flag_trans,
			total from trn_cashbank_head
			where flag_trans in ('KM','BM')
			and cashbank_no like filter
			order by date_trn desc, cashbank_no desc;
		ELSEif type = 'OUT' then
			select cashbank_no, 
			date_trn, 
			notes, 
			flag_trans,
			total from trn_cashbank_head
			where flag_trans in ('KK','BK')
			and cashbank_no like filter
			order by date_trn desc, cashbank_no desc;
		end if;
	elseif var_field = 'Amount Of' THEN
		if type = 'IN' then
			select cashbank_no, 
			date_trn, 
			notes, 
			flag_trans,
			total from trn_cashbank_head
			where flag_trans in ('KM','BM')
			and total like filter
			order by date_trn desc, cashbank_no desc;
		ELSEif type = 'OUT' then
			select cashbank_no, 
			date_trn, 
			notes, 
			flag_trans,
			total from trn_cashbank_head
			where flag_trans in ('KK','BK')
			and total like filter
			order by date_trn desc, cashbank_no desc;
		end if;
	end if;
elseif var_date_filter = 1 THEN
IF VAR_FIELD = 'Disbursement No' or VAR_FIELD = 'Receipt No'  THEN
		if type = 'IN' then
			select cashbank_no, 
			date_trn, 
			notes, 
			flag_trans,
			total from trn_cashbank_head
			where flag_trans in ('KM','BM')
			and cashbank_no like filter
			and (date_trn between startdate and enddate)
			order by date_trn desc, cashbank_no desc;
		ELSEif type = 'OUT' then
			select cashbank_no, 
			date_trn, 
			notes, 
			flag_trans,
			total from trn_cashbank_head
			where flag_trans in ('KK','BK')
			and cashbank_no like filter
			and (date_trn between startdate and enddate)
			order by date_trn desc, cashbank_no desc;
		end if;
	elseif var_field = 'Amount Of' THEN
		if type = 'IN' then
			select cashbank_no, 
			date_trn, 
			notes, 
			flag_trans,
			total from trn_cashbank_head
			where flag_trans in ('KM','BM')
			and total like filter
			and (date_trn between startdate and enddate)
			order by date_trn desc, cashbank_no desc;
		ELSEif type = 'OUT' then
			select cashbank_no, 
			date_trn, 
			notes, 
			flag_trans,
			total from trn_cashbank_head
			where flag_trans in ('KK','BK')
			and total like filter
			and (date_trn between startdate and enddate)
			order by date_trn desc, cashbank_no desc;
		end if;
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_currency` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_currency`(in var_criteria text, in detail integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select id_currency, currency, notes, flag_default, nation
  from mst_currency
	where id_currency = var_criteria;
elseif detail = 0 then
	select id_currency, currency, notes
  from mst_currency;
elseif detail = 2 then
	select a.id_currency, b.currency, case when a.convert_value is null then 0 else a.convert_value end as convert_value, 
	(select id_currency from mst_currency where flag_default = 1 limit 1) as defcurrency,
	a.notes
	from mst_setcurrency a
	inner join mst_currency b on b.id_currency = a.id_currency;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_customer` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_customer`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer,in var_tgl_awal date,in var_tgl_akhir date)
BEGIN

	declare filter text;
	select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select * from mst_customer where id_customer = var_criteria;
elseif detail = 3 THEN
select id_customer,
concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) as name,
case when a.address is null then '' else a.address end as address from mst_customer a where id_customer = var_criteria;
elseif detail = 2 then
if var_date_filter = 0 then 
if var_field = 'Customer ID' then
SELECT
	ucase(a.id_customer) as id_customer,
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city,
	case when a.id_barcode is null then '' else a.id_barcode end as id_barcode
FROM
	mst_customer a
where id_customer like filter and case when `status` is null then 0 else `status` end = 1;

elseif var_field = 'Barcode Member' then
SELECT
	ucase(a.id_customer) as id_customer,
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city,
	case when a.id_barcode is null then '' else a.id_barcode end as id_barcode
FROM
	mst_customer a
where case when id_barcode is null then '' else id_barcode end like filter and case when `status` is null then 0 else `status` end = 1;

elseif var_field = 'First Name' THEN

SELECT
	ucase(a.id_customer) as id_customer,
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city,
	case when a.id_barcode is null then '' else a.id_barcode end as id_barcode
FROM
	mst_customer a
where first_name like filter and case when `status` is null then 0 else `status` end = 1;

ELSEIF var_field = 'Last Name' THEN

	SELECT
	ucase(a.id_customer) as id_customer,
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city,
	case when a.id_barcode is null then '' else a.id_barcode end as id_barcode
FROM
	mst_customer a
where last_name like filter and case when `status` is null then 0 else `status` end = 1;

ELSEIF var_field = 'City' THEN

	SELECT
	ucase(a.id_customer),
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city,
	case when a.id_barcode is null then '' else a.id_barcode end as id_barcode
FROM
	mst_customer a
where city like filter and case when `status` is null then 0 else `status` end = 1;

end if;
elseif var_date_filter = 1 THEN
if var_field = 'Customer ID' then
SELECT
	ucase(a.id_customer) as id_customer,
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city,
	case when a.id_barcode is null then '' else a.id_barcode end as id_barcode
FROM
	mst_customer a
where id_customer like filter
and (created_date between var_tgl_awal and var_tgl_akhir) and case when `status` is null then 0 else `status` end = 1;

elseif var_field = 'Barcode Member' then
SELECT
	ucase(a.id_customer) as id_customer,
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city,
	case when a.id_barcode is null then '' else a.id_barcode end as id_barcode
FROM
	mst_customer a
where case when id_barcode is null then '' else id_barcode end like filter
and (created_date between var_tgl_awal and var_tgl_akhir) and case when `status` is null then 0 else `status` end = 1;

elseif var_field = 'First Name' THEN

SELECT
	ucase(a.id_customer) as id_customer,
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city,
	case when a.id_barcode is null then '' else a.id_barcode end as id_barcode
FROM
	mst_customer a
where first_name like filter
and (created_date between var_tgl_awal and var_tgl_akhir) and case when `status` is null then 0 else `status` end = 1;

ELSEIF var_field = 'Last Name' THEN

SELECT
	ucase(a.id_customer) as id_customer,
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city,
	case when a.id_barcode is null then '' else a.id_barcode end as id_barcode
FROM
	mst_customer a
where last_name like filter
and (created_date between var_tgl_awal and var_tgl_akhir) and case when `status` is null then 0 else `status` end = 1;

ELSEIF var_field = 'City' THEN

SELECT
	ucase(a.id_customer),
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city,
	case when a.id_barcode is null then '' else a.id_barcode end as id_barcode
FROM
	mst_customer a
where city like filter
and (created_date between var_tgl_awal and var_tgl_akhir) and case when `status` is null then 0 else `status` end = 1;
end if;
end if;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_delivered_item` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_delivered_item`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
declare total_approve integer;
declare total_item integer;
declare notes_approve text;

select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN

select a.id_customer,concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama,
b.address,a.no_delivery_order, a.date_trn,a.notes,
c.number_asc,c.id_item,c.id_unit,f.item_name, c.notes as description, 
case when c.qty is null then 0 else c.qty end as qty,
case when c.sent_qty is null then 0 else c.sent_qty end as sent_qty, 
a.no_sales_order, 
case when d.qty is null then 0 else d.qty end as qty_po, a.id_warehouse,
case when a.id_ekspedisi is null then '' else a.id_ekspedisi end as id_ekspedisi,
case when a.shipping_address is null then '' else a.shipping_address end as shipping_address,
case when a.shipping_city is null then '' else a.shipping_city end as shipping_city
 from trn_delivery_order_head a
inner join mst_customer b on b.id_customer = a.id_customer
inner join trn_delivery_order_det c on c.no_delivery_order=a.no_delivery_order
inner join trn_sales_order_det d on d.no_sales_order = a.no_sales_order and d.id_item = c.id_item
inner join mst_item f on f.id_item = c.id_item
where a.no_delivery_order = var_criteria;

elseif detail = 5 THEN
select * from trn_do_discitem_det;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'Delivery No' THEN
		select a.no_delivery_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn,a.notes,a.id_customer, a.no_sales_order
		from trn_delivery_order_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		where a.no_delivery_order like filter
		order by a.date_trn desc, a.no_delivery_order desc;
	elseif VAR_FIELD = 'Customer' THEN
		select a.no_delivery_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn,a.notes,a.id_customer, a.no_sales_order
		from trn_delivery_order_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		where concat(b.first_name,' ',b.last_name) like filter
		order by a.date_trn desc, a.no_delivery_order desc;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'Delivery No' THEN
		select a.no_delivery_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn,a.notes,a.id_customer, a.no_sales_order
		from trn_delivery_order_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		where a.no_delivery_order like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.no_delivery_order desc;
	elseif VAR_FIELD = 'Customer' THEN
		select a.no_delivery_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn,a.notes,a.id_customer, a.no_sales_order
		from trn_delivery_order_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		where concat(b.first_name,' ',b.last_name) like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.no_delivery_order desc;
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_ekspedisi_payment` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_ekspedisi_payment`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.date_trn, a.no_ekspedisi, a.id_currency, a.notes, a.total, a.id_account, b.no_do, b.no_resi, b.freight_address, b.freight_city, 
		b.freight_cost, c.account_name from trn_ekspedisi_head a
		inner join trn_ekspedisi_det b on b.no_ekspedisi = a.no_ekspedisi
		inner join mst_account c on c.id_account = a.id_account
where a.no_ekspedisi = var_criteria;

elseif detail = 0 then
if var_date_filter = 0 then
	IF VAR_FIELD = 'Ekspedisi No' THEN
		select a.date_trn, a.no_ekspedisi, a.id_currency, a.notes, a.total, a.id_account, 
		c.account_name from trn_ekspedisi_head a
		inner join mst_account c on c.id_account = a.id_account
		where a.no_ekspedisi like filter
		order by a.date_trn desc, a.no_ekspedisi desc;
	elseif var_field = 'Account Payment' THEN
		select a.date_trn, a.no_ekspedisi, a.id_currency, a.notes, a.total, a.id_account,  
		c.account_name from trn_ekspedisi_head a
		inner join mst_account c on c.id_account = a.id_account
		where c.account_name like filter
		order by a.date_trn desc, a.no_ekspedisi desc;
	end if;
elseif var_date_filter = 1 THEN
	IF VAR_FIELD = 'Ekspedisi No' THEN
		select a.date_trn, a.no_ekspedisi, a.id_currency, a.notes, a.total, a.id_account, c.account_name from trn_ekspedisi_head a
		inner join mst_account c on c.id_account = a.id_account
		where a.no_ekspedisi like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.no_ekspedisi desc;
	elseif var_field = 'Account Payment' THEN
		select a.date_trn, a.no_ekspedisi, a.id_currency, a.notes, a.total, a.id_account, c.account_name from trn_ekspedisi_head a
		inner join mst_account c on c.id_account = a.id_account
		where concat(b.first_name,' ',b.last_name) like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.no_ekspedisi desc;
	end if;
end if;

end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_expedition` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_expedition`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select id_expedition,
				expedition_name,
				expedition_rate,
				from_city,
				to_city,
				qty_perunit,
				notes,
				created_date,
				modified_date,
				created_user,
				modified_user
  from mst_expedition
	where id_expedition = var_criteria;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'ID Ekspedisi' THEN
		SELECT id_expedition,
				expedition_name,
				expedition_rate,
				from_city,
				to_city,
			  qty_perunit
		FROM mst_expedition where id_expedition like filter;
	elseif var_field = 'Nama Ekspedisi' THEN
		SELECT id_expedition,
				expedition_name,
				expedition_rate,
				from_city,
				to_city,
				qty_perunit
		FROM mst_expedition where expedition_name like filter;
	end if;
ELSEif var_date_filter = 1 THEN
IF VAR_FIELD = 'ID Expedisi' THEN
		SELECT id_expedition,
				expedition_name,
				expedition_rate,
				from_city,
				to_city,
				qty_perunit
		FROM mst_expedition where id_expedition like filter
		and (created_date between startdate and enddate);
	elseif var_field = 'Nama Expedisi' THEN
		SELECT id_expedition,
				expedition_name,
				expedition_rate,
				from_city,
				to_city,
				qty_perunit
		FROM mst_expedition where expedition_name like filter
		and (created_date between startdate and enddate);
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_golaset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_golaset`(in var_criteria text, in detail integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.id_golongan, a.masa_manfaat,a.rate_penyusutan,a.type
  from mst_golaset a 
	where a.id_golongan = var_criteria;
else
		SELECT 
				 a.id_golongan, a.masa_manfaat,a.rate_penyusutan,a.type
		from mst_golaset a 
	  where a.id_golongan like filter;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_item` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_item`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer,in var_tgl_awal date,in var_tgl_akhir date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select distinct a.id_item,a.item_name,a.id_category,a.id_jenis,a.id_account,b.account_name,
	a.main_unit,a.sell_unit,a.buy_unit,a.flag_buy,a.flag_sell,a.flag_inv,a.blob_image, case when a.sell_price is null then 0 else a.sell_price end as sell_price,
	c.mst_itemcat_nm,d.mst_itemjenis_nm,e.unit as main_unit_nm, f.unit as sell_unit_nm, g.unit as buy_unit_nm, h.warehouse_name ,
	a.id_warehouse,a.max_qty,a.min_qty,a.notes,
  case when a.length is null then 0 else a.length end as length,
	case when a.width is null then 0 else a.width end as width,
	case when a.height is null then 0 else a.height end as height,
	case when a.weight is null then 0 else a.weight end as weight,
	a.blob_image, a.id_account_cogs, a.account_cogs, a.min_qty_unit, z.mst_itembrand_nm, a.id_brand, case when a.item_disc_qty
	is null then 0 else a.item_disc_qty end as qty_to_disc, a.item_disc_unit,
	case when a.active_status is null then 0 else a.active_status end as active_status,
	case when a.kadar is null then 0 else a.kadar end as kadar,
	case when a.use_notifminqty is null then 0 else a.use_notifminqty end as use_notifminqty
  from mst_item a
	inner join mst_account b on b.id_account = a.id_account
  inner join mst_itemcat c on c.mst_itemcat_id = a.id_category
inner join mst_itembrand z on z.mst_itembrand_id = a.id_brand
inner join mst_itemjenis d on d.mst_itemjenis_id = a.id_jenis
inner join mst_unit e on e.id_unit = a.main_unit
inner join mst_unit f on f.id_unit = a.sell_unit
inner join mst_unit g on g.id_unit = a.buy_unit
inner join mst_warehouse h on h.id_warehouse = a.id_warehouse
	where id_item = var_criteria;
else

if var_date_filter = 0 then 
	IF VAR_FIELD = 'Item ID' THEN
		SELECT a.id_item, a.item_name, a.main_unit, b.mst_itemcat_nm, c.mst_itemjenis_nm,
		case when a.id_barcode is null then '' else a.id_barcode end as id_barcode, z.mst_itembrand_nm, 
		case when a.weight is null then 0 else a.weight end as weight,
		case when a.kadar is null then 0 else a.kadar end as kadar
		FROM mst_item a inner join mst_itemcat b on b.mst_itemcat_id = a.id_category 
		inner join mst_itemjenis c on c.mst_itemjenis_id = a.id_jenis
		inner join mst_itembrand z on z.mst_itembrand_id = a.id_brand
		where id_item like filter and case when a.active_status is null then 0 else a.active_status end <> 0
		order by id_item desc;
	elseif var_field = 'Item Name' THEN
		SELECT a.id_item, a.item_name, a.main_unit, b.mst_itemcat_nm, c.mst_itemjenis_nm,
		case when a.id_barcode is null then '' else a.id_barcode end as id_barcode, z.mst_itembrand_nm,
		case when a.weight is null then 0 else a.weight end as weight,
		case when a.kadar is null then 0 else a.kadar end as kadar
		FROM mst_item a inner join mst_itemcat b on b.mst_itemcat_id = a.id_category 
		inner join mst_itemjenis c on c.mst_itemjenis_id = a.id_jenis
		inner join mst_itembrand z on z.mst_itembrand_id = a.id_brand
		where item_name like filter and case when a.active_status is null then 0 else a.active_status end <> 0 order by id_item desc;
	end if;
elseif var_date_filter = 1 THEN
	IF VAR_FIELD = 'Item ID' THEN
		SELECT a.id_item, a.item_name, a.main_unit, b.mst_itemcat_nm, c.mst_itemjenis_nm,
		case when a.id_barcode is null then '' else a.id_barcode end as id_barcode, z.mst_itembrand_nm,
		case when a.weight is null then 0 else a.weight end as weight,
		case when a.kadar is null then 0 else a.kadar end as kadar
		FROM mst_item a inner join mst_itemcat b on b.mst_itemcat_id = a.id_category 
		inner join mst_itemjenis c on c.mst_itemjenis_id = a.id_jenis
		inner join mst_itembrand z on z.mst_itembrand_id = a.id_brand
		where id_item like filter 
		and (a.created_date between var_tgl_awal and var_tgl_akhir) and case when a.active_status is null then 0 else a.active_status end <> 0 order by id_item desc;
	elseif var_field = 'Item Name' THEN
		SELECT a.id_item, a.item_name, a.main_unit, b.mst_itemcat_nm, c.mst_itemjenis_nm,
		case when a.id_barcode is null then '' else a.id_barcode end as id_barcode, z.mst_itembrand_nm,
		case when a.weight is null then 0 else a.weight end as weight,
		case when a.kadar is null then 0 else a.kadar end as kadar
		FROM mst_item a inner join mst_itemcat b on b.mst_itemcat_id = a.id_category 
		inner join mst_itemjenis c on c.mst_itemjenis_id = a.id_jenis
		inner join mst_itembrand z on z.mst_itembrand_id = a.id_brand
		where item_name like filter
		and (a.created_date between var_tgl_awal and var_tgl_akhir) and case when a.active_status is null then 0 else a.active_status end <> 0 order by id_item desc;
	end if;
end if;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_itembrand` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_itembrand`(in var_criteria text, in detail integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select mst_itembrand_id,mst_itembrand_nm,description, case when disc is null then 0 else disc end as disc
  from mst_itembrand a
	where mst_itembrand_id = var_criteria;
elseif detail = 0 then
	select mst_itembrand_id,mst_itembrand_nm,description, case when disc is null then 0 else disc end as disc
  from mst_itembrand a;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_itemcat` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_itemcat`(in var_criteria text, in detail integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select b.mst_itemjenis_id,b.mst_itemjenis_nm,mst_itemcat_id,mst_itemcat_nm,a.description,
	case when a.discount is null then 0 else a.discount end as discount
  from mst_itemcat a
	left join mst_itemjenis b on b.mst_itemjenis_id = a.mst_itemjenis_id
	where a.mst_itemcat_id = var_criteria;
elseif detail = 0 then
	select b.mst_itemjenis_nm,mst_itemcat_id,mst_itemcat_nm,a.description,
	case when a.discount is null then 0 else a.discount end as discount
  from mst_itemcat a
	left join mst_itemjenis b on b.mst_itemjenis_id = a.mst_itemjenis_id;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_itemjenis` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_itemjenis`(in var_criteria text, in detail integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select mst_itemjenis_id,mst_itemjenis_nm,description,case when discount is null then 0 else discount end as discount,
	case when default_price is null then 0 else default_price end as default_price
  from mst_itemjenis a
	where mst_itemjenis_id = var_criteria;
elseif detail = 0 then
	select mst_itemjenis_id,mst_itemjenis_nm,description,case when discount is null then 0 else discount end as discount,
	case when default_price is null then 0 else default_price end as default_price
  from mst_itemjenis a where mst_itemjenis_nm like filter;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_item_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `select_item_all`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer,in var_tgl_awal date,in var_tgl_akhir date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select distinct a.id_item,a.item_name,a.id_category,a.id_jenis,a.id_account,b.account_name,
	a.main_unit,a.sell_unit,a.buy_unit,a.flag_buy,a.flag_sell,a.flag_inv,a.blob_image, a.sell_price,
	c.mst_itemcat_nm,d.mst_itemjenis_nm,e.unit as main_unit_nm, f.unit as sell_unit_nm, g.unit as buy_unit_nm, h.warehouse_name ,
	a.id_warehouse,a.max_qty,a.min_qty,a.notes,
  case when a.length is null then 0 else a.length end as length,
	case when a.width is null then 0 else a.width end as width,
	case when a.height is null then 0 else a.height end as height,
	case when a.weight is null then 0 else a.weight end as weight,
	a.blob_image, a.id_account_cogs, a.account_cogs, a.min_qty_unit, z.mst_itembrand_nm, a.id_brand, case when a.item_disc_qty
	is null then 0 else a.item_disc_qty end as qty_to_disc, a.item_disc_unit,
	case when a.active_status is null then 0 else a.active_status end as active_status,
	case when a.kadar is null then 0 else a.kadar end as kadar,
	case when a.use_notifminqty is null then 0 else a.use_notifminqty end as use_notifminqty
  from mst_item a
	inner join mst_account b on b.id_account = a.id_account
  inner join mst_itemcat c on c.mst_itemcat_id = a.id_category
inner join mst_itembrand z on z.mst_itembrand_id = a.id_brand
inner join mst_itemjenis d on d.mst_itemjenis_id = a.id_jenis
inner join mst_unit e on e.id_unit = a.main_unit
inner join mst_unit f on f.id_unit = a.sell_unit
inner join mst_unit g on g.id_unit = a.buy_unit
inner join mst_warehouse h on h.id_warehouse = a.id_warehouse
	where id_item = var_criteria;
else

if var_date_filter = 0 then 
	IF VAR_FIELD = 'Item ID' THEN
		SELECT a.id_item, a.item_name, a.main_unit, b.mst_itemcat_nm, c.mst_itemjenis_nm,
		case when a.id_barcode is null then '' else a.id_barcode end as id_barcode, z.mst_itembrand_nm,
		case when a.weight is null then 0 else a.weight end as weight,
		case when a.kadar is null then 0 else a.kadar end as kadar
		FROM mst_item a inner join mst_itemcat b on b.mst_itemcat_id = a.id_category 
		inner join mst_itemjenis c on c.mst_itemjenis_id = a.id_jenis
		inner join mst_itembrand z on z.mst_itembrand_id = a.id_brand
		where id_item like filter;
	elseif var_field = 'Item Name' THEN
		SELECT a.id_item, a.item_name, a.main_unit, b.mst_itemcat_nm, c.mst_itemjenis_nm,
		case when a.id_barcode is null then '' else a.id_barcode end as id_barcode, z.mst_itembrand_nm,
		case when a.weight is null then 0 else a.weight end as weight,
		case when a.kadar is null then 0 else a.kadar end as kadar
		FROM mst_item a inner join mst_itemcat b on b.mst_itemcat_id = a.id_category 
		inner join mst_itemjenis c on c.mst_itemjenis_id = a.id_jenis
		inner join mst_itembrand z on z.mst_itembrand_id = a.id_brand
		where item_name like filter;
	end if;
elseif var_date_filter = 1 THEN
	IF VAR_FIELD = 'Item ID' THEN
		SELECT a.id_item, a.item_name, a.main_unit, b.mst_itemcat_nm, c.mst_itemjenis_nm,
		case when a.id_barcode is null then '' else a.id_barcode end as id_barcode, z.mst_itembrand_nm,
		case when a.weight is null then 0 else a.weight end as weight,
		case when a.kadar is null then 0 else a.kadar end as kadar
		FROM mst_item a inner join mst_itemcat b on b.mst_itemcat_id = a.id_category 
		inner join mst_itemjenis c on c.mst_itemjenis_id = a.id_jenis
		inner join mst_itembrand z on z.mst_itembrand_id = a.id_brand
		where id_item like filter 
		and (a.created_date between var_tgl_awal and var_tgl_akhir);
	elseif var_field = 'Item Name' THEN
		SELECT a.id_item, a.item_name, a.main_unit, b.mst_itemcat_nm, c.mst_itemjenis_nm,
		case when a.id_barcode is null then '' else a.id_barcode end as id_barcode, z.mst_itembrand_nm,
		case when a.weight is null then 0 else a.weight end as weight,
		case when a.kadar is null then 0 else a.kadar end as kadar
		FROM mst_item a inner join mst_itemcat b on b.mst_itemcat_id = a.id_category 
		inner join mst_itemjenis c on c.mst_itemjenis_id = a.id_jenis
		inner join mst_itembrand z on z.mst_itembrand_id = a.id_brand
		where item_name like filter
		and (a.created_date between var_tgl_awal and var_tgl_akhir);
	end if;
end if;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_journal` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_journal`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date,in pageIndex integer, in limitPage integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 case when b.amount>0 then b.amount else 0 end as debet,
				 case when b.amount<0 then -1*b.amount else 0 end as credit,
				 b.notes,
				 b.id_account,
				 c.account_name,
				 a.kurs,
				 a.id_currency
	from trn_journal_head a
	inner join trn_journal_det b on b.journal_no = a.journal_no 
	inner join mst_account c on c.id_account = b.id_account
	where a.journal_no = var_criteria;
else

if var_date_filter = 0 then
	IF VAR_FIELD = 'Journal No' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_journal_head a
		where a.journal_no like filter
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	elseif var_field = 'Notes' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_journal_head a
		where a.description like filter
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	end if;
elseif var_date_filter = 1 THEN
	IF VAR_FIELD = 'Journal No' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_journal_head a
		where a.journal_no like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	elseif var_field = 'Notes' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_journal_head a
		where a.description like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	end if;
end if;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_journal_adjust` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_journal_adjust`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date,in pageIndex integer, in limitPage integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 case when b.amount>0 then b.amount else 0 end as debet,
				 case when b.amount<0 then -1*b.amount else 0 end as credit,
				 b.notes,
				 b.id_account,
				 c.account_name,
				 a.kurs,
				 a.id_currency
	from trn_adjustjournal_head a
	inner join trn_adjustjournal_det b on b.journal_no = a.journal_no 
	inner join mst_account c on c.id_account = b.id_account
	where a.journal_no = var_criteria;
else

if var_date_filter = 0 then
	IF VAR_FIELD = 'Journal No' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_adjustjournal_head a
		where a.journal_no like filter
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	elseif var_field = 'Notes' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_adjustjournal_head a
		where a.description like filter
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	end if;
elseif var_date_filter = 1 THEN
	IF VAR_FIELD = 'Journal No' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_adjustjournal_head a
		where a.journal_no like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	elseif var_field = 'Notes' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_adjustjournal_head a
		where a.description like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	end if;
end if;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_journal_adjust_withoutlimit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_journal_adjust_withoutlimit`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date,in pageIndex integer, in limitPage integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 case when b.amount>0 then b.amount else 0 end as debet,
				 case when b.amount<0 then -1*b.amount else 0 end as credit,
				 b.notes,
				 b.id_account,
				 c.account_name,
				 a.kurs,
				 a.id_currency
	from trn_adjustjournal_head a
	inner join trn_adjustjournal_det b on b.journal_no = a.journal_no 
	inner join mst_account c on c.id_account = b.id_account
	where a.journal_no = var_criteria;
else

if var_date_filter = 0 then
	IF VAR_FIELD = 'Journal No' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_adjustjournal_head a
		where a.journal_no like filter
		order by a.date_trn desc, a.journal_no desc;
	elseif var_field = 'Notes' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_adjustjournal_head a
		where a.description like filter
		order by a.date_trn desc, a.journal_no desc;
	end if;
elseif var_date_filter = 1 THEN
	IF VAR_FIELD = 'Journal No' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_adjustjournal_head a
		where a.journal_no like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc;
	elseif var_field = 'Notes' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_adjustjournal_head a
		where a.description like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc;
	end if;
end if;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_journal_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_journal_all`(in var_field varchar(255), in var_criteria text, in var_post_from varchar(250),in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;
if var_date_filter = 0 then
 IF VAR_FIELD = 'Journal No' THEN
		select distinct a.no_ledger, 
				 a.date_trn, 
				 b.id_account, 
				 c.account_name,
				 b.notes,
				 case when b.nominal > 0 then b.nominal else 0 end as debit,
				 case when b.nominal <= 0 then -1 * b.nominal else 0 end as credit, a.post_from
		from trn_ledger_head a
		inner join trn_ledger_det b on b.no_ledger = a.no_ledger 
		inner join mst_account c on c.id_account = b.id_account
		where a.no_ledger like filter
		and a.post_from like var_post_from 
		order by a.no_ledger asc, a.date_trn asc;
	elseif var_field = 'Account No' THEN
		select distinct a.no_ledger, 
				 a.date_trn, 
				 b.id_account, 
				 c.account_name,
				 b.notes,
				 case when b.nominal > 0 then b.nominal else 0 end as debit,
				 case when b.nominal <= 0 then -1 * b.nominal else 0 end as credit,a.post_from
		from trn_ledger_head a
		inner join trn_ledger_det b on b.no_ledger = a.no_ledger 
		inner join mst_account c on c.id_account = b.id_account
		where b.id_account like filter
		and a.post_from like var_post_from
		order by a.no_ledger asc, a.date_trn asc;
elseif var_field = 'Account Name' THEN
		select distinct a.no_ledger, 
				 a.date_trn, 
				 b.id_account, 
				 c.account_name,
				 b.notes,
				 case when b.nominal > 0 then b.nominal else 0 end as debit,
				 case when b.nominal <= 0 then -1 * b.nominal else 0 end as credit,a.post_from
		from trn_ledger_head a
		inner join trn_ledger_det b on b.no_ledger = a.no_ledger 
		inner join mst_account c on c.id_account = b.id_account
		where c.account_name like filter
		and a.post_from like var_post_from 
		order by a.no_ledger asc, a.date_trn asc;
	end if;
elseif var_date_filter =1 THEN
IF VAR_FIELD = 'Journal No' THEN
		select distinct a.no_ledger, 
				 a.date_trn, 
				 b.id_account, 
				 c.account_name,
				 b.notes,
				 case when b.nominal > 0 then b.nominal else 0 end as debit,
				 case when b.nominal <= 0 then -1 * b.nominal else 0 end as credit,a.post_from
		from trn_ledger_head a
		inner join trn_ledger_det b on b.no_ledger = a.no_ledger 
		inner join mst_account c on c.id_account = b.id_account
		where a.no_ledger like filter
		and a.post_from like var_post_from
		and (a.date_trn between startdate and enddate)
		order by a.no_ledger asc, a.date_trn asc;
	elseif var_field = 'Account No' THEN
		select distinct a.no_ledger, 
				 a.date_trn, 
				 b.id_account, 
				 c.account_name,
				 b.notes,
				 case when b.nominal > 0 then b.nominal else 0 end as debit,
				 case when b.nominal <= 0 then -1 * b.nominal else 0 end as credit, a.post_from
		from trn_ledger_head a
		inner join trn_ledger_det b on b.no_ledger = a.no_ledger 
		inner join mst_account c on c.id_account = b.id_account
		where b.id_account like filter
		and a.post_from like var_post_from
		and (a.date_trn between startdate and enddate)
		order by a.no_ledger asc, a.date_trn asc;
elseif var_field = 'Account Name' THEN
		select distinct a.no_ledger, 
				 a.date_trn, 
				 b.id_account, 
				 c.account_name,
				 b.notes,
				 case when b.nominal > 0 then b.nominal else 0 end as debit,
				 case when b.nominal <= 0 then -1 * b.nominal else 0 end as credit, a.post_from
		from trn_ledger_head a
		inner join trn_ledger_det b on b.no_ledger = a.no_ledger 
		inner join mst_account c on c.id_account = b.id_account
		where c.account_name like filter
		and a.post_from like var_post_from
		and (a.date_trn between startdate and enddate)
		order by a.no_ledger asc, a.date_trn asc;
	end if;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_journal_kasirsentral_simrs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_journal_kasirsentral_simrs`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date, in pageIndex integer, in limitPage integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 case when b.amount>0 then b.amount else 0 end as debet,
				 case when b.amount<0 then -1*b.amount else 0 end as credit,
				 b.notes,
				 b.id_account,
				 c.account_name,
				 a.kurs,
				 a.id_currency
	from trn_journallayananmedik_head a
	inner join trn_journallayananmedik_det b on b.journal_no = a.journal_no 
	inner join mst_account c on c.id_account = b.id_account
	where a.journal_no = var_criteria;
else

if var_date_filter = 0 then
	IF VAR_FIELD = 'Journal No' THEN
		select case when b.amount < 0 then concat('      ',c.account_name) else c.account_name end as account_name, 
				 a.date_trn, 
				 b.notes, 
				 case when b.amount >0 then abs(b.amount) else 0 end as debet,
				 case when b.amount <0 then abs(b.amount) else 0 end as kredit,
				a.journal_no
		from trn_journallayananmedik_head a
		inner join trn_journallayananmedik_det b on b.journal_no = a.journal_no
		inner join mst_account c on c.id_account = b.id_account
		where a.journal_no like filter
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	elseif var_field = 'Notes' THEN
		select case when b.amount < 0 then concat('      ',c.account_name) else c.account_name end as account_name, 
				 a.date_trn, 
				 b.notes, 
				 case when b.amount >0 then abs(b.amount) else 0 end as debet,
				 case when b.amount <0 then abs(b.amount) else 0 end as kredit,
				a.journal_no
		from trn_journallayananmedik_head a
		inner join trn_journallayananmedik_det b on b.journal_no = a.journal_no
		inner join mst_account c on c.id_account = b.id_account
		where b.notes like filter
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	end if;
elseif var_date_filter = 1 THEN
	IF VAR_FIELD = 'Journal No' THEN
		select case when b.amount < 0 then concat('      ',c.account_name) else c.account_name end as account_name, 
				 a.date_trn, 
				 b.notes, 
				 case when b.amount >0 then abs(b.amount) else 0 end as debet,
				 case when b.amount <0 then abs(b.amount) else 0 end as kredit,
				a.journal_no
		from trn_journallayananmedik_head a
		inner join trn_journallayananmedik_det b on b.journal_no = a.journal_no
		inner join mst_account c on c.id_account = b.id_account
		where a.journal_no like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	elseif var_field = 'Notes' THEN
	select case when b.amount < 0 then concat('      ',c.account_name) else c.account_name end as account_name, 
				 a.date_trn, 
				 b.notes, 
				 case when b.amount >0 then abs(b.amount) else 0 end as debet,
				 case when b.amount <0 then abs(b.amount) else 0 end as kredit,
				a.journal_no
		from trn_journallayananmedik_head a
		inner join trn_journallayananmedik_det b on b.journal_no = a.journal_no
		inner join mst_account c on c.id_account = b.id_account
		where b.notes like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	end if;
end if;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_journal_pembelian_simrs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_journal_pembelian_simrs`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 case when b.amount>0 then b.amount else 0 end as debet,
				 case when b.amount<0 then -1*b.amount else 0 end as credit,
				 b.notes,
				 b.id_account,
				 c.account_name,
				 a.kurs,
				 a.id_currency
	from trn_journalpembelian_head a
	inner join trn_journalpembelian_det b on b.journal_no = a.journal_no 
	inner join mst_account c on c.id_account = b.id_account
	where a.journal_no = var_criteria;
else

if var_date_filter = 0 then
	IF VAR_FIELD = 'Journal No' THEN
		select a.journal_no, 
				 a.date_trn, 
				 b.notes, 
				 case when b.amount >0 then abs(b.amount) else 0 end as debet,
				 case when b.amount <0 then abs(b.amount) else 0 end as kredit
		from trn_journalpembelian_head a
		inner join trn_journalpembelian_det b on b.journal_no = a.journal_no
		where a.journal_no like filter
		order by a.date_trn desc, a.journal_no desc;
	elseif var_field = 'Notes' THEN
		select a.journal_no, 
				 a.date_trn, 
				 b.notes, 
				 case when b.amount >0 then abs(b.amount) else 0 end as debet,
				 case when b.amount <0 then abs(b.amount) else 0 end as kredit
		from trn_journalpembelian_head a
		inner join trn_journalpembelian_det b on b.journal_no = a.journal_no
		where a.description like filter
		order by a.date_trn desc, a.journal_no desc;
	end if;
elseif var_date_filter = 1 THEN
	IF VAR_FIELD = 'Journal No' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_journalpembelian_head a
		where a.journal_no like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc;
	elseif var_field = 'Notes' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_journalpembelian_head a
		where a.description like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc;
	end if;
end if;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_journal_uploadpemrov_simrs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `select_journal_uploadpemrov_simrs`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date,  in pageIndex integer, in limitPage integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 case when b.amount>0 then b.amount else 0 end as debet,
				 case when b.amount<0 then -1*b.amount else 0 end as credit,
				 b.notes,
				 b.id_account,
				 c.account_name,
				 a.kurs,
				 a.id_currency
	from trn_journaluploadpemrov_head a
	inner join trn_journaluploadpemrov_det b on b.journal_no = a.journal_no 
	inner join mst_account c on c.id_account = b.id_account
	where a.journal_no = var_criteria;
else

if var_date_filter = 0 then
	IF VAR_FIELD = 'Journal No' THEN
		select case when b.amount < 0 then concat('      ',c.account_name) else c.account_name end as account_name, 
				 a.date_trn, 
				 b.notes, 
				 case when b.amount >0 then abs(b.amount) else 0 end as debet,
				 case when b.amount <0 then abs(b.amount) else 0 end as kredit,
				 a.journal_no
		from trn_journaluploadpemrov_head a
		inner join trn_journaluploadpemrov_det b on b.journal_no = a.journal_no
		inner join mst_account c on c.id_account = b.id_account
		where a.journal_no like filter
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	elseif var_field = 'Notes' THEN
		select case when b.amount < 0 then concat('      ',c.account_name) else c.account_name end as account_name, 
				 a.date_trn, 
				 b.notes, 
				 case when b.amount >0 then abs(b.amount) else 0 end as debet,
				 case when b.amount <0 then abs(b.amount) else 0 end as kredit,
				a.journal_no
		from trn_journaluploadpemrov_head a
		inner join trn_journaluploadpemrov_det b on b.journal_no = a.journal_no
		inner join mst_account c on c.id_account = b.id_account
		where a.description like filter
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	end if;
elseif var_date_filter = 1 THEN
	IF VAR_FIELD = 'Journal No' THEN
	select case when b.amount < 0 then concat('      ',c.account_name) else c.account_name end as account_name, 
				 a.date_trn, 
				 b.notes, 
				 case when b.amount >0 then abs(b.amount) else 0 end as debet,
				 case when b.amount <0 then abs(b.amount) else 0 end as kredit,
				a.journal_no
		from trn_journaluploadpemrov_head a
		inner join trn_journaluploadpemrov_det b on b.journal_no = a.journal_no
		inner join mst_account c on c.id_account = b.id_account
		where a.journal_no like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	elseif var_field = 'Notes' THEN
	select case when b.amount < 0 then concat('      ',c.account_name) else c.account_name end as account_name, 
				 a.date_trn, 
				 b.notes, 
				 case when b.amount >0 then abs(b.amount) else 0 end as debet,
				 case when b.amount <0 then abs(b.amount) else 0 end as kredit,
				 a.journal_no
		from trn_journaluploadpemrov_head a
		inner join trn_journaluploadpemrov_det b on b.journal_no = a.journal_no
		inner join mst_account c on c.id_account = b.id_account
		where a.description like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc limit pageIndex, limitPage;
	end if;
end if;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_journal_withoutlimit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_journal_withoutlimit`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date,in pageIndex integer, in limitPage integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 case when b.amount>0 then b.amount else 0 end as debet,
				 case when b.amount<0 then -1*b.amount else 0 end as credit,
				 b.notes,
				 b.id_account,
				 c.account_name,
				 a.kurs,
				 a.id_currency
	from trn_journal_head a
	inner join trn_journal_det b on b.journal_no = a.journal_no 
	inner join mst_account c on c.id_account = b.id_account
	where a.journal_no = var_criteria;
else

if var_date_filter = 0 then
	IF VAR_FIELD = 'Journal No' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_journal_head a
		where a.journal_no like filter
		order by a.date_trn desc, a.journal_no desc;
	elseif var_field = 'Notes' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_journal_head a
		where a.description like filter
		order by a.date_trn desc, a.journal_no desc;
	end if;
elseif var_date_filter = 1 THEN
	IF VAR_FIELD = 'Journal No' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_journal_head a
		where a.journal_no like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc;
	elseif var_field = 'Notes' THEN
		select a.journal_no, 
				 a.date_trn, 
				 a.description, 
				 a.total as amount
		from trn_journal_head a
		where a.description like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.journal_no desc;
	end if;
end if;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_ledger` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_ledger`(in var_criteria text)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

IF VAR_FIELD = 'Journal No' THEN

	select a.no_ledger, c.date_trn,a.id_account,b.account_name,a.notes,
	case when a.nominal >= 0 then a.nominal else 0 end as debet,
	case when a.nominal < 0 then a.nominal else 0 end as credit
  from trn_ledger_det a
	inner join mst_account b on b.id_account = a.id_account
	inner join trn_ledger_head c on c.no_ledger=a.no_ledger
	WHERE a.no_ledger like filter;
	

elseif var_field = 'Date' THEN

	select a.no_ledger, c.date_trn,a.id_account,b.account_name,a.notes,
	case when a.nominal >= 0 then a.nominal else 0 end as debet,
	case when a.nominal < 0 then a.nominal else 0 end as credit
  from trn_ledger_det a
	inner join mst_account b on b.id_account = a.id_account
	inner join trn_ledger_head c on c.no_ledger=a.no_ledger
	WHERE c.date_trn = var_criteria;

end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_marketing` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_marketing`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer,in var_tgl_awal date,in var_tgl_akhir date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select * from mst_employee where id_employee = var_criteria;
else
if var_date_filter = 0 then 
if var_field = 'Employee ID' then
SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_employee,
	concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	) AS phone,
	a.address,
	a.city, 
	case when b.department_name is null then b.department_name else '' end as department_name,
	case when c.position_name is null then c.position_name else '' end as position_name
FROM
	mst_employee a left join mst_department b on b.department_id = a.department_id
	left join mst_position c on c.position_id = a.position_id
where id_employee like filter;

ELSEIF var_field = 'First Name' THEN

SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_employee,
	concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	) AS phone,
	a.address, 
	a.city, 
	case when b.department_name is null then b.department_name else '' end as department_name,
	case when c.position_name is null then c.position_name else '' end as position_name
FROM
	mst_employee a left join mst_department b on b.department_id = a.department_id
	left join mst_position c on c.position_id = a.position_id
where first_name like filter;

elseif var_field = 'Last Name' THEN

SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_employee,
	concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	) AS phone,
	a.address, 
	a.city, 
	case when b.department_name is null then b.department_name else '' end as department_name,
	case when c.position_name is null then c.position_name else '' end as position_name
FROM
	mst_employee a left join mst_department b on b.department_id = a.department_id
	left join mst_position c on c.position_id = a.position_id
where last_name like filter;

elseif var_field = 'City' THEN
SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_employee,
	concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	) AS phone,
	a.address, 
	a.city, 
	case when b.department_name is null then b.department_name else '' end as department_name,
	case when c.position_name is null then c.position_name else '' end as position_name
FROM
	mst_employee a left join mst_department b on b.department_id = a.department_id
	left join mst_position c on c.position_id = a.position_id
where city like filter;


end if;
elseif var_date_filter = 1 THEN
if var_field = 'Employee ID' then
SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_employee,
	concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	) AS phone,
	a.address, 
	a.city, 
	case when b.department_name is null then b.department_name else '' end as department_name,
	case when c.position_name is null then c.position_name else '' end as position_name
FROM
	mst_employee a left join mst_department b on b.department_id = a.department_id
	left join mst_position c on c.position_id = a.position_id
where id_employee like filter
and (created_date between var_tgl_awal and var_tgl_akhir);

ELSEIF var_field = 'First Name' THEN

SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_employee,
	concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	) AS phone,
	a.address, 
	a.city, 
	case when b.department_name is null then b.department_name else '' end as department_name,
	case when c.position_name is null then c.position_name else '' end as position_name
FROM
	mst_employee a left join mst_department b on b.department_id = a.department_id
	left join mst_position c on c.position_id = a.position_id
where first_name like filter
and (created_date between var_tgl_awal and var_tgl_akhir);

elseif var_field = 'Last Name' THEN

SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_employee,
	concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	) AS phone,
	a.address, 
a.city, 
	case when b.department_name is null then b.department_name else '' end as department_name,
	case when c.position_name is null then c.position_name else '' end as position_name
FROM
	mst_employee a left join mst_department b on b.department_id = a.department_id
	left join mst_position c on c.position_id = a.position_id
where last_name like filter
and (created_date between var_tgl_awal and var_tgl_akhir);

elseif var_field = 'City' THEN
SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_employee,
	concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	) AS phone,
	a.address, 
a.city, 
	case when b.department_name is null then b.department_name else '' end as department_name,
	case when c.position_name is null then c.position_name else '' end as position_name
FROM
	mst_employee a left join mst_department b on b.department_id = a.department_id
	left join mst_position c on c.position_id = a.position_id
where city like filter
and (created_date between var_tgl_awal and var_tgl_akhir);


end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_material_usage` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_material_usage`(in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN

		select a.usage_no,
					 a.item_id,
					 b.item_name,
					 a.qty,
					 a.id_unit,
					 a.cost,
					 a.total_cost
		from trn_material_usage_det a 
		inner join mst_item b on b.id_item = a.item_id
		where a.usage_no = var_criteria;

elseif detail = 2 THEN

		select a.usage_no,
					 a.wo_no,
					 a.id_item_production,
					 a.date_trn,
					 c.department_name,
					 a.notes,
					 b.item_id,
					 d.item_name,
					 b.qty,
					 b.id_unit,
					 b.cost,
					 b.total_cost,
					 e.material_type_name,
					 a.total_cost as head_total,
					 a.id_warehouse
		from trn_usage_material_head a 
		inner join mst_department_produksi c on c.department_id = a.department_id
		inner join trn_usage_material_det b on b.usage_no = a.usage_no
		inner join mst_item d on d.id_item = b.item_id
		inner join i_material_type_usage e on e.material_type_id = b.material_type_id
		WHERE a.usage_no = var_criteria;

elseif detail = 0 then
	if var_date_filter = 0 then
		select a.usage_no,
					 a.wo_no,
					 a.date_trn,
					 c.department_name,
					 a.notes
		from trn_usage_material_head a 
		inner join mst_department_produksi c on c.department_id = a.department_id;
	elseif var_date_filter = 1 THEN
		select a.usage_no,
					 a.wo_no,
					 a.date_trn,
					 c.department_name,
					 a.notes
		from trn_wo_head a 
		inner join mst_department_produksi c on c.department_id = a.department_id where a.date_trn between startdate and enddate;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_not_marketing` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_not_marketing`()
BEGIN
	SELECT
	id_employee,
	concat(case when first_name is null then '' else first_name end, ' ', case when last_name is null then '' else last_name end) AS nama,
	case when b.position_name is null then '' else b.position_name end as position_name,
	case when c.department_name is null then '' else c.department_name end as department_name
FROM
	mst_employee a left join mst_position b on b.position_id = a.position_id
	left join mst_department c on c.department_id = a.department_id
WHERE
	id_employee NOT IN (
		SELECT
			id_employee
		FROM
			mst_marketing
	);

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_pelunasan_po` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_pelunasan_po`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN
	declare filter text;
	select concat('%',var_criteria,'%') into filter;
	IF detail = 1 THEN
		SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,			
				h.no_purchase_order,
				case when h.no_purchase_order is null then 0 else 1 end as flag_po,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier, p.ref_status_name as nm_payment,
				s.id_supplier, d.number_asc, d.id_curr, d.id_item,h.subtotal+h.freight - ((h.subtotal +h.freight) * h.disc/100) as netto,d.id_unit,h.disc, d.qty, d.id_unit, d.price, d.nominal, d.notes as notes_detail,
				d.item_name, h.id_account, acc.account_name, f.qty_received, f.qty as qtypo,case when h.kurs is null then 1 else h.kurs end as kurs,
				case when h.um is null then 0 else h.um end as um,
				case when d.weight is null then 0 else d.weight end as weight,
				case when d.priceperweight is null then 0 else d.priceperweight end as priceperweight
			FROM
				trn_payoff_po_head h
			INNER JOIN trn_payoff_po_det d ON h.no_purchase = d.no_purchase
			INNER JOIN trn_purchase_order_det f ON f.no_purchase_order = h.no_purchase_order and f.id_item = d.id_item
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			inner join mst_account acc on acc.id_account = h.id_account
			where h.no_purchase = var_criteria;
	ELSE
	if var_date_filter = 0 then
		IF VAR_FIELD = 'Invoice No' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier, case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_payoff_po_head h
			INNER JOIN trn_payoff_po_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase like filter
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
		IF VAR_FIELD = 'Supplier' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_payoff_po_head h
			INNER JOIN trn_payoff_po_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE (s.first_name like filter or s.last_name like filter)
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
	elseif var_date_filter = 1 THEN
		IF VAR_FIELD = 'Invoice No' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_payoff_po_head h
			INNER JOIN trn_payoff_po_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase like filter 
			and (h.date_trn between startdate and enddate)
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
		IF VAR_FIELD = 'Supplier' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_payoff_po_head h
			INNER JOIN trn_payoff_po_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE (case when s.first_name is null then '' else s.first_name end like filter or case when s.last_name is null then '' else s.last_name end like filter)
			and (h.date_trn between startdate and enddate)
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
	end if;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_pelunasan_so` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_pelunasan_so`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN
	declare filter text;
	select concat('%',var_criteria,'%') into filter;
	IF detail = 1 THEN
		SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,			
				h.no_purchase_order,
				case when h.no_purchase_order is null then 0 else 1 end as flag_po,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier, p.ref_status_name as nm_payment,
				s.id_customer as id_supplier, d.number_asc, d.id_curr, d.id_item,h.subtotal+h.freight - ((h.subtotal +h.freight) * h.disc/100) as netto,d.id_unit,h.disc, d.qty, d.id_unit, d.price, d.nominal, d.notes as notes_detail,
				d.item_name, h.id_account, acc.account_name, f.sent_qty as qty_received, f.qty as qtypo,case when h.kurs is null then 1 else h.kurs end as kurs,
				case when h.um is null then 0 else h.um end as um,
				case when d.weight is null then 0 else d.weight end as weight,
				case when d.priceperweight is null then 0 else d.priceperweight end as priceperweight
			FROM
				trn_payoff_so_head h
			INNER JOIN trn_payoff_so_det d ON h.no_purchase = d.no_purchase
			INNER JOIN trn_sales_order_det f ON f.no_sales_order = h.no_purchase_order and f.id_item = d.id_item
			INNER JOIN mst_customer s ON h.id_supplier =s.id_customer
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			inner join mst_account acc on acc.id_account = h.id_account
			where h.no_purchase = var_criteria;
	ELSE
	if var_date_filter = 0 then
		IF VAR_FIELD = 'Invoice No' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_customer as id_supplier, case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_payoff_so_head h
			INNER JOIN trn_payoff_so_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_customer s ON h.id_supplier =s.id_customer
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase like filter
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
		IF VAR_FIELD = 'Supplier' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_customer as id_supplier,case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_payoff_so_head h
			INNER JOIN trn_payoff_so_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_customer s ON h.id_supplier =s.id_customer
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE (s.first_name like filter or s.last_name like filter)
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
	elseif var_date_filter = 1 THEN
		IF VAR_FIELD = 'Invoice No' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_customer as id_supplier,case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_payoff_so_head h
			INNER JOIN trn_payoff_so_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_customer s ON h.id_supplier =s.id_customer
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase like filter 
			and (h.date_trn between startdate and enddate)
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
		IF VAR_FIELD = 'Supplier' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_customer as id_supplier,case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_payoff_so_head h
			INNER JOIN trn_payoff_so_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_customer s ON h.id_supplier =s.id_customer
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE (case when s.first_name is null then '' else s.first_name end like filter or case when s.last_name is null then '' else s.last_name end like filter)
			and (h.date_trn between startdate and enddate)
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
	end if;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_pinjam` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_pinjam`(in var_criteria text, in detail integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select b.*,a.address,c.id_item as id_item_det,c.no_asc,c.weight,c.item_name as item_name_det,b.bunga, 
	concat(case when a.first_name is null then '' else a.first_name end,' ',case when a.last_name is null then '' else a.last_name end) as nama, case when b.jangka_waktu is null then 0 else b.jangka_waktu end as jangka_waktu from trn_pinjam b
	inner join mst_customer a on a.id_customer=b.id_customer
	inner join trn_pinjam_det c on c.no_pinjam = c.no_pinjam
	left join mst_item d on d.id_item 	= c.id_item
	where b.no_pinjam = var_criteria;
elseif detail = 0 then
	select a.no_pinjam,a.date_trn,a.nominal,d.address,concat(case when d.first_name is null then '' else d.first_name end,' ',case when d.last_name is null then '' else d.last_name end) as nama_customer from trn_pinjam a left join view_group_bayarkop b on b.no_pinjam=a.no_pinjam 
	inner join mst_customer d on d.id_customer = a.id_customer
	where a.no_pinjam like filter
	and (case when a.nominal is null then 0 else a.nominal end) > (case when b.nominal_bayar is null then 0 else b.nominal_bayar end) 
	order by a.created_date desc, a.no_pinjam desc;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_pinjam_bayar` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_pinjam_bayar`(in var_criteria text, in detail integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select (nominal_bunga/saldo_pinjaman) * 100 as bunga,b.* from trn_pinjam_bayar b
	inner join trn_pinjam a on a.no_pinjam=b.no_pinjam
	where b.no_pinjam = var_criteria;
elseif detail = 0 then
	select * from trn_pinjam
	where no_pinjam like filter;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_po` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_po`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.id_supplier,concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama,
b.address,a.no_purchase_order, a.date_trn, 
c.id_curr,a.notes,a.subtotal,a.freight,a.tax,a.total as total_head,
c.number_asc,c.id_item,c.id_unit,f.item_name, c.notes as description, 
c.qty, c.price, (c.qty * c.price) as total, c.no_request_order, case when a.um is null then 0 else a.um end as um, a.account_um,
case when c.weight is null then 0 else c.weight end as weight, case when c.priceperweight is null then 0 else c.priceperweight end as priceperweight 
 from trn_purchase_order_head a
inner join mst_supplier b on b.id_supplier = a.id_supplier
inner join trn_purchase_order_det c on c.no_purchase_order=a.no_purchase_order
inner join mst_item f on f.id_item = c.id_item
where a.no_purchase_order = var_criteria;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'PO No' THEN
		select a.no_purchase_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, a.freight, (a.tax/100) * (a.subtotal+a.freight) as tax,
		a.total,a.notes,a.id_supplier,case when a.um is null then 0 else a.um end as um
		from trn_purchase_order_head a
		inner join mst_supplier b on b.id_supplier = a.id_supplier
		where a.no_purchase_order like filter
		order by a.date_trn desc, a.no_purchase_order desc;
	elseif VAR_FIELD = 'Supplier' THEN
		select a.no_purchase_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, a.freight, (a.tax/100) * (a.subtotal+a.freight) as tax,
		a.total,a.notes,a.id_supplier,case when a.um is null then 0 else a.um end as um
		from trn_purchase_order_head a
		inner join mst_supplier b on b.id_supplier = a.id_supplier
		where concat(b.first_name,' ',b.last_name) like filter
		order by a.date_trn desc, a.no_purchase_order desc;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'PO No' THEN
		select a.no_purchase_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, a.freight, (a.tax/100) * (a.subtotal+a.freight) as tax,
		a.total,a.notes,a.id_supplier,case when a.um is null then 0 else a.um end as um
		from trn_purchase_order_head a
		inner join mst_supplier b on b.id_supplier = a.id_supplier
		where a.no_purchase_order like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.no_purchase_order desc;
	elseif VAR_FIELD = 'Supplier' THEN
		select a.no_purchase_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, a.freight, (a.tax/100) * (a.subtotal+a.freight) as tax,
		a.total,a.notes,a.id_supplier,case when a.um is null then 0 else a.um end as um
		from trn_purchase_order_head a
		inner join mst_supplier b on b.id_supplier = a.id_supplier
		where concat(b.first_name,' ',b.last_name) like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.no_purchase_order desc;
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_po2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_po2`(in var_field varchar(255), in var_criteria text, in detail integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.id_supplier,concat(b.first_name,' ',b.last_name) as nama,
b.address,a.no_purchase_order, a.date_trn, 
c.id_curr,a.notes,a.subtotal,a.freight,a.tax,a.total as total_head,
c.number_asc,c.id_item,c.id_unit,f.item_name, c.notes as description, 
c.qty, c.price, (c.qty * c.price) as total 
 from trn_purchase_order_head a
inner join mst_supplier b on b.id_supplier = a.id_supplier
inner join trn_purchase_order_det c on c.no_purchase_order=a.no_purchase_order
inner join mst_item f on f.id_item = c.id_item
where a.no_purchase_order = var_criteria
order by c.number_asc asc;
else

IF VAR_FIELD = 'PO No' THEN

select a.no_purchase_order, concat(b.first_name,' ',b.last_name) as nama, a.date_trn, a.subtotal, a.freight, (a.tax/100) * (a.subtotal+a.freight) as tax,
a.total,a.notes,a.id_supplier,case when a.kurs is null then 1 else a.kurs end kurs
from trn_purchase_order_head a
inner join mst_supplier b on b.id_supplier = a.id_supplier
where a.no_purchase_order like filter
and a.no_purchase_order not in (select no_purchase_order from trn_purchase_head);
	
elseif var_field = 'Supplier' THEN
select a.no_purchase_order, concat(b.first_name,' ',b.last_name) as nama, a.date_trn, a.subtotal, a.freight, (a.tax/100) * (a.subtotal+a.freight) as tax,
a.total,a.notes,a.id_supplier,case when a.kurs is null then 1 else a.kurs end kurs
from trn_purchase_order_head a
inner join mst_supplier b on b.id_supplier = a.id_supplier
where concat(b.first_name,' ',b.last_name) like filter
and a.no_purchase_order not in (select no_purchase_order from trn_purchase_head);

end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_po_pelunasan` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_po_pelunasan`(in var_field varchar(255), in var_criteria text, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if var_date_filter = 0 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, c.notes as notes, c.qty,c.qty as qty_received, c.id_unit, 
		c.price, c.qty * c.price as nominal,case when a.tax is null then 0 else a.tax end as tax,
		case when a.freight is null then 0 else a.freight end as freight,case when a.kurs is null then 1 else a.kurs end as kurs,
		c.id_curr,case when a.um is null then 0 else a.um end as um,
		case when c.weight is null then 0 else c.weight end as weight,
				case when c.priceperweight is null then 0 else c.priceperweight end as priceperweight
		from trn_purchase_order_head a
		inner join trn_purchase_order_det c on c.no_purchase_order = a.no_purchase_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_purchase_order = var_criteria and case when a.flag_status_invoice is null then 0 else a.flag_status_invoice end <> 1;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, c.notes as notes, c.qty,c.qty as qty_received, c.id_unit, 
		c.price, c.qty * c.price as nominal,case when a.tax is null then 0 else a.tax end as tax,
		case when a.freight is null then 0 else a.freight end as freight, case when a.kurs is null then 1 else a.kurs end as kurs,
		c.id_curr, case when a.um is null then 0 else a.um end as um,
		case when c.weight is null then 0 else c.weight end as weight,
				case when c.priceperweight is null then 0 else c.priceperweight end as priceperweight
		from trn_purchase_order_head a
		inner join trn_purchase_order_det c on c.no_purchase_order = a.no_purchase_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_purchase_order = var_criteria
		and (a.date_trn between startdate and enddate) and case when a.flag_status_invoice is null then 0 else a.flag_status_invoice end <> 1;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_po_pelunasan_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_po_pelunasan_all`(in var_field varchar(255), in var_criteria text, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if var_date_filter = 0 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, c.notes as notes, c.qty,c.qty as qty_received, c.id_unit, 
		c.price, c.qty * c.price as nominal,case when a.tax is null then 0 else a.tax end as tax,
		case when a.freight is null then 0 else a.freight end as freight,case when a.kurs is null then 1 else a.kurs end as kurs,
		c.id_curr,case when a.um is null then 0 else a.um end as um,
		case when c.weight is null then 0 else c.weight end as weight,
				case when c.priceperweight is null then 0 else c.priceperweight end as priceperweight
		from trn_purchase_order_head a
		inner join trn_purchase_order_det c on c.no_purchase_order = a.no_purchase_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_purchase_order = var_criteria;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, c.notes as notes, c.qty,c.qty as qty_received, c.id_unit, 
		c.price, c.qty * c.price as nominal,case when a.tax is null then 0 else a.tax end as tax,
		case when a.freight is null then 0 else a.freight end as freight, case when a.kurs is null then 1 else a.kurs end as kurs,
		c.id_curr, case when a.um is null then 0 else a.um end as um,
		case when c.weight is null then 0 else c.weight end as weight,
				case when c.priceperweight is null then 0 else c.priceperweight end as priceperweight
		from trn_purchase_order_head a
		inner join trn_purchase_order_det c on c.no_purchase_order = a.no_purchase_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_purchase_order = var_criteria
		and (a.date_trn between startdate and enddate);
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_po_purch` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_po_purch`(in var_field varchar(255), in var_criteria text, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if var_date_filter = 0 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, c.notes as notes, c.qty,c.qty_received, c.id_unit, 
		c.price, c.qty_received * c.price as nominal,case when a.tax is null then 0 else a.tax end as tax,
		case when a.freight is null then 0 else a.freight end as freight,case when a.kurs is null then 1 else a.kurs end as kurs,
		c.id_curr,case when a.um is null then 0 else a.um end as um
		from trn_purchase_order_head a
		inner join trn_purchase_order_det c on c.no_purchase_order = a.no_purchase_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_purchase_order = var_criteria and case when a.flag_status_invoice is null then 0 else a.flag_status_invoice end <> 1;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, c.notes as notes, c.qty,c.qty_received, c.id_unit, 
		c.price, c.qty_received * c.price as nominal,case when a.tax is null then 0 else a.tax end as tax,
		case when a.freight is null then 0 else a.freight end as freight, case when a.kurs is null then 1 else a.kurs end as kurs,
		c.id_curr, case when a.um is null then 0 else a.um end as um
		from trn_purchase_order_head a
		inner join trn_purchase_order_det c on c.no_purchase_order = a.no_purchase_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_purchase_order = var_criteria
		and (a.date_trn between startdate and enddate) and case when a.flag_status_invoice is null then 0 else a.flag_status_invoice end <> 1;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_po_purch_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_po_purch_all`(in var_field varchar(255), in var_criteria text, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if var_date_filter = 0 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, c.notes as notes, c.qty,c.qty_received, c.id_unit, 
		c.price, c.qty_received * c.price as nominal,case when a.tax is null then 0 else a.tax end as tax,
		case when a.freight is null then 0 else a.freight end as freight,case when a.kurs is null then 1 else a.kurs end as kurs,
		c.id_curr,case when a.um is null then 0 else a.um end as um
		from trn_purchase_order_head a
		inner join trn_purchase_order_det c on c.no_purchase_order = a.no_purchase_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_purchase_order = var_criteria;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, c.notes as notes, c.qty,c.qty_received, c.id_unit, 
		c.price, c.qty_received * c.price as nominal,case when a.tax is null then 0 else a.tax end as tax,
		case when a.freight is null then 0 else a.freight end as freight, case when a.kurs is null then 1 else a.kurs end as kurs,
		c.id_curr,case when a.um is null then 0 else a.um end as um
		from trn_purchase_order_head a
		inner join trn_purchase_order_det c on c.no_purchase_order = a.no_purchase_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_purchase_order = var_criteria
		and (a.date_trn between startdate and enddate);
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_po_rec` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_po_rec`(in var_field varchar(255), in var_criteria text, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if var_date_filter = 0 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, '', c.qty, c.id_unit, 
		0, 0,f.warehouse_name,e.id_warehouse
		from trn_purchase_order_head a
		inner join trn_purchase_order_det c on c.no_purchase_order = a.no_purchase_order
		inner join mst_item d on d.id_item = c.id_item
		left join trn_request_order_head e on e.no_request_order = c.no_request_order
		left join mst_warehouse f on f.id_warehouse = e.id_warehouse
		where a.no_purchase_order = var_criteria and c.qty - case when c.qty_received is null then 0 else c.qty_received end > 0;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, '', c.qty, c.id_unit, 
		0, 0, f.warehouse_name,e.id_warehouse
		from trn_purchase_order_head a
		inner join trn_purchase_order_det c on c.no_purchase_order = a.no_purchase_order
		inner join mst_item d on d.id_item = c.id_item
		left join trn_request_order_head e on e.no_request_order = c.no_request_order
		left join mst_warehouse f on f.id_warehouse = e.id_warehouse
		where a.no_purchase_order = var_criteria
		and (a.date_trn between startdate and enddate) and c.qty - case when c.qty_received is null then 0 else c.qty_received end > 0;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_purchase` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_purchase`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN
	declare filter text;
	select concat('%',var_criteria,'%') into filter;
	IF detail = 1 THEN
		SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,			
				h.no_purchase_order,
				case when h.no_purchase_order is null then 0 else 1 end as flag_po,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier, p.ref_status_name as nm_payment,
				s.id_supplier, d.number_asc, d.id_curr, d.id_item,h.subtotal+h.freight - ((h.subtotal +h.freight) * h.disc/100) as netto,d.id_unit,h.disc, d.qty, d.id_unit, d.price, d.nominal, d.notes as notes_detail,
				d.item_name, h.id_account, acc.account_name, f.qty_received, f.qty as qtypo,case when h.kurs is null then 1 else h.kurs end as kurs,
				case when h.um is null then 0 else h.um end as um
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN trn_purchase_order_det f ON f.no_purchase_order = h.no_purchase_order and f.id_item = d.id_item
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			inner join mst_account acc on acc.id_account = h.id_account
			where h.no_purchase = var_criteria;
	ELSE
	if var_date_filter = 0 then
		IF VAR_FIELD = 'Invoice No' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier, case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase like filter
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
		IF VAR_FIELD = 'Supplier' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE (s.first_name like filter or s.last_name like filter)
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
	elseif var_date_filter = 1 THEN
		IF VAR_FIELD = 'Invoice No' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase like filter 
			and (h.date_trn between startdate and enddate)
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
		IF VAR_FIELD = 'Supplier' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE (case when s.first_name is null then '' else s.first_name end like filter or case when s.last_name is null then '' else s.last_name end like filter)
			and (h.date_trn between startdate and enddate)
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
	end if;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_purchase_2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_purchase_2`(in var_field varchar(255), in var_criteria text, in detail integer)
BEGIN
	declare filter text;
	declare qty_retur double;
	select concat('%',var_criteria,'%') into filter;
	IF detail = 1 THEN
	
		
		SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(s.first_name,' ',s.last_name) as nm_supplier,			
				h.no_purchase_order,
				case when h.no_purchase_order is null then 0 else 1 end as flag_po,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier, p.ref_status_name as nm_payment,
				s.id_supplier, d.number_asc, d.id_curr, d.id_item,h.subtotal+h.freight - ((h.subtotal +h.freight) * h.disc/100) as netto,d.id_unit,h.disc ,i.item_name, d.qty, d.id_unit, d.price, d.nominal, d.notes as notes_detail
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			where h.no_purchase = var_criteria
			order by d.number_asc;
	ELSE
		IF VAR_FIELD = 'detail' THEN
		
			SELECT
				h.no_purchase, 
				CONCAT(s.first_name,' ',s.last_name) as nm_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				d.number_asc, d.id_item, i.item_name, d.notes as notes_detail, d.qty, d.id_unit,
				d.price, d.nominal, d.id_curr, h.payment_method, h.payment_term_days, 
				h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier, p.ref_status_name as nm_payment,
				s.id_supplier,h.disc
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase = var_criteria 
			order by d.number_asc;
		END IF;
		IF VAR_FIELD = 'Invoice No' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(s.first_name,' ',s.last_name) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,h.disc,d.id_curr
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase like filter;
		ELSEIF VAR_FIELD = 'Supplier' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(s.first_name,' ',s.last_name) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,h.disc,d.id_curr
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE CONCAT(s.first_name,' ',s.last_name) like filter;
		END IF;
		IF VAR_FIELD = 'A/P Payment' THEN
			select a.no_purchase, a.date_trn, a.purchase_amount, case when a.return_amount is null then 0 else a.return_amount end as return_amount,
case 
	when DATEDIFF((select now()),a.date_trn) <= b.disc_term_days 
	and case when a.balance is null then 0 else a.balance end  >= 0
	THEN round((b.disc_term_nominal * a.purchase_amount/100),0)
	else 0 end as disc, 
case 
	when DATEDIFF((select now()),a.date_trn) <= b.disc_term_days THEN a.purchase_amount - case when a.return_amount is null then 0 else a.return_amount end - case when a.disc_amount is null then 0 else a.disc_amount end - case when a.paid_amount is null then 0 else a.paid_amount end  
	else a.purchase_amount - case when a.return_amount is null then 0 else a.return_amount end - case when a.paid_amount is null then 0 else a.paid_amount end end as total, case when a.paid_amount is null then 0 else a.paid_amount end as paid_amount 
,case when b.kurs is null then 1 else b.kurs end as kurs, case when a.disc_amount is null then 0 else a.disc_amount end as diskon_bayar

from ap_status a
inner join trn_purchase_head b on b.no_purchase = a.no_purchase
where b.id_supplier = var_criteria AND  b.payment_method=2
and case 
	when DATEDIFF((select now()),a.date_trn) <= b.disc_term_days THEN a.purchase_amount - case when a.return_amount is null then 0 else a.return_amount end - case when a.disc_amount is null then 0 else a.disc_amount end - case when a.paid_amount is null then 0 else a.paid_amount end  
	else a.purchase_amount - case when a.return_amount is null then 0 else a.return_amount end - case when a.paid_amount is null then 0 else a.paid_amount end end <> 0;

			
		END IF;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_purchase_ap_simrs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `select_purchase_ap_simrs`(in var_field varchar(255), in var_criteria text, in detail integer)
BEGIN
	declare filter text;
	declare qty_retur double;
	select concat('%',var_criteria,'%') into filter;
	IF detail = 1 THEN
	
		
		SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(s.first_name,' ',s.last_name) as nm_supplier,			
				h.no_purchase_order,
				case when h.no_purchase_order is null then 0 else 1 end as flag_po,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier, p.ref_status_name as nm_payment,
				s.id_supplier, d.number_asc, d.id_curr, d.id_item,h.subtotal+h.freight - ((h.subtotal +h.freight) * h.disc/100) as netto,d.id_unit,h.disc ,i.item_name, d.qty, d.id_unit, d.price, d.nominal, d.notes as notes_detail
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			where h.no_purchase = var_criteria
			order by d.number_asc;
	ELSE
		IF VAR_FIELD = 'detail' THEN
		
			SELECT
				h.no_purchase, 
				CONCAT(s.first_name,' ',s.last_name) as nm_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				d.number_asc, d.id_item, i.item_name, d.notes as notes_detail, d.qty, d.id_unit,
				d.price, d.nominal, d.id_curr, h.payment_method, h.payment_term_days, 
				h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier, p.ref_status_name as nm_payment,
				s.id_supplier,h.disc
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase = var_criteria 
			order by d.number_asc;
		END IF;
		IF VAR_FIELD = 'Invoice No' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(s.first_name,' ',s.last_name) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,h.disc,d.id_curr
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase like filter;
		ELSEIF VAR_FIELD = 'Supplier' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(s.first_name,' ',s.last_name) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,h.disc,d.id_curr
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE CONCAT(s.first_name,' ',s.last_name) like filter;
		END IF;
		IF VAR_FIELD = 'A/P Payment' THEN
			select a.no_purchase, a.date_trn, a.purchase_amount, case when a.return_amount is null then 0 else a.return_amount end as return_amount, 
	a.disc_amount as disc, 
	a.purchase_amount - 
	case when a.return_amount is null then 0 else a.return_amount end - 
	case when a.paid_amount is null then 0 else a.paid_amount end as total, case when a.paid_amount is null then 0 else a.paid_amount end as paid_amount 
	,1 as kurs, 0 as diskon_bayar	
	from ap_status a
	where a.id_supplier = var_criteria
	and a.purchase_amount - case when a.return_amount is null then 0 else a.return_amount end - case when a.paid_amount is null then 0 else a.paid_amount end <> 0;
			
		END IF;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_purchase_direct` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `select_purchase_direct`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN
	declare filter text;
	select concat('%',var_criteria,'%') into filter;
	IF detail = 1 THEN
		SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,			
				h.no_purchase_order,
				case when h.no_purchase_order is null then 0 when h.no_purchase_order = '' then 0 else 1 end as flag_po,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier, p.ref_status_name as nm_payment,
				s.id_supplier, d.number_asc, d.id_curr, d.id_item,h.subtotal+h.freight - ((h.subtotal +h.freight) * h.disc/100) as netto,d.id_unit,h.disc, d.qty, d.id_unit, d.price, d.nominal, d.notes as notes_detail,
				d.item_name, h.id_account, acc.account_name, d.qty as qty_received, d.qty as qtypo,case when h.kurs is null then 1 else h.kurs end as kurs,
				case when d.weight is null then 0 else d.weight end as weight,
			  case when d.perweight is null then 0 else d.perweight end as perweight
			FROM
				trn_purchasedirect_head h
			INNER JOIN trn_purchasedirect_det d ON h.no_purchase = d.no_purchase
			LEFT JOIN trn_purchase_order_det f ON f.no_purchase_order = h.no_purchase_order and f.id_item = d.id_item
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			inner join mst_account acc on acc.id_account = h.id_account
			where h.no_purchase = var_criteria;
	ELSE
	if var_date_filter = 0 then
		IF VAR_FIELD = 'Invoice No' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier, case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_purchasedirect_head h
			INNER JOIN trn_purchasedirect_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase like filter
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
		IF VAR_FIELD = 'Supplier' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_purchasedirect_head h
			INNER JOIN trn_purchasedirect_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE (s.first_name like filter or s.last_name like filter)
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
	elseif var_date_filter = 1 THEN
		IF VAR_FIELD = 'Invoice No' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_purchasedirect_head h
			INNER JOIN trn_purchasedirect_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase like filter 
			and (h.date_trn between startdate and enddate)
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
		IF VAR_FIELD = 'Supplier' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,case when h.kurs is null then 1 else h.kurs end as kurs
			FROM
				trn_purchasedirect_head h
			INNER JOIN trn_purchasedirect_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE (s.first_name like filter or s.last_name like filter)
			and (h.date_trn between startdate and enddate)
			ORDER BY h.date_trn desc, h.no_purchase_order desc;
		END IF;
	end if;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_purchase_kredit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_purchase_kredit`(in var_field varchar(255), in var_criteria text, in detail integer)
BEGIN
	declare filter text;
	select concat('%',var_criteria,'%') into filter;
	IF detail = 1 THEN
		SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(s.first_name,' ',s.last_name) as nm_supplier,			
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier, p.ref_status_name as nm_payment,
				s.id_supplier,h.disc
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id;
	ELSE
		IF VAR_FIELD = 'detail' THEN
			SELECT
				h.no_purchase, 
				CONCAT(s.first_name,' ',s.last_name) as nm_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				d.number_asc, d.id_item, i.item_name, d.notes as notes_detail, d.qty, d.id_unit,
				d.price, d.nominal, d.id_curr, h.payment_method, h.payment_term_days, 
				h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier, p.ref_status_name as nm_payment,
				s.id_supplier,h.disc
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase = var_criteria ;
		END IF;
		IF VAR_FIELD = 'Purchase No' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(s.first_name,' ',s.last_name) as nm_supplier,CONCAT(s.address,' ',s.city) as addr_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier,
				p.ref_status_name as nm_payment, s.id_supplier,h.disc
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase = var_criteria ;
		END IF;
		IF VAR_FIELD = 'A/P Payment' THEN
			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(s.first_name,' ',s.last_name) as nm_supplier,
				h.no_purchase_order,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier, p.ref_status_name as nm_payment,
				s.id_supplier,h.disc
			FROM
				trn_purchase_head h
			INNER JOIN trn_purchase_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.id_supplier = var_criteria AND  h.payment_method=2;
		END IF;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_purchase_order` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_purchase_order`(in var_field varchar(255), in var_criteria text, in detail integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.id_customer,concat(b.first_name,' ',b.last_name) as nama,
b.address,a.no_sales_order, a.date_trn, 
c.id_curr,a.notes,a.subtotal,a.tax,a.total as total_head,
c.number_asc,c.id_item,c.id_unit,f.item_name, c.notes as description, 
c.qty, c.price, (c.qty * c.price) as total 
 from trn_sales_order_head a
inner join mst_customer b on b.id_customer = a.id_customer
inner join trn_sales_order_det c on c.no_sales_order=a.no_sales_order
inner join mst_item f on f.id_item = c.id_item
where a.no_sales_order = var_criteria;
else

IF VAR_FIELD = 'SO No' THEN

select a.no_sales_order, concat(b.first_name,' ',b.last_name) as nama, a.date_trn, a.subtotal, (a.tax/100) * a.subtotal as tax,
a.total,a.notes,a.id_customer,b.address
from trn_sales_order_head a
inner join mst_customer b on b.id_customer = a.id_customer
where a.no_sales_order like filter
order by a.date_trn desc, a.no_sales_order desc;	
elseif var_field = 'Date' THEN
select a.no_sales_order, concat(b.first_name,' ',b.last_name) as nama, a.date_trn, a.subtotal, (a.tax/100) * a.subtotal as tax,
a.total,a.notes,a.id_customer, b.address  
from trn_sales_order_head a
inner join mst_customer b on b.id_customer = a.id_customer
	where a.date_trn = var_criteria
order by a.date_trn desc, a.no_sales_order desc;

elseif var_field = 'Customer Name' THEN
select a.no_sales_order, concat(b.first_name,' ',b.last_name) as nama, a.date_trn, a.subtotal, (a.tax/100) * a.subtotal as tax,
a.total,a.notes,a.id_customer, b.address  
from trn_sales_order_head a
inner join mst_customer b on b.id_customer = a.id_customer
	where concat(b.first_name,' ',b.last_name) like filter
order by a.date_trn desc, a.no_sales_order desc;


end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_purchase_purchreturn` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_purchase_purchreturn`(in var_field varchar(255), in var_criteria text, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

		SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,			
				h.no_purchase_order,
				case when h.no_purchase_order is null then 0 else 1 end as flag_po,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier, p.ref_status_name as nm_payment,
				s.id_supplier, d.number_asc, d.id_curr, d.id_item,h.subtotal - ((h.subtotal) * h.disc/100) as netto,d.id_unit,h.disc, d.qty, d.id_unit, d.price, d.nominal, d.notes as notes_detail,
				d.item_name, h.id_account, acc.account_name, case when f.qty_received is null then 0 else f.qty_received end as qty_received, case when f.qty is null then 0 else f.qty end as qtypo,
				case when h.kurs is null then 1 else h.kurs end as kurs,
				case when d.weight is null then 0 else d.weight end as weight,
				case when d.priceperweight is null then 0 else d.priceperweight end as priceperweight
			FROM
				trn_payoff_po_head h
			INNER JOIN trn_payoff_po_det d ON h.no_purchase = d.no_purchase
			INNER JOIN trn_purchase_order_det f ON f.no_purchase_order = h.no_purchase_order and f.id_item = d.id_item
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			inner join mst_account acc on acc.id_account = h.id_account
			where h.no_purchase = var_criteria

			union all 

			SELECT
				DISTINCT(h.no_purchase), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_supplier,			
				h.no_purchase_order,
				case when h.no_purchase_order is null then 0 else 1 end as flag_po,
				h.date_trn, h.subtotal, h.freight, h.tax, h.total, h.notes,
				h.payment_method, h.payment_term_days, h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_supplier, p.ref_status_name as nm_payment,
				s.id_supplier, d.number_asc, d.id_curr, d.id_item,h.subtotal - ((h.subtotal) * h.disc/100) as netto,d.id_unit,h.disc, d.qty, d.id_unit, d.price, d.nominal, d.notes as notes_detail,
				d.item_name, h.id_account, acc.account_name, case when d.qty is null then 0 else d.qty end as qty_received, case when d.qty is null then 0 else d.qty end as qtypo,
				case when h.kurs is null then 1 else h.kurs end as kurs,
				case when d.weight is null then 0 else d.weight end as weight,
				case when d.perweight is null then 0 else d.perweight end as priceperweight
			FROM
				trn_purchasedirect_head h
			INNER JOIN trn_purchasedirect_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_supplier s ON h.id_supplier =s.id_supplier
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			inner join mst_account acc on acc.id_account = h.id_account
			where h.no_purchase = var_criteria;


	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_purchase_return` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_purchase_return`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN
	declare filter text;
	select concat('%',var_criteria,'%') into filter;
IF detail = 1 THEN
	SELECT 
		(prh.no_purchase_return), prh.date_trn, prh.id_supplier, 
		CONCAT(case when ms.first_name is null then '' else ms.first_name end,case when ms.last_name is null then '' else ms.last_name end) as supplier_name, 
		CONCAT(ms.address,' ',ms.city) AS supplier_addr,
		prh.payment_method, rpm.ref_status_name, prh.notes,
		prh.subtotal, prh.freight, prh.tax, prh.total,
		prd.number_asc, prd.id_item, msi.item_name, prd.notes as notes_detail,
		prd.qty, mu.unit, prd.price, prd.nominal, prd.no_purchase,
		prd.id_curr,prh.disc,prd.id_curr,prd.qty_purch,prd.id_unit,
		case when prh.kurs is null then 1 else prh.kurs end as kurs, prh.id_warehouse,
		case when prd.weight is null then 0 else prd.weight end as weight,
		case when prd.priceperweight is null then 0 else prd.priceperweight end as priceperweight
		FROM trn_purchase_return_head prh INNER JOIN trn_purchase_return_det prd ON
		prh.no_purchase_return= prd.no_purchase_return
		INNER JOIN mst_supplier ms ON prh.id_supplier =ms.id_supplier
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		INNER JOIN mst_item msi ON prd.id_item =msi.id_item
		INNER JOIN mst_unit mu ON prd.id_unit=mu.id_unit
		WHERE prh.no_purchase_return =  var_criteria ;
ELSE
if var_date_filter = 0 then
	IF VAR_FIELD = 'detail' THEN
		SELECT 
		(prh.no_purchase_return), prh.date_trn, prh.id_supplier, 
		CONCAT(case when ms.first_name is null then '' else ms.first_name end,case when ms.last_name is null then '' else ms.last_name end) as supplier_name, 
		CONCAT(ms.address,' ',ms.city) AS supplier_addr,
		prh.payment_method, rpm.ref_status_name, prh.notes,
		prh.subtotal, prh.freight, prh.tax, prh.total,
		prd.number_asc, prd.id_item, msi.item_name, prd.notes as notes_detail,
		prd.qty, mu.unit, prd.price, prd.nominal, prd.no_purchase,
		prd.id_curr,prh.disc,prd.qty_purch,prd.id_unit,
		case when prh.kurs is null then 1 else prh.kurs end as kurs,prh.id_warehouse,
		case when prd.weight is null then 0 else prd.weight end as weight,
		case when prd.priceperweight is null then 0 else prd.priceperweight end as priceperweight
		FROM trn_purchase_return_head prh INNER JOIN trn_purchase_return_det prd ON
		prh.no_purchase_return= prd.no_purchase_return 
		INNER JOIN mst_supplier ms ON prh.id_supplier =ms.id_supplier
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		INNER JOIN mst_item msi ON prd.id_item =msi.id_item
		INNER JOIN mst_unit mu ON prd.id_unit=mu.id_unit
		WHERE prh.no_purchase_return =  var_criteria;
	ELSEIF VAR_FIELD = 'Return No' THEN
		SELECT 
		prh.no_purchase_return, prh.date_trn, prh.id_supplier, 
		CONCAT(case when ms.first_name is null then '' else ms.first_name end,case when ms.last_name is null then '' else ms.last_name end) as supplier_name, 
		CONCAT(ms.address,' ',ms.city) AS supplier_addr,
		prh.payment_method, rpm.ref_status_name, prh.notes,
		prh.subtotal, prh.freight, prh.tax, prh.total,
		prd.number_asc, prd.id_item, msi.item_name, prd.notes,
		sum(prd.qty), mu.unit, sum(prd.price), sum(prd.nominal), prd.no_purchase,
    prh.disc, prh.id_warehouse
		FROM trn_purchase_return_head prh INNER JOIN trn_purchase_return_det prd ON
		prh.no_purchase_return= prd.no_purchase_return 
		INNER JOIN mst_supplier ms ON prh.id_supplier =ms.id_supplier
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		INNER JOIN mst_item msi ON prd.id_item =msi.id_item
		INNER JOIN mst_unit mu ON prd.id_unit=mu.id_unit
		WHERE prh.no_purchase_return like filter
		group by prh.no_purchase_return
		order by prh.date_trn desc, prh.no_purchase_return desc;
	ELSEIF VAR_FIELD = 'Supplier' THEN
		SELECT 
		prh.no_purchase_return, prh.date_trn, prh.id_supplier, 
		CONCAT(case when ms.first_name is null then '' else ms.first_name end,case when ms.last_name is null then '' else ms.last_name end) as supplier_name, 
		CONCAT(ms.address,' ',ms.city) AS supplier_addr,
		prh.payment_method, rpm.ref_status_name, prh.notes,
		prh.subtotal, prh.freight, prh.tax, prh.total,
		prd.number_asc, prd.id_item, msi.item_name, prd.notes,
		sum(prd.qty), mu.unit, sum(prd.price), sum(prd.nominal), prd.no_purchase,
    prh.disc, prh.id_warehouse
		FROM trn_purchase_return_head prh INNER JOIN trn_purchase_return_det prd ON
		prh.no_purchase_return= prd.no_purchase_return 
		INNER JOIN mst_supplier ms ON prh.id_supplier =ms.id_supplier
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		INNER JOIN mst_item msi ON prd.id_item =msi.id_item
		INNER JOIN mst_unit mu ON prd.id_unit=mu.id_unit
		WHERE CONCAT(ms.first_name,ms.last_name) like filter
		group by prh.no_purchase_return
		order by prh.date_trn desc, prh.no_purchase_return desc;
	END IF;
ELSEIF var_date_filter = 1 THEN
	IF VAR_FIELD = 'Return No' THEN
		SELECT 
		prh.no_purchase_return, prh.date_trn, prh.id_supplier, 
		CONCAT(case when ms.first_name is null then '' else ms.first_name end,case when ms.last_name is null then '' else ms.last_name end) as supplier_name, 
		CONCAT(ms.address,' ',ms.city) AS supplier_addr,
		prh.payment_method, rpm.ref_status_name, prh.notes,
		prh.subtotal, prh.freight, prh.tax, prh.total,
		prd.number_asc, prd.id_item, msi.item_name, prd.notes,
		sum(prd.qty), mu.unit, sum(prd.price), sum(prd.nominal), prd.no_purchase,
    prh.disc, prh.id_warehouse
		FROM trn_purchase_return_head prh INNER JOIN trn_purchase_return_det prd ON
		prh.no_purchase_return= prd.no_purchase_return 
		INNER JOIN mst_supplier ms ON prh.id_supplier =ms.id_supplier
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		INNER JOIN mst_item msi ON prd.id_item =msi.id_item
		INNER JOIN mst_unit mu ON prd.id_unit=mu.id_unit
		WHERE prh.no_purchase_return like filter
		and (prh.date_trn between startdate and enddate)
		group by prh.no_purchase_return
		order by prh.date_trn desc, prh.no_purchase_return desc;
	ELSEIF VAR_FIELD = 'Supplier' THEN
		SELECT 
		prh.no_purchase_return, prh.date_trn, prh.id_supplier, 
		CONCAT(case when ms.first_name is null then '' else ms.first_name end,case when ms.last_name is null then '' else ms.last_name end) as supplier_name, 
		CONCAT(ms.address,' ',ms.city) AS supplier_addr,
		prh.payment_method, rpm.ref_status_name, prh.notes,
		prh.subtotal, prh.freight, prh.tax, prh.total,
		prd.number_asc, prd.id_item, msi.item_name, prd.notes,
		sum(prd.qty), mu.unit, sum(prd.price), sum(prd.nominal), prd.no_purchase,
    prh.disc, prh.id_warehouse
		FROM trn_purchase_return_head prh INNER JOIN trn_purchase_return_det prd ON
		prh.no_purchase_return= prd.no_purchase_return 
		INNER JOIN mst_supplier ms ON prh.id_supplier =ms.id_supplier
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		INNER JOIN mst_item msi ON prd.id_item =msi.id_item
		INNER JOIN mst_unit mu ON prd.id_unit=mu.id_unit
		WHERE CONCAT(ms.first_name,ms.last_name) like filter
		and (prh.date_trn between startdate and enddate)
		group by prh.no_purchase_return
		order by prh.date_trn desc, prh.no_purchase_return desc;
	END IF;
end if;
END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_received_order` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_received_order`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
declare total_approve integer;
declare total_item integer;
declare notes_approve text;

select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN

select a.id_supplier,concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama,
b.address,a.no_received_order, a.date_trn,a.notes,
c.number_asc,c.id_item,c.id_unit,f.item_name, c.notes as description, 
c.qty,c.received_qty, a.no_purchase_order, d.qty as qty_po,c.id_warehouse, g.warehouse_name
 from trn_received_order_head a
inner join mst_supplier b on b.id_supplier = a.id_supplier
inner join trn_received_order_det c on c.no_received_order=a.no_received_order
inner join trn_purchase_order_det d on d.no_purchase_order = a.no_purchase_order and d.id_item=c.id_item
inner join mst_item f on f.id_item = c.id_item
inner join mst_warehouse g on g.id_warehouse = c.id_warehouse
where a.no_received_order = var_criteria;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'Received No' THEN
		select a.no_received_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn,a.notes,a.id_supplier, a.no_purchase_order
		from trn_received_order_head a
		inner join mst_supplier b on b.id_supplier = a.id_supplier
		where a.no_received_order like filter
		order by a.date_trn desc, a.no_received_order desc;
	elseif VAR_FIELD = 'Supplier' THEN
		select a.no_received_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn,a.notes,a.id_supplier, a.no_purchase_order
		from trn_received_order_head a
		inner join mst_supplier b on b.id_supplier = a.id_supplier
		where concat(b.first_name,' ',b.last_name) like filter
		order by a.date_trn desc, a.no_received_order desc;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'Received No' THEN
		select a.no_received_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn,a.notes,a.id_supplier, a.no_purchase_order
		from trn_received_order_head a
		inner join mst_supplier b on b.id_supplier = a.id_supplier
		where a.no_received_order like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.no_received_order desc;
	elseif VAR_FIELD = 'Supplier' THEN
		select a.no_received_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn,a.notes,a.id_supplier, a.no_purchase_order
		from trn_received_order_head a
		inner join mst_supplier b on b.id_supplier = a.id_supplier
		where concat(b.first_name,' ',b.last_name) like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.no_received_order desc;
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_reconcile` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_reconcile`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.no_reconcile, 
				 a.date_trn, 
				 b.amount_in,
				 b.amount_out,
				 case when a.notes is null then '' else a.notes end as notes_head,
				 b.notes,
				 b.id_account,
				 c.account_name,
				 a.id_account_bank,
				 a.balance_before,
				 a.reconcile,
				 a.balance_after,
				 a.id_currency,
				 a.kurs
	from trn_reconcile_head a
	inner join trn_reconcile_det b on b.no_reconcile = a.no_reconcile 
	inner join mst_account c on c.id_account = b.id_account
	where a.no_reconcile = var_criteria;
else

if var_date_filter = 0 then
IF VAR_FIELD = 'Reconcile No' THEN

	select a.no_reconcile, 
				 a.date_trn, 
				 case when a.notes is null then '' else a.notes end as notes_head,
				 a.reconcile
	from trn_reconcile_head a
	where a.no_reconcile like filter
	order by a.date_trn desc, a.no_reconcile desc;
	
elseif var_field = 'Notes' THEN

	select a.no_reconcile, 
				 a.date_trn, 
				 case when a.notes is null then '' else a.notes end as notes_head,
				 a.reconcile
	from trn_reconcile_head a
	where case when a.notes is null then '' else a.notes end like filter
	order by a.date_trn desc, a.no_reconcile desc;

end if;
elseif var_date_filter = 1 THEN
IF VAR_FIELD = 'Reconcile No' THEN

	select a.no_reconcile, 
				 a.date_trn, 
				 case when a.notes is null then '' else a.notes end as notes_head,
				 a.reconcile
	from trn_reconcile_head a
	where a.no_reconcile like filter
	and (a.date_trn between startdate and enddate)
	order by a.date_trn desc, a.no_reconcile desc;
	
elseif var_field = 'Notes' THEN

	select a.no_reconcile, 
				 a.date_trn, 
				 case when a.notes is null then '' else a.notes end as notes_head,
				 a.reconcile
	from trn_reconcile_head a
	where case when a.notes is null then '' else a.notes end like filter
	and (a.date_trn between startdate and enddate)
	order by a.date_trn desc, a.no_reconcile desc;

end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_ro` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_ro`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
declare total_approve integer;
declare total_item integer;
declare notes_approve text;

select concat('%',var_criteria,'%') into filter;

select count(id_item) into total_approve from trn_request_order_det where case when flag_status is null then 0 else flag_status end = 1 and no_request_order = var_criteria;
select count(id_item) into total_item from trn_request_order_det where no_request_order = var_criteria;

if total_approve > 0 and total_approve < total_item THEN
	set notes_approve = 'Approve Sebagian';
elseif total_approve > 0 and total_approve = total_item THEN
	set notes_approve = 'Approve Seluruhnya';
elseif total_approve = 0 THEN
	set notes_approve = 'Belum di Approve';
end if;

if detail = 1 THEN

select a.no_request_order, a.date_trn,a.notes,
c.number_asc,c.id_item,c.id_unit,f.item_name, c.notes as description, 
c.qty,notes_approve,a.id_warehouse,a.date_required
 from trn_request_order_head a
inner join trn_request_order_det c on c.no_request_order=a.no_request_order
inner join mst_item f on f.id_item = c.id_item
where a.no_request_order = var_criteria;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'Requisition No' THEN
		select a.no_request_order, a.date_trn,a.notes,
		case when sum(case when f.approve_qty is null then 0 else f.approve_qty end) < 
							sum(case when f.qty is null then 0 else f.qty end) and sum(case when f.approve_qty is null then 0 else f.approve_qty end) > 0
							then 'Approve Sebagian'
		when sum(case when f.approve_qty is null then 0 else f.approve_qty end) = 0 then 'Belum di Approve'
		when sum(case when f.approve_qty is null then 0 else f.approve_qty end) = 
							sum(case when f.qty is null then 0 else f.qty end) then 'Sudah di Approve' end as notes_approve
		from trn_request_order_head a
		inner join trn_request_order_det f on f.no_request_order = a.no_request_order
		where a.no_request_order like filter
		group by a.no_request_order
		order by a.date_trn desc, a.no_request_order desc;
	elseif VAR_FIELD = 'Notes' THEN
		select a.no_request_order, a.date_trn,a.notes,
		case when sum(case when f.approve_qty is null then 0 else f.approve_qty end) < 
							sum(case when f.qty is null then 0 else f.qty end) and sum(case when f.approve_qty is null then 0 else f.approve_qty end) > 0
							then 'Approve Sebagian'
		when sum(case when f.approve_qty is null then 0 else f.approve_qty end) = 0 then 'Belum di Approve'
		when sum(case when f.approve_qty is null then 0 else f.approve_qty end) = 
							sum(case when f.qty is null then 0 else f.qty end) then 'Sudah di Approve' end as notes_approve
		from trn_request_order_head a
		inner join trn_request_order_det f on f.no_request_order = a.no_request_order
		where a.notes like filter
		group by a.no_request_order
		order by a.date_trn desc, a.no_request_order desc;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'Requisition No' THEN
		select a.no_request_order, a.date_trn,a.notes, 
		case when sum(case when f.approve_qty is null then 0 else f.approve_qty end) < 
							sum(case when f.qty is null then 0 else f.qty end) and sum(case when f.approve_qty is null then 0 else f.approve_qty end) <> 0 
							then 'Approve Sebagian'
		when sum(case when f.approve_qty is null then 0 else f.approve_qty end) = 0 then 'Belum di Approve'
		when sum(case when f.approve_qty is null then 0 else f.approve_qty end) = 
							sum(case when f.qty is null then 0 else f.qty end) then 'Sudah di Approve' end as notes_approve
		from trn_request_order_head a
		inner join trn_request_order_det f on f.no_request_order = a.no_request_order
		where a.no_request_order like filter
		and (a.date_trn between startdate and enddate)
		group by a.no_request_order
		order by a.date_trn desc, a.no_request_order desc;
	elseif VAR_FIELD = 'Notes' THEN
		select a.no_request_order, a.date_trn,a.notes, 
		case when sum(case when f.approve_qty is null then 0 else f.approve_qty end) < 
							sum(case when f.qty is null then 0 else f.qty end) and sum(case when f.approve_qty is null then 0 else f.approve_qty end) > 0 
							then 'Approve Sebagian'
		when sum(case when f.approve_qty is null then 0 else f.approve_qty end) = 0 then 'Belum di Approve'
		when sum(case when f.approve_qty is null then 0 else f.approve_qty end) = 
							sum(case when f.qty is null then 0 else f.qty end) then 'Sudah di Approve' end as notes_approve
		from trn_request_order_head a
		inner join trn_request_order_det f on f.no_request_order = a.no_request_order
		where a.notes like filter
		and (a.date_trn between startdate and enddate)
		group by a.no_request_order
		order by a.date_trn desc, a.no_request_order desc;
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_ro_po` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_ro_po`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
declare total_approve integer;
declare total_item integer;
declare notes_approve text;

select concat('%',var_criteria,'%') into filter;

select count(id_item) into total_approve from trn_request_order_det where flag_status = 1 and no_request_order = var_criteria;
select count(id_item) into total_item from trn_request_order_det where no_request_order = var_criteria;

if total_approve > 0 and total_approve < total_item THEN
	set notes_approve = 'Approve Sebagian';
elseif total_approve > 0 and total_approve = total_item THEN
	set notes_approve = 'Approve Seluruhnya';
elseif total_approve = 0 THEN
	set notes_approve = 'Belum di Approve';
end if;

if detail = 1 THEN

select a.id_supplier,concat(b.first_name,' ',b.last_name) as nama,
b.address,a.no_request_order, a.date_trn,a.notes,
c.number_asc,c.id_item,c.id_unit,f.item_name, c.notes as description, 
c.qty,notes_approve 
 from trn_request_order_head a
inner join mst_supplier b on b.id_supplier = a.id_supplier
inner join trn_request_order_det c on c.no_request_order=a.no_request_order
inner join mst_item f on f.id_item = c.id_item
where a.no_request_order = var_criteria;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'No Permintaan' THEN
		select c.id_item, d.item_name, c.notes, c.approve_qty as qty, c.id_unit, 0, 0, c.no_request_order
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where a.id_supplier = var_criteria and c.flag_status=1 and case when c.flag_po is null then 0 else c.flag_po end = 0;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'No Permintaan' THEN
		select c.id_item, d.item_name, c.notes, c.approve_qty as qty, c.id_unit, 0, 0, c.no_request_order
		from trn_request_order_head a
		inner join trn_request_order_det c on c.no_request_order = a.no_request_order
		inner join mst_item d on d.id_item = c.id_item
		where a.id_supplier = var_criteria
		and (a.date_trn between startdate and enddate) and c.flag_status=1 and case when c.flag_po is null then 0 else c.flag_po end = 0;
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_sales` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_sales`(in var_field varchar(255), in var_criteria text, in detail integer,in date_filter integer,in var_tgl_awal date,in var_tgl_akhir date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.id_customer,concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama,
b.address,a.no_sales, a.date_trn, 
c.id_curr,a.notes,a.subtotal,a.tax,a.total as total_head,
c.number_asc,c.id_item,c.id_unit,f.item_name, c.notes as description, 
c.qty, c.price, (c.qty * c.price) as total, a.discount,a.discpay,a.termpaydisc,a.term,a.payment_method ,case when a.no_sales_order is null then a.id_customer else a.no_sales_order end no_sales_order,
a.id_account,acc.account_name,
case when a.kurs is null then 1 else a.kurs end as kurs,
case when a.uang_muka is null then 0 else a.uang_muka end as uang_muka,
case when a.freight is null then 0 else a.freight end as freight
 from trn_sales_head a
inner join mst_customer b on b.id_customer = a.id_customer
inner join trn_sales_det c on c.no_sales=a.no_sales
inner join mst_item f on f.id_item = c.id_item
inner join mst_account acc on acc.id_account = a.id_account
where a.no_sales = var_criteria;
else

if date_filter = 0 then
IF VAR_FIELD = 'Invoice No' THEN

select a.no_sales, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, ((a.tax/100) * (a.subtotal - (a.discount/100 * a.subtotal))) as tax,
a.total,a.notes,a.id_customer,b.address,a.discount/100 * a.subtotal as discount,a.payment_method
from trn_sales_head a
inner join mst_customer b on b.id_customer = a.id_customer
where a.no_sales like filter
order by a.date_trn desc, a.no_sales desc;
elseif var_field = 'Customer' THEN
select a.no_sales, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, ((a.tax/100) * (a.subtotal - (a.discount/100 * a.subtotal))) as tax,
a.total,a.notes,a.id_customer,b.address,a.discount/100 * a.subtotal as discount,a.payment_method
from trn_sales_head a
inner join mst_customer b on b.id_customer = a.id_customer	
where concat(b.first_name,' ',b.last_name) like filter
order by a.date_trn desc, a.no_sales desc;
end if;
elseIF VAR_FIELD = 'Invoice No' THEN
select a.no_sales, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, ((a.tax/100) * (a.subtotal - (a.discount/100 * a.subtotal))) as tax,
a.total,a.notes,a.id_customer,b.address,a.discount/100 * a.subtotal as discount,a.payment_method
from trn_sales_head a
inner join mst_customer b on b.id_customer = a.id_customer
where a.no_sales like filter
and (date_trn between var_tgl_awal and var_tgl_akhir)
order by a.date_trn desc, a.no_sales desc;
elseif var_field = 'Customer' THEN
select a.no_sales, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, ((a.tax/100) * (a.subtotal - (a.discount/100 * a.subtotal))) as tax,
a.total,a.notes,a.id_customer,b.address,a.discount/100 * a.subtotal as discount,a.payment_method
from trn_sales_head a
inner join mst_customer b on b.id_customer = a.id_customer
where concat(b.first_name,' ',b.last_name) like filter
and (date_trn between var_tgl_awal and var_tgl_akhir) 
order by a.date_trn desc, a.no_sales desc;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_sales_2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_sales_2`(in var_field varchar(255), in var_criteria text, in detail integer)
BEGIN
	declare filter text;
	select concat('%',var_criteria,'%') into filter;
	IF detail = 1 THEN
		SELECT
				DISTINCT(h.no_sales), 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_customer,			
				h.no_sales_order,
				h.date_trn, h.subtotal, h.discount, h.tax, h.total, h.notes,
				h.payment_method, h.term, h.termpaydisc,h.discount,
				CONCAT(s.address,' ',s.city) as addr_customer, p.ref_status_name as nm_payment,
				s.id_customer
			FROM
				trn_sales_head h
			INNER JOIN trn_sales_det d ON h.no_sales = d.no_sales
			INNER JOIN mst_customer s ON h.id_customer =s.id_customer
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id;
	ELSE
		IF VAR_FIELD = 'detail' THEN
			SELECT
				h.no_purchase as no_sales, 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_customer,
				h.no_purchase_order as no_sales_order,
				h.date_trn, h.subtotal, h.disc_term_nominal as discount, h.tax, h.total, h.notes,
				d.number_asc, d.id_item, i.item_name, d.notes as notes_detail, d.qty, d.id_unit,
				d.price, d.nominal, d.id_curr, h.payment_method, h.disc_term_days as term, 
				h.payment_term_days,h.disc_term_days,
				CONCAT(s.address,' ',s.city) as addr_customer, p.ref_status_name as nm_payment,
				s.id_customer, case when i.weight is null then 0 else i.weight end as weight,
				case when (select func_get_harga_jual_basedon_jenis(i.id_jenis)) is null then 0 else (select func_get_harga_jual_basedon_jenis(i.id_jenis)) end as priceperweight
			FROM
				trn_payoff_so_head h
			INNER JOIN trn_payoff_so_det d ON h.no_purchase = d.no_purchase
			INNER JOIN mst_customer s ON h.id_supplier =s.id_customer
			INNER JOIN mst_item i ON d.id_item =i.id_item
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			WHERE h.no_purchase = var_criteria ;
		END IF;
		IF VAR_FIELD = 'Invoice No' THEN
			select distinct h.no_purchase as no_sales, 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_customer,
				h.no_purchase_order as no_sales_order,
				h.date_trn, h.subtotal, h.disc as discount,(h.disc/100*h.subtotal) as discount_nom, h.tax,
				h.tax/100 * (h.subtotal-(h.disc/100*h.subtotal)) as tax_nom , h.total, h.notes,
				h.payment_method, h.payment_term_days as terms, 
				h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_customer, p.ref_status_name as nm_payment,
				s.id_customer,acc.account_name
			FROM
				trn_payoff_so_head h
			INNER JOIN mst_customer s ON h.id_supplier =s.id_customer
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			inner join mst_account acc on acc.id_account = h.id_account
			WHERE h.no_purchase like filter ;
		ELSEIF VAR_FIELD = 'Customer' THEN
					select distinct h.no_purchase as no_sales, 
				CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) as nm_customer,
				h.no_purchase_order as no_sales_order,
				h.date_trn, h.subtotal, h.disc as discount,(h.disc/100*h.subtotal) as discount_nom, h.tax,
				h.tax/100 * (h.subtotal-(h.disc/100*h.subtotal)) as tax_nom , h.total, h.notes,
				h.payment_method, h.payment_term_days as terms, 
				h.disc_term_days,h.disc_term_nominal,
				CONCAT(s.address,' ',s.city) as addr_customer, p.ref_status_name as nm_payment,
				s.id_customer,acc.account_name
			FROM
				trn_payoff_so_head h
			INNER JOIN mst_customer s ON h.id_supplier =s.id_customer
			INNER JOIN ref_pay_method p ON h.payment_method=p.ref_status_id
			inner join mst_account acc on acc.id_account = h.id_account
			WHERE CONCAT(case when s.first_name is null then '' else s.first_name end,' ',case when s.last_name is null then '' else s.last_name end) like filter ;
		END IF;
		IF VAR_FIELD = 'A/R Payment' THEN

select a.no_sales, a.date_trn, a.sales_amount, case when a.return_amount is null then 0 else a.return_amount end as return_amount,
case 
	when DATEDIFF((select now()),a.date_trn) <= b.termpaydisc THEN round((b.discpay * a.sales_amount/100),0)
	else 0 end as disc, 
case 
	when DATEDIFF((select now()),a.date_trn) <= b.termpaydisc THEN a.sales_amount - case when a.return_amount is null then 0 else a.return_amount end - case when a.disc_amount is null then 0 else a.disc_amount end - case when a.paid_amount is null then 0 else a.paid_amount end  
	else a.sales_amount - case when a.return_amount is null then 0 else a.return_amount end - case when a.paid_amount is null then 0 else a.paid_amount end end as total, case when a.paid_amount is null then 0 else a.paid_amount end as paid_amount,
case when b.kurs is null then 1 else b.kurs end as kurs, case when a.disc_amount is null then 0 else a.disc_amount end as diskon_bayar
from ar_status a
inner join trn_sales_head b on b.no_sales = a.no_sales
where b.id_customer = var_criteria AND  b.payment_method=2
and case 
	when DATEDIFF((select now()),a.date_trn) <= b.termpaydisc THEN a.sales_amount - case when a.return_amount is null then 0 else a.return_amount end - case when a.disc_amount is null then 0 else a.disc_amount end - case when a.paid_amount is null then 0 else a.paid_amount end  
	else a.sales_amount - case when a.return_amount is null then 0 else a.return_amount end - case when a.paid_amount is null then 0 else a.paid_amount end end <> 0;

			
		END IF;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_sales_order` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_sales_order`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.id_customer,concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama,
b.address,a.no_sales_order, a.date_trn, 
c.id_curr,a.notes,a.subtotal,a.tax,a.total as total_head,
c.number_asc,c.id_item,c.id_unit,f.item_name, c.notes as description, 
c.qty, c.price, (c.qty * c.price) as total, 
case when a.kurs is null then 1 else a.kurs end as kurs, id_employee,
case when a.discount is null then 0 else a.discount end as discount,
a.nett_total,
case when a.is_discbrand is null then 0 else a.is_discbrand end as is_discbrand,
case when a.is_disctype is null then 0 else a.is_disctype end as is_disctype,
case when a.is_disccat is null then 0 else a.is_disccat end as is_disccat,
case when a.is_discitem is null then 0 else a.is_discitem end as is_discitem,
c.id_type as id_type_disc, c.id_category as id_cat_disc, c.id_brand as id_brand_disc,
case when a.id_account is null then '' else a.id_account end as id_account,
case when a.id_curr_um is null then '' else a.id_curr_um end as id_curr_um,
case when a.uang_muka is null then 0 else a.uang_muka end as uang_muka,
case when a.id_ekspedisi is null then '' else a.id_ekspedisi end as id_ekspedisi,
case when a.freight_est is null then 0 else a.freight_est end as freight_est,
case when c.weight is null then 0 else c.weight end as weight,
case when c.perweight is null then 0 else c.perweight end as perweight
 from trn_sales_order_head a
inner join mst_customer b on b.id_customer = a.id_customer
inner join trn_sales_order_det c on c.no_sales_order=a.no_sales_order
inner join mst_item f on f.id_item = c.id_item
where a.no_sales_order = var_criteria;

elseif detail = 2 THEN
select * from trn_so_discbrand_det
where no_sales_order = var_criteria;

elseif detail = 3 THEN
select * from trn_so_disctype_det
where no_sales_order = var_criteria;

elseif detail = 4 THEN
select * from trn_so_disccat_det
where no_sales_order = var_criteria;

elseif detail = 5 THEN
select * from trn_so_discitem_det
where no_sales_order = var_criteria;


elseif detail = 0 then
if var_date_filter = 0 then
	IF VAR_FIELD = 'SO No' THEN
		select a.no_sales_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, (a.tax/100) * a.subtotal as tax,
		a.total,a.notes,a.id_customer,b.address
		from trn_sales_order_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		where a.no_sales_order like filter
		order by a.date_trn desc, a.no_sales_order desc;
	elseif var_field = 'Customer' THEN
		select a.no_sales_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, (a.tax/100) * a.subtotal as tax,
		a.total,a.notes,a.id_customer, b.address  
		from trn_sales_order_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		where concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) like filter
		order by a.date_trn desc, a.no_sales_order desc;
	end if;
elseif var_date_filter = 1 THEN
	IF VAR_FIELD = 'SO No' THEN
		select a.no_sales_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, (a.tax/100) * a.subtotal as tax,
		a.total,a.notes,a.id_customer,b.address
		from trn_sales_order_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		where a.no_sales_order like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.no_sales_order desc;
	elseif var_field = 'Customer' THEN
		select a.no_sales_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, (a.tax/100) * a.subtotal as tax,
		a.total,a.notes,a.id_customer, b.address  
		from trn_sales_order_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		where concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) like filter
		and (a.date_trn between startdate and enddate)
		order by a.date_trn desc, a.no_sales_order desc;
	end if;
end if;

elseif detail = 8 THEN
IF VAR_FIELD = 'SO No' THEN
		select a.no_sales_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, (a.tax/100) * a.subtotal as tax,
		a.total,a.notes,a.id_customer,b.address
		from trn_sales_order_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		where a.no_sales_order like filter and 
		case when a.flag_status_invoice is null then 0 else a.flag_status_invoice end = 0;
	elseif var_field = 'Customer' THEN
		select a.no_sales_order, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, (a.tax/100) * a.subtotal as tax,
		a.total,a.notes,a.id_customer, b.address  
		from trn_sales_order_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		
		where concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) like filter AND
		case when a.flag_status_invoice is null then 0 else a.flag_status_invoice end = 0;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_sales_return` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_sales_return`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN
	declare filter text;
	select concat('%',var_criteria,'%') into filter;
IF detail = 1 THEN
	SELECT 
	DISTINCT(prh.no_sales_return), prh.date_trn, prh.id_customer, 
	CONCAT(case when ms.first_name is null then '' else ms.first_name end,' ',case when ms.last_name is null then '' else ms.last_name end) as customer_name, 
	CONCAT(ms.address,' ',ms.city) AS customer_addr,
	prh.payment_method, rpm.ref_status_name, prh.`notes`,
	prh.subtotal, prh.disc, prh.tax, prh.total, prd.no_sales,prh.id_warehouse,
	case when prd.weight is null then 0 else prd.weight end as weight,
	case when prd.priceperweight is null then 0 else prd.priceperweight end as priceperweight
	FROM trn_sales_return_head prh INNER JOIN trn_sales_return_det prd ON
	prh.no_sales_return= prd.no_sales_return 
	INNER JOIN mst_customer ms ON prh.id_customer =ms.id_customer
	INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method;
ELSE
if var_date_filter = 0 then
	IF VAR_FIELD = 'detail' THEN
		SELECT 
		(prh.no_sales_return), prh.date_trn, prh.id_customer, 
		CONCAT(case when ms.first_name is null then '' else ms.first_name end,' ',case when ms.last_name is null then '' else ms.last_name end) as customer_name, 
		CONCAT(ms.address,' ',ms.city) AS customer_addr,
		prh.payment_method, rpm.ref_status_name, prh.`notes`,
		prh.subtotal, prh.disc, prh.tax, prh.total,
		prd.number_asc, prd.id_item, msi.item_name, prd.notes as notes_detail,
		prd.qty, prd.id_unit as unit, prd.price, prd.nominal, prd.no_sales,
		prd.id_curr, case when prh.kurs is null then 1 else prh.kurs end as kurs, prh.id_warehouse,
		case when prd.weight is null then 0 else prd.weight end as weight,
		case when prd.priceperweight is null then 0 else prd.priceperweight end as priceperweight
		FROM trn_sales_return_head prh INNER JOIN trn_sales_return_det prd ON
		prh.no_sales_return= prd.no_sales_return 
		INNER JOIN mst_customer ms ON prh.id_customer =ms.id_customer
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		INNER JOIN mst_item msi ON prd.id_item =msi.id_item
		INNER JOIN mst_unit mu ON prd.id_unit=mu.id_unit
		WHERE prh.no_sales_return =  var_criteria ;

	ELSEIF VAR_FIELD = 'Return No' THEN
		SELECT distinct
		(prh.no_sales_return), prh.date_trn, prh.id_customer, 
		CONCAT(case when ms.first_name is null then '' else ms.first_name end,' ',case when ms.last_name is null then '' else ms.last_name end) as customer_name, 
		CONCAT(ms.address,' ',ms.city) AS customer_addr,
		prh.payment_method, rpm.ref_status_name, prh.`notes`,
		prh.subtotal, prh.disc, prh.tax, prh.total, prd.no_sales, prh.id_warehouse
		FROM trn_sales_return_head prh inner join trn_sales_return_det prd on prd.no_sales_return = prh.no_sales_return
		INNER JOIN mst_customer ms ON prh.id_customer =ms.id_customer
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		WHERE prh.no_sales_return like filter
		order by prh.date_trn desc, prh.no_sales_return desc;
	ELSEIF VAR_FIELD = 'Customer' THEN
		SELECT distinct
		(prh.no_sales_return), prh.date_trn, prh.id_customer, 
		CONCAT(case when ms.first_name is null then '' else ms.first_name end,' ',case when ms.last_name is null then '' else ms.last_name end) as customer_name, 
		CONCAT(ms.address,' ',ms.city) AS customer_addr,
		prh.payment_method, rpm.ref_status_name, prh.`notes`,
		prh.subtotal, prh.disc, prh.tax, prh.total, prd.no_sales, prh.id_warehouse
		FROM trn_sales_return_head prh inner join trn_sales_return_det prd on prd.no_sales_return = prh.no_sales_return
		INNER JOIN mst_customer ms ON prh.id_customer =ms.id_customer
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		WHERE CONCAT(ms.first_name,ms.last_name) like filter
		order by prh.date_trn desc, prh.no_sales_return desc;
	END IF;
elseif var_date_filter = 1 THEN
IF VAR_FIELD = 'Return No' THEN
		SELECT distinct
		(prh.no_sales_return), prh.date_trn, prh.id_customer, 
		CONCAT(case when ms.first_name is null then '' else ms.first_name end,' ',case when ms.last_name is null then '' else ms.last_name end) as customer_name, 
		CONCAT(ms.address,' ',ms.city) AS customer_addr,
		prh.payment_method, rpm.ref_status_name, prh.`notes`,
		prh.subtotal, prh.disc, prh.tax, prh.total, prd.no_sales, prh.id_warehouse
		FROM trn_sales_return_head prh inner join trn_sales_return_det prd on prd.no_sales_return = prh.no_sales_return
		INNER JOIN mst_customer ms ON prh.id_customer =ms.id_customer
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		WHERE prh.no_sales_return like filter
		and (prh.date_trn between startdate and enddate)
		order by prh.date_trn desc, prh.no_sales_return desc;
	ELSEIF VAR_FIELD = 'Customer' THEN
		SELECT 
		(prh.no_sales_return), prh.date_trn, prh.id_customer, 
		CONCAT(case when ms.first_name is null then '' else ms.first_name end,' ',case when ms.last_name is null then '' else ms.last_name end) as customer_name, 
		CONCAT(ms.address,' ',ms.city) AS customer_addr,
		prh.payment_method, rpm.ref_status_name, prh.`notes`,
		prh.subtotal, prh.disc, prh.tax, prh.total,prd.no_sales, prh.id_warehouse
		FROM trn_sales_return_head prh 
		INNER JOIN mst_customer ms ON prh.id_customer =ms.id_customer
		INNER JOIN ref_pay_method rpm ON rpm.ref_status_id=prh.payment_method
		WHERE CONCAT(ms.first_name,ms.last_name) like filter
		and (prh.date_trn between startdate and enddate)
		order by prh.date_trn desc, prh.no_sales_return desc;
	END IF;
end if;
END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_sales_service` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_sales_service`(in var_field varchar(255), in var_criteria text, in detail integer, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	
select b.id_customer,concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama,
b.address,a.no_service, a.date_trn, 
a.payment_method,c.id_curr,c.number_asc,c.id_service, e.service_name, 
c.qty, c.price, (c.qty * c.price) as total, c.id_employee, a.notes, 
a.subtotal, a.discount, (a.subtotal - (a.discount/100 * a.subtotal)) as netto, 
a.tax, a.total as total_head
 from trn_service_head a
inner join mst_customer b on b.id_customer = a.id_customer
inner join trn_service_det c on c.no_service=a.no_service
inner join mst_service e on e.id_service=c.id_service
where a.no_service = var_criteria;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'No Penjualan Jasa' THEN
		select a.no_service, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, (a.discount/100) * a.subtotal,a.tax/100 * (a.subtotal-((a.discount/100) * a.subtotal)), a.total,a.notes  from trn_service_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		where a.no_service like filter;
	elseif var_field = 'Customer' THEN
		select a.no_service, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, (a.discount/100) * a.subtotal,a.tax/100 * (a.subtotal-((a.discount/100) * a.subtotal)), a.total,a.notes  from trn_service_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		where concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) like filter;
	end if;
elseif var_date_filter = 1 THEN
	IF VAR_FIELD = 'No Penjualan Jasa' THEN
		select a.no_service, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, (a.discount/100) * a.subtotal,a.tax/100 * (a.subtotal-((a.discount/100) * a.subtotal)), a.total,a.notes  from trn_service_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		where a.no_service like filter
		and (a.date_trn between startdate and enddate);
	elseif var_field = 'Date' THEN
		select a.no_service, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama, a.date_trn, a.subtotal, (a.discount/100) * a.subtotal,a.tax/100 * (a.subtotal-((a.discount/100) * a.subtotal)), a.total,a.notes  from trn_service_head a
		inner join mst_customer b on b.id_customer = a.id_customer
		
		where concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) like filter
		and (a.date_trn between startdate and enddate);
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_service` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_service`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select a.id_service,
		a.service_name,
		a.id_account,
		b.account_name,
		a.price,
		a.senior_commission,
		a.junior_commission,
		a.active_status,
		a.notes
  from mst_service a
	inner join mst_account b on b.id_account = a.id_account 
	where id_service = var_criteria;
else
if var_date_filter = 0 then
	IF VAR_FIELD = 'ID Service' THEN
		SELECT id_service, service_name, price 
		FROM mst_service where id_service like filter and active_status = 1;
	elseif var_field = 'Jenis Service' THEN
		SELECT id_service, service_name, price 
		FROM mst_service where service_name like filter and active_status = 1;
	end if;
ELSEif var_date_filter = 1 THEN
IF VAR_FIELD = 'ID Service' THEN
		SELECT id_service, service_name, price 
		FROM mst_service where id_service like filter
		and (created_date between startdate and enddate) and active_status = 1;
	elseif var_field = 'Jenis Service' THEN
		SELECT id_service, service_name, price 
		FROM mst_service where service_name like filter
		and (created_date between startdate and enddate) and active_status = 1;
	end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_simulasi_penyusutan` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_simulasi_penyusutan`(in var_id_golongan varchar(30), in var_nilai_perolehan double, in var_tgl_perolehan date)
BEGIN
declare var_masa_penyusutan double;
declare var_masa_manfaat double;
declare var_th_penyusutan double;
declare var_rate_penyusutan double;
declare var_sisa_nilai_buku double;
declare var_total_penyusutan double;
declare var_tgl_server date;
declare var_bln_server double;
declare var_th_server double;


set var_tgl_server = (select now());
set var_bln_server = month(var_tgl_server);
set var_th_server = year(var_tgl_server);

select rate_penyusutan into var_rate_penyusutan from mst_golaset where id_golongan = var_id_golongan;
select masa_manfaat into var_masa_manfaat from mst_golaset where id_golongan = var_id_golongan;

if var_th_server = year(var_tgl_perolehan) THEN
		set var_masa_penyusutan = MONTH(var_tgl_server) - month(var_tgl_perolehan);
elseif var_th_server > year(var_tgl_perolehan) THEN
		if var_bln_server > month(var_tgl_perolehan) THEN
			set var_th_penyusutan = var_th_server -  (year(var_tgl_perolehan));
			set var_masa_penyusutan = (var_th_penyusutan * 12) + var_bln_server - month(var_tgl_perolehan);
		elseif var_bln_server < month(var_tgl_perolehan) then 
			set var_th_penyusutan = var_th_server -  (year(var_tgl_perolehan)) -1;
			set var_masa_penyusutan = (var_th_penyusutan * 12) + 12 - (month(var_tgl_perolehan)) + var_bln_server;
		elseif var_bln_server = month(var_tgl_perolehan) THEN
			set var_th_penyusutan = var_th_server -  (year(var_tgl_perolehan));
			set var_masa_penyusutan = var_th_penyusutan * 12;
		end if;
ELSE
		set var_masa_penyusutan = 0;
end if;

set var_sisa_nilai_buku = var_nilai_perolehan - (var_nilai_perolehan * var_rate_penyusutan/100/12 * var_masa_penyusutan);
set var_total_penyusutan = var_nilai_perolehan * var_rate_penyusutan/100/12 * var_masa_penyusutan;

select var_nilai_perolehan as harga_perolehan, var_masa_manfaat as masa_manfaat, concat(var_rate_penyusutan,' %') as rate_depr_th, concat(var_masa_penyusutan,' Bulan') as masa_penyusutan, var_rate_penyusutan/100 * var_nilai_perolehan as depr_th,
var_total_penyusutan as akumulasi_penyusutan, var_sisa_nilai_buku as nilai_buku;



END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_so_do` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_so_do`(in var_field varchar(255), in var_criteria text, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if var_date_filter = 0 then
	IF VAR_FIELD = 'No SO' THEN
		select c.id_item, d.item_name, '', c.qty, c.id_unit, 
		0, 0,case when a.id_ekspedisi is null then '' else a.id_ekspedisi end as id_ekspedisi
		from trn_sales_order_head a
		inner join trn_sales_order_det c on c.no_sales_order = a.no_sales_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_sales_order = var_criteria;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'No SO' THEN
		select c.id_item, d.item_name, '', c.qty, c.id_unit, 
		0, 0, case when a.id_ekspedisi is null then '' else a.id_ekspedisi end as id_ekspedisi
		from trn_sales_order_head a
		inner join trn_sales_order_det c on c.no_sales_order = a.no_sales_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_sales_order = var_criteria
		and (a.date_trn between startdate and enddate);
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_so_pelunasan` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_so_pelunasan`(in var_field varchar(255), in var_criteria text, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if var_date_filter = 0 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, c.notes as notes, c.qty,c.qty as qty_received, c.id_unit, 
		c.price, c.qty * c.price as nominal,case when a.tax is null then 0 else a.tax end as tax,
		case when a.freight_est is null then 0 else a.freight_est end as freight,case when a.kurs is null then 1 else a.kurs end as kurs,
		c.id_curr,case when a.uang_muka is null then 0 else a.uang_muka end as um,
		case when c.weight is null then 0 else c.weight end as weight,
				case when c.perweight is null then 0 else c.perweight end as priceperweight
		from trn_sales_order_head a
		inner join trn_sales_order_det c on c.no_sales_order = a.no_sales_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_sales_order = var_criteria and case when a.flag_status_invoice is null then 0 else a.flag_status_invoice end <> 1;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, c.notes as notes, c.qty,c.qty as qty_received, c.id_unit, 
		c.price, c.qty * c.price as nominal,case when a.tax is null then 0 else a.tax end as tax,
		case when a.freight_est is null then 0 else a.freight_est end as freight, case when a.kurs is null then 1 else a.kurs end as kurs,
		c.id_curr, case when a.uang_muka is null then 0 else a.uang_muka end as um,
		case when c.weight is null then 0 else c.weight end as weight,
				case when c.perweight is null then 0 else c.perweight end as priceperweight
		from trn_sales_order_head a
		inner join trn_sales_order_det c on c.no_sales_order = a.no_sales_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_sales_order = var_criteria
		and (a.date_trn between startdate and enddate) and case when a.flag_status_invoice is null then 0 else a.flag_status_invoice end <> 1;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_so_pelunasan_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_so_pelunasan_all`(in var_field varchar(255), in var_criteria text, in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if var_date_filter = 0 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, c.notes as notes, c.qty,c.qty as qty_received, c.id_unit, 
		c.price, c.qty * c.price as nominal,case when a.tax is null then 0 else a.tax end as tax,
		case when a.freight_est is null then 0 else a.freight_est end as freight,case when a.kurs is null then 1 else a.kurs end as kurs,
		c.id_curr,case when a.uang_muka is null then 0 else a.uang_muka end as um,
		case when c.weight is null then 0 else c.weight end as weight,
				case when c.perweight is null then 0 else c.perweight end as priceperweight
		from trn_sales_order_head a
		inner join trn_sales_order_det c on c.no_sales_order = a.no_sales_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_sales_order = var_criteria;
	end if;
elseif var_date_filter = 1 then
	IF VAR_FIELD = 'No PO' THEN
		select c.id_item, d.item_name, c.notes as notes, c.qty,c.qty as qty_received, c.id_unit, 
		c.price, c.qty * c.price as nominal,case when a.tax is null then 0 else a.tax end as tax,
		case when a.freight_est is null then 0 else a.freight_est end as freight, case when a.kurs is null then 1 else a.kurs end as kurs,
		c.id_curr, case when a.uang_muka is null then 0 else a.uang_muka end as um,
		case when c.weight is null then 0 else c.weight end as weight,
				case when c.perweight is null then 0 else c.perweight end as priceperweight
		from trn_sales_order_head a
		inner join trn_sales_order_det c on c.no_sales_order = a.no_sales_order
		inner join mst_item d on d.id_item = c.id_item
		where a.no_sales_order = var_criteria
		and (a.date_trn between startdate and enddate);
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_stokopname_item` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_stokopname_item`(in var_no_opname varchar(120))
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
		
		select a.id_item,b.item_name,a.notes,case when a.qty_onhand < a.qty_opname then a.qty_opname - a.qty_onhand else 0 end as qty_minus,
		case when a.qty_onhand > a.qty_opname then a.qty_onhand - a.qty_opname else 0 end as qty_plus,
		case when a.weight_onhand < a.weight_opname then a.weight_opname - a.weight_onhand else 0 end as weight_minus,
		case when a.weight_onhand > a.weight_opname then a.weight_onhand - a.weight_opname else 0 end as weight_plus, a.id_unit from i_opname_det a 
		inner join mst_item b on b.id_item = a.id_item 
		inner join mst_unit c on c.id_unit = a.id_unit
		where a.no_opname = var_no_opname;


COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_supplier` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_supplier`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer,in var_tgl_awal date,in var_tgl_akhir date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select * from mst_supplier where id_supplier = var_criteria;
else
if var_date_filter = 0 then 
IF VAR_FIELD = 'Supplier ID' THEN

SELECT
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(a.id_supplier) as id_supplier,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city
FROM
	mst_supplier a

where id_supplier like filter and case when `status` is null then 0 else `status` end = 1;

elseif var_field = 'First Name' THEN

SELECT
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(a.id_supplier) as id_supplier,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city
FROM
	mst_supplier a

where first_name like filter and case when `status` is null then 0 else `status` end = 1;

elseif var_field = 'Last Name' THEN

SELECT
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(a.id_supplier) as id_supplier,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city
FROM
	mst_supplier a

where last_name like filter and case when `status` is null then 0 else `status` end = 1;

elseif var_field = 'City' THEN

SELECT
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(a.id_supplier) as id_supplier,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city
FROM
	mst_supplier a

where city like filter and case when `status` is null then 0 else `status` end = 1;
end if;
elseif var_date_filter = 1 THEN
IF VAR_FIELD = 'Supplier ID' THEN

SELECT
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(a.id_supplier) as id_supplier,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city
FROM
	mst_supplier a

where id_supplier like filter
and (created_date between var_tgl_awal and var_tgl_akhir) and case when `status` is null then 0 else `status` end = 1;

elseif var_field = 'First Name' THEN

SELECT
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(a.id_supplier) as id_supplier,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city
FROM
	mst_supplier a

where first_name like filter
and (created_date between var_tgl_awal and var_tgl_akhir) and case when `status` is null then 0 else `status` end = 1;

elseif var_field = 'Last Name' THEN

SELECT
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(a.id_supplier) as id_supplier,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city
FROM
	mst_supplier a

where last_name like filter
and (created_date between var_tgl_awal and var_tgl_akhir) and case when `status` is null then 0 else `status` end = 1;

elseif var_field = 'City' THEN

SELECT
	ucase(concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end)) AS NAME,
	ucase(a.id_supplier) as id_supplier,
	ucase(concat(
		case when a.phone1 is null then '' else a.phone1 end,
		' ',
		case when a.phone2 is null then '' else a.phone2 end,
		' ',
		case when a.phone3 is null then '' else a.phone3 end
	)) AS phone,
	ucase(a.address) as address, 
	ucase(a.city) as city
FROM
	mst_supplier a

where city like filter
and (created_date between var_tgl_awal and var_tgl_akhir) and case when `status` is null then 0 else `status` end = 1;
end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_supplier_list` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_supplier_list`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer,in var_tgl_awal date,in var_tgl_akhir date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select * from mst_supplier where id_supplier = var_criteria;
else
if var_date_filter = 0 then 
IF VAR_FIELD = 'Supplier ID' THEN

SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_supplier,
	concat(
		a.phone1,
		', ',
		a.phone2,
		', ',
		a.phone3
	) AS phone,
	a.address, 
	a.city
FROM
	mst_supplier a

where id_supplier like filter;

elseif var_field = 'Supplier Name' THEN

SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_supplier,
	concat(
		a.phone1,
		', ',
		a.phone2,
		', ',
		a.phone3
	) AS phone,
	a.address, 
	a.city
FROM
	mst_supplier a

where concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) like filter;

elseif var_field = 'Last Name' THEN

SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_supplier,
	concat(
		a.phone1,
		', ',
		a.phone2,
		', ',
		a.phone3
	) AS phone,
	a.address, 
	a.city
FROM
	mst_supplier a

where last_name like filter;

elseif var_field = 'City' THEN

SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_supplier,
	concat(
		a.phone1,
		', ',
		a.phone2,
		', ',
		a.phone3
	) AS phone,
	a.address, 
	a.city
FROM
	mst_supplier a

where city like filter;
end if;
elseif var_date_filter = 1 THEN
IF VAR_FIELD = 'Supplier ID' THEN

SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_supplier,
	concat(
		a.phone1,
		', ',
		a.phone2,
		', ',
		a.phone3
	) AS phone,
	a.address, 
	a.city
FROM
	mst_supplier a

where id_supplier like filter
and (created_date between var_tgl_awal and var_tgl_akhir);

elseif var_field = 'First Name' THEN

SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_supplier,
	concat(
		a.phone1,
		', ',
		a.phone2,
		', ',
		a.phone3
	) AS phone,
	a.address, 
	a.city
FROM
	mst_supplier a

where first_name like filter
and (created_date between var_tgl_awal and var_tgl_akhir);

elseif var_field = 'Last Name' THEN

SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_supplier,
	concat(
		a.phone1,
		', ',
		a.phone2,
		', ',
		a.phone3
	) AS phone,
	a.address, 
	a.city
FROM
	mst_supplier a

where last_name like filter
and (created_date between var_tgl_awal and var_tgl_akhir);

elseif var_field = 'City' THEN

SELECT
	concat(case when a.first_name is null then '' else a.first_name end, ' ', case when a.last_name is null then '' else a.last_name end) AS NAME,
	a.id_supplier,
	concat(
		a.phone1,
		', ',
		a.phone2,
		', ',
		a.phone3
	) AS phone,
	a.address, 
	a.city
FROM
	mst_supplier a

where city like filter
and (created_date between var_tgl_awal and var_tgl_akhir);
end if;
end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_transfer_stock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_transfer_stock`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select 
		a.no_tranfer_stock,
		a.id_warehouse_from,
		a.id_warehouse_to,
		a.date_trn,a.notes,c.id_item,d.item_name,c.notes as notes_det,c.qty,c.unit,
		case when a.notes is null then '' else a.notes end notes  
	from trn_transfer_stock_head a
	inner join trn_transfer_stock_det c on c.no_tranfer_stock = a.no_tranfer_stock
	inner join mst_item d on d.id_item = c.id_item
	where a.no_tranfer_stock = var_criteria;
else
	if var_date_filter = 0 then
		IF VAR_FIELD = 'Stock Transfer No' THEN
			select 
			a.no_tranfer_stock,
			b.warehouse_name,
			a.date_trn,0 as qty,
			case when a.notes is null then '' else a.notes end notes  
			from trn_transfer_stock_head a
			inner join mst_warehouse b on b.id_warehouse = a.id_warehouse_from
			inner join trn_transfer_stock_det z on z.no_tranfer_stock = a.no_tranfer_stock
			where a.no_tranfer_stock like filter;	
		elseif var_field = 'Warehouse' THEN
			select 
			a.no_tranfer_stock,
			b.warehouse_name,
			a.date_trn,0 as qty,
			case when a.notes is null then '' else a.notes end notes  
			from trn_transfer_stock_head a
			inner join mst_warehouse b on b.id_warehouse = a.id_warehouse_from
			inner join trn_transfer_stock_det z on z.no_tranfer_stock = a.no_tranfer_stock
			where b.warehouse_name like filter;
		end if;
	elseif var_date_filter = 1 THEN
		IF VAR_FIELD = 'Stock Transfer No' THEN
			select 
			a.no_tranfer_stock,
			b.warehouse_name,
			a.date_trn,0 as qty,
			case when a.notes is null then '' else a.notes end notes  
			from trn_transfer_stock_head a
			inner join mst_warehouse b on b.id_warehouse = a.id_warehouse_from
			inner join trn_transfer_stock_det z on z.no_tranfer_stock = a.no_tranfer_stock
			where a.no_adjust_stock like filter
			and (a.date_trn between startdate and enddate);
		elseif var_field = 'Warehouse' THEN
			select 
			a.no_tranfer_stock,
			b.warehouse_name,
			a.date_trn,0 as qty,
			case when a.notes is null then '' else a.notes end notes  
			from trn_transfer_stock_head a
			inner join mst_warehouse b on b.id_warehouse = a.id_warehouse_from
			inner join trn_transfer_stock_det z on z.no_tranfer_stock = a.no_tranfer_stock
			where b.warehouse_name like filter	
			and (a.date_trn between startdate and enddate);
		end if;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_unit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_unit`(in var_criteria text, in detail integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select id_unit, unit, notes, flag_default
  from mst_unit
	where id_unit = var_criteria;
elseif detail = 0 then
	select id_unit, unit, notes
  from mst_unit;
elseif detail = 2 then
select a.id_unit, a.unit,case when b.qty is null then 0 else b.qty end as qty, 
(select id_unit from mst_setunit where qty = 1 and id_item = var_criteria) as defunit,
a.notes, case when b.id_item is null then 'false' else 'true' end as pilih
 from mst_unit a 
left join (select * from mst_setunit where id_item = var_criteria) b on b.id_unit = a.id_unit
left join (select id_item from mst_item where id_item = var_criteria) c on c.id_item = b.id_item;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_usagematerial_material_det` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_usagematerial_material_det`(in var_criteria text)
BEGIN
select e.item_id as id_item_material,
		e.qty as qty_material,e.id_unit as id_unit_material,e.cost as material_cost,a.item_name as notes_material,
		e.total_cost as total_cost_material,a.item_name
		from trn_usage_material_det e 
		inner join mst_item a on a.id_item = e.item_id
		inner join trn_usage_material_head  f on f.usage_no = e.usage_no
		where f.wo_no = var_criteria and e.material_type_id = 1;


END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_usagematerial_wip_det` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_usagematerial_wip_det`(in var_criteria text)
BEGIN
select e.item_id as id_item_material,
		e.qty as qty_material,e.id_unit as id_unit_material,e.cost as material_cost,a.item_name as notes_material,
		e.total_cost as total_cost_material,a.item_name
		from trn_usage_material_det e 
		inner join mst_item a on a.id_item = e.item_id
		inner join trn_usage_material_head  f on f.usage_no = e.usage_no
		where f.wo_no = var_criteria and e.material_type_id = 2;


END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_warehouse` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_warehouse`(in var_criteria text, in detail integer)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN
	select id_warehouse,
warehouse_name,
case when qty_max is null then 0 else qty_max end as qty_max,
case when unit_max is null then '' else unit_max end as unit_max,
case when address is null then '' else address end as address,
case when phone is null then '' else phone end as phone,
case when city is null then '' else city end as city,
case when notes is null then '' else notes end as notes,
flag_nonactive,
created_user, case when a.is_outlet is null then 0 else a.is_outlet end as is_outlet
  from mst_warehouse a
	where id_warehouse = var_criteria;
elseif detail = 0 then
	select id_warehouse,warehouse_name,qty_max,city,phone
  from mst_warehouse;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_wo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_wo`(in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN

		select a.wo_no,
					 a.no_bom,
					 a.item_notes,
					 a.qty_item_production,
					 a.id_unit,
					 a.cost_total_wo,
					 a.persentage_finished
		from trn_wo_item_det a 
		where a.wo_no = var_criteria;

elseif detail = 2 then
		
		select e.id_item as id_item_material,
		e.qty_material,e.id_unit as id_unit_material,e.cost as material_cost,e.notes as notes_material,
		e.total_cost as total_cost_material,a.item_name
		from trn_wo_material_det e 
		inner join mst_item a on a.id_item = e.id_item
		where e.no_wo = var_criteria;

elseif detail = 3 then
		
		select e.id_item as id_item_material,
		e.qty_material,e.id_unit as id_unit_material,e.cost as material_cost,e.notes as notes_material,
		e.total_cost as total_cost_material,a.item_name
		from trn_wo_wip_det e 
		inner join mst_item a on a.id_item = e.id_item
		where e.wo_no = var_criteria;

elseif detail = 4 THEN

		select g.id_cost as id_cost_konversi,g.qty_hour,
		g.cost as cost_konversi,g.notes as notes_konversi,g.total_cost as total_cost_konversi, a.cost_name
		from trn_wo_conversion_det g
		inner join mst_standard_cost a on a.id_cost = g.id_cost
		where g.wo_no = var_criteria;


elseif detail = 0 then
	if var_date_filter = 0 then
		select a.wo_no,
					 a.expected_date,
					 a.realized_date,
					 a.start_date,
					 a.date_trn,
					 a.pic,
					 c.department_name,
					 a.department_id,
					 a.cost_total,
					 a.notes
		from trn_wo_head a 
		inner join mst_department_produksi c on c.department_id = a.department_id;
	elseif var_date_filter = 1 THEN
		select a.wo_no,
					 a.expected_date,
					 a.realized_date,
					 a.start_date,
					 a.date_trn,
					 a.pic,
					 a.department_id,
					 c.department_name,
					 a.cost_total,
					 a.notes
		from trn_wo_head a 
		inner join mst_department_produksi c on c.department_id = a.department_id where a.date_trn between startdate and enddate;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_wo_conversion_det` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_wo_conversion_det`(in var_criteria text)
BEGIN
select g.id_cost as id_cost_konversi,g.qty_hour,
		g.cost as cost_konversi,g.notes as notes_konversi,g.total_cost as total_cost_konversi, a.cost_name
		from trn_wo_conversion_det g
		inner join mst_standard_cost a on a.id_cost = g.id_cost
		where g.wo_no = var_criteria;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_wo_item_det` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_wo_item_det`(in var_criteria text)
BEGIN
	select a.wo_no,
					 b.id_item,
					 c.item_name,
					 a.qty_item_production,
					 a.id_unit,
					 a.cost_total_wo,
					 a.persentage_finished
		from trn_wo_item_det a 
		inner join mst_bom_head b on b.no_bom = a.no_bom
		inner join mst_item c on c.id_item = b.id_item
		where a.wo_no = var_criteria;



END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_wo_material_det` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_wo_material_det`(in var_criteria text)
BEGIN
	select e.id_item as id_item_material,
		e.qty_material,e.id_unit as id_unit_material,e.cost as material_cost,e.notes as notes_material,
		e.total_cost as total_cost_material,a.item_name
		from trn_wo_material_det e 
		inner join mst_item a on a.id_item = e.id_item
		where e.no_wo = var_criteria;


END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_wo_realisasi` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_wo_realisasi`(in var_criteria text, in detail integer,in var_date_filter integer, in startdate date, in enddate date)
BEGIN

declare filter text;
select concat('%',var_criteria,'%') into filter;

if detail = 1 THEN

		select a.realized_no,
					 a.id_item,
					 a.item_name,
					 a.qty_item_production,
					 a.id_unit,
					 a.cost_total,
					 a.persentage_finished,
					 c.qty_item_production as qty_wo,
					 round(a.cost_total / a.qty_item_production,0) as qtyperunit
		from trn_wo_realized_item_det a inner join trn_wo_realized_head b on b.realized_no = a.realized_no 
		inner join trn_wo_item_det c on b.wo_no = c.wo_no
		where a.realized_no = var_criteria;

elseif detail = 2 then
		
		select e.id_item as id_item_material,
		e.qty_material,e.id_unit as id_unit_material,e.cost as material_cost,e.notes as notes_material,
		e.total_cost as total_cost_material,a.item_name
		from trn_wo_realized_material_det e 
		inner join mst_item a on a.id_item = e.id_item
		where e.realized_no = var_criteria;

elseif detail = 3 then
		
		select e.id_item as id_item_material,
		e.qty_material,e.id_unit as id_unit_material,e.cost as material_cost,e.notes as notes_material,
		e.total_cost as total_cost_material,a.item_name
		from trn_wo_realized_wip_det e 
		inner join mst_item a on a.id_item = e.id_item
		where e.realized_no = var_criteria;

elseif detail = 4 THEN

		select g.id_cost as id_cost_konversi,g.qty_hour,
		g.cost as cost_konversi,g.notes as notes_konversi,g.total_cost as total_cost_konversi, a.cost_name
		from trn_wo_realized_conversion_det g
		inner join mst_standard_cost a on a.id_cost = g.id_cost
		where g.realized_no = var_criteria;


elseif detail = 0 then
	if var_date_filter = 0 then
		select a.realized_no,
					 a.wo_no,
					 a.expected_date,
					 a.realized_date,
					 a.pic,
					 c.department_name,
					 a.department_id,
					 a.cost_total,
					 a.notes,
					 a.date_trn,
					a.id_warehouse
		from trn_wo_realized_head a 
		inner join mst_department_produksi c on c.department_id = a.department_id;
	elseif var_date_filter = 1 THEN
		select a.realized_no,
					 a.wo_no,
					 a.expected_date,
					 a.realized_date,
					 a.pic,
					 c.department_name,
					 a.department_id,
					 a.cost_total,
					 a.notes,
					 a.date_trn,
					a.id_warehouse
		from trn_wo_realized_head a 
		inner join mst_department_produksi c on c.department_id = a.department_id where a.date_trn between startdate and enddate;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_wo_realisasi_conversion_det` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_wo_realisasi_conversion_det`(in var_criteria text)
BEGIN
select g.id_cost as id_cost_konversi,g.qty_hour,
		g.cost as cost_konversi,g.notes as notes_konversi,g.total_cost as total_cost_konversi, a.cost_name
		from trn_wo_realized_conversion_det g
		inner join mst_standard_cost a on a.id_cost = g.id_cost
		where g.realized_no = var_criteria;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_wo_realisasi_material_det` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_wo_realisasi_material_det`(in var_criteria text)
BEGIN
	select e.id_item as id_item_material,
		e.qty_material,e.id_unit as id_unit_material,e.cost as material_cost,e.notes as notes_material,
		e.total_cost as total_cost_material,a.item_name
		from trn_wo_realized_material_det e 
		inner join mst_item a on a.id_item = e.id_item
		where e.realized_no = var_criteria;


END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_wo_realisasi_wip_det` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_wo_realisasi_wip_det`(in var_criteria text)
BEGIN
	select e.id_item as id_item_material,
		e.qty_material,e.id_unit as id_unit_material,e.cost as material_cost,e.notes as notes_material,
		e.total_cost as total_cost_material,a.item_name
		from trn_wo_realized_wip_det e 
		inner join mst_item a on a.id_item = e.id_item
		where e.realized_no = var_criteria;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `select_wo_wip_det` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `select_wo_wip_det`(in var_criteria text)
BEGIN
	select e.id_item as id_item_material,
		e.qty_material,e.id_unit as id_unit_material,e.cost as material_cost,e.notes as notes_material,
		e.total_cost as total_cost_material,a.item_name
		from trn_wo_wip_det e 
		inner join mst_item a on a.id_item = e.id_item
		where e.wo_no = var_criteria;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_account` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_account`(in var_id_account varchar(25), in var_account_name varchar(60),in var_parent varchar(25),in var_flag_active integer,in var_flag_header integer, in var_is_income integer,in var_is_balance_sheet integer, in var_notes  text, in var_modified_user varchar(120),in var_created_date datetime,in var_modified_date datetime, in var_created_user varchar(120),in  transid varchar(60), in var_def_position varchar(120), in var_beg_balance double, in var_golongan integer)
BEGIN

	DECLARE EXIT handler for SQLEXCEPTION
	BEGIN
		RESIGNAL;   
		ROLLBACK;
	END;

	START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	UPDATE mst_account
SET account_name = var_account_name,
 parent = var_parent,
 flag_active = var_flag_active,
 flag_header = var_flag_header,
 is_income = var_is_income,
 is_balance_sheet = var_is_balance_sheet,
 def_position = var_def_position,
 notes = var_notes,
 modified_user = var_modified_user,
 created_date = var_created_date,
 modified_date = var_modified_date,
 created_user = var_created_user,
 beg_balance = var_beg_balance,
 golongan = var_golongan
WHERE
	id_account = var_id_account;

ELSEIF TRANSID = 'INSERT' THEN

	INSERT INTO mst_account (
		id_account,
		account_name,
		parent,
		flag_active,
		flag_header,
		is_income,
		is_balance_sheet,
		def_position,
		notes,
		modified_user,
		created_date,
		modified_date,
		created_user,
		beg_balance,
		golongan
	)
VALUES
	(
		var_id_account,
		var_account_name,
		var_parent,
		var_flag_active,
		var_flag_header,
		var_is_income,
		var_is_balance_sheet,
		var_def_position,
		var_notes,
		var_modified_user,
		var_created_date,
		var_modified_date,
		var_created_user,
		var_beg_balance,
		var_golongan
	);

ELSEIF TRANSID = 'DELETE' THEN

	DELETE
FROM
	mst_account
WHERE
	id_account = var_id_account;


END
IF;


COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_account_setmanufacture` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_account_setmanufacture`(in var_period integer, in var_year integer, in var_created_date date, in var_lang int)
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;
	
delete from i_set_account_def;
delete from mst_account;

if var_lang = 1 then
	insert into mst_account 
	select * from mst_account_setmanufacture_id;
end if;

if var_lang = 2 then
	insert into mst_account 
	select * from mst_account_setmanufacture_int;
end if;


insert into i_set_account_def 
select * from i_set_account_def_manufacture;


insert into i_accounting_period ( 
periode, 
year,
last_closed_date,
lock_status) 
values (
var_period,
var_year,
var_created_date,
0
);


COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_account_setretail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_account_setretail`(in var_period integer, in var_year integer, in var_created_date date,in var_lang integer)
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;
	
delete from i_set_account_def;
delete from mst_account;

if var_lang = 1 then
	insert into mst_account 
	select * from mst_account_setretail_id;
end if;

if var_lang = 2 then
	insert into mst_account 
	select * from mst_account_setretail_int;
end if;


insert into i_set_account_def 
select * from i_set_account_def_retail;
insert into i_accounting_period ( 
periode, 
year,
last_closed_date,
lock_status) 
values (
var_period,
var_year,
var_created_date,
0
);

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_akses_setmanufacture` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_akses_setmanufacture`()
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;
	
delete from i_hakakses;
delete from i_templatehakakses;

insert into i_templatehakakses 
select * from i_templatehakakses_setmanufacture;

insert into i_hakakses
select parentkey, childkey, 'admin' from i_templatehakakses;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_akses_setretail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_akses_setretail`()
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;
	
delete from i_hakakses;
delete from i_templatehakakses;

insert into i_templatehakakses 
select * from i_templatehakakses_setretail;

insert into i_hakakses
select parentkey, childkey, 'admin' from i_templatehakakses;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_approve_ro` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_approve_ro`(in var_no_request_order varchar(30), in var_id_item varchar(30), in var_date date, in var_qty int)
BEGIN

declare qty_sisa_sebelumnya INTEGER;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    ROLLBACK;
END;

START TRANSACTION;
	
select case when approve_qty is null then 0 else approve_qty end into qty_sisa_sebelumnya from trn_request_order_det
where no_request_order = var_no_request_order and id_item = var_id_item;

	update trn_request_order_det set flag_status = 1, 
	approve_date = var_date, approve_qty = qty_sisa_sebelumnya + var_qty where no_request_order = var_no_request_order and id_item = var_id_item;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_ap_initbalance` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_ap_initbalance`(in var_cutoff_date datetime, in var_invoice_no varchar(60), in var_id_supplier varchar(30), in var_amount_of double, in var_notes text, in var_modified_user varchar(120),in var_created_date datetime, in var_modified_date datetime,in var_created_user varchar(120), transid varchar(60), in amount_before double)
BEGIN
declare var_id_account varchar(30);

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL; 
    ROLLBACK;
END;

START TRANSACTION;
	
IF TRANSID = 'UPDATE' THEN
	BEGIN
		UPDATE mst_ap_initialbalance
		SET 
			cutoff_date= var_cutoff_date,
			invoice_no = var_invoice_no,
			amount_of = var_amount_of,
			notes= var_notes,
			modified_user = var_modified_user,
			created_date = var_created_date,
			modified_date = var_modified_date,
			created_user = var_created_user
		WHERE
			invoice_no = var_invoice_no
			and id_supplier = var_id_supplier;
		UPDATE ap_status
		SET 
			date_trn = var_cutoff_date,
			id_supplier = var_id_supplier,
			purchase_amount = var_amount_of,
			return_amount = 0,
			disc_amount = 0,
			paid_amount = 0,
			balance = 0,
			notes = var_notes
		WHERE
			no_purchase = var_invoice_no
	and id_supplier = var_id_supplier;

		update mst_supplier set ap_balance = ap_balance-amount_before + var_amount_of where id_supplier = var_id_supplier;

		

	END;
ELSEIF TRANSID = 'INSERT' THEN
BEGIN
	INSERT INTO mst_ap_initialbalance (
		cutoff_date,
		invoice_no,
		id_supplier,
		amount_of,
		notes,
		modified_user,
		created_date,
		modified_date,
		created_user
	)
VALUES
	(
		var_cutoff_date,
		var_invoice_no,
		var_id_supplier,
		var_amount_of,
		var_notes,
		var_modified_user,
		var_created_date,
		var_modified_date,
		var_created_user
	);

insert into ap_status (
	no_purchase,
	date_trn,
	id_supplier,
	purchase_amount,
	return_amount,
	disc_amount,
	paid_amount,
	balance,
	notes
)
values (
	var_invoice_no,
	var_cutoff_date,
	var_id_supplier,
	var_amount_of,
	0,
	0,
	0,	
	0,
	var_notes
);

	update mst_supplier set ap_balance = ap_balance + var_amount_of where id_supplier = var_id_supplier;

	


END;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	DELETE
FROM
	mst_ap_initialbalance
WHERE
	invoice_no = var_invoice_no;

	DELETE
FROM
	ap_status
WHERE
	no_purchase = var_invoice_no
	and id_supplier = var_id_supplier;
update mst_supplier set ap_balance = ap_balance - amount_before where id_supplier = var_id_supplier;



END;



END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_ar_initbalance` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_ar_initbalance`(in var_cutoff_date datetime, in var_invoice_no varchar(60), in var_id_customer varchar(30), in var_amount_of double, in var_notes text, in var_modified_user varchar(120),in var_created_date datetime, in var_modified_date datetime,in var_created_user varchar(120), transid varchar(60), in amount_before double)
BEGIN
declare var_id_account varchar(30);

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
    ROLLBACK;
END;

START TRANSACTION;
	
IF TRANSID = 'UPDATE' THEN
	BEGIN
		UPDATE mst_ar_initialbalance
		SET 
			cutoff_date= var_cutoff_date,
			invoice_no = var_invoice_no,
			amount_of = var_amount_of,
			notes= var_notes,
			modified_user = var_modified_user,
			created_date = var_created_date,
			modified_date = var_modified_date,
			created_user = var_created_user
		WHERE
			invoice_no = var_invoice_no;

		UPDATE ar_status
		SET 
			date_trn = var_cutoff_date,
			id_customer = var_id_customer,
			sales_amount = var_amount_of,
			return_amount = 0,
			disc_amount = 0,
			paid_amount = 0,
			balance = 0,
			notes = var_notes
		WHERE
			no_sales = var_invoice_no;

update mst_customer set ar_balance = ar_balance - amount_before + var_amount_of where id_customer = var_id_customer;

	

	END;
ELSEIF TRANSID = 'INSERT' THEN
BEGIN
	INSERT INTO mst_ar_initialbalance (
		cutoff_date,
		invoice_no,
		id_customer,
		amount_of,
		notes,
		modified_user,
		created_date,
		modified_date,
		created_user
	)
VALUES
	(
		var_cutoff_date,
		var_invoice_no,
		var_id_customer,
		var_amount_of,
		var_notes,
		var_modified_user,
		var_created_date,
		var_modified_date,
		var_created_user
	);

insert into ar_status (
	no_sales,
	date_trn,
	id_customer,
	sales_amount,
	return_amount,
	disc_amount,
	paid_amount,
	balance,
	notes
)
values (
	var_invoice_no,
	var_cutoff_date,
	var_id_customer,
	var_amount_of,
	0,
	0,
	0,	
	0,
	var_notes
);

update mst_customer set ar_balance = ar_balance + var_amount_of where id_customer = var_id_customer;

	
END;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	DELETE
FROM
	mst_ar_initialbalance
WHERE
	invoice_no = var_invoice_no;

	DELETE
FROM
	ar_status
WHERE
	no_sales = var_invoice_no;

update mst_customer set ar_balance = ar_balance - amount_before where id_customer = var_id_customer;




END;



END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_aset_beli` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_aset_beli`(in var_id_asetmasuk varchar(60), in var_date_trn date, in var_notes text, in var_created_date date, in var_modified_date date, in var_created_user varchar(30),in var_modified_user varchar(30), in var_id_aset varchar(30), in var_qty double, in var_id_satuan varchar(30), in var_ket text, in varloop integer, in transid varchar(120))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;
	

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_asetmasuk_det where id_asetmasuk = var_id_asetmasuk;
		delete from trn_asetmasuk_head where id_asetmasuk = var_id_asetmasuk;
		
		insert into trn_asetmasuk_head(
			 id_asetmasuk,
			 date_trn,
			 notes,
			 created_date,
			 modified_date,
			 created_user,
			 modified_user
			)
		values(
			 var_id_asetmasuk,
			 var_date_trn,
			 var_notes,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 var_modified_user
			);

	elseif var_detail = 1 THEN
		
		insert into trn_asetmasuk_det 
			(id_asetmasuk,
			 id_aset,
			 qty,
			 id_satuan,
			 ket
			)
		values (
			 var_id_asetmasuk,
			 var_id_aset,
			 var_qty,
			 var_id_satuan,
			 var_ket
			);
		end if;
	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_asetmasuk_head(
			 id_asetmasuk,
			 date_trn,
			 notes,
			 created_date,
			 modified_date,
			 created_user,
			 modified_user
			)
		values(
			 var_id_asetmasuk,
			 var_date_trn,
			 var_notes,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 var_modified_user
			);
	elseif var_detail = 1 THEN
		insert into trn_asetmasuk_det 
			(id_asetmasuk,
			 id_aset,
			 qty,
			 id_satuan,
			 ket
			)
		values (
			 var_id_asetmasuk,
			 var_id_aset,
			 var_qty,
			 var_id_satuan,
			 var_ket
			);
	end if;

	ELSEIF TRANSID = 'DELETE' THEN

			delete from trn_asetmasuk_det where id_asetmasuk = var_id_asetmasuk;
		delete from trn_asetmasuk_head where id_asetmasuk = var_id_asetmasuk;
			
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_aset_keluar` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_aset_keluar`(in var_id_asetkeluar varchar(60), in var_date_trn date, in var_notes text, in var_created_date date, in var_modified_date date, in var_created_user varchar(30),in var_modified_user varchar(30), in var_id_aset varchar(30), in var_qty double, in var_id_satuan varchar(30), in var_ket text, in varloop integer, in transid varchar(120))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;
	
IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_asetkeluar_det where id_asetkeluar = var_id_asetkeluar;
		delete from trn_asetkeluar_head where id_asetkeluar = var_id_asetkeluar;
		
		insert into trn_asetkeluar_head(
			 id_asetkeluar,
			 date_trn,
			 notes,
			 created_date,
			 modified_date,
			 created_user,
			 modified_user
			)
		values(
			 var_id_asetkeluar,
			 var_date_trn,
			 var_notes,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 var_modified_user
			);

	elseif var_detail = 1 THEN
		
		insert into trn_asetkeluar_det 
			(id_asetkeluar,
			 id_aset,
			 qty,
			 id_satuan,
			 ket
			)
		values (
			 var_id_asetkeluar,
			 var_id_aset,
			 var_qty,
			 var_id_satuan,
			 var_ket
			);
		end if;
	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_asetkeluar_head(
			 id_asetkeluar,
			 date_trn,
			 notes,
			 created_date,
			 modified_date,
			 created_user,
			 modified_user
			)
		values(
			 var_id_asetkeluar,
			 var_date_trn,
			 var_notes,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 var_modified_user
			);
	elseif var_detail = 1 THEN
		insert into trn_asetkeluar_det 
			(id_asetkeluar,
			 id_aset,
			 qty,
			 id_satuan,
			 ket
			)
		values (
			 var_id_asetkeluar,
			 var_id_aset,
			 var_qty,
			 var_id_satuan,
			 var_ket
			);
	end if;

	ELSEIF TRANSID = 'DELETE' THEN

			delete from trn_asetkeluar_det where id_asetkeluar = var_id_asetkeluar;
		delete from trn_asetkeluar_head where id_asetkeluar = var_id_asetkeluar;
			
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_aset_masuk` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_aset_masuk`(in var_id_asetmasuk varchar(60), in var_date_trn date, in var_notes text, in var_created_date date, in var_modified_date date, in var_created_user varchar(30),in var_modified_user varchar(30), in var_id_aset varchar(30), in var_qty double, in var_id_satuan varchar(30), in var_ket text, in varloop integer, in transid varchar(120))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;
	
IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_asetmasuk_det where id_asetmasuk = var_id_asetmasuk;
		delete from trn_asetmasuk_head where id_asetmasuk = var_id_asetmasuk;
		
		insert into trn_asetmasuk_head(
			 id_asetmasuk,
			 date_trn,
			 notes,
			 created_date,
			 modified_date,
			 created_user,
			 modified_user
			)
		values(
			 var_id_asetmasuk,
			 var_date_trn,
			 var_notes,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 var_modified_user
			);

	elseif var_detail = 1 THEN
		
		insert into trn_asetmasuk_det 
			(id_asetmasuk,
			 id_aset,
			 qty,
			 id_satuan,
			 ket
			)
		values (
			 var_id_asetmasuk,
			 var_id_aset,
			 var_qty,
			 var_id_satuan,
			 var_ket
			);
		end if;
	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_asetmasuk_head(
			 id_asetmasuk,
			 date_trn,
			 notes,
			 created_date,
			 modified_date,
			 created_user,
			 modified_user
			)
		values(
			 var_id_asetmasuk,
			 var_date_trn,
			 var_notes,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 var_modified_user
			);
	elseif var_detail = 1 THEN
		insert into trn_asetmasuk_det 
			(id_asetmasuk,
			 id_aset,
			 qty,
			 id_satuan,
			 ket
			)
		values (
			 var_id_asetmasuk,
			 var_id_aset,
			 var_qty,
			 var_id_satuan,
			 var_ket
			);
	end if;

	ELSEIF TRANSID = 'DELETE' THEN

			delete from trn_asetmasuk_det where id_asetmasuk = var_id_asetmasuk;
		delete from trn_asetmasuk_head where id_asetmasuk = var_id_asetmasuk;
			
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_assembly` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_assembly`(in var_no_assembly varchar(60), in var_id_item varchar(60), in var_notes text, in var_qty_item_production double, in var_id_unit varchar(30), in var_date_trn date,in var_modified_user varchar(30), in var_created_date datetime, in var_modified_date datetime, in var_created_user varchar(30), in var_id_item_material varchar(60), in var_qty_material double, in var_id_unit_material varchar(30), in var_cost_material double, in var_notes_material text, in var_total_cost_material double,in var_id_cost_conversion varchar(60),in var_qty_hour_conversion double,in var_cost_conversion double,in var_notes_conversion text,in var_total_cost_conversion double, in var_detail integer, in varloop integer, in transid varchar(120), in var_summary_cost_conversion double, in var_summary_cost_sparepart double)
BEGIN

declare var_warehouse varchar(30);
declare var_id_account varchar(60);
declare var_id_account_persediaan varchar(60);
declare var_id_account_wip varchar(60);
declare var_id_account_bahan varchar(60);
declare var_id_account_hpp varchar(60);
declare var_id_account_bb varchar(60);
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;


START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_ledger_det where no_ledger = var_no_assembly;
		delete from trn_ledger_head where no_ledger = var_no_assembly;
		DELETE FROM i_stock_in WHERE NO_stock_in = var_no_assembly;
		DELETE FROM i_stock_out WHERE NO_stock_out = var_no_assembly;
		delete from mst_assembly_conversion where no_assembly = var_no_assembly;
		delete from mst_assembly_sparepart where no_assembly = var_no_assembly;
		delete from mst_assembly_head where no_assembly = var_no_assembly;

	insert into mst_assembly_head(
			no_assembly,
			id_item,
			notes,
			qty_item_production,
			id_unit,
			date_trn,
			modified_user,
			created_date,
			modified_date,
			created_user
		)
		values(var_no_assembly,
			var_id_item,
			var_notes,
			var_qty_item_production,
			var_id_unit,
			var_date_trn,
			var_modified_user,
			var_created_date,
			var_modified_date,
			var_created_user
		);

		select id_warehouse into var_warehouse from mst_item where id_item = var_id_item;
		if varloop = 0 THEN
			delete from i_stock_in where no_stock_in = var_no_assembly;
		end if;
		insert into i_stock_in
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_assembly,
			 var_date_trn,
			 var_id_item,
			 var_qty_item_production,
			 var_id_unit,
			 0,
			 0,
			 var_warehouse
			);

		if varloop=0 THEN
			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
			values(var_no_assembly,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Assembly Cost Form',
						var_summary_cost_sparepart + var_summary_cost_conversion);		

		

		
		select id_account into var_id_account_wip from i_set_account_def where acc_parameter = 'acc_temp_wip';	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_assembly,
						var_id_account_wip,
						concat('Barang Dalam Proses - ',var_no_assembly),
						var_summary_cost_sparepart + var_summary_cost_conversion);

		end if;

	elseif var_detail = 1 THEN
		
		insert into mst_assembly_sparepart (
			no_assembly,
			id_item,
			qty_material,
			id_unit,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_assembly,
			var_id_item_material,
			var_qty_material,
			var_id_unit_material,
			var_cost_material,
			var_notes_material,
			var_total_cost_material
		);
		
		select id_warehouse into var_warehouse from mst_item where id_item = var_id_item_material;
		if varloop = 0 THEN
			delete from i_stock_out where no_stock_out = var_no_assembly;
		end if;
		insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_assembly,
			 var_date_trn,
			 var_id_item_material,
			 var_qty_material,
			 var_id_unit_material,
			 round(var_cost_material),
			 round(var_cost_material),
			 var_warehouse
			);

		
		select id_account into var_id_account_persediaan from mst_item where id_item = var_id_item_material;	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_assembly,
						var_id_account_persediaan,
						concat('Penggunaan Sparepart Perakitan Barang - ',var_id_item_material),
						-1*var_total_cost_material);

	elseif var_detail = 3 THEN
		
		insert into mst_assembly_conversion (
			no_assembly,
			id_cost,
			qty_hour,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_assembly,
			var_id_cost_conversion,
			var_qty_hour_conversion,
			var_cost_conversion,
			var_notes_conversion,
			var_total_cost_conversion
		);

		
		select id_account into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_assembly,
						var_id_account,
						concat('Biaya Konversi Perakitan Barang - ',var_no_assembly),
						-1*var_total_cost_conversion);
		
		if varloop = 0 THEN
			
			select id_account into var_id_account_bb from i_set_account_def where acc_parameter = 'acc_temp_material_cost';
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_bb,
						concat('Biaya Sparepart Perakitan No - ',var_no_assembly),
						var_summary_cost_sparepart);

			
			select id_account_hpp into var_id_account_hpp  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_hpp,
						concat('Biaya Konversi Perakitan No - ',var_no_assembly),
						var_summary_cost_conversion);
	
			
			select id_account into var_id_account_wip from i_set_account_def where acc_parameter = 'acc_temp_wip';	
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
				values (var_no_assembly,
						var_id_account_wip,
						concat('Harga Pokok Perakitan - ',var_no_assembly),
						-1*(var_summary_cost_sparepart + var_summary_cost_conversion));

			
			select a.id_account_cogs_manufacture into var_id_account_hpp from i_cogs_acc_setting a inner join mst_item b on b.id_account = a.id_account_inv where b.id_item = var_id_item;		
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_hpp,
						concat('Harga Pokok Perakitan - ',var_no_assembly),
						var_summary_cost_sparepart + var_summary_cost_conversion);

			
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_bb,
						concat('Harga Pokok Perakitan Item - ', var_id_item),
						-1*var_summary_cost_sparepart);

			select id_account_hpp into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Harga Pokok Perakitan Item - ', var_id_item),
						-1*var_summary_cost_conversion);

			
			select id_account into var_id_account_persediaan from mst_item where id_item = var_id_item;	
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_persediaan,
						concat('Perakitan Barang - ',var_no_assembly),
						var_summary_cost_sparepart + var_summary_cost_conversion);

			
			select a.id_account_cogs_manufacture into var_id_account_hpp from i_cogs_acc_setting a inner join mst_item b on b.id_account = a.id_account_inv where b.id_item = var_id_item;					
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
				values (var_no_assembly,
						var_id_account_hpp,
						concat('Perakitan Barang - ',var_no_assembly),
						-1*(var_summary_cost_sparepart + var_summary_cost_conversion));

			end if;

			
			select id_account into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Biaya Konversi Sesungguhnya - ', var_no_assembly),
						var_summary_cost_conversion);
	
			
			select id_account_hpp into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Biaya Konversi Sesungguhnya - ', var_no_assembly),
						-1*var_summary_cost_conversion);

			
			select id_account_hpp into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Distribusi Biaya Konversi Sesungguhnya ke Ikhtisar LR - ', var_no_assembly),
						var_summary_cost_conversion);

			
			select id_account_lr into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Distribusi Biaya Konversi Sesungguhnya ke Ikhtisar LR - ', var_no_assembly),
						-1*var_summary_cost_conversion);

		end if;

ELSEIF TRANSID = 'INSERT' THEN
	
	if var_detail = 0 then
	
	insert into mst_assembly_head(
			no_assembly,
			id_item,
			notes,
			qty_item_production,
			id_unit,
			date_trn,
			modified_user,
			created_date,
			modified_date,
			created_user
		)
		values(var_no_assembly,
			var_id_item,
			var_notes,
			var_qty_item_production,
			var_id_unit,
			var_date_trn,
			var_modified_user,
			var_created_date,
			var_modified_date,
			var_created_user
		);

		select id_warehouse into var_warehouse from mst_item where id_item = var_id_item;
		if varloop = 0 THEN
			delete from i_stock_in where no_stock_in = var_no_assembly;
		end if;
		insert into i_stock_in
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_assembly,
			 var_date_trn,
			 var_id_item,
			 var_qty_item_production,
			 var_id_unit,
			 0,
			 0,
			 var_warehouse
			);

		if varloop=0 THEN
			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
			values(var_no_assembly,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Assembly Cost Form',
						var_summary_cost_sparepart + var_summary_cost_conversion);		

		

		
		select id_account into var_id_account_wip from i_set_account_def where acc_parameter = 'acc_temp_wip';	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_assembly,
						var_id_account_wip,
						concat('Barang Dalam Proses - ',var_no_assembly),
						var_summary_cost_sparepart + var_summary_cost_conversion);

		end if;

	elseif var_detail = 1 THEN
		
		insert into mst_assembly_sparepart (
			no_assembly,
			id_item,
			qty_material,
			id_unit,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_assembly,
			var_id_item_material,
			var_qty_material,
			var_id_unit_material,
			var_cost_material,
			var_notes_material,
			var_total_cost_material
		);
		
		select id_warehouse into var_warehouse from mst_item where id_item = var_id_item_material;
		if varloop = 0 THEN
			delete from i_stock_out where no_stock_out = var_no_assembly;
		end if;
		insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_assembly,
			 var_date_trn,
			 var_id_item_material,
			 var_qty_material,
			 var_id_unit_material,
			 round(var_cost_material),
			 round(var_cost_material),
			 var_warehouse
			);

		
		select id_account into var_id_account_persediaan from mst_item where id_item = var_id_item_material;	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_assembly,
						var_id_account_persediaan,
						concat('Penggunaan Sparepart Perakitan Barang - ',var_id_item_material),
						-1*var_total_cost_material);

	elseif var_detail = 3 THEN
		
		insert into mst_assembly_conversion (
			no_assembly,
			id_cost,
			qty_hour,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_assembly,
			var_id_cost_conversion,
			var_qty_hour_conversion,
			var_cost_conversion,
			var_notes_conversion,
			var_total_cost_conversion
		);

		
		select id_account into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_assembly,
						var_id_account,
						concat('Biaya Konversi Perakitan Barang - ',var_no_assembly),
						-1*var_total_cost_conversion);
		
		if varloop = 0 THEN
			
			select id_account into var_id_account_bb from i_set_account_def where acc_parameter = 'acc_temp_material_cost';
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_bb,
						concat('Biaya Sparepart Perakitan No - ',var_no_assembly),
						var_summary_cost_sparepart);

			
			select id_account_hpp into var_id_account_hpp  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_hpp,
						concat('Biaya Konversi Perakitan No - ',var_no_assembly),
						var_summary_cost_conversion);
	
			
			select id_account into var_id_account_wip from i_set_account_def where acc_parameter = 'acc_temp_wip';	
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
				values (var_no_assembly,
						var_id_account_wip,
						concat('Harga Pokok Perakitan - ',var_no_assembly),
						-1*(var_summary_cost_sparepart + var_summary_cost_conversion));

			
			select a.id_account_cogs_manufacture into var_id_account_hpp from i_cogs_acc_setting a inner join mst_item b on b.id_account = a.id_account_inv where b.id_item = var_id_item;		
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_hpp,
						concat('Harga Pokok Perakitan - ',var_no_assembly),
						var_summary_cost_sparepart + var_summary_cost_conversion);

			
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_bb,
						concat('Harga Pokok Perakitan Item - ', var_id_item),
						-1*var_summary_cost_sparepart);

			select id_account_hpp into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Harga Pokok Perakitan Item - ', var_id_item),
						-1*var_summary_cost_conversion);

			
			select id_account into var_id_account_persediaan from mst_item where id_item = var_id_item;	
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_persediaan,
						concat('Perakitan Barang - ',var_no_assembly),
						var_summary_cost_sparepart + var_summary_cost_conversion);

			
			select a.id_account_cogs_manufacture into var_id_account_hpp from i_cogs_acc_setting a inner join mst_item b on b.id_account = a.id_account_inv where b.id_item = var_id_item;					
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
				values (var_no_assembly,
						var_id_account_hpp,
						concat('Perakitan Barang - ',var_no_assembly),
						-1*(var_summary_cost_sparepart + var_summary_cost_conversion));

			end if;

			
			select id_account into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Biaya Konversi Sesungguhnya - ', var_no_assembly),
						var_summary_cost_conversion);
	
			
			select id_account_hpp into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Biaya Konversi Sesungguhnya - ', var_no_assembly),
						-1*var_summary_cost_conversion);

			
			select id_account_hpp into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Distribusi Biaya Konversi Sesungguhnya ke Ikhtisar LR - ', var_no_assembly),
						var_summary_cost_conversion);

			
			select id_account_lr into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Distribusi Biaya Konversi Sesungguhnya ke Ikhtisar LR - ', var_no_assembly),
						-1*var_summary_cost_conversion);

		end if;

ELSEIF TRANSID = 'DELETE' THEN

		delete from trn_ledger_det where no_ledger = var_no_assembly;
		delete from trn_ledger_head where no_ledger = var_no_assembly;
		DELETE FROM i_stock_in WHERE NO_stock_in = var_no_assembly;
		DELETE FROM i_stock_out WHERE NO_stock_out = var_no_assembly;
		delete from mst_assembly_conversion where no_assembly = var_no_assembly;
		delete from mst_assembly_sparepart where no_assembly = var_no_assembly;
		delete from mst_assembly_head where no_assembly = var_no_assembly;

			
END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_assembly_copy` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_assembly_copy`(in var_no_assembly varchar(60), in var_id_item varchar(60), in var_notes text, in var_qty_item_production double, in var_id_unit varchar(30), in var_date_trn date,in var_modified_user varchar(30), in var_created_date datetime, in var_modified_date datetime, in var_created_user varchar(30), in var_id_item_material varchar(60), in var_qty_material double, in var_id_unit_material varchar(30), in var_cost_material double, in var_notes_material text, in var_total_cost_material double,in var_id_cost_conversion varchar(60),in var_qty_hour_conversion double,in var_cost_conversion double,in var_notes_conversion text,in var_total_cost_conversion double, in var_detail integer, in varloop integer, in transid varchar(120), in var_summary_cost_conversion double, in var_summary_cost_sparepart double)
BEGIN

declare var_warehouse varchar(30);
declare var_id_account varchar(60);
declare var_id_account_persediaan varchar(60);
declare var_id_account_wip varchar(60);
declare var_id_account_bahan varchar(60);
declare var_id_account_hpp varchar(60);
declare var_id_account_bb varchar(60);
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;


START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_ledger_det where no_ledger = var_no_assembly;
		delete from trn_ledger_head where no_ledger = var_no_assembly;
		DELETE FROM i_stock_in WHERE NO_stock_in = var_no_assembly;
		DELETE FROM i_stock_out WHERE NO_stock_out = var_no_assembly;
		delete from mst_assembly_conversion where no_assembly = var_no_assembly;
		delete from mst_assembly_sparepart where no_assembly = var_no_assembly;
		delete from mst_assembly_head where no_assembly = var_no_assembly;

	insert into mst_assembly_head(
			no_assembly,
			id_item,
			notes,
			qty_item_production,
			id_unit,
			date_trn,
			modified_user,
			created_date,
			modified_date,
			created_user
		)
		values(var_no_assembly,
			var_id_item,
			var_notes,
			var_qty_item_production,
			var_id_unit,
			var_date_trn,
			var_modified_user,
			var_created_date,
			var_modified_date,
			var_created_user
		);

		select id_warehouse into var_warehouse from mst_item where id_item = var_id_item;
		if varloop = 0 THEN
			delete from i_stock_in where no_stock_in = var_no_assembly;
		end if;
		insert into i_stock_in
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_assembly,
			 var_date_trn,
			 var_id_item,
			 var_qty_item_production,
			 var_id_unit,
			 0,
			 0,
			 var_warehouse
			);

		if varloop=0 THEN
			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
			values(var_no_assembly,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Assembly Cost Form',
						var_summary_cost_sparepart + var_summary_cost_conversion);		

		

		
		select id_account into var_id_account_wip from i_set_account_def where acc_parameter = 'acc_temp_wip';	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_assembly,
						var_id_account_wip,
						concat('Barang Dalam Proses - ',var_no_assembly),
						var_summary_cost_sparepart + var_summary_cost_conversion);

		end if;

	elseif var_detail = 1 THEN
		
		insert into mst_assembly_sparepart (
			no_assembly,
			id_item,
			qty_material,
			id_unit,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_assembly,
			var_id_item_material,
			var_qty_material,
			var_id_unit_material,
			var_cost_material,
			var_notes_material,
			var_total_cost_material
		);
		
		select id_warehouse into var_warehouse from mst_item where id_item = var_id_item_material;
		if varloop = 0 THEN
			delete from i_stock_out where no_stock_out = var_no_assembly;
		end if;
		insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_assembly,
			 var_date_trn,
			 var_id_item_material,
			 var_qty_material,
			 var_id_unit_material,
			 round(var_cost_material),
			 round(var_cost_material),
			 var_warehouse
			);

		
		select id_account into var_id_account_persediaan from mst_item where id_item = var_id_item_material;	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_assembly,
						var_id_account_persediaan,
						concat('Penggunaan Sparepart Perakitan Barang - ',var_id_item_material),
						-1*var_total_cost_material);

	elseif var_detail = 3 THEN
		
		insert into mst_assembly_conversion (
			no_assembly,
			id_cost,
			qty_hour,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_assembly,
			var_id_cost_conversion,
			var_qty_hour_conversion,
			var_cost_conversion,
			var_notes_conversion,
			var_total_cost_conversion
		);

		
		select id_account into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_assembly,
						var_id_account,
						concat('Biaya Konversi Perakitan Barang - ',var_no_assembly),
						-1*var_total_cost_conversion);
		
		if varloop = 0 THEN
			
			select id_account into var_id_account_bb from i_set_account_def where acc_parameter = 'acc_temp_material_cost';
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_bb,
						concat('Biaya Sparepart Perakitan No - ',var_no_assembly),
						var_summary_cost_sparepart);

			
			select id_account_hpp into var_id_account_hpp  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_hpp,
						concat('Biaya Konversi Perakitan No - ',var_no_assembly),
						var_summary_cost_conversion);
	
			
			select id_account into var_id_account_wip from i_set_account_def where acc_parameter = 'acc_temp_wip';	
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
				values (var_no_assembly,
						var_id_account_wip,
						concat('Harga Pokok Perakitan - ',var_no_assembly),
						-1*(var_summary_cost_sparepart + var_summary_cost_conversion));

			
			select a.id_account_cogs_manufacture into var_id_account_hpp from i_cogs_acc_setting a inner join mst_item b on b.id_account = a.id_account_inv where b.id_item = var_id_item;		
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_hpp,
						concat('Harga Pokok Perakitan - ',var_no_assembly),
						var_summary_cost_sparepart + var_summary_cost_conversion);

			
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_bb,
						concat('Harga Pokok Perakitan Item - ', var_id_item),
						-1*var_summary_cost_sparepart);

			select id_account_hpp into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Harga Pokok Perakitan Item - ', var_id_item),
						-1*var_summary_cost_conversion);

			
			select id_account into var_id_account_persediaan from mst_item where id_item = var_id_item;	
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_persediaan,
						concat('Perakitan Barang - ',var_no_assembly),
						var_summary_cost_sparepart + var_summary_cost_conversion);

			
			select a.id_account_cogs_manufacture into var_id_account_hpp from i_cogs_acc_setting a inner join mst_item b on b.id_account = a.id_account_inv where b.id_item = var_id_item;					
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
				values (var_no_assembly,
						var_id_account_hpp,
						concat('Perakitan Barang - ',var_no_assembly),
						-1*(var_summary_cost_sparepart + var_summary_cost_conversion));

			end if;

			
			select id_account into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Biaya Konversi Sesungguhnya - ', var_no_assembly),
						var_summary_cost_conversion);
	
			
			select id_account_hpp into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Biaya Konversi Sesungguhnya - ', var_no_assembly),
						-1*var_summary_cost_conversion);

			
			select id_account_hpp into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Distribusi Biaya Konversi Sesungguhnya ke Ikhtisar LR - ', var_no_assembly),
						var_summary_cost_conversion);

			
			select id_account_lr into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Distribusi Biaya Konversi Sesungguhnya ke Ikhtisar LR - ', var_no_assembly),
						-1*var_summary_cost_conversion);

		end if;

ELSEIF TRANSID = 'INSERT' THEN
	
	if var_detail = 0 then
	
	insert into mst_assembly_head(
			no_assembly,
			id_item,
			notes,
			qty_item_production,
			id_unit,
			date_trn,
			modified_user,
			created_date,
			modified_date,
			created_user
		)
		values(var_no_assembly,
			var_id_item,
			var_notes,
			var_qty_item_production,
			var_id_unit,
			var_date_trn,
			var_modified_user,
			var_created_date,
			var_modified_date,
			var_created_user
		);

		select id_warehouse into var_warehouse from mst_item where id_item = var_id_item;
		if varloop = 0 THEN
			delete from i_stock_in where no_stock_in = var_no_assembly;
		end if;
		insert into i_stock_in
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_assembly,
			 var_date_trn,
			 var_id_item,
			 var_qty_item_production,
			 var_id_unit,
			 0,
			 0,
			 var_warehouse
			);

		if varloop=0 THEN
			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
			values(var_no_assembly,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Assembly Cost Form',
						var_summary_cost_sparepart + var_summary_cost_conversion);		

		

		
		select id_account into var_id_account_wip from i_set_account_def where acc_parameter = 'acc_temp_wip';	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_assembly,
						var_id_account_wip,
						concat('Barang Dalam Proses - ',var_no_assembly),
						var_summary_cost_sparepart + var_summary_cost_conversion);

		end if;

	elseif var_detail = 1 THEN
		
		insert into mst_assembly_sparepart (
			no_assembly,
			id_item,
			qty_material,
			id_unit,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_assembly,
			var_id_item_material,
			var_qty_material,
			var_id_unit_material,
			var_cost_material,
			var_notes_material,
			var_total_cost_material
		);
		
		select id_warehouse into var_warehouse from mst_item where id_item = var_id_item_material;
		if varloop = 0 THEN
			delete from i_stock_out where no_stock_out = var_no_assembly;
		end if;
		insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_assembly,
			 var_date_trn,
			 var_id_item_material,
			 var_qty_material,
			 var_id_unit_material,
			 round(var_cost_material),
			 round(var_cost_material),
			 var_warehouse
			);

		
		select id_account into var_id_account_persediaan from mst_item where id_item = var_id_item_material;	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_assembly,
						var_id_account_persediaan,
						concat('Penggunaan Sparepart Perakitan Barang - ',var_id_item_material),
						-1*var_total_cost_material);

	elseif var_detail = 3 THEN
		
		insert into mst_assembly_conversion (
			no_assembly,
			id_cost,
			qty_hour,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_assembly,
			var_id_cost_conversion,
			var_qty_hour_conversion,
			var_cost_conversion,
			var_notes_conversion,
			var_total_cost_conversion
		);

		
		select id_account into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_assembly,
						var_id_account,
						concat('Biaya Konversi Perakitan Barang - ',var_no_assembly),
						-1*var_total_cost_conversion);
		
		if varloop = 0 THEN
			
			select id_account into var_id_account_bb from i_set_account_def where acc_parameter = 'acc_temp_material_cost';
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_bb,
						concat('Biaya Sparepart Perakitan No - ',var_no_assembly),
						var_summary_cost_sparepart);

			
			select id_account_hpp into var_id_account_hpp  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_hpp,
						concat('Biaya Konversi Perakitan No - ',var_no_assembly),
						var_summary_cost_conversion);
	
			
			select id_account into var_id_account_wip from i_set_account_def where acc_parameter = 'acc_temp_wip';	
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
				values (var_no_assembly,
						var_id_account_wip,
						concat('Harga Pokok Perakitan - ',var_no_assembly),
						-1*(var_summary_cost_sparepart + var_summary_cost_conversion));

			
			select a.id_account_cogs_manufacture into var_id_account_hpp from i_cogs_acc_setting a inner join mst_item b on b.id_account = a.id_account_inv where b.id_item = var_id_item;		
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_hpp,
						concat('Harga Pokok Perakitan - ',var_no_assembly),
						var_summary_cost_sparepart + var_summary_cost_conversion);

			
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_bb,
						concat('Harga Pokok Perakitan Item - ', var_id_item),
						-1*var_summary_cost_sparepart);

			select id_account_hpp into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Harga Pokok Perakitan Item - ', var_id_item),
						-1*var_summary_cost_conversion);

			
			select id_account into var_id_account_persediaan from mst_item where id_item = var_id_item;	
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account_persediaan,
						concat('Perakitan Barang - ',var_no_assembly),
						var_summary_cost_sparepart + var_summary_cost_conversion);

			
			select a.id_account_cogs_manufacture into var_id_account_hpp from i_cogs_acc_setting a inner join mst_item b on b.id_account = a.id_account_inv where b.id_item = var_id_item;					
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
				values (var_no_assembly,
						var_id_account_hpp,
						concat('Perakitan Barang - ',var_no_assembly),
						-1*(var_summary_cost_sparepart + var_summary_cost_conversion));

			end if;

			
			select id_account into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Biaya Konversi Sesungguhnya - ', var_no_assembly),
						var_summary_cost_conversion);
	
			
			select id_account_hpp into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Biaya Konversi Sesungguhnya - ', var_no_assembly),
						-1*var_summary_cost_conversion);

			
			select id_account_hpp into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Distribusi Biaya Konversi Sesungguhnya ke Ikhtisar LR - ', var_no_assembly),
						var_summary_cost_conversion);

			
			select id_account_lr into var_id_account  from mst_standard_cost where id_cost = var_id_cost_conversion;
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_assembly,
						var_id_account,
						concat('Distribusi Biaya Konversi Sesungguhnya ke Ikhtisar LR - ', var_no_assembly),
						-1*var_summary_cost_conversion);

		end if;

ELSEIF TRANSID = 'DELETE' THEN

		delete from trn_ledger_det where no_ledger = var_no_assembly;
		delete from trn_ledger_head where no_ledger = var_no_assembly;
		DELETE FROM i_stock_in WHERE NO_stock_in = var_no_assembly;
		DELETE FROM i_stock_out WHERE NO_stock_out = var_no_assembly;
		delete from mst_assembly_conversion where no_assembly = var_no_assembly;
		delete from mst_assembly_sparepart where no_assembly = var_no_assembly;
		delete from mst_assembly_head where no_assembly = var_no_assembly;

			
END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_asset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_asset`(in var_id_aset varchar(30), in var_id_golongan varchar(30),in var_nama varchar(250), in var_notes text,in var_tanggal_perolehan date,in var_nilai_perolehan double,in var_sawal_nilai_buku double,in var_created_date datetime, in var_modified_date datetime,in var_created_user varchar(120),in var_modified_user varchar(120), transid varchar(60), in var_id_department integer)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;
	
IF TRANSID = 'UPDATE' THEN
	BEGIN
		UPDATE mst_aset
		SET 
			id_aset = var_id_aset,
			id_golongan = var_id_golongan,
			nama = var_nama,
			notes = var_notes,
			tanggal_perolehan = var_tanggal_perolehan,
			nilai_perolehan = var_nilai_perolehan,
			sawal_nilai_buku = var_sawal_nilai_buku,
			id_department = var_id_department, 
			created_date = var_created_date,
			modified_date = var_modified_date,
			created_user = var_created_user,
			modified_user = var_modified_user
		WHERE
			id_aset = var_id_aset;
	END;
ELSEIF TRANSID = 'INSERT' THEN
BEGIN
	INSERT INTO mst_aset (
		id_aset,
		id_golongan,
		nama,
		notes,
		tanggal_perolehan,
		nilai_perolehan,
		sawal_nilai_buku,
		id_department,
		created_date,
		modified_date,
		created_user,
		modified_user
	)
VALUES
	(
		var_id_aset,
		var_id_golongan,
		var_nama,
		var_notes,
		var_tanggal_perolehan,
		var_nilai_perolehan,
		var_sawal_nilai_buku,
		var_id_department,
		var_created_date,
		var_modified_date,
		var_created_user,
		var_modified_user
	);

END;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	DELETE
FROM
	mst_aset
WHERE
	id_aset = var_id_aset;
END;

END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_bayar_pinjaman` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_bayar_pinjaman`(in var_no_bayar varchar(120), in var_no_pinjam varchar(120), in var_saldo_pinjaman double, in var_date_trn date, in var_nominal_bayar double, in TRANSID varchar(120), in var_nominal_bunga double, in var_due_date date, in var_status_lunas integer)
BEGIN
declare ar_balance_before double;
	declare var_id_account varchar(120);

	IF TRANSID = 'UPDATE' THEN
	BEGIN
			
			delete from trn_ledger_det where no_ledger = var_no_bayar;
		delete from trn_ledger_head where no_ledger = var_no_bayar;

			UPDATE trn_pinjam_bayar
				set
				no_pinjam = var_no_pinjam,
				saldo_pinjaman = var_saldo_pinjaman,
				date_trn = var_date_trn,
				nominal_bayar = var_nominal_bayar,
				nominal_bunga=var_nominal_bunga,
				due_date = var_due_date
			WHERE
				no_bayar = var_no_bayar;
		
	update trn_pinjam set status_lunas = var_status_lunas  where no_pinjam = var_no_pinjam;

			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_bayar,
					 var_date_trn,
					 concat('Pembayaran Pinjaman Koperasi dengan No Pinjaman - ',var_no_pinjam),
				   'admin',
					 var_date_trn,
					 'admin',
					 var_date_trn,
					 'Pembayaran Koperasi Form',
						var_nominal_bunga);



		
		select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_cash_cashier';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_bayar,
						var_id_account,
						concat('Pembayaran Pinjaman Koperasi dengan No Pinjaman - ',var_no_pinjam),
						var_nominal_bunga);

		
		select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_other_revenue';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_bayar,
						var_id_account,
						concat('Pembayaran Pinjaman Koperasi dengan No Pinjaman - ',var_no_pinjam),
						-1*var_nominal_bunga);

	END;

	ELSEIF TRANSID = 'INSERT' THEN
	BEGIN
	
			INSERT INTO trn_pinjam_bayar (
				no_bayar,
				no_pinjam,
				saldo_pinjaman,
				date_trn,
				nominal_bayar,
				nominal_bunga,
			  due_date
			)
			VALUES
			(
				var_no_bayar,
				var_no_pinjam,
				var_saldo_pinjaman,
				var_date_trn,
				var_nominal_bayar,
				var_nominal_bunga,
			  var_due_date
			);
			
			
			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_bayar,
					 var_date_trn,
					 concat('Pembayaran Pinjaman Koperasi dengan No Pinjaman - ',var_no_pinjam),
				   'admin',
					 var_date_trn,
					 'admin',
					 var_date_trn,
					 'Pembayaran Koperasi Form',
						var_nominal_bunga);


		update trn_pinjam set status_lunas = var_status_lunas  where no_pinjam = var_no_pinjam;
		
		select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_cash_cashier';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_bayar,
						var_id_account,
						concat('Pembayaran Pinjaman Koperasi dengan No Pinjaman - ',var_no_pinjam),
						var_nominal_bunga);

		
		select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_other_revenue';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_bayar,
						var_id_account,
						concat('Pembayaran Pinjaman Koperasi dengan No Pinjaman - ',var_no_pinjam),
						-1*var_nominal_bunga);

	
if var_status_lunas = 1 then
		select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_credit_sales';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_pinjam,
						var_id_account,
						concat('Pelunasan Pinjaman Koperasi dengan no - ',var_no_pinjam),
						-1*var_saldo_pinjaman);

		
		select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_cash_cashier';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_pinjam,
						var_id_account,
						concat('Pelunasan Pinjaman Koperasi dengan no - ',var_no_pinjam),
						var_saldo_pinjaman);
end if;


	END;

	ELSEIF TRANSID = 'DELETE' THEN
	BEGIN


		DELETE
		FROM
			trn_pinjam_bayar
		WHERE
			no_bayar = var_no_bayar;

		delete from trn_ledger_det where no_ledger = var_no_bayar;
		delete from trn_ledger_head where no_ledger = var_no_bayar;

	END;

	END IF;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_begbalance` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_begbalance`(in var_id_item varchar(30), in var_nm_item varchar(250),in var_balance double, in var_notes text, in var_price double, in var_loop integer)
BEGIN
declare var_date_trn date;
declare var_status_update int;
declare var_jml int;
declare var_unit varchar(30);
declare var_company varchar(120);
declare var_id_account varchar(30);

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

select now() into var_date_trn;
select count(id_item) into var_jml from i_item_beg_balance where id_item = var_id_item and balance <>0;
select main_unit into var_unit from mst_item where id_item = var_id_item;
select company_name into var_company from mst_company where flag_active = 1;

if var_jml = 0 then
	set var_status_update = 0;
ELSEIF var_jml > 0 then
	set var_status_update = 1;
end if;

if var_balance > 0 then 
	UPDATE i_item_beg_balance 
SET 
balance = replace(var_balance,',',''),
price = replace(var_price,',',''),
notes = var_notes,
status_update = 1
WHERE
	id_item  = var_id_item;
elseif var_balance = 0 THEN
	UPDATE i_item_beg_balance 
SET 
balance = 0,
price = 0,
notes = '',
status_update = 0
WHERE
	id_item  = var_id_item;
end if;

select id_account into var_id_account from mst_item where id_item = var_id_item;
if var_loop = 0 then
	update mst_account set beg_balance = 0 where id_account = var_id_account;
end if;
update mst_account set beg_balance = beg_balance + (replace(var_balance,',','') * replace(var_price,',',''))  where id_account = var_id_account;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_biaya_ekspedisi` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_biaya_ekspedisi`(in var_no_ekspedisi varchar(30), in var_date_trn date, in var_total double, in var_id_currency varchar(30),in var_id_account varchar(30), in var_notes text,in var_kurs double, in var_created_date date, in var_created_user varchar(30), in var_modified_date date, in var_modified_user varchar(30), in var_no_do varchar(120), in var_no_resi varchar(60), in var_freight_address varchar(250), in var_freight_city varchar(120), in var_freight_cost double, in var_detail integer, in varloop integer, in TRANSID varchar(30))
BEGIN
declare var_rnd_ekspedisi double;
declare var_convert_nom double;
declare var_account_ekspedisi varchar(30);

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;
	
	set var_convert_nom = var_kurs;
		if var_convert_nom is null THEN
			set var_convert_nom = 1;
		end if;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_ledger_det where no_ledger = var_no_ekspedisi;
		delete from trn_ledger_head where no_ledger = var_no_ekspedisi;
		delete from trn_ekspedisi_det where no_ekspedisi = var_no_ekspedisi;
		delete from trn_ekspedisi_head where no_ekspedisi = var_no_ekspedisi;
	
		insert into trn_ekspedisi_head(
			 no_ekspedisi,
			 date_trn,
			 total,
			 id_currency,
			 id_account,
			 kurs,
			 notes,
			 created_date,
			 created_user,
			 modified_date,
			 modified_user
			)
		values(
			 var_no_ekspedisi,
			 var_date_trn,
			 var_total,
			 var_id_currency,
			 var_id_account,
			 var_kurs,
			 var_notes,
			 var_created_date,
			 var_created_user,
			 var_modified_date,
			 var_modified_user
			);

			set var_rnd_ekspedisi = round((var_total * var_convert_nom),0);
			if var_rnd_ekspedisi is null then 
				set var_rnd_ekspedisi = 0;
			end if;

		if var_rnd_ekspedisi > 0 then
			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_ekspedisi,
					 var_date_trn,
					 'Pembayaran Kurir - Ekspedisi',
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Ekspedisi Delivery Form',
						var_rnd_ekspedisi);

		
		select id_account into var_account_ekspedisi from i_set_account_def where acc_parameter = 'acc_freight_sales' limit 1;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_ekspedisi,
						var_account_ekspedisi,
						concat('Pembayaran Ekspedisi - ',var_no_ekspedisi),
						var_rnd_ekspedisi);

		
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_ekspedisi,
						var_id_account,
						concat('Pembayaran Ekspedisi  - ',var_no_ekspedisi),
						-1*var_rnd_ekspedisi);
		end if;
		
	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_ekspedisi_det where no_ekspedisi = var_no_ekspedisi;			
		end if;
		insert into trn_ekspedisi_det 
			(no_ekspedisi,
			 no_do,
			 no_resi,
			 freight_address,
			 freight_city,
			 freight_cost
			)
		values (var_no_ekspedisi,
				var_no_do,
				var_no_resi,
				var_freight_address,
				var_freight_city,
				var_freight_cost
			);
		end if;
	ELSEIF TRANSID = 'INSERT' THEN
	if var_detail = 0 then
		insert into trn_ekspedisi_head(
			 no_ekspedisi,
			 date_trn,
			 total,
			 id_currency,
			 id_account,
			 kurs,
			 notes,
			 created_date,
			 created_user,
			 modified_date,
			 modified_user
			)
		values(
			 var_no_ekspedisi,
			 var_date_trn,
			 var_total,
			 var_id_currency,
			 var_id_account,
			 var_kurs,
			 var_notes,
			 var_created_date,
			 var_created_user,
			 var_modified_date,
			 var_modified_user
			);

			set var_rnd_ekspedisi = round((var_total * var_convert_nom),0);
			if var_rnd_ekspedisi is null then 
				set var_rnd_ekspedisi = 0;
			end if;

		if var_rnd_ekspedisi > 0 then
			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_ekspedisi,
					 var_date_trn,
					 'Pembayaran Kurir - Ekspedisi',
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Ekspedisi Delivery Form',
						var_rnd_ekspedisi);

		
		select id_account into var_account_ekspedisi from i_set_account_def where acc_parameter = 'acc_freight_sales' limit 1;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_ekspedisi,
						var_account_ekspedisi,
						concat('Pembayaran Ekspedisi - ',var_no_ekspedisi),
						var_rnd_ekspedisi);

		
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_ekspedisi,
						var_id_account,
						concat('Pembayaran Ekspedisi  - ',var_no_ekspedisi),
						-1*var_rnd_ekspedisi);
		end if;
		
	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_ekspedisi_det where no_ekspedisi = var_no_ekspedisi;			
		end if;
		insert into trn_ekspedisi_det 
			(no_ekspedisi,
			 no_do,
			 no_resi,
			 freight_address,
			 freight_city,
			 freight_cost
			)
		values (var_no_ekspedisi,
				var_no_do,
				var_no_resi,
				var_freight_address,
				var_freight_city,
				var_freight_cost
			);
		end if;

	ELSEIF TRANSID = 'DELETE' THEN
		delete from trn_ledger_det where no_ledger = var_no_ekspedisi;
		delete from trn_ledger_head where no_ledger = var_no_ekspedisi;
		delete from trn_ekspedisi_det where no_ekspedisi = var_no_ekspedisi;
		delete from trn_ekspedisi_head where no_ekspedisi = var_no_ekspedisi;
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_billofmaterial` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_billofmaterial`(in var_no_bom varchar(60), in var_id_item varchar(60), in var_notes text, in var_qty_item_production double, in var_id_unit varchar(30), in var_date_trn date,in var_modified_user varchar(30), in var_created_date datetime, in var_modified_date datetime, in var_created_user varchar(30), in var_id_item_material varchar(60), in var_qty_material double, in var_id_unit_material varchar(30), in var_cost_material double, in var_notes_material text, in var_total_cost_material double, in var_id_item_wip varchar(60), in var_qty_material_wip double,in var_id_unit_wip varchar(30),in var_cost_wip double,in var_notes_wip text,in var_total_cost_wip double,in var_id_cost_conversion varchar(60),in var_qty_hour_conversion double,in var_cost_conversion double,in var_notes_conversion text,in var_total_cost_conversion double, in var_detail integer, in varloop integer, in transid varchar(120), in var_total_cost_bom double)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from mst_bom_conversion where no_bom = var_no_bom;
		delete from mst_bom_wip where no_bom = var_no_bom;
		delete from mst_bom_material where no_bom = var_no_bom;
		delete from mst_bom_head where no_bom = var_no_bom;

		insert into mst_bom_head(
			no_bom,
			id_item,
			notes,
			qty_item_production,
			id_unit,
			date_trn,
			total_cost,
			modified_user,
			created_date,
			modified_date,
			created_user
		)
		values(var_no_bom,
			var_id_item,
			var_notes,
			var_qty_item_production,
			var_id_unit,
			var_date_trn,
			var_total_cost_bom,
			var_modified_user,
			var_created_date,
			var_modified_date,
			var_created_user
		);

	elseif var_detail = 1 THEN
		
		insert into mst_bom_material (
			no_bom,
			id_item,
			qty_material,
			id_unit,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_bom,
			var_id_item_material,
			var_qty_material,
			var_id_unit_material,
			var_cost_material,
			var_notes_material,
			var_total_cost_material
		);

	elseif var_detail = 2 THEN
		
		insert into mst_bom_wip (
			no_bom,
			id_item,
			qty_material,
			id_unit,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_bom,
			var_id_item_wip,
			var_qty_material_wip,
			var_id_unit_wip,
			var_cost_wip,
			var_notes_wip,
			var_total_cost_wip
		);

	elseif var_detail = 3 THEN
		
		insert into mst_bom_conversion (
			no_bom,
			id_cost,
			qty_hour,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_bom,
			var_id_cost_conversion,
			var_qty_hour_conversion,
			var_cost_conversion,
			var_notes_conversion,
			var_total_cost_conversion
		);

	end if;


ELSEIF TRANSID = 'INSERT' THEN

	if var_detail = 0 then

		insert into mst_bom_head(
			no_bom,
			id_item,
			notes,
			qty_item_production,
			id_unit,
			date_trn,
			total_cost,
			modified_user,
			created_date,
			modified_date,
			created_user
		)
		values(var_no_bom,
			var_id_item,
			var_notes,
			var_qty_item_production,
			var_id_unit,
			var_date_trn,
			var_total_cost_bom,
			var_modified_user,
			var_created_date,
			var_modified_date,
			var_created_user
		);

	elseif var_detail = 1 THEN
		
		insert into mst_bom_material (
			no_bom,
			id_item,
			qty_material,
			id_unit,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_bom,
			var_id_item_material,
			var_qty_material,
			var_id_unit_material,
			var_cost_material,
			var_notes_material,
			var_total_cost_material
		);

	elseif var_detail = 2 THEN
		
		insert into mst_bom_wip (
			no_bom,
			id_item,
			qty_material,
			id_unit,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_bom,
			var_id_item_wip,
			var_qty_material_wip,
			var_id_unit_wip,
			var_cost_wip,
			var_notes_wip,
			var_total_cost_wip
		);

	elseif var_detail = 3 THEN
		
		insert into mst_bom_conversion (
			no_bom,
			id_cost,
			qty_hour,
			cost,
			notes,
			total_cost
		)
		values (
			var_no_bom,
			var_id_cost_conversion,
			var_qty_hour_conversion,
			var_cost_conversion,
			var_notes_conversion,
			var_total_cost_conversion
		);

	end if;

ELSEIF TRANSID = 'DELETE' THEN

	delete from mst_bom_conversion where no_bom = var_no_bom;
	delete from mst_bom_wip where no_bom = var_no_bom;
	delete from mst_bom_material where no_bom = var_no_bom;
	delete from mst_bom_head where no_bom = var_no_bom;
			
END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_calculate_cogs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_calculate_cogs`(in var_date_trn date, in var_id_item varchar(60))
BEGIN
	
		declare temp_no int;
		declare totalRow int;
		declare i int;
		declare firstdate date;
		declare cogsawal double;
		declare var_akum_qty_awal int;
		declare var_cogs_awal double;
		declare var_akum_qty_akhir int;
		declare var_cogs_akhir double;
		declare currentRec integer;
		declare rowPosition integer;

		DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		set i = 1;			
				
				insert into i_cogs(no_bukti,id_item,date_trn,qty,price,akum_qty,cogs)
				select 'Stock Awal', id_item, '1900-01-01', balance, case when price is null then 0 else price end as price,balance,case when price is null then 0 else price end as cogs from i_item_beg_balance where id_item = var_id_item;
				
						
							select no_urut into currentRec from i_cogs where id_item = var_id_item order by no_urut desc limit 1;

							select case when akum_qty is null then 0 else akum_qty end into var_akum_qty_awal from i_cogs where no_urut = currentRec-1 and id_item = var_id_item;		
							select case when cogs is null then 0 else cogs end into var_cogs_awal from i_cogs where no_urut = currentRec-1 and id_item = var_id_item;
				
						IF var_akum_qty_awal is null then 
							set var_akum_qty_awal = 0; 
						end if;

						if var_cogs_awal is null THEN
							set var_cogs_awal = 0;
						end if;

						insert into i_cogs(no_bukti,id_item,date_trn,qty,price,akum_qty,cogs) 
							select x.no_stock_in, x.id_item, x.date_trn, x.qty, x.price,(x.qty + var_akum_qty_awal),((x.qty*x.price)+(var_akum_qty_awal*var_cogs_awal))/(x.qty+var_akum_qty_awal) from (
							select no_stock_in, id_item, date_trn, qty, price from i_stock_in where  id_item = var_id_item
							union all 
							select no_stock_out, id_item, date_trn, -1*qty, cogs from i_stock_out where  id_item = var_id_item
							order by date_trn asc) 
						x;
					
					
			

COMMIT;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_cashier` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_cashier`(in var_no_sales varchar(30), in var_date_trn date, in var_customer varchar(30),in var_cust_address text,in var_cust_phone varchar(250), in var_payment_method integer, in var_subtotal double, in var_discount double, in var_tax double, in var_total double, in var_notes text, in var_created_user varchar(30), in var_created_date date, in var_modified_user varchar(30), in var_modified_date date, in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in var_qty integer, in var_id_unit varchar(25), in var_price double, in var_nominal double,in var_disc_nom double,in var_nominal_net double,  in var_id_curr varchar(25), in var_detail integer, in varloop integer, in transid varchar(120),  in var_cogs double, in var_chk_so integer, in var_term integer, in var_termpaydisc integer, in var_discpay integer,in var_flag_member integer, in var_cust_id varchar(30), in var_paid double, in var_weight double, in var_priceperweight double, in add_customer integer, in var_terbilang varchar(600))
BEGIN
declare var_pay_method integer;
declare var_id_account_head varchar(30);
declare var_id_account_det varchar(30);
declare var_id_account_cogs varchar(30);
declare var_id_account_disc varchar(30);
declare var_id_account_tax varchar(30);
declare var_id_account_sales varchar(30);
declare var_cogs double;
declare maks_record_cogs integer;
declare var_convert_nom double;
declare var_gudang_outlet varchar(60);

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

select func_get_convert_curr(func_get_defcurr()) into var_convert_nom;
		if var_convert_nom is null THEN
			set var_convert_nom = 1;
		end if;

select id_warehouse into var_gudang_outlet from mst_warehouse where is_outlet = 1 limit 1;
	
IF TRANSID = 'UPDATE' THEN
	
	if var_detail = 0 then
		delete from temp_no_nota;
		DELETE FROM i_stock_out WHERE NO_stock_out = var_no_sales;
		if var_payment_method = 2 then
			delete from ar_status where no_sales = var_no_sales;
		end if;
		delete from trn_ledger_det where no_ledger = var_no_sales;
		delete from trn_ledger_head where no_ledger = var_no_sales;
		delete from trn_cashier_det where no_sales = var_no_sales;
		delete from trn_cashier_head where no_sales = var_no_sales;
		
			if var_payment_method  = 1 THEN
				select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_cash_cashier';
			end if;

		insert into temp_no_nota(no_sales) values (var_no_sales);
		if var_chk_so = 1 then
		insert into trn_cashier_head(
			 no_sales,
			 date_trn,
			 customer,
			 cust_address,
			 cust_phone,
			 payment_method,
			 subtotal,
		   discount,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 term,
			 termpaydisc,
			 discpay,
			 paid,
			 terbilang
			)
		values(var_no_sales,
			 var_date_trn,
			 var_customer,
			 var_cust_address,
			 var_cust_phone,
			 var_payment_method,
			 var_subtotal,
		   var_discount,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_term,
			 var_termpaydisc,
			 var_discpay,
       var_paid,
			 var_terbilang
			);
		elseif var_chk_so = 0 THEN
			insert into trn_cashier_head(
			 no_sales,
			 date_trn,
			 customer,
			 cust_address,
			 cust_phone,
			 payment_method,
			 subtotal,
		   discount,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 term,
			 termpaydisc,
			 discpay,
			 paid,
			 terbilang
			)
		values(var_no_sales,
			 var_date_trn,
			 var_customer,
			 var_cust_address,
			 var_cust_phone,
			 var_payment_method,
			 var_subtotal,
		   var_discount,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_term,
			 var_termpaydisc,
			 var_discpay,
			 var_paid,
			 var_terbilang
			);
		end IF;


		if var_payment_method = 2 then
			insert into ar_status (
				no_sales,
				date_trn,
				id_customer,
				sales_amount,
				notes
			)
			values (
				var_no_sales,
				var_date_trn,
				var_customer,
				var_total,
				var_notes
			);
		end if;

		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_sales,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Form',
						var_total*var_convert_nom);

		select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_sales';
		select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_out';
		select id_account into var_id_account_sales from i_set_account_def where acc_parameter = 'acc_sales';

		if var_discount > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_disc,
						concat('Diskon Penjualan - ',var_no_sales),
						var_discount/100 * var_subtotal*var_convert_nom);
		end if;

		if var_tax > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_tax,
						concat('Pajak Penjualan - ',var_no_sales),
						-1*var_tax/100 * (var_subtotal-(var_discount/100 * var_subtotal)) * var_convert_nom);
		end if;

		if var_total > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_head,
						concat('Penjualan - ',var_no_sales),
						var_total*var_convert_nom);
		end if;

		if var_subtotal > 0 THEN
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_sales,
						concat('Penjualan - ',var_no_sales),
						-1*var_subtotal*var_convert_nom);
		end if;


	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_cashier_det where no_sales = var_no_sales;			
		end if;
		insert into trn_cashier_det 
			(no_sales,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 disc_nom,
			 nominal_net,
			 id_curr,
			 weight,
			 priceperweight
			)
		values (var_no_sales,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_disc_nom,
			 var_nominal_net,
			 var_id_curr,
			 var_weight,
			 var_priceperweight
			);

		if varloop = 0 THEN
			delete from i_stock_out where no_stock_out = var_no_sales;
		end if;
		insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
		   id_warehouse
			)
		values (var_no_sales,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_price,
       var_gudang_outlet
			);

		call sp_recalculate_cogs_avg(var_id_item,var_id_item,var_date_trn,var_date_trn,0);
		
		select case when max(nmb_asc) is null then 0 else max(nmb_asc) end into maks_record_cogs from lap_mutasi_hpp where id_item = var_id_item;
		if maks_record_cogs > 0 THEN
			set maks_record_cogs = maks_record_cogs -1;
		ELSE
			set maks_record_cogs = 0;
		end if;

		select case when price is null then 0 else price end into var_cogs from lap_mutasi_hpp where id_item = var_id_item and nmb_asc = maks_record_cogs;
		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;

		
		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;

	if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales and id_account in (var_id_account_cogs);
	end if;

	if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales,
						var_id_account_cogs,
						concat('HPP - ',var_id_item),
						var_cogs*var_qty*var_convert_nom);
	end if;

		if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales and id_account =  var_id_account_det;
	end if;

	if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales,
						var_id_account_det,
						concat('Penjualan - ',var_id_item),
						-1*var_cogs*var_qty*var_convert_nom);
	end if;
	
end if;


	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 then
		delete from temp_no_nota;
			if var_payment_method  = 1 THEN
				select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_cash_cashier';
			end if;
	
		insert into temp_no_nota(no_sales) values (var_no_sales);
		if add_customer = 0 THEN
			INSERT INTO mst_customer (
				id_customer,
				first_name,
				last_name,
				address,
				city,
				state,
				postal_code,
				country,
				phone1,
				phone2,
				phone3,
				fax,
				email,
				website,
				photo,
				credit_limit,
				id_account,
				notes,
				def_due_date,
				def_payment_method,
				status,
				modified_user,
				created_date,
				modified_date,
				created_user,
				ar_balance,
				id_barcode,
				flag_credit_limit
			)
			VALUES
			(
				(select func_nomor('MASTER CUSTOMER')),
				var_customer,
				'',
				var_cust_address,
				'',
				'',
				'',
				'INDONESIA',
				 var_cust_phone,
				'',
				'',
				'',
				'',
				'',
				'',
				0,
				(SELECT ID_ACCOUNT FROM i_set_account_def WHERE acc_parameter = 'acc_credit_sales'),
				'',
				(SELECT NOW()),
				1,
				1,
				var_modified_user,
				var_created_date,
				var_modified_date,
				var_created_user,
				0,
				'',
				0
			);
		end if;

	update control_no_master set nourut = (select func_update_nomor('MASTER CUSTOMER')) where form = 'MASTER CUSTOMER';

		if var_chk_so = 1 then

		insert into trn_cashier_head(
			 no_sales,
			 date_trn,
			 customer,
			 cust_address,
			 cust_phone,
			 payment_method,
			 subtotal,
		   discount,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 term,
			 termpaydisc,
			 discpay,
			 flag_member,
			 id_customer,
			 paid,
			 terbilang
			)
		values(var_no_sales,
			 var_date_trn,
			 var_customer,
			 var_cust_address,
			 var_cust_phone,
			 var_payment_method,
			 var_subtotal,
		   var_discount,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_term,
			 var_termpaydisc,
			 var_discpay,
			 var_flag_member,
			 var_cust_id,
			 var_paid,
			 var_terbilang
			);
		elseif var_chk_so = 0 THEN
			insert into trn_cashier_head(
			 no_sales,
			 date_trn,
			 customer,
			 cust_address,
			 cust_phone,
			 payment_method,
			 subtotal,
		   discount,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 term,
			 termpaydisc,
			 discpay,
			 flag_member,
			 id_customer,
			 paid,
			 terbilang
			)
		values(var_no_sales,
			 var_date_trn,
			 var_customer,
			 var_cust_address,
       var_cust_phone,
			 var_payment_method,
			 var_subtotal,
		   var_discount,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_term,
			 var_termpaydisc,
			 var_discpay,
			 var_flag_member,
			 var_cust_id,
			 var_paid,
			 var_terbilang
			);
		end IF;

		if var_payment_method = 2 then
			insert into ar_status (
				no_sales,
				date_trn,
				id_customer,
				sales_amount,
				notes
			)
			values (
				var_no_sales,
				var_date_trn,
				var_customer,
				var_total,
				var_notes
			);
		end if;

		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_sales,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Form',
						var_total*var_convert_nom);

		select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_sales';
		select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_out';
		

		if var_discount > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_disc,
						concat('Diskon Penjualan - ',var_no_sales),
						var_discount/100 * var_subtotal*var_convert_nom);
		end if;

		if var_tax > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_tax,
						concat('Pajak Penjualan - ',var_no_sales),
						-1*var_tax/100 * (var_subtotal-(var_discount/100 * var_subtotal))*var_convert_nom);
		end if;


		if var_total > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_head,
						concat('Penjualan - ',var_no_sales),
						var_total*var_convert_nom);
		end if;

	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_cashier_det where no_sales = var_no_sales;			
		end if;
		insert into trn_cashier_det 
			(no_sales,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 disc_nom,
			 nominal_net,
			 id_curr,
			 weight,
				priceperweight
			)
		values (var_no_sales,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
       var_disc_nom,
			 var_nominal_net,
			 var_id_curr,
			 var_weight,
			 var_priceperweight
			);

		if varloop = 0 THEN
			delete from i_stock_out where no_stock_out = var_no_sales;
		end if;
		insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
       id_warehouse
			)
		values (var_no_sales,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_price,
			 var_gudang_outlet
			);

		select id_account into var_id_account_sales from i_set_account_def where acc_parameter = 'acc_sales';

		

	
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_sales,
						concat('Penjualan Produk- ',var_id_item),
						-1*var_nominal_net*var_convert_nom);
		


		call sp_recalculate_cogs_avg(var_id_item,var_id_item,var_date_trn,var_date_trn,0);
		select case when max(nmb_asc) is null then 0 else max(nmb_asc) end into maks_record_cogs from lap_mutasi_hpp where id_item = var_id_item;
		if maks_record_cogs > 0 THEN
			set maks_record_cogs = maks_record_cogs -1;
		ELSE
			set maks_record_cogs = 0;
		end if;

		select case when price is null then 0 else price end into var_cogs from lap_mutasi_hpp where id_item = var_id_item and nmb_asc = maks_record_cogs;
		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;

		
		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;

	

	if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales,
						var_id_account_cogs,
						concat('HPP - ',var_id_item),
						var_cogs*var_qty*var_convert_nom);
	end if;

	

	if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales,
						var_id_account_det,
						concat('Penjualan - ',var_id_item),
						-1*var_cogs*var_qty*var_convert_nom);
	end if;

	elseif var_detail = 2 THEN
			insert into trn_cashier_service_det 
				(no_sales,
				number_asc,
				id_service,
				notes,
				qty,
				id_unit,
				price,
				nominal,
				disc_nom,
				nominal_net,
				id_curr
				)
		values (var_no_sales,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
       var_disc_nom,
			 var_nominal_net,
			 var_id_curr
					 );

			select id_account into var_id_account_det from mst_service where id_service = var_id_item;

			

		
		select id_account into var_id_account_det from mst_service where id_service = var_id_item;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales,
						var_id_account_det,
						concat('Penjualan Jasa - ',var_id_item),
						-1*var_nominal_net*var_convert_nom);


end if;

	ELSEIF TRANSID = 'DELETE' THEN
		DELETE FROM i_stock_out WHERE NO_stock_out = VAR_NO_sales;
		if var_payment_method = 2 then
			delete from ar_status where no_sales = var_no_sales;
		end if;
		delete from trn_ledger_det where no_ledger = var_no_sales;
		delete from trn_ledger_head where no_ledger = var_no_sales;
		delete from trn_cashier_service_det  where no_sales = var_no_sales;
		delete from trn_cashier_det where no_sales = var_no_sales;
		delete from trn_cashier_head where no_sales = var_no_sales;
			
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_cashier_return` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_cashier_return`(in var_no_sales_return varchar(30), in var_date_trn date, in var_id_customer varchar(180), in var_payment_method integer, in var_subtotal double, in var_disc double, in var_tax double, in var_total double, in var_notes text, in var_created_user varchar(30), in var_created_date date, in var_modified_user varchar(30), in var_modified_date date, in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in var_qty integer, in var_id_unit varchar(25), in var_price double, in var_nominal double,  in var_id_curr varchar(25),in var_no_sales varchar(60), in var_detail integer, in varloop integer, in transid varchar(120), in nilai_retur_lalu double,in var_kurs double, in warehouse varchar(60), in var_disc_nom double, in var_nominal_net double, in var_cust_addr text, in var_weight double, in var_priceperweight double)
BEGIN
declare var_pay_method integer;
declare var_id_account_head varchar(30);
declare var_id_account_det varchar(30);
declare var_id_account_cogs varchar(30);
declare var_id_account_disc varchar(30);
declare var_id_account_tax varchar(30);
declare var_id_account_sales varchar(30);
declare var_cogs double;
declare var_convert_nom double;
declare var_rnd_subtotal double;
declare var_rnd_freight double;
declare var_rnd_diskon double;
declare var_rnd_total double;
declare var_rnd_ppn double;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		set var_convert_nom = var_kurs;
		if var_convert_nom is null THEN
			set var_convert_nom = 1;
		end if;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_cashier_return_det where no_sales_return = var_no_sales_return;
		delete from trn_cashier_return_head where no_sales_return = var_no_sales_return;
		delete from i_stock_in where no_stock_in = var_no_sales_return;
		delete from trn_ledger_det where no_ledger = var_no_sales_return;
		delete from trn_ledger_head where no_ledger = var_no_sales_return;
	end if;

if var_detail = 0 THEN
		insert into trn_cashier_return_head(
			 no_sales_return,
			 date_trn,
			 customer,
			 payment_method,
			 subtotal,
			 disc,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 kurs,
			 id_warehouse,
			 customer_addr
			)
		values(var_no_sales_return,
			 var_date_trn,
			 var_id_customer,
			 var_payment_method,
			 var_subtotal,
			 var_disc,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_kurs,
			 warehouse,
			 var_cust_addr
			);

if var_payment_method = 2 then
	
	
	update ar_status set return_amount = case when return_amount is null then 0 else return_amount end - round(nilai_retur_lalu * var_convert_nom,0) where no_sales = var_no_sales;
	update ar_status set return_amount = case when return_amount is null then 0 else return_amount end + round(var_total * var_convert_nom,0) where no_sales = var_no_sales;
	
end if;


		set var_rnd_diskon = round(-1*var_disc/100 * var_subtotal * var_convert_nom);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round(var_tax/100 * (var_subtotal-(var_disc/100 * var_subtotal)) * var_convert_nom,0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_diskon + var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;

insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_sales_return,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Return Form',
						var_rnd_total);

select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_sales';
		select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_out';
			

			select payment_method into var_pay_method from trn_cashier_return_head where no_sales_return = var_no_sales_return;
			if var_pay_method = 1 THEN
				
					select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_cash_cashier';
			elseif var_pay_method = 2 THEN
				
					select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_cash_cashier';
			end if;

select id_account into var_id_account_sales from i_set_account_def where acc_parameter = 'acc_sales';

	if var_disc > 0 then
	set var_rnd_diskon = round(-1*var_disc/100 * var_subtotal * var_convert_nom); 
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_disc,
						concat('Diskon Penjualan - ',var_no_sales_return),
						var_rnd_diskon);
			end if;

		if var_tax > 0 then
		set var_rnd_ppn = round(var_tax/100 * (var_subtotal-(var_disc/100 * var_subtotal)) * var_convert_nom,0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_tax,
						concat('Pajak Penjualan - ',var_no_sales_return),
						var_rnd_ppn);
			end if;

if var_total > 0 then
			set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_diskon + var_rnd_ppn;
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_head,
						concat('Penjualan - ',var_no_sales_return),
						round(-1*var_rnd_total,0));
end if;


	insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_sales,
						concat('Penjualan - ',var_no_sales_return),
						round(var_subtotal * var_convert_nom,0));



	elseif var_detail = 1 THEN

		insert into trn_cashier_return_det 
			(no_sales_return,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 no_sales,
			 disc_nom,
			 nominal_net,
			 weight,
			 priceperweight
			)
		values (var_no_sales_return,
			 var_number_asc,
			 var_id_item,
			 var_notes,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_no_sales,
			 var_disc_nom,
			 var_nominal_net,
			 var_weight,
			 var_priceperweight
			);
		

call sp_recalculate_cogs_avg(var_id_item,var_id_item,var_date_trn,var_date_trn,0);
		select case when price is null then 0 else price end into var_cogs from lap_mutasi_hpp where id_item = var_id_item order by date_trn desc limit 1;

		select id_account into var_id_account_det from mst_item where id_item = var_id_item;


		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;

if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales_return and id_account =  var_id_account_cogs;
end if;

if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_cogs,
						concat('HPP - ',var_id_item),
						-1*var_cogs*var_qty);
end if;



		insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_sales_return,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 0,
			 round(var_price * var_convert_nom, 0),
			 warehouse
			);


	if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales_return and id_account =  var_id_account_det;
end if;

		
if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_det,
						concat('Penjualan - ',var_id_item),
						var_cogs*var_qty);
end if;


		end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_cashier_return_head(
			 no_sales_return,
			 date_trn,
			 customer,
			 payment_method,
			 subtotal,
			 disc,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 kurs,
		   id_warehouse,
			 customer_addr
			)
		values(var_no_sales_return,
			 var_date_trn,
			 var_id_customer,
			 var_payment_method,
			 var_subtotal,
			 var_disc,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_kurs,
			 warehouse,
			 var_cust_addr
			);

if var_payment_method = 2 then
	
	
	
	update ar_status set return_amount = case when return_amount is null then 0 else return_amount end + round(var_total*var_convert_nom,0) where no_sales = var_no_sales;
	
end if;

		set var_rnd_diskon = round(-1*var_disc/100 * var_subtotal * var_convert_nom);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round(var_tax/100 * (var_subtotal-(var_disc/100 * var_subtotal)) * var_convert_nom,0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_diskon + var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;

insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_sales_return,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Return Form',
						var_rnd_total);

select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_sales';
		select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_out';
			

			select payment_method into var_pay_method from trn_cashier_return_head where no_sales_return = var_no_sales_return;
			if var_pay_method = 1 THEN
				
					select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_cash_cashier';
			elseif var_pay_method = 2 THEN
				
					select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_cash_cashier';
			end if;

select id_account into var_id_account_sales from i_set_account_def where acc_parameter = 'acc_sales';

	if var_disc > 0 then
			set var_rnd_diskon = round(-1*var_disc/100 * var_subtotal * var_convert_nom);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_disc,
						concat('Diskon Penjualan - ',var_no_sales_return),
						var_rnd_diskon);
			end if;

		if var_tax > 0 then
			set var_rnd_ppn = round(var_tax/100 * (var_subtotal-(var_disc/100 * var_subtotal)) * var_convert_nom,0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_tax,
						concat('Pajak Penjualan - ',var_no_sales_return),
						var_rnd_ppn);
			end if;

if var_total > 0 then
			set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_diskon + var_rnd_ppn;
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_head,
						concat('Penjualan - ',var_no_sales_return),
						round(-1*var_rnd_total,0));
end if;


	insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_sales,
						concat('Penjualan - ',var_no_sales_return),
						round(var_subtotal * var_convert_nom,0));



	elseif var_detail = 1 THEN

		insert into trn_cashier_return_det 
			(no_sales_return,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 no_sales,
			 disc_nom,
			 nominal_net,
			 weight,
			 priceperweight
			)
		values (var_no_sales_return,
			 var_number_asc,
			 var_id_item,
			 var_notes,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_no_sales,
			 var_disc_nom,
			 var_nominal_net,
			 var_weight,
			 var_priceperweight
			);
		

call sp_recalculate_cogs_avg(var_id_item,var_id_item,var_date_trn,var_date_trn,0);
		select case when price is null then 0 else price end into var_cogs from lap_mutasi_hpp where id_item = var_id_item order by date_trn desc limit 1;

		select id_account into var_id_account_det from mst_item where id_item = var_id_item;


		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;

if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales_return and id_account =  var_id_account_cogs;
end if;

if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_cogs,
						concat('HPP - ',var_id_item),
						-1*var_cogs*var_qty);
end if;



		insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
       id_warehouse
			)
		values (var_no_sales_return,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 0,
			 round(var_price * var_convert_nom),
			 warehouse
			);


	if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales_return and id_account =  var_id_account_det;
end if;

		
if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_det,
						concat('Penjualan - ',var_id_item),
						var_cogs*var_qty);
end if;


		end if;

	ELSEIF TRANSID = 'DELETE' THEN
			delete from trn_cashier_return_det where no_sales_return = var_no_sales_return;
			delete from trn_cashier_return_head where no_sales_return = var_no_sales_return;
			if var_payment_method = 2 then
				
				
				update ar_status set return_amount = case when return_amount is null then 0 else return_amount end - round(nilai_retur_lalu*var_convert_nom,0) where no_sales = var_no_sales;
				
			end if;
			delete from i_stock_in where no_stock_in = var_no_sales_return;
			delete from trn_ledger_det where no_ledger = var_no_sales_return;
			delete from trn_ledger_head where no_ledger = var_no_sales_return;
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_cash_bank` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_cash_bank`(in var_cashbank_no varchar(30), in var_cash_account varchar(30), in var_date_trn date, in var_total double, in var_notes text, in var_flag_trans varchar(2), in var_created_user varchar(30), in var_created_date date, in var_modified_user varchar(30), in var_modified_date date, in var_id_account varchar(30), in var_notes_detail text, in var_amount double, in var_detail integer, in varloop integer,in transid varchar(120), in var_nobukti varchar(60),in id_curr varchar(30), in var_kurs double)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_ledger_det where no_ledger = var_cashbank_no;
			delete from trn_cashbank_det where cashbank_no = var_cashbank_no;
			delete from trn_ledger_head where no_ledger = var_cashbank_no;
			delete from trn_cashbank_head where cashbank_no = var_cashbank_no;
			

		
		insert into trn_cashbank_head(
			 cashbank_no,
			 id_account,
			 date_trn,
			 total,
			 notes,
			 flag_trans,
			 evidence_no,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 id_currency,
			 kurs
			)
		values(var_cashbank_no,
			 var_cash_account,
			 var_date_trn,
			 var_total,
			 var_notes,
			 var_flag_trans,
			 var_nobukti,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 id_curr,
			 var_kurs);

		if var_flag_trans = 'KM' or var_flag_trans = 'BM' then
		
		insert into trn_ledger_head(
			 no_ledger,
			 date_trn,
			 description,
			 total,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 post_from
			)
		values(var_cashbank_no,
			 var_date_trn,
			 var_notes,
			 round(var_total * var_kurs,0),
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 'Received Cash/Bank');
		elseif var_flag_trans = 'KK' or var_flag_trans = 'BK' then
			insert into trn_ledger_head(
			 no_ledger,
			 date_trn,
			 description,
			 total,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 post_from
			)
		values(var_cashbank_no,
			 var_date_trn,
			 var_notes,
			 round(var_total * var_kurs,0),
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 'Spend Cash/Bank');
		end if;

		 if var_flag_trans = 'KM' or var_flag_trans = 'BM' then
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				)
				values (
					var_cashbank_no,
					var_cash_account,
					var_notes,
					round(var_total * var_kurs,0)
				);
			end if;
			if var_flag_trans = 'KK' or var_flag_trans = 'BK' then
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				)
				values (
					var_cashbank_no,
					var_cash_account,
					var_notes,
					-1 * round(var_total * var_kurs,0)
				);
			end if;

	elseif var_detail = 1 THEN
		
		
			insert into trn_cashbank_det 
				(cashbank_no,
				id_account,
				notes,
				amount
				)
			values (var_cashbank_no,
				var_id_account,
				var_notes_detail,
				round(var_amount,0)
			);

		

		if var_flag_trans = 'KM' or var_flag_trans = 'BM' then
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (
				var_cashbank_no,
				var_id_account,
				var_notes_detail,
				-1 * round(var_amount * var_kurs,0));
		end if;

		if var_flag_trans = 'KK' or var_flag_trans = 'BK' then
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (
				var_cashbank_no,
				var_id_account,
				var_notes_detail,
				round(var_amount * var_kurs,0));
		end if;

	end if;

	ELSEIF TRANSID = 'INSERT' THEN
	if var_detail = 0 then
		
		insert into trn_cashbank_head(
			 cashbank_no,
			 id_account,
			 date_trn,
			 total,
			 notes,
			 flag_trans,
			 evidence_no,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 id_currency,
			 kurs
			)
		values(var_cashbank_no,
			 var_cash_account,
			 var_date_trn,
			 var_total,
			 var_notes,
			 var_flag_trans,
			 var_nobukti,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 id_curr,
			 var_kurs);

		
		if var_flag_trans = 'KM' or var_flag_trans = 'BM' then
		
		insert into trn_ledger_head(
			 no_ledger,
			 date_trn,
			 description,
			 total,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 post_from
			)
		values(var_cashbank_no,
			 var_date_trn,
			 var_notes,
			 round(var_total * var_kurs,0),
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 'Received Cash/Bank');
		elseif var_flag_trans = 'KK' or var_flag_trans = 'BK' then
			insert into trn_ledger_head(
			 no_ledger,
			 date_trn,
			 description,
			 total,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 post_from
			)
		values(var_cashbank_no,
			 var_date_trn,
			 var_notes,
			 round(var_total * var_kurs,0),
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 'Spend Cash/Bank');
		end if;

		 if var_flag_trans = 'KM' or var_flag_trans = 'BM' then
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				)
				values (
					var_cashbank_no,
					var_cash_account,
					var_notes,
					round(var_total * var_kurs,0)
				);
			end if;
			if var_flag_trans = 'KK' or var_flag_trans = 'BK' then
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				)
				values (
					var_cashbank_no,
					var_cash_account,
					var_notes,
					-1 * round(var_total * var_kurs,0)
				);
			end if;

	elseif var_detail = 1 THEN
	
		
			insert into trn_cashbank_det 
				(cashbank_no,
				id_account,
				notes,
				amount
				)
			values (var_cashbank_no,
				var_id_account,
				var_notes_detail,
				round(var_amount,0)
			);

		

		if var_flag_trans = 'KM' or var_flag_trans = 'BM' then
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (
				var_cashbank_no,
				var_id_account,
				var_notes_detail,
				-1 * round(var_amount * var_kurs,0));
		end if;

		if var_flag_trans = 'KK' or var_flag_trans = 'BK' then
			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (
				var_cashbank_no,
				var_id_account,
				var_notes_detail,
				round(var_amount * var_kurs,0));
		end if;

	end if;


	ELSEIF TRANSID = 'DELETE' THEN

			delete from trn_ledger_det where no_ledger = var_cashbank_no;


			delete from trn_cashbank_det where cashbank_no = var_cashbank_no;


			delete from trn_ledger_head where no_ledger = var_cashbank_no;


			delete from trn_cashbank_head where cashbank_no = var_cashbank_no;

	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_cek_nilaibuku_aset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_cek_nilaibuku_aset`(in var_id_golongan varchar(30), in var_nilai_perolehan double, in var_tgl_perolehan date)
BEGIN
declare var_masa_penyusutan double;
declare var_th_penyusutan double;
declare var_rate_penyusutan double;
declare var_sisa_nilai_buku double;
declare var_tgl_server date;
declare var_bln_server double;
declare var_th_server double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

set var_tgl_server = (select now());
set var_bln_server = month(var_tgl_server);
set var_th_server = year(var_tgl_server);

select rate_penyusutan into var_rate_penyusutan from mst_golaset where id_golongan = var_id_golongan;

if var_th_server = year(var_tgl_perolehan) THEN
		set var_masa_penyusutan = MONTH(var_tgl_server) - month(var_tgl_perolehan);
elseif var_th_server > year(var_tgl_perolehan) THEN
		if var_bln_server > month(var_tgl_perolehan) THEN
			set var_th_penyusutan = var_th_server -  (year(var_tgl_perolehan));
			set var_masa_penyusutan = (var_th_penyusutan * 12) + var_bln_server - month(var_tgl_perolehan);
		elseif var_bln_server < month(var_tgl_perolehan) then 
			set var_th_penyusutan = var_th_server -  (year(var_tgl_perolehan)) -1;
			set var_masa_penyusutan = (var_th_penyusutan * 12) + 12 - (month(var_tgl_perolehan)) + var_bln_server;
		elseif var_bln_server = month(var_tgl_perolehan) THEN
			set var_th_penyusutan = var_th_server -  (year(var_tgl_perolehan));
			set var_masa_penyusutan = var_th_penyusutan * 12;
		end if;
ELSE
		set var_masa_penyusutan = 0;
end if;

set var_sisa_nilai_buku = var_nilai_perolehan - (var_nilai_perolehan * var_rate_penyusutan/100/12 * var_masa_penyusutan);

select var_sisa_nilai_buku; 


COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_clean_db` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_clean_db`()
BEGIN


DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

delete from ap_status;
delete from ar_status;
update control_no_master set nourut = '000000' where form in ('MASTER CUSTOMER','MASTER MARKETING','MASTER SUPPLIER','FORMULA BIAYA','MASTER BIAYA');
update control_no_master set nourut = '00' where form in ('MASTER CARA BAYAR SIMRS');
delete from control_no_trans;
delete from i_aset_depreciation;
delete from i_cogs;
delete from i_cogs_acc_setting;
delete from i_event_attendance;
delete from i_import_lapkasirsentral_simrs;
delete from i_item_beg_balance;
delete from i_mailing_list;
delete from i_material_in;
delete from i_material_out;
delete from i_opname_det;
delete from i_opname_head;
delete from i_phone_in;
DELETE FROM i_set_age;
UPDATE i_set_ap_prosentase SET prosentase = 0;
UPDATE i_set_ar_prosentase SET prosentase = 0;
DELETE FROM i_set_price;
DELETE FROM i_stock_in;
DELETE FROM i_stock_out;
UPDATE i_upload_path SET path = '';
DELETE FROM i_upload_pemrov_simrs;
DELETE FROM lap_mutasi_hpp;
DELETE FROM neraca_lajur_temp;
DELETE FROM neraca_lajur_temp2;
DELETE FROM neraca_lajur_temp_adjust;
DELETE FROM neraca_lajur_temp_sawal;
DELETE FROM tbl_close_income;
DELETE FROM temp_aktiva;
DELETE FROM temp_aktiva_consol;
DELETE FROM temp_aktiva_tahunlalu;
DELETE FROM temp_income;
DELETE FROM temp_income_consol;
DELETE FROM temp_income_lra;
DELETE FROM temp_income_lra_tahunlalu;
DELETE FROM temp_income_period;
DELETE FROM temp_income_stats;
DELETE FROM temp_income_tahunlalu;
DELETE FROM temp_mutasi_stock;
DELETE FROM temp_neraca;
DELETE FROM temp_neraca_consol;
DELETE FROM temp_pasiva;
DELETE FROM temp_pasiva_consol;
DELETE FROM temp_pasiva_tahunlalu;
DELETE FROM trn_adjust_stock_det;
DELETE FROM trn_adjust_stock_head;
DELETE FROM trn_adjustjournal_det;
DELETE FROM trn_adjustjournal_head;
DELETE FROM trn_asetbeli_det;
DELETE FROM trn_asetbeli_head;
DELETE FROM trn_asetkeluar_det;
DELETE FROM trn_asetkeluar_head;
DELETE FROM trn_asetmasuk_det;
DELETE FROM trn_asetmasuk_head;
DELETE FROM trn_cashbank_det;
DELETE FROM trn_cashbank_head;
DELETE FROM trn_cashier_return_det;
DELETE FROM trn_cashier_return_head;
DELETE FROM trn_cashier_service_det;
DELETE FROM trn_cashier_det;
DELETE FROM trn_cashier_discbrand_det;
DELETE FROM trn_cashier_disccat_det;
DELETE FROM trn_cashier_discitem_det;
DELETE FROM trn_cashier_disctype_det;
DELETE FROM trn_cashier_head;
DELETE FROM trn_cashpurchase_det;
DELETE FROM trn_cashpurchase_head;
DELETE FROM trn_cashro_det;
DELETE FROM trn_cashro_head;
DELETE FROM trn_delivery_order_det;
DELETE FROM trn_delivery_order_head;
DELETE FROM trn_directpurchase_det;
DELETE FROM trn_directpurchase_head;
DELETE FROM trn_do_discitem_det;
DELETE FROM trn_ekspedisi_det;
DELETE FROM trn_ekspedisi_head;
DELETE FROM trn_journal_det;
DELETE FROM trn_journal_head;
DELETE FROM trn_journallayananmedik_det;
DELETE FROM trn_journallayananmedik_head;
DELETE FROM trn_journalpembelian_det;
DELETE FROM trn_journalpembelian_head;
DELETE FROM trn_journaluploadpemrov_det;
DELETE FROM trn_journaluploadpemrov_head;
DELETE FROM trn_ledger_det;
DELETE FROM trn_ledger_det_consol;
DELETE FROM trn_ledger_head;
DELETE FROM trn_ledger_head_consol;
DELETE FROM trn_material_usage_det;
DELETE FROM trn_material_usage_head;
DELETE FROM trn_payment_ap_det;
DELETE FROM trn_payment_ap_head;
DELETE FROM trn_payment_ar_det;
DELETE FROM trn_payment_ar_head;
DELETE FROM trn_purchase_return_det;
DELETE FROM trn_purchase_return_head;
DELETE FROM trn_purchase_det;
DELETE FROM trn_purchase_head;
delete from trn_payoff_po_det;
delete from trn_payoff_po_head;
DELETE FROM trn_received_order_det;
DELETE FROM trn_received_order_head;
DELETE FROM trn_purchase_order_det;
DELETE FROM trn_purchase_order_head;

DELETE FROM trn_purchasedirect_det;
DELETE FROM trn_purchasedirect_head;

DELETE FROM trn_reconcile_det;
DELETE FROM trn_reconcile_head;
DELETE FROM trn_request_order_det;
DELETE FROM trn_request_order_head;
DELETE FROM trn_sales_return_det;
DELETE FROM trn_sales_return_head;
DELETE FROM trn_sales_det;
DELETE FROM trn_sales_discitem_det;
DELETE FROM trn_sales_head;
delete from trn_payoff_so_det;
delete from trn_payoff_so_head;
DELETE FROM trn_sales_order_det;
DELETE FROM trn_sales_order_head;

DELETE FROM trn_service_det;
DELETE FROM trn_service_head;
DELETE FROM trn_service_item_det;
delete from trn_completedso_head;
delete from trn_completedpo_det;
delete from trn_completedpo_head;
DELETE FROM trn_so_discbrand_det;
DELETE FROM trn_so_disccat_det;
DELETE FROM trn_so_discitem_det;
DELETE FROM trn_so_disctype_det;
DELETE FROM trn_spk_head;
DELETE FROM trn_spk_item_det;
DELETE FROM trn_spk_konversi_det;
DELETE FROM trn_spk_material_det;
DELETE FROM trn_transfer_stock_det;
DELETE FROM trn_transfer_stock_head;

delete from trn_wo_realized_conversion_det;
delete from trn_wo_realized_item_det;
delete from trn_wo_realized_material_det;
delete from trn_wo_realized_wip_det;
delete from trn_wo_realized_head;

delete from trn_material_usage_det;
delete from trn_material_usage_head;

delete from trn_usage_material_det;
delete from trn_usage_material_head;

delete from trn_wo_conversion_det;
delete from trn_wo_item_det;
delete from trn_wo_material_det;
delete from trn_wo_wip_det;
delete from trn_wo_head;


DELETE FROM mst_ap_initialbalance;
DELETE FROM mst_ar_initialbalance;
DELETE FROM mst_aset;
DELETE FROM mst_bom_conversion;
DELETE FROM mst_bom_material;
DELETE FROM mst_bom_head;
DELETE FROM mst_brand;

DELETE FROM mst_customer;


DELETE FROM mst_event_member;
DELETE FROM mst_event;
DELETE FROM mst_expedition;
DELETE FROM mst_golaset;
DELETE FROM mst_item_disc;
DELETE FROM mst_setunit;
DELETE FROM mst_item;
DELETE FROM mst_item_import;
DELETE FROM mst_itembrand where mst_itembrand_id <> 'NA';
DELETE FROM mst_itemcat;
DELETE FROM mst_itemjenis;
DELETE FROM mst_jenis_aset;
DELETE FROM mst_marketing;

DELETE FROM mst_service;


DELETE FROM mst_standard_cost;
DELETE FROM mst_supplier;

DELETE FROM log_transaction;
ALTER TABLE log_transaction AUTO_INCREMENT = 1;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_clean_db_simrs_haji` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_clean_db_simrs_haji`()
BEGIN


DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

delete from ap_status;
delete from ar_status;
update control_no_master set nourut = '000000' where form in ('MASTER CUSTOMER','MASTER MARKETING','MASTER SUPPLIER','FORMULA BIAYA','MASTER BIAYA');
update control_no_master set nourut = '00' where form in ('MASTER CARA BAYAR SIMRS');
delete from control_no_trans;
delete from i_aset_depreciation;
delete from i_cogs;
delete from i_cogs_acc_setting;
delete from i_event_attendance;
delete from i_import_lapkasirsentral_simrs;
delete from i_item_beg_balance;
delete from i_mailing_list;
delete from i_material_in;
delete from i_material_out;
delete from i_opname_det;
delete from i_opname_head;
delete from i_phone_in;
DELETE FROM i_set_age;
UPDATE i_set_ap_prosentase SET prosentase = 0;
UPDATE i_set_ar_prosentase SET prosentase = 0;
DELETE FROM i_set_price;
DELETE FROM i_stock_in;
DELETE FROM i_stock_out;
UPDATE i_upload_path SET path = '';
DELETE FROM i_upload_pemrov_simrs;
DELETE FROM lap_mutasi_hpp;
DELETE FROM neraca_lajur_temp;
DELETE FROM neraca_lajur_temp2;
DELETE FROM neraca_lajur_temp_adjust;
DELETE FROM neraca_lajur_temp_sawal;
DELETE FROM tbl_close_income;
DELETE FROM temp_aktiva;
DELETE FROM temp_aktiva_consol;
DELETE FROM temp_aktiva_tahunlalu;
DELETE FROM temp_income;
DELETE FROM temp_income_consol;
DELETE FROM temp_income_lra;
DELETE FROM temp_income_lra_tahunlalu;
DELETE FROM temp_income_period;
DELETE FROM temp_income_stats;
DELETE FROM temp_income_tahunlalu;
DELETE FROM temp_mutasi_stock;
DELETE FROM temp_neraca;
DELETE FROM temp_neraca_consol;
DELETE FROM temp_pasiva;
DELETE FROM temp_pasiva_consol;
DELETE FROM temp_pasiva_tahunlalu;
DELETE FROM trn_adjust_stock_det;
DELETE FROM trn_adjust_stock_head;
DELETE FROM trn_adjustjournal_det;
DELETE FROM trn_adjustjournal_head;
DELETE FROM trn_asetbeli_det;
DELETE FROM trn_asetbeli_head;
DELETE FROM trn_asetkeluar_det;
DELETE FROM trn_asetkeluar_head;
DELETE FROM trn_asetmasuk_det;
DELETE FROM trn_asetmasuk_head;
DELETE FROM trn_cashbank_det;
DELETE FROM trn_cashbank_head;
DELETE FROM trn_cashier_det;
DELETE FROM trn_cashier_discbrand_det;
DELETE FROM trn_cashier_disccat_det;
DELETE FROM trn_cashier_discitem_det;
DELETE FROM trn_cashier_disctype_det;
DELETE FROM trn_cashier_head;
DELETE FROM trn_cashier_return_det;
DELETE FROM trn_cashier_return_head;
DELETE FROM trn_cashier_service_det;
DELETE FROM trn_cashpurchase_det;
DELETE FROM trn_cashpurchase_head;
DELETE FROM trn_cashro_det;
DELETE FROM trn_cashro_head;
DELETE FROM trn_delivery_order_det;
DELETE FROM trn_delivery_order_head;
DELETE FROM trn_directpurchase_det;
DELETE FROM trn_directpurchase_head;
DELETE FROM trn_do_discitem_det;
DELETE FROM trn_ekspedisi_det;
DELETE FROM trn_ekspedisi_head;
DELETE FROM trn_journal_det;
DELETE FROM trn_journal_head;
DELETE FROM trn_journallayananmedik_det;
DELETE FROM trn_journallayananmedik_head;
DELETE FROM trn_journalpembelian_det;
DELETE FROM trn_journalpembelian_head;
DELETE FROM trn_journaluploadpemrov_det;
DELETE FROM trn_journaluploadpemrov_head;
DELETE FROM trn_ledger_det;
DELETE FROM trn_ledger_det_consol;
DELETE FROM trn_ledger_head;
DELETE FROM trn_ledger_head_consol;
DELETE FROM trn_material_usage_det;
DELETE FROM trn_material_usage_head;
DELETE FROM trn_payment_ap_det;
DELETE FROM trn_payment_ap_head;
DELETE FROM trn_payment_ar_det;
DELETE FROM trn_payment_ar_head;
DELETE FROM trn_purchase_det;
DELETE FROM trn_purchase_head;
DELETE FROM trn_purchase_order_det;
DELETE FROM trn_purchase_order_head;
DELETE FROM trn_purchase_return_det;
DELETE FROM trn_purchase_return_head;
DELETE FROM trn_purchasedirect_det;
DELETE FROM trn_purchasedirect_head;
DELETE FROM trn_received_order_det;
DELETE FROM trn_received_order_head;
DELETE FROM trn_reconcile_det;
DELETE FROM trn_reconcile_head;
DELETE FROM trn_request_order_det;
DELETE FROM trn_request_order_head;
DELETE FROM trn_sales_det;
DELETE FROM trn_sales_discitem_det;
DELETE FROM trn_sales_head;
DELETE FROM trn_sales_order_det;
DELETE FROM trn_sales_order_head;
DELETE FROM trn_sales_return_det;
DELETE FROM trn_sales_return_head;
DELETE FROM trn_service_det;
DELETE FROM trn_service_head;
DELETE FROM trn_service_item_det;
DELETE FROM trn_so_discbrand_det;
DELETE FROM trn_so_disccat_det;
DELETE FROM trn_so_discitem_det;
DELETE FROM trn_so_disctype_det;
DELETE FROM trn_spk_head;
DELETE FROM trn_spk_item_det;
DELETE FROM trn_spk_konversi_det;
DELETE FROM trn_spk_material_det;
DELETE FROM trn_transfer_stock_det;
DELETE FROM trn_transfer_stock_head;

DELETE FROM mst_ap_initialbalance;
DELETE FROM mst_ar_initialbalance;
DELETE FROM mst_aset;
DELETE FROM mst_bom_conversion;
DELETE FROM mst_bom_head;
DELETE FROM mst_bom_material;
DELETE FROM mst_brand;

DELETE FROM mst_customer;


DELETE FROM mst_event_member;
DELETE FROM mst_event;
DELETE FROM mst_expedition;
DELETE FROM mst_golaset;
DELETE FROM mst_item_disc;
DELETE FROM mst_item;
DELETE FROM mst_item_import;
DELETE FROM mst_itembrand;
DELETE FROM mst_itemcat;
DELETE FROM mst_itemjenis;
DELETE FROM mst_jenis_aset;
DELETE FROM mst_marketing;

DELETE FROM mst_service;

DELETE FROM mst_setunit;
DELETE FROM mst_standard_cost;
DELETE FROM mst_supplier;

DELETE FROM log_transaction;
ALTER TABLE log_transaction AUTO_INCREMENT = 1;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_clean_i_cogs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_clean_i_cogs`()
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;
delete from i_cogs;
	ALTER TABLE i_cogs AUTO_INCREMENT = 1;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_closed_journal` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_closed_journal`(in var_created_date date, in var_id_acc_income varchar(30), in var_start_date date, in var_end_date date, in var_periode integer, in var_year integer)
BEGIN
	

DECLARE done INT DEFAULT FALSE;
DECLARE t_id varchar(30);
DECLARE t_nominal double;
DECLARE var_def varchar(1);
DECLARE var_laba_rugi double;
DECLARE is_closed INTEGER;
DECLARE cur1 CURSOR FOR select a.id_account,a.nominal,b.def_position from tbl_close_income a inner join mst_account b on b.id_account = a.id_account 
												where b.is_income = 1;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	insert into trn_ledger_head (
			no_ledger,
			date_trn,	
			description,
			created_user,
			created_date,
			modified_user,
			modified_date,
			post_from
		)
			values(
			concat('FRM/CLS-',var_periode,var_year),
			var_created_date,
			concat('Penutupan Periode Akuntansi - ',var_periode,var_year),
			'Admin',
			var_created_date,
			'Admin',
			var_created_date,
			'Close Period'
		);


	OPEN cur1;
  REPEAT
  FETCH cur1 INTO t_id,t_nominal,var_def;
  IF NOT done THEN
		if var_def = 'K' then
		insert into trn_ledger_det (
			no_ledger,
			id_account,
			notes,
			nominal
		)
		values(
			concat('FRM/CLS-',var_periode,var_year),
			t_id, 
			concat('Penutupan Periode Akuntansi - ',var_periode,var_year),
			t_nominal);

		insert into trn_ledger_det (
			no_ledger,
			id_account,
			notes,
			nominal
		)
		values(
			concat('FRM/CLS-',var_periode,var_year),
			var_id_acc_income, 
			concat('Penutupan Periode Akuntansi - ',var_periode,var_year),
			-1*t_nominal);

		elseif var_def = 'D' THEN

		insert into trn_ledger_det (
			no_ledger,
			id_account,
			notes,
			nominal
		)
		values(
			concat('FRM/CLS-',var_periode,var_year),
			t_id, 
			concat('Penutupan Periode Akuntansi - ',var_periode,var_year),
			-1*t_nominal);

		insert into trn_ledger_det (
			no_ledger,
			id_account,
			notes,
			nominal
		)
		values(
			concat('FRM/CLS-',var_periode,var_year),
			var_id_acc_income, 
			concat('Penutupan Periode Akuntansi - ',var_periode,var_year),
			t_nominal);
		end if;
	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

	select sum(case when a.nominal is null then 0 else a.nominal end) into var_laba_rugi from trn_ledger_det a 
	inner join trn_ledger_head b on b.no_ledger = a.no_ledger where b.date_trn between (var_start_date and var_end_date)
	and b.post_from = 'Close Period';
	
	select count(period) into is_closed from temp_income_period where period = var_periode and years = var_year;

	if is_closed = 0 then
		insert into temp_income_period (
			period,
			years,	
			nominal,
			created_date)
		values (
			var_periode,
			var_year,
			var_laba_rugi,
			var_created_date);
	ELSE
		update temp_income set nominal = var_laba_rugi where period = var_periode and years = var_year;
	end if;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_closed_journal_simrs_lo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_closed_journal_simrs_lo`(in var_created_date date, in var_id_acc_income varchar(30), in var_start_date date, in var_end_date date, in var_periode integer, in var_year integer)
BEGIN
	

DECLARE done INT DEFAULT FALSE;
DECLARE t_id varchar(30);
DECLARE t_nominal double;
DECLARE var_def varchar(1);
DECLARE var_laba_rugi double;
DECLARE is_closed INTEGER;
DECLARE cur1 CURSOR FOR select a.id_account,a.nominal,b.def_position from tbl_close_income a inner join mst_account b on b.id_account = a.id_account 
												where b.is_income = 1 and b.golongan in (6,7);
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	insert into trn_ledger_head (
			no_ledger,
			date_trn,	
			description,
			created_user,
			created_date,
			modified_user,
			modified_date,
			post_from
		)
			values(
			concat('CLS-',var_periode,var_year),
			var_created_date,
			concat('Penutupan Operasional Periode Akuntansi - ',var_periode,var_year),
			'Admin',
			var_created_date,
			'Admin',
			var_created_date,
			'Close Period'
		);


	OPEN cur1;
  REPEAT
  FETCH cur1 INTO t_id,t_nominal,var_def;
  IF NOT done THEN
		if var_def = 'K' then
		insert into trn_ledger_det (
			no_ledger,
			id_account,
			notes,
			nominal
		)
		values(
			concat('CLS-',var_periode,var_year),
			t_id, 
			concat('Penutupan Operasional Periode Akuntansi - ',var_periode,var_year),
			t_nominal);

		insert into trn_ledger_det (
			no_ledger,
			id_account,
			notes,
			nominal
		)
		values(
			concat('CLS-',var_periode,var_year),
			var_id_acc_income, 
			concat('Penutupan Operasional Periode Akuntansi - ',var_periode,var_year),
			-1*t_nominal);

		elseif var_def = 'D' THEN

		insert into trn_ledger_det (
			no_ledger,
			id_account,
			notes,
			nominal
		)
		values(
			concat('CLS-',var_periode,var_year),
			t_id, 
			concat('Penutupan Operasional Periode Akuntansi - ',var_periode,var_year),
			-1*t_nominal);

		insert into trn_ledger_det (
			no_ledger,
			id_account,
			notes,
			nominal
		)
		values(
			concat('CLS-',var_periode,var_year),
			var_id_acc_income, 
			concat('Penutupan Operasional Periode Akuntansi - ',var_periode,var_year),
			t_nominal);
		end if;
	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

	select sum(case when a.nominal is null then 0 else a.nominal end) into var_laba_rugi from trn_ledger_det a 
	inner join trn_ledger_head b on b.no_ledger = a.no_ledger where b.date_trn between (var_start_date and var_end_date)
	and b.post_from = 'Close Period';
	
	select count(period) into is_closed from temp_income_period_lo where period = var_periode and years = var_year;
	if is_closed is null then 
		set is_closed = 0;
	end if;

	if is_closed = 0 then
		insert into temp_income_period_lo (
			period,
			years,	
			nominal,
			created_date)
		values (
			var_periode,
			var_year,
			var_laba_rugi,
			var_created_date);
	ELSE
		update temp_income_period_lo set nominal = var_laba_rugi where period = var_periode and years = var_year;
	end if;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_closed_journal_simrs_lra` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_closed_journal_simrs_lra`(in var_created_date date, in var_id_acc_income varchar(30), in var_start_date date, in var_end_date date, in var_periode integer, in var_year integer)
BEGIN
	

DECLARE done INT DEFAULT FALSE;
DECLARE t_id varchar(30);
DECLARE t_nominal double;
DECLARE var_def varchar(1);
DECLARE var_laba_rugi double;
DECLARE is_closed INTEGER;
DECLARE cur1 CURSOR FOR select a.id_account,a.nominal,b.def_position from tbl_close_income a inner join mst_account b on b.id_account = a.id_account 
												where b.is_income = 1 and b.golongan in (4,5,6);
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	insert into trn_ledger_head (
			no_ledger,
			date_trn,	
			description,
			created_user,
			created_date,
			modified_user,
			modified_date,
			post_from
		)
			values(
			concat('CLS-',var_periode,var_year),
			var_created_date,
			concat('Penutupan Realisasi Anggaran Periode Akuntansi - ',var_periode,var_year),
			'Admin',
			var_created_date,
			'Admin',
			var_created_date,
			'Close Period'
		);


	OPEN cur1;
  REPEAT
  FETCH cur1 INTO t_id,t_nominal,var_def;
  IF NOT done THEN
		if var_def = 'K' then
		insert into trn_ledger_det (
			no_ledger,
			id_account,
			notes,
			nominal
		)
		values(
			concat('CLS-',var_periode,var_year),
			t_id, 
			concat('Penutupan Realisasi Anggaran Periode Akuntansi - ',var_periode,var_year),
			t_nominal);

		insert into trn_ledger_det (
			no_ledger,
			id_account,
			notes,
			nominal
		)
		values(
			concat('CLS-',var_periode,var_year),
			var_id_acc_income, 
			concat('Penutupan Realisasi Anggaran Periode Akuntansi - ',var_periode,var_year),
			-1*t_nominal);

		elseif var_def = 'D' THEN

		insert into trn_ledger_det (
			no_ledger,
			id_account,
			notes,
			nominal
		)
		values(
			concat('CLS-',var_periode,var_year),
			t_id, 
			concat('Penutupan Realisasi Anggaran Periode Akuntansi - ',var_periode,var_year),
			-1*t_nominal);

		insert into trn_ledger_det (
			no_ledger,
			id_account,
			notes,
			nominal
		)
		values(
			concat('CLS-',var_periode,var_year),
			var_id_acc_income, 
			concat('Penutupan Realisasi Anggaran Periode Akuntansi - ',var_periode,var_year),
			t_nominal);
		end if;
	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

	select sum(case when a.nominal is null then 0 else a.nominal end) into var_laba_rugi from trn_ledger_det a 
	inner join trn_ledger_head b on b.no_ledger = a.no_ledger where b.date_trn between (var_start_date and var_end_date)
	and b.post_from = 'Close Period';
	
	select count(period) into is_closed from temp_income_period_lra where period = var_periode and years = var_year;

	if is_closed is null then 
		set is_closed = 0;
	end if;
	if is_closed = 0 then
		insert into temp_income_period_lra (
			period,
			years,	
			nominal,
			created_date)
		values (
			var_periode,
			var_year,
			var_laba_rugi,
			var_created_date);
	ELSE
		update temp_income_period_lra set nominal = var_laba_rugi where period = var_periode and years = var_year;
	end if;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_cogs_avg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_cogs_avg`(in var_criteria text,in date_filter integer, in tgl_awal date, in tgl_akhir date,in nmb integer)
BEGIN

	declare filter text;
	declare sawal double;
	declare sawal_periodeD double;
	declare sawal_periodeK double;
	declare def varchar(3);
	declare tglsawal date;
	declare item_nm varchar(300);
	declare company text;
	declare price_awal double;
	declare var_unit varchar(30);
	declare var_unit_terkecil varchar(30);
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

START TRANSACTION;

	select company_name into company from mst_company limit 1;
	select item_name into item_nm from mst_item where id_item = var_criteria;
	select id_unit into var_unit from i_item_beg_balance where id_item = var_criteria;
	select main_unit into var_unit_terkecil from mst_item where id_item = var_criteria;

	select cast(a.date_trn as date) into tglsawal from 
	(select date_trn from i_stock_in union select date_trn from i_stock_out) a order by a.date_trn asc limit 1;
	if date_filter = 1 then
		if tglsawal < tgl_awal then
			set tglsawal = tgl_awal;
		end if;
	end if;

	if date_filter = 1 then
	
		select case when sum(qty) is null then 0 else sum(qty) end into sawal_periodeD
		from i_stock_in
		where date_trn < tgl_awal and id_item = var_criteria;

		select case when sum(qty) is null then 0 else sum(qty) end into sawal_periodeK
		from i_stock_out
		where date_trn < tgl_awal and id_item = var_criteria;
  elseif date_filter = 0 THEN
	
		select case when sum(qty) is null then 0 else sum(qty) end into sawal_periodeD
		from i_stock_in
		where date_trn < tglsawal and id_item = var_criteria;

		select case when sum(qty) is null then 0 else sum(qty) end into sawal_periodeK
		from i_stock_out
		where date_trn < tglsawal and id_item = var_criteria;
  end if;

	
	select case when sum(balance) is null then 0 else sum(balance) end into sawal from i_item_beg_balance where id_item = var_criteria;
	select price into price_awal from i_item_beg_balance where id_item = var_criteria limit 1;
	set sawal_periodeD = sawal_periodeD + sawal;

	IF sawal_periodeD IS NULL THEN 
		 SET sawal_periodeD=0;
	END IF;


	IF sawal_periodeK IS NULL THEN 
		 SET sawal_periodeK=0;
	END IF;

	


	

	if date_filter = 1 then
	insert into lap_mutasi_hpp
	select * from (
			select 'Saldo Awal' as no_bukti,tglsawal as date_trn,var_criteria as id_item,item_nm as item_name,sawal_periodeD AS DEBET,sawal_periodeK AS KREDIT,
			var_unit,price_awal,case when (sawal_periodeD - sawal_periodeK) is null then 0 else (sawal_periodeD - sawal_periodeK) end as saldo, company as company,
			'Saldo Awal Barang',0,price_awal as price2,price_awal as price3
		union ALL
			select a.no_stock_in, a.date_trn,a.id_item,b.item_name,
			case when (a.qty * c.qty) is null then 0 else (a.qty * c.qty) end as debet,
			0,a.id_unit,price/c.qty,
			sawal_periodeD + (a.qty * c.qty) as saldo, company as company,
			case when SUBSTR(a.no_stock_in,5,2) = 'PU' then 'Pembelian'
					 when SUBSTR(a.no_stock_in,5,3) = 'PRU' then 'Retur Pembelian'
					 when SUBSTR(a.no_stock_in,5,3) = 'SRU' then 'Retur Penjualan'
					 when SUBSTR(a.no_stock_in,5,2) = 'SA' then 'Penjualan'
					 when SUBSTR(a.no_stock_in,5,2) = 'DO' then 'Penjualan'
					 when SUBSTR(a.no_stock_in,5,3) = 'ADS' then 'Koreksi Stock'
					 when SUBSTR(a.no_stock_in,5,3) = 'TRF' then 'Pindah Gudang'
					 when SUBSTR(a.no_stock_in,5,3) = 'CSH' then 'Penjualan Kasir'
					 when SUBSTR(a.no_stock_in,5,3) = 'REV' then 'Pembelian'
			else '' end as notes,nmb,price/c.qty,price/c.qty
			from i_stock_in a
			inner join mst_item b on b.id_item = a.id_item
			inner join mst_setunit c on c.id_unit = a.id_unit and c.id_item = var_criteria
			WHERE (a.date_trn between tgl_awal and tgl_akhir) and a.id_item = var_criteria
		union ALL
			select a.no_stock_out, a.date_trn,a.id_item,b.item_name,
			0,
			case when (a.qty * c.qty) is null then 0 else (a.qty * c.qty) end as kredit,a.id_unit,price/c.qty,
			sawal_periodeK + (a.qty * c.qty) as saldo, company as company,
			case when SUBSTR(a.no_stock_out,5,2) = 'PU' then 'Pembelian'
					 when SUBSTR(a.no_stock_out,5,3) = 'PRU' then 'Retur Pembelian'
					 when SUBSTR(a.no_stock_out,5,3) = 'SRU' then 'Retur Penjualan'
					 when SUBSTR(a.no_stock_out,5,2) = 'SA' then 'Penjualan'
					 when SUBSTR(a.no_stock_out,5,2) = 'DO' then 'Penjualan'
					 when SUBSTR(a.no_stock_out,5,3) = 'ADS' then 'Koreksi Stock'
					 when SUBSTR(a.no_stock_out,5,3) = 'TRF' then 'Pindah Gudang'
					 when SUBSTR(a.no_stock_out,5,3) = 'CSH' then 'Penjualan Kasir'
					 when SUBSTR(a.no_stock_out,5,3) = 'REV' then 'Pembelian'
			else '' end as notes,nmb+1,price/c.qty,price/c.qty
			from i_stock_out a
			inner join mst_item b on b.id_item = a.id_item
			inner join mst_setunit c on c.id_unit = a.id_unit and c.id_item = var_criteria
			WHERE (a.date_trn between tgl_awal and tgl_akhir) and a.id_item = var_criteria
	) x order by x.date_trn asc;
	elseif date_filter = 0 THEN
		insert into lap_mutasi_hpp
	select * from (
			select 'Saldo Awal' as no_bukti,tglsawal as date_trn,var_criteria as id_item,item_nm as item_name,sawal_periodeD AS DEBET,sawal_periodeK AS KREDIT,
			var_unit,price_awal,case when (sawal_periodeD - sawal_periodeK) is null then 0 else (sawal_periodeD - sawal_periodeK) end as saldo, company as company,
			'Saldo Awal Barang',0,price_awal as price2,price_awal as price3
		union ALL
			select a.no_stock_in, a.date_trn,a.id_item,b.item_name,
			case when (a.qty * c.qty) is null then 0 else (a.qty * c.qty) end as debet,
			0,a.id_unit,price/c.qty,
			sawal_periodeD + (a.qty * c.qty) as saldo, company as company,
			case when SUBSTR(a.no_stock_in,5,2) = 'PU' then 'Pembelian'
					 when SUBSTR(a.no_stock_in,5,3) = 'PRU' then 'Retur Pembelian'
					 when SUBSTR(a.no_stock_in,5,3) = 'SRU' then 'Retur Penjualan'
					 when SUBSTR(a.no_stock_in,5,2) = 'SA' then 'Penjualan'
					 when SUBSTR(a.no_stock_in,5,2) = 'DO' then 'Penjualan'
					 when SUBSTR(a.no_stock_in,5,3) = 'ADS' then 'Koreksi Stock'
					 when SUBSTR(a.no_stock_in,5,3) = 'TRF' then 'Pindah Gudang'
					 when SUBSTR(a.no_stock_in,5,3) = 'CSH' then 'Penjualan Kasir'
					 when SUBSTR(a.no_stock_in,5,3) = 'REV' then 'Pembelian'
			else '' end as notes,nmb,price/c.qty,price/c.qty
			from i_stock_in a
			inner join mst_item b on b.id_item = a.id_item
			inner join mst_setunit c on c.id_unit = a.id_unit and c.id_item = var_criteria
			WHERE a.id_item = var_criteria
		union ALL
			select a.no_stock_out, a.date_trn,a.id_item,b.item_name,
			0,
			case when (a.qty * c.qty) is null then 0 else (a.qty * c.qty) end as kredit,a.id_unit,price/c.qty,
			sawal_periodeK + (a.qty * c.qty) as saldo, company as company,
			case when SUBSTR(a.no_stock_out,5,2) = 'PU' then 'Pembelian'
					 when SUBSTR(a.no_stock_out,5,3) = 'PRU' then 'Retur Pembelian'
					 when SUBSTR(a.no_stock_out,5,3) = 'SRU' then 'Retur Penjualan'
					 when SUBSTR(a.no_stock_out,5,2) = 'SA' then 'Penjualan'
					 when SUBSTR(a.no_stock_out,5,2) = 'DO' then 'Penjualan'
					 when SUBSTR(a.no_stock_out,5,3) = 'ADS' then 'Koreksi Stock'
					 when SUBSTR(a.no_stock_out,5,3) = 'TRF' then 'Pindah Gudang'
					 when SUBSTR(a.no_stock_out,5,3) = 'CSH' then 'Penjualan Kasir'
					 when SUBSTR(a.no_stock_out,5,3) = 'REV' then 'Pembelian'
			else '' end as notes,nmb+1,price/c.qty,price/c.qty
			from i_stock_out a
			inner join mst_item b on b.id_item = a.id_item
			inner join mst_setunit c on c.id_unit = a.id_unit and c.id_item = var_criteria
			WHERE a.id_item = var_criteria
	) x order by x.date_trn asc;
	end if;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_company` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_company`(in var_company_code varchar(30), in var_company_name varchar(250), in var_address text, in var_city varchar(120), in var_phone varchar(60), in var_email varchar(120), in var_website varchar(120),in transid varchar(60), in var_flag_status integer,in var_flag_type integer,in var_serial1 varchar(250),in var_serial2 varchar(250),in var_serial3 varchar(250),in var_serial4 varchar(250), in var_ip_address varchar(250))
BEGIN

DECLARE var_count_period double;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;


START TRANSACTION;
select func_get_period() into var_count_period;

IF TRANSID = 'UPDATE' THEN

BEGIN
	UPDATE mst_company
SET company_code = var_company_code,
company_name = var_company_name,
address = var_address,
city = var_city,
phone = var_phone,
email = var_email,
website = var_website,
flag_active = 1,
flag_status = var_flag_status,
flag_type = var_flag_type
WHERE
	company_code = var_company_code;
END;


if var_flag_type = 1 and var_count_period = 0 THEN
	call sp_akses_setretail();
elseif var_flag_type = 2 and var_count_period = 0 THEN
  call sp_akses_setmanufacture();
end if;


ELSEIF TRANSID = 'INSERT' THEN

BEGIN
	delete from mst_company;
	INSERT INTO mst_company (
		company_code,
		company_name,
		address,
		city,
		phone,
		email,
		website,	
		flag_active,
    flag_status,
		flag_type,
		serial1,
		serial2,
		serial3,
		serial4
	)
VALUES
	(
		var_company_code,
		var_company_name,
		var_address,
		var_city,
		var_phone,
		var_email,
		var_website,
		1,
		var_flag_status,
		var_flag_type,
		'',
		'',
		'',
		''
	);

delete from i_activation where ip_address = var_ip_address;
insert into i_activation
select var_ip_address,md5(var_serial1),md5(var_serial2),md5(var_serial3),md5(var_serial4),(select now());

END;

if var_flag_type = 1 and var_count_period = 0 THEN
	call sp_akses_setretail();
elseif var_flag_type = 2 and var_count_period = 0 THEN
  call sp_akses_setmanufacture();
end if;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	DELETE
FROM
	mst_company
WHERE
	company_code = var_company_code;


END;


END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_component_account_purchreturnsimrs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_component_account_purchreturnsimrs`(in var_id_account varchar(60), in var_notes text,  in var_table_name varchar(250), in var_field_name varchar(250),in var_position_dk varchar(60),in var_is_dependent_itemacc integer, in TRANSID varchar(60), in var_loop integer)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

BEGIN
	if var_loop = 0 then
		delete from i_component_account_returpurchsimrs;
	end if;
	insert into i_component_account_returpurchsimrs (
		id_account,
		notes,
		table_name,
		field_name,
		position_dk,
		is_dependent_itemacc
	)
  values (
		var_id_account,
		var_notes,
		var_table_name,
		var_field_name,
		var_position_dk,
		var_is_dependent_itemacc
);

END;
END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_component_account_purchsimrs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_component_account_purchsimrs`(in var_id_account varchar(60), in var_notes text,  in var_table_name varchar(250), in var_field_name varchar(250),in var_position_dk varchar(60),in var_is_dependent_itemacc integer, in TRANSID varchar(60), in var_loop integer)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

BEGIN
	if var_loop = 0 then
		delete from i_component_account_purchsimrs;
	end if;
	insert into i_component_account_purchsimrs (
		id_account,
		notes,
		table_name,
		field_name,
		position_dk,
		is_dependent_itemacc
	)
  values (
		var_id_account,
		var_notes,
		var_table_name,
		var_field_name,
		var_position_dk,
		var_is_dependent_itemacc
);

END;
END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_currency` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_currency`(in var_id_currency varchar(25), in var_currency varchar(60), in var_nation varchar(120), in var_notes varchar(255), in var_created_user varchar(120), in var_created_date datetime, in var_modified_user varchar(120), in var_modified_date datetime, in transid varchar(60), in var_flag_default integer)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

BEGIN
	UPDATE mst_currency
SET 
	id_currency = var_id_currency,
	currency = var_currency,
	nation = var_nation,
	flag_default = var_flag_default,
	notes = var_notes,
	modified_user = var_modified_user,
	modified_date = var_modified_date
WHERE	
	id_currency = var_id_currency;
if var_flag_default = 1 THEN
	update mst_setcurrency set id_currencydef = var_id_currency;
end if;
END;


ELSEIF TRANSID = 'INSERT' THEN

BEGIN
	INSERT INTO mst_currency (
		id_currency,
		currency,
		nation,
		flag_default,
		notes,
		created_user,
		created_date,
		modified_user,
		modified_date
	)
VALUES
	(
		var_id_currency,
		var_currency,
		var_nation,
		var_flag_default,
		var_notes,
		var_created_user,
		var_created_date,
		var_modified_user,
		var_modified_date
	);

	insert into mst_setcurrency(
		id_currency,
		id_currencydef,
		notes,
		created_user,
		created_date,
		modified_user,
		modified_date
	)
	values (
		var_id_currency,
		(select id_currency from mst_currency where flag_default = 1 limit 1),
		var_notes,
		var_created_user,
		var_created_date,
		var_modified_user,
		var_modified_date
	);

END;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN

DELETE
FROM
	mst_setcurrency
WHERE
	id_currency = var_id_currency;
END;

	DELETE
FROM
	mst_currency
WHERE
	id_currency = var_id_currency;


END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_curr_konversi` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_curr_konversi`(in var_id_currency varchar(60), in var_qty double)
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	update mst_setcurrency set convert_value = var_qty where id_currency = var_id_currency;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_customer` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_customer`(in var_id_customer varchar(25),in var_first_name varchar(60),in var_last_name varchar(60),in var_address varchar(255),in var_city  varchar(120),in var_state varchar(255),in var_postal_code  varchar(25),in  var_country varchar(120),in var_phone1  varchar(60),in  var_phone2  varchar(60),in  var_phone3  varchar(60),in var_fax varchar(60),in var_email varchar(120),in var_website varchar(120),in  var_photo text,in var_credit_limit double,in var_id_account varchar(25),in var_def_due_date date,in var_def_payment_method   int,in  var_modified_user varchar(120),in var_created_date date,in var_modified_date date,in var_created_user varchar(120),in transid varchar(60), var_status integer, in var_notes text, in var_ar_balance double,in var_id_barcode varchar(200), in var_flag_credit_limit integer)
BEGIN
declare ar_balance_before double;
	
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	IF TRANSID = 'UPDATE' THEN
	BEGIN
			

			UPDATE mst_customer
				SET first_name = var_first_name,
				last_name = var_last_name,
				address = var_address,
				city = var_city,
				state = var_state,
				postal_code = var_postal_code,
				country = var_country,
				phone1 = var_phone1,
				phone2 = var_phone2,
				phone3 = var_phone3,
				fax = var_fax,
				email = var_email,
				website = var_website,
				credit_limit = var_credit_limit,
				id_account = var_id_account,
				notes=var_notes,
				photo=var_photo,
				def_due_date = var_def_due_date,
				def_payment_method = var_def_payment_method,
				`status` = var_status,
				modified_user = var_modified_user,
				modified_date = var_modified_date,
				ar_balance = var_ar_balance,
				id_barcode = var_id_barcode,
				flag_credit_limit = var_flag_credit_limit
			WHERE
				id_customer = var_id_customer;

			
		
	END;

	ELSEIF TRANSID = 'INSERT' THEN
	BEGIN
	
			INSERT INTO mst_customer (
				id_customer,
				first_name,
				last_name,
				address,
				city,
				state,
				postal_code,
				country,
				phone1,
				phone2,
				phone3,
				fax,
				email,
				website,
				photo,
				credit_limit,
				id_account,
				notes,
				def_due_date,
				def_payment_method,
				status,
				modified_user,
				created_date,
				modified_date,
				created_user,
				ar_balance,
				id_barcode,
				flag_credit_limit
			)
			VALUES
			(
				var_id_customer,
				var_first_name,
				var_last_name,
				var_address,
				var_city,
				var_state,
				var_postal_code,
				var_country,
				var_phone1,
				var_phone2,
				var_phone3,
				var_fax,
				var_email,
				var_website,
				var_photo,
				var_credit_limit,
				var_id_account,
				var_notes,
				var_def_due_date,
				var_def_payment_method,
				var_status,
				var_modified_user,
				var_created_date,
				var_modified_date,
				var_created_user,
				var_ar_balance,
				var_id_barcode,
				var_flag_credit_limit
			);
			
			

	END;

	ELSEIF TRANSID = 'DELETE' THEN
	BEGIN





		DELETE
		FROM
			mst_customer
		WHERE
			id_customer = var_id_customer;

			
	END;

	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_delivered_item` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_delivered_item`(in var_no_delivery_order varchar(30),in var_no_sales_order varchar(30),in var_id_customer varchar(30), in var_date_trn date, in var_notes text, in var_modified_user varchar(30), in var_created_date date, in var_modified_date date, in var_created_user varchar(30), in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in var_qty integer, in var_id_unit varchar(30), in var_detail integer, in varloop integer, in transid varchar(120), in var_sent_qty integer, in var_qty_before integer, in warehouse varchar(60), in var_id_itemdisc varchar(60), in var_item_namedisc varchar(250), in var_qty_discitem double, in var_id_unitdisc varchar(30), in var_id_ekspedisi varchar(30), in var_shipping_address varchar(250), in var_shipping_city varchar(120))
BEGIN
declare var_price DOUBLE;
declare var_convert_nom double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

select case when kurs is null then 1 else kurs end into var_convert_nom from trn_sales_order_head where no_sales_order = var_no_sales_order;

IF TRANSID = 'UPDATE' THEN
	if var_detail = 0 then
		DELETE FROM i_stock_out WHERE NO_stock_out = VAR_NO_delivery_order;
		delete from trn_do_discitem_det where no_do = var_no_delivery_order;
		delete from trn_delivery_order_det where no_delivery_order = var_no_delivery_order;
		delete from trn_delivery_order_head where no_delivery_order = var_no_delivery_order;
		
		insert into trn_delivery_order_head(
			 no_delivery_order,
			 no_sales_order,
			 id_customer,
			 date_trn,
			 notes,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 id_warehouse,
			 id_ekspedisi,
			 shipping_address,
			 shipping_city
			)
		values(var_no_delivery_order,
			 var_no_sales_order,
			 var_id_customer,
			 var_date_trn,
			 var_notes,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 warehouse,
			 var_id_ekspedisi,
			 var_shipping_address,
			 var_shipping_city
			);

	elseif var_detail = 1 THEN
		
		update trn_sales_order_det set sent_qty = 
		case when sent_qty is null then 0 else sent_qty end - var_qty_before where no_sales_order = var_no_sales_order
		and id_item = var_id_item;
 
		select case when price is null then 0 else price end into var_price from trn_sales_order_det where no_sales_order = var_no_sales_order and id_item = var_id_item;

		insert into trn_delivery_order_det 
			(no_delivery_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 sent_qty
			)
		values (var_no_delivery_order,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_sent_qty
			);

			update trn_sales_order_det set sent_qty = 
			case when sent_qty is null then 0 else sent_qty end + var_sent_qty where no_sales_order = var_no_sales_order and id_item = var_id_item;
		
		if varloop = 0 THEN
			delete from i_stock_out where no_stock_out = var_no_delivery_order;
		end if;
		insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
       id_warehouse
			)
		values (var_no_delivery_order,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 round(var_price * var_convert_nom),
			 round(var_price * var_convert_nom),
			 warehouse
			);

		elseif var_detail = 5 THEN
			insert into trn_do_discitem_det (
				no_do,
				id_item,
				item_name,
				qty,
				id_unit
			) values (
				var_no_delivery_order,
				var_id_itemdisc,
				var_item_namedisc,
				var_qty_discitem,
				var_id_unitdisc);

			insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
       id_warehouse
			)
		values (var_no_delivery_order,
			 var_date_trn,
			 var_id_itemdisc,
			 var_qty_discitem,
			 var_id_unitdisc,
			 0,
			 0,
			 warehouse
			);

		end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_delivery_order_head(
			 no_delivery_order,
			 no_sales_order,
			 id_customer,
			 date_trn,
			 notes,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 id_warehouse,
			 id_ekspedisi,
			 shipping_address,
			 shipping_city
			)
		values(var_no_delivery_order,
					 var_no_sales_order,
					 var_id_customer,
				   var_date_trn,
					 var_notes,
					 var_modified_user,
					 var_created_date,
					 var_modified_date,
					 var_created_user,
			     warehouse,
					 var_id_ekspedisi,
					 var_shipping_address,
					 var_shipping_city
			);
	elseif var_detail = 1 THEN
		insert into trn_delivery_order_det 
			(no_delivery_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 sent_qty
			)
		values (var_no_delivery_order,
					  var_number_asc,
						var_id_item,
						var_notes,
					  var_qty,
						var_id_unit,
					  var_sent_qty
			);

			update trn_sales_order_det set sent_qty = 
			case when sent_qty is null then 0 else sent_qty end + var_sent_qty where no_sales_order = var_no_sales_order and id_item = var_id_item;

			select case when price is null then 0 else price end into var_price from trn_sales_order_det where no_sales_order = var_no_sales_order and id_item = var_id_item;

		if varloop = 0 THEN
			delete from i_stock_out where no_stock_out = var_no_delivery_order;
		end if;
		insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_delivery_order,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 round(var_price * var_convert_nom),
			 round(var_price * var_convert_nom),
			 warehouse
			);
			elseif var_detail = 5 THEN
			insert into trn_do_discitem_det (
				no_do,
				id_item,
				item_name,
				qty,
				id_unit
			) values (
				var_no_delivery_order,
				var_id_itemdisc,
				var_item_namedisc,
				var_qty_discitem,
				var_id_unitdisc);

			insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
       id_warehouse
			)
		values (var_no_delivery_order,
			 var_date_trn,
			 var_id_itemdisc,
			 var_qty_discitem,
			 var_id_unitdisc,
			 0,
			 0,
			 warehouse
			);

	end if;

	ELSEIF TRANSID = 'DELETE' THEN
			if var_detail = 0 THEN
				DELETE FROM i_stock_out WHERE NO_stock_out = VAR_NO_delivery_order;
				delete from trn_do_discitem_det where no_do = var_no_delivery_order;
				delete from trn_delivery_order_det where no_delivery_order = var_no_delivery_order;
				delete from trn_delivery_order_head where no_delivery_order = var_no_delivery_order;
			elseif var_detail = 1 then
				update trn_sales_order_det set sent_qty = 
				case when sent_qty is null then 0 else sent_qty end - var_sent_qty where no_sales_order = var_no_sales_order and id_item = var_id_item;
			end if;
END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_end_balance_acc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_end_balance_acc`(in var_id_account varchar(25))
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	declare var_saldo DOUBLE;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
	
 select case when b.def_position = 'D' then 
(case when b.beg_balance >0 then b.beg_balance else 0 end + case when sum(a.nominal) >0 then sum(a.nominal) else 0 end) -
(case when b.beg_balance <0 then -1*b.beg_balance else 0 end + case when sum(a.nominal) <0 then -1*sum(a.nominal) else 0 end)  
when b.def_position = 'K' then 
(case when b.beg_balance <0 then -1*b.beg_balance else 0 end + case when sum(a.nominal) <0 then -1*sum(a.nominal) else 0 end)  - 
(case when b.beg_balance >0 then b.beg_balance else 0 end + case when sum(a.nominal) >0 then sum(a.nominal) else 0 end)
end as saldo into var_saldo
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where a.id_account=var_id_account;


if var_saldo is null THEN
	set var_saldo = 0;
end if;

select var_saldo;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_event` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_event`(in var_id_event varchar(30), in var_event_name varchar(120), in var_start_date datetime, in var_end_date datetime, in var_pic varchar(120),in var_created_date datetime,in var_modified_date datetime,in var_created_user varchar(120),in var_modified_user varchar(120),in TRANSID varchar(60))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN
	BEGIN
		UPDATE mst_event
		SET 
			id_event = var_id_event,
			event_name = var_event_name,
			start_date = var_start_date,
			end_date = var_end_date,
			pic = var_pic,
			created_date = var_created_date,
			modified_date = var_modified_date,
			created_user = var_created_user,
			modified_user = var_modified_user
		WHERE
			id_event = var_id_event;
	END;
ELSEIF TRANSID = 'INSERT' THEN
BEGIN
	INSERT INTO mst_event (
		id_event,
		event_name,
		start_date,
		end_date,
		pic,
		created_date,
		modified_date,
		created_user,
		modified_user
	)
VALUES
	(
		var_id_event,
		var_event_name,
		var_start_date,
		var_end_date,
		var_pic,
		var_created_date,
		var_modified_date,
		var_created_user,
		var_modified_user
	);

END;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	DELETE
FROM
	mst_event
WHERE
	id_event = var_id_event;
END;


END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_event_attendance` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_event_attendance`(in var_id_event varchar(30), in var_id_attendance varchar(30), in var_attendance_date datetime, in var_id_member varchar(30), in var_created_date datetime,in var_modified_date datetime,in var_created_user varchar(120),in var_modified_user varchar(120),in TRANSID varchar(60))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN
	BEGIN
		UPDATE i_event_attendance
		SET 
			id_event = var_id_event,
			id_attendance = var_id_attendance,
			attendance_date = var_attendance_date,
			id_member = var_id_member,
			created_date = var_created_date,
			modified_date = var_modified_date,
			created_user = var_created_user,
			modified_user = var_modified_user
		WHERE
			id_attendance = var_id_attendance;
	END;
ELSEIF TRANSID = 'INSERT' THEN
BEGIN
	INSERT INTO i_event_attendance (
		id_event,
		id_attendance,
		attendance_date,
		id_member,
		created_date,
		modified_date,
		created_user,
		modified_user
	)
VALUES
	(
		var_id_event,
		var_id_attendance,
		var_attendance_date,
		var_id_member,
		var_created_date,
		var_modified_date,
		var_created_user,
		var_modified_user
	);

END;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	DELETE
FROM
	i_event_attendance
WHERE
	id_attendance = var_id_attendance;
END;


END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_event_member` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_event_member`(in var_id_member varchar(30),in var_id_event varchar(30),in var_nip_member varchar(30), in var_member_name varchar(120), in var_position varchar(120), in var_area varchar(120), in var_region varchar(120),in var_created_date datetime,in var_modified_date datetime,in var_created_user varchar(120),in var_modified_user varchar(120),in TRANSID varchar(60), in var_photo_path text)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN
	BEGIN
		UPDATE mst_event_member
		SET 
			id_member = var_id_member,
			id_event = var_id_event,
			nip_member = var_nip_member,
			member_name = var_member_name,
			position = var_position,
			area = var_area,
			region = var_region,	
			created_date = var_created_date,
			modified_date = var_modified_date,
			created_user = var_created_user,
			modified_user = var_modified_user,
			photo_path = var_photo_path
		WHERE
			id_member = var_id_member;
	END;
ELSEIF TRANSID = 'INSERT' THEN
BEGIN
	INSERT INTO mst_event_member (
		id_member,
		id_event,
		nip_member,
		member_name,
		position,
		area,
		region,
		created_date,
		modified_date,
		created_user,
		modified_user,
		photo_path
	)
VALUES
	(
		var_id_member,
		var_id_event,
		var_nip_member,
		var_member_name,
		var_position,
		var_area,
		var_region,
		var_created_date,
		var_modified_date,
		var_created_user,
		var_modified_user,
		var_photo_path
	);

END;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	DELETE
FROM
	mst_event_member
WHERE
	id_member = var_id_member;
END;


END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_expedition` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_expedition`(in var_id_expedition varchar(30), in var_expedition_name varchar(60), in var_expedition_rate double,in var_from_city varchar(120), in var_to_city varchar(120),in var_qty_perunit double, in var_notes text, in var_modified_user varchar(120),in var_created_date datetime, in var_modified_date datetime,in var_created_user varchar(120), transid varchar(60))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN
	BEGIN
		UPDATE mst_expedition
		SET 
			id_expedition = var_id_expedition,
			expedition_name=var_expedition_name,
			expedition_rate=var_expedition_rate,
			from_city = var_from_city,
			to_city = var_to_city,
			qty_perunit = var_qty_perunit,
			notes = var_notes,
			created_date=var_created_date,
			modified_date=var_modified_date,
			created_user=var_created_user,
			modified_user=var_modified_user
		WHERE
			id_expedition = var_id_expedition;
	END;
ELSEIF TRANSID = 'INSERT' THEN
BEGIN
	INSERT INTO mst_expedition (
		id_expedition,
		expedition_name,
		expedition_rate,
		from_city,
		to_city,
		qty_perunit,
		notes,
		created_date,
		modified_date,
		created_user,
		modified_user
	)
VALUES
	(
		var_id_expedition,
		var_expedition_name,
		var_expedition_rate,
		var_from_city,
		var_to_city,
		var_qty_perunit,
		var_notes,
		var_created_date,
		var_modified_date,
		var_created_user,
		var_modified_user
	);

END;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	DELETE
FROM
	mst_expedition
WHERE
	id_expedition = var_id_expedition;
END;

END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_gol_asset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_gol_asset`(in var_id_golongan varchar(30), in var_masa_manfaat double, in var_rate_penyusutan double, in var_type varchar(200), in var_modified_user varchar(120), in var_created_date datetime, in var_modified_date datetime, in var_created_user varchar(120), in TRANSID text)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN
	BEGIN
		UPDATE mst_golaset
		SET 
			id_golongan = var_id_golongan,
			masa_manfaat = var_masa_manfaat,
			rate_penyusutan = var_rate_penyusutan,
			type = var_type,
			modified_user = var_modified_user,
			created_date = var_created_date,
			modified_date = var_modified_date,
			created_user = var_created_user
		WHERE
			id_golongan = var_id_golongan;
	END;
ELSEIF TRANSID = 'INSERT' THEN
BEGIN
	INSERT INTO mst_golaset (
		id_golongan,
		masa_manfaat,	
		rate_penyusutan,
		type,
		modified_user,
		created_date,
		modified_date,
		created_user
	)
VALUES
	(
		var_id_golongan,
		var_masa_manfaat,
		var_rate_penyusutan,
		var_type,
		var_modified_user,
		var_created_date,
		var_modified_date,
		var_created_user
	);

END;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	DELETE
FROM
	mst_golaset
WHERE
	id_golongan = var_id_golongan;
END;

END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_hak_akses` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_hak_akses`(in var_username varchar(60), in var_parentkey varchar(250), in var_childkey varchar(250))
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	insert into i_hakakses values (var_parentkey,var_childkey,var_username);

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_hitung_21` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_hitung_21`(in var_id_pegawai int)
BEGIN

	declare gaji_setahun double;
	declare ptkp double;
	declare pkp double;
	declare progresif_1 double;
	declare progresif_2 double;
	declare progresif_3 double;
	declare progresif_4 double;
	declare temp_progresif double;
	declare total_pph double;

	set progresif_1 = 0;
	set progresif_2 = 0;
	set progresif_3 = 0;
	set progresif_4 = 0;
	

	select (gaji_pokok * 12) into gaji_setahun from mst_pegawai 
	where id_pegawai = var_id_pegawai;

	select b.ptkp into ptkp from mst_pegawai a inner join mst_status_ptkp b on b.id_status = a.id_status
	where a.id_pegawai = var_id_pegawai;

	set pkp = gaji_setahun-ptkp;
	if pkp >= 50000000 then 
		set progresif_1 = 5/100 * 50000000;
		set temp_progresif = pkp - 50000000;
	ELSE
		set progresif_1 = 5/100 * pkp;
	end if; 

	if temp_progresif >= 200000000 THEN
		set progresif_2 = 15/100 * 200000000;
		set temp_progresif = temp_progresif - 200000000;
	ELSE
		set progresif_2 = 15/100 * temp_progresif;
		set temp_progresif = 0;
	end if;

	if temp_progresif >= 250000000 THEN
		set progresif_3 = 25/100 * 250000000;
		set temp_progresif = temp_progresif - 250000000;
	ELSE
		set progresif_3 = 25/100 * temp_progresif;
		set temp_progresif = 0;
	end if;

	if temp_progresif >= 500000000 THEN
		set progresif_4 = 30/100 * temp_progresif;
		set temp_progresif = 0;
	ELSE
		set progresif_4 = 0;
		set temp_progresif = 0;
	end if;

set total_pph = progresif_1 + progresif_2 + progresif_3 + progresif_4;
select progresif_1, progresif_2, progresif_3, progresif_4,total_pph;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_import_pemrov_simrs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_import_pemrov_simrs`(in var_id_import varchar(120), in var_date_trn date,in var_evidence_no varchar(500), in var_reff_acc_cost varchar(120),in var_reff_prog varchar(120),in var_reff_keg varchar(120),in var_reff_acc_cashbank varchar(120),in var_notes text, in var_receipt_amount double, in var_spend_amount double,in var_import_date datetime,in var_posting_status integer,in var_period integer, in var_year integer, in var_import_user varchar(200), in TRANSID varchar(60), in varloop integer)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;
	
IF TRANSID = 'UPDATE' THEN
BEGIN
	
	INSERT INTO i_upload_pemrov_simrs (
		id_import,
		date_trn,
		evidence_no,
		reff_acc_cost,
		reff_prog,
		reff_keg,
		reff_acc_cashbank,
		notes,
		receipt_amount,
		spend_amount,
		import_date,
		posting_status,	
		period,
		year,
		import_user
	)
VALUES
	(
		var_id_import,
		var_date_trn,
		var_evidence_no,
		var_reff_acc_cost,
		var_reff_prog,
		var_reff_keg,
		var_reff_acc_cashbank,
		var_notes,
		var_receipt_amount,
		var_spend_amount,
		var_import_date,
		var_posting_status,	
		var_period,
		var_year,
		var_import_user
	);

END;

END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_import_pemrov_simrs_rollback` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_import_pemrov_simrs_rollback`(in var_id_import varchar(60), in TRANSID varchar(120))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;
	
IF TRANSID = 'DELETE' THEN
	BEGIN
		DELETE FROM i_upload_pemrov_simrs WHERE id_import = var_id_import;
	END;

END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_init_period` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_init_period`(in var_period integer, in var_year integer, in var_created_date date)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

delete from i_set_account_def;
delete from mst_account;

update i_accounting_period set 
periode = var_period,
year = var_year,
last_closed_date = var_created_date,
lock_status = 0;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_input_nobukti` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_input_nobukti`(in var_form varchar(120), in var_bulan integer, in var_tahun integer)
BEGIN
	declare var_available integer;
	declare var_prefix varchar(120);
	declare var_ket varchar(250);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

	if var_form = 'JOURNAL' THEN
		set var_prefix = 'JU';
		set var_ket = 'GENERAL JOURNAL FORM NUMBER';
	end if;
	if var_form = 'OPNAME' THEN
		set var_prefix = 'OPN';
		set var_ket = 'STOCK OPNAME FORM NUMBER';
	end if;
if var_form = 'ADJUSTSTOCK' THEN
		set var_prefix = 'ADS';
		set var_ket = 'ADJUST STOCK FORM NUMBER';
	end if;
if var_form = 'SPENDMONEY' THEN
		set var_prefix = 'SPM';
		set var_ket = 'SPEND MONEY FORM NUMBER';
	end if;
if var_form = 'RECEIVEMONEY' THEN
		set var_prefix = 'RCM';
		set var_ket = 'RECEIVE MONEY FORM NUMBER';
	end if;
if var_form = 'PAYAP' THEN
		set var_prefix = 'PAP';
		set var_ket = 'PAY AP FORM NUMBER';
	end if;
if var_form = 'PAYAR' THEN
		set var_prefix = 'PAR';
		set var_ket = 'PAY AR FORM NUMBER';
	end if;
if var_form = 'SALES_RETURN' THEN
		set var_prefix = 'SRU';
		set var_ket = 'SALES_RETURN FORM NUMBER';
	end if;
if var_form = 'PURCHASE_RETURN' THEN
		set var_prefix = 'PRU';
		set var_ket = 'PURCHASE_RETURN FORM NUMBER';
	end if;
if var_form = 'PO' THEN
		set var_prefix = 'PO';
		set var_ket = 'PURCHASE ORDER FORM NUMBER';
	end if;
if var_form = 'PURCHASE' THEN
		set var_prefix = 'PU';
		set var_ket = 'PURCHASE FORM NUMBER';
	end if;
if var_form = 'PURCHASE_DIRECT' THEN
		set var_prefix = 'PUD';
		set var_ket = 'PURCHASE DIRECT FORM NUMBER';
	end if;
if var_form = 'SALES' THEN
		set var_prefix = 'SA';
		set var_ket = 'SALES FORM NUMBER';
	end if;
if var_form = 'SALES_ORDER' THEN
		set var_prefix = 'SO';
		set var_ket = 'SALES ORDER FORM NUMBER';
	end if;
if var_form = 'SALES_SERVICE' THEN
		set var_prefix = 'SVC';
		set var_ket = 'SALES SERVICE FORM NUMBER';
	end if;
if var_form = 'RECONCILE' THEN
		set var_prefix = 'REC';
		set var_ket = 'RECONCILE BANK FORM NUMBER';
	end if;
if var_form = 'RO' THEN
		set var_prefix = 'RO';
		set var_ket = 'REQUEST ORDER FORM NUMBER';
	end if;
if var_form = 'RECEIVED_ORDER' THEN
		set var_prefix = 'REV';
		set var_ket = 'RECEIVED ORDER FORM NUMBER';
	end if;
if var_form = 'DELIVERED_ITEM' THEN
		set var_prefix = 'DO';
		set var_ket = 'DELIVERED ITEM FORM NUMBER';
	end if;
if var_form = 'CASHIER' THEN
		set var_prefix = 'CSH';
		set var_ket = 'CASHIER FORM NUMBER';
	end if;
if var_form = 'CASHIER_RETURN' THEN
		set var_prefix = 'CSU';
		set var_ket = 'CASHIER RETURN FORM NUMBER';
	end if;
if var_form = 'TRFSTOCK' THEN
		set var_prefix = 'TRF';
		set var_ket = 'WAREHOUSE TRANSFER FORM NUMBER';
	end if;
if var_form = 'DIRECT_PURCHASE' THEN
		set var_prefix = 'DPC';
		set var_ket = 'DIRECT PURCHASE FORM NUMBER';
	end if;
if var_form = 'PINJAMAN' THEN
		set var_prefix = 'PNJ';
		set var_ket = 'PINJAMAN FORM NUMBER';
	end if;
if var_form = 'BAYAR_PINJAMAN' THEN
		set var_prefix = 'BNJ';
		set var_ket = 'PINJAMAN FORM NUMBER';
	end if;
if var_form = 'MASTER_ITEM_NEW' THEN
		set var_prefix = '';
		set var_ket = 'MASTER ITEM';
	end if;
if var_form = 'MASTER_SERVICE' THEN
		set var_prefix = 'M/SVC-';
		set var_ket = 'MASTER SERVICE';
	end if;
if var_form = 'MASTER_EVENT' THEN
		set var_prefix = '';
		set var_ket = 'MASTER EVENT';
	end if;
if var_form = 'MASTER_EVENT_MEMBER' THEN
		set var_prefix = '';
		set var_ket = 'MASTER EVENT MEMBER';
	end if;
if var_form = 'MASTER_EVENT_ATTENDANCE' THEN
		set var_prefix = '';
		set var_ket = 'MASTER EVENT ATTENDANCE';
	end if;
if var_form = 'MASTER_CUSTOMER' THEN
		set var_prefix = 'C';
		set var_ket = 'MASTER CUSTOMER';
	end if;
if var_form = 'REDEMPTION' THEN
		set var_prefix = 'RDM';
		set var_ket = 'REDEMPTION';
	end if;
if var_form = 'SERVICE' THEN
		set var_prefix = 'SVC';
		set var_ket = 'SERVICE';
	end if;
if var_form = 'SERVICEPAY' THEN
		set var_prefix = 'SVP';
		set var_ket = 'SERVICEPAY';
	end if;
if var_form = 'PESANAN' THEN
		set var_prefix = 'PSN';
		set var_ket = 'PESANAN';
	end if;
if var_form = 'PESANANPAY' THEN
		set var_prefix = 'PSP';
		set var_ket = 'PESANANPAY';
	end if;
if var_form = 'TANPANOTA' THEN
		set var_prefix = 'TNP';
		set var_ket = 'TANPANOTA';
	end if;
if var_form = 'MASTER_EXPEDITION' THEN
		set var_prefix = 'EXP';
		set var_ket = 'MASTER EKSPEDISI';
	end if;
if var_form = 'MASTER_GOLASET' THEN
		set var_prefix = 'GOL';
		set var_ket = 'MASTER GOLONGAN ASET';
	end if;
if var_form = 'MASTER_ASET' THEN
		set var_prefix = 'AST';
		set var_ket = 'MASTER ASET';
	end if;
if var_form = 'ADJUST_JOURNAL' THEN
		set var_prefix = 'ADJ';
		set var_ket = 'ADJUSTMENT JOURNAL';
	end if;
if var_form = 'DEPR_JOURNAL' THEN
		set var_prefix = 'DEP';
		set var_ket = 'DEPRECIATION JOURNAL';
	end if;
if var_form = 'EXPEDITION_JOURNAL' THEN
		set var_prefix = 'EXJ';
		set var_ket = 'EXPEDITION JOURNAL';
	end if;
if var_form = 'FAKTUR_PAJAK_NORMAL' THEN
		set var_prefix = '';
		set var_ket = 'FAKTUR PAJAK NORMAL';
	end if;
if var_form = 'FAKTUR_PAJAK_PENGGANTI' THEN
		set var_prefix = '';
		set var_ket = 'FAKTUR PAJAK PENGGANTI';
	end if;
if var_form = 'MASTER_ITEM_JENIS_NEW' THEN
		set var_prefix = '';
		set var_ket = 'MASTER ITEM JENIS';
	end if;
if var_form = 'MASTER_ITEM_KATEGORI_NEW' THEN
		set var_prefix = '';
		set var_ket = 'MASTER ITEM KATEGORI';
	end if;
if var_form = 'MASTER_ITEM_NEW_BRAND' THEN
		set var_prefix = '';
		set var_ket = 'MASTER ITEM BRAND';
	end if;
if var_form = 'IMPORT_SIMRS_PEMROV' THEN
		set var_prefix = '';
		set var_ket = 'IMPORT SIMRS PEMROV';
	end if;
if var_form = 'WORKING_ORDER' THEN
		set var_prefix = 'SPK';
		set var_ket = 'WORKING ORDER FORM NUMBER';
	end if;
if var_form = 'MATERIAL_USAGE' THEN
		set var_prefix = 'USE';
		set var_ket = 'MATERIAL USAGE FORM NUMBER';
	end if;
if var_form = 'REALISASI_WORKING_ORDER' THEN
		set var_prefix = 'PRD';
		set var_ket = 'WORKING ORDER FORM NUMBER';
	end if;
if var_form = 'PELUNASAN_PO' THEN
		set var_prefix = 'LPO';
		set var_ket = 'PELUNASAN PO FORM NUMBER';
	end if;
if var_form = 'PELUNASAN_SO' THEN
		set var_prefix = 'LSO';
		set var_ket = 'PELUNASAN SO FORM NUMBER';
	end if;

	if var_form = 'MASTER_ITEM_KATEGORI_NEW' OR var_form = 'MASTER_ITEM_JENIS_NEW' THEN
		select count(nourut) into var_available from control_no_trans where form = var_form;
	ELSEIF var_form = 'MASTER_ITEM_NEW' THEN
		select count(nourut) into var_available from control_no_trans where form = var_form;
	ELSE
		select count(nourut) into var_available from control_no_trans where form = var_form and bulan = var_bulan and tahun = var_tahun;
	END IF;

	if var_available = 0 and (var_form = 'MASTER_ITEM_NEW') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;

if var_available = 0 and (var_form = 'MASTER_SERVICE') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;

if var_available = 0 and (var_form = 'IMPORT_SIMRS_PEMROV') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;

if var_available = 0 and (var_form = 'MASTER_ITEM_JENIS_NEW') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'0',
		var_ket
		);
	end if;

	if var_available = 0 and (var_form = 'MASTER_ITEM_KATEGORI_NEW') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'',
		var_ket
		);
	end if;

	if var_available = 0 and (var_form = 'MASTER_ITEM_NEW_BRAND') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000',
		var_ket
		);
	end if;

	if var_available = 0 and (var_form = 'MASTER_EVENT') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;

if var_available = 0 and (var_form = 'MASTER_EVENT_MEMBER') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;

if var_available = 0 and (var_form = 'MASTER_EVENT_ATTENDANCE') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;


	if var_available = 0 and (var_form = 'MASTER_EXPEDITION') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;

	if var_available = 0 and (var_form = 'MASTER_GOLASET') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;
if var_available = 0 and (var_form = 'MASTER_ASET') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;

	if var_available = 0 and (var_form = 'FAKTUR_PAJAK_NORMAL') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'00000000',
		var_ket
		);
	end if;

	if var_available = 0 and (var_form = 'FAKTUR_PAJAK_PENGGANTI') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'00000000',
		var_ket
		);
	end if;

if var_available = 0 and var_form <> 'MASTER_ITEM_NEW' AND var_form <> 'MASTER_EXPEDITION' AND var_form <> 'MASTER_GOLASET' and var_form <> 'MASTER_ASET' and var_form <> "FAKTUR_PAJAK_NORMAL" and var_form <> "FAKTUR_PAJAK_PENGGANTI" and var_form <> "MASTER_EVENT" and var_form <> "MASTER_EVENT_MEMBER" and var_form <> "MASTER_EVENT_ATTENDANCE" and var_form <> "MASTER_ITEM_JENIS_NEW" and var_form <> "MASTER_ITEM_KATEGORI_NEW" and var_form <> "MASTER_ITEM_NEW_BRAND" and var_form <> "IMPORT_SIMRS_PEMROV" and var_form <> "MASTER_SERVICE" THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'00000',
		var_ket
		);
	end if;


COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_input_nobukti_item` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_input_nobukti_item`(in var_form varchar(120), in var_bulan integer, in var_tahun integer, in var_jenis varchar(20), in var_kategori varchar(20))
BEGIN
	declare var_available integer;
	declare var_prefix varchar(120);
	declare var_ket varchar(250);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

	if var_form = 'JOURNAL' THEN
		set var_prefix = 'JU';
		set var_ket = 'GENERAL JOURNAL FORM NUMBER';
	end if;
	if var_form = 'OPNAME' THEN
		set var_prefix = 'OPN';
		set var_ket = 'STOCK OPNAME FORM NUMBER';
	end if;
if var_form = 'ADJUSTSTOCK' THEN
		set var_prefix = 'ADS';
		set var_ket = 'ADJUST STOCK FORM NUMBER';
	end if;
if var_form = 'SPENDMONEY' THEN
		set var_prefix = 'SPM';
		set var_ket = 'SPEND MONEY FORM NUMBER';
	end if;
if var_form = 'RECEIVEMONEY' THEN
		set var_prefix = 'RCM';
		set var_ket = 'RECEIVE MONEY FORM NUMBER';
	end if;
if var_form = 'PAYAP' THEN
		set var_prefix = 'PAP';
		set var_ket = 'PAY AP FORM NUMBER';
	end if;
if var_form = 'PAYAR' THEN
		set var_prefix = 'PAR';
		set var_ket = 'PAY AR FORM NUMBER';
	end if;
if var_form = 'SALES_RETURN' THEN
		set var_prefix = 'SRU';
		set var_ket = 'SALES_RETURN FORM NUMBER';
	end if;
if var_form = 'PURCHASE_RETURN' THEN
		set var_prefix = 'PRU';
		set var_ket = 'PURCHASE_RETURN FORM NUMBER';
	end if;
if var_form = 'PO' THEN
		set var_prefix = 'PO';
		set var_ket = 'PURCHASE ORDER FORM NUMBER';
	end if;
if var_form = 'PURCHASE' THEN
		set var_prefix = 'PU';
		set var_ket = 'PURCHASE FORM NUMBER';
	end if;
if var_form = 'PURCHASE_DIRECT' THEN
		set var_prefix = 'PUD';
		set var_ket = 'PURCHASE DIRECT FORM NUMBER';
	end if;
if var_form = 'SALES' THEN
		set var_prefix = 'SA';
		set var_ket = 'SALES FORM NUMBER';
	end if;
if var_form = 'SALES_ORDER' THEN
		set var_prefix = 'SO';
		set var_ket = 'SALES ORDER FORM NUMBER';
	end if;
if var_form = 'SALES_SERVICE' THEN
		set var_prefix = 'SVC';
		set var_ket = 'SALES SERVICE FORM NUMBER';
	end if;
if var_form = 'RECONCILE' THEN
		set var_prefix = 'REC';
		set var_ket = 'RECONCILE BANK FORM NUMBER';
	end if;
if var_form = 'RO' THEN
		set var_prefix = 'RO';
		set var_ket = 'REQUEST ORDER FORM NUMBER';
	end if;
if var_form = 'RECEIVED_ORDER' THEN
		set var_prefix = 'REV';
		set var_ket = 'RECEIVED ORDER FORM NUMBER';
	end if;
if var_form = 'DELIVERED_ITEM' THEN
		set var_prefix = 'DO';
		set var_ket = 'DELIVERED ITEM FORM NUMBER';
	end if;
if var_form = 'CASHIER' THEN
		set var_prefix = 'CSH';
		set var_ket = 'CASHIER FORM NUMBER';
	end if;
if var_form = 'CASHIER_RETURN' THEN
		set var_prefix = 'CSU';
		set var_ket = 'CASHIER RETURN FORM NUMBER';
	end if;
if var_form = 'TRFSTOCK' THEN
		set var_prefix = 'TRF';
		set var_ket = 'WAREHOUSE TRANSFER FORM NUMBER';
	end if;
if var_form = 'DIRECT_PURCHASE' THEN
		set var_prefix = 'DPC';
		set var_ket = 'DIRECT PURCHASE FORM NUMBER';
	end if;
if var_form = 'PINJAMAN' THEN
		set var_prefix = 'PNJ';
		set var_ket = 'PINJAMAN FORM NUMBER';
	end if;
if var_form = 'BAYAR_PINJAMAN' THEN
		set var_prefix = 'BNJ';
		set var_ket = 'PINJAMAN FORM NUMBER';
	end if;
if var_form = 'MASTER_ITEM_NEW' THEN
		set var_prefix = '';
		set var_ket = 'MASTER ITEM';
	end if;
if var_form = 'MASTER_SERVICE' THEN
		set var_prefix = 'M/SVC-';
		set var_ket = 'MASTER SERVICE';
	end if;
if var_form = 'MASTER_EVENT' THEN
		set var_prefix = '';
		set var_ket = 'MASTER EVENT';
	end if;
if var_form = 'MASTER_EVENT_MEMBER' THEN
		set var_prefix = '';
		set var_ket = 'MASTER EVENT MEMBER';
	end if;
if var_form = 'MASTER_EVENT_ATTENDANCE' THEN
		set var_prefix = '';
		set var_ket = 'MASTER EVENT ATTENDANCE';
	end if;
if var_form = 'MASTER_CUSTOMER' THEN
		set var_prefix = 'C';
		set var_ket = 'MASTER CUSTOMER';
	end if;
if var_form = 'REDEMPTION' THEN
		set var_prefix = 'RDM';
		set var_ket = 'REDEMPTION';
	end if;
if var_form = 'SERVICE' THEN
		set var_prefix = 'SVC';
		set var_ket = 'SERVICE';
	end if;
if var_form = 'SERVICEPAY' THEN
		set var_prefix = 'SVP';
		set var_ket = 'SERVICEPAY';
	end if;
if var_form = 'PESANAN' THEN
		set var_prefix = 'PSN';
		set var_ket = 'PESANAN';
	end if;
if var_form = 'PESANANPAY' THEN
		set var_prefix = 'PSP';
		set var_ket = 'PESANANPAY';
	end if;
if var_form = 'TANPANOTA' THEN
		set var_prefix = 'TNP';
		set var_ket = 'TANPANOTA';
	end if;
if var_form = 'MASTER_EXPEDITION' THEN
		set var_prefix = 'EXP';
		set var_ket = 'MASTER EKSPEDISI';
	end if;
if var_form = 'MASTER_GOLASET' THEN
		set var_prefix = 'GOL';
		set var_ket = 'MASTER GOLONGAN ASET';
	end if;
if var_form = 'MASTER_ASET' THEN
		set var_prefix = 'AST';
		set var_ket = 'MASTER ASET';
	end if;
if var_form = 'ADJUST_JOURNAL' THEN
		set var_prefix = 'ADJ';
		set var_ket = 'ADJUSTMENT JOURNAL';
	end if;
if var_form = 'DEPR_JOURNAL' THEN
		set var_prefix = 'DEP';
		set var_ket = 'DEPRECIATION JOURNAL';
	end if;
if var_form = 'EXPEDITION_JOURNAL' THEN
		set var_prefix = 'EXJ';
		set var_ket = 'EXPEDITION JOURNAL';
	end if;
if var_form = 'FAKTUR_PAJAK_NORMAL' THEN
		set var_prefix = '';
		set var_ket = 'FAKTUR PAJAK NORMAL';
	end if;
if var_form = 'FAKTUR_PAJAK_PENGGANTI' THEN
		set var_prefix = '';
		set var_ket = 'FAKTUR PAJAK PENGGANTI';
	end if;
if var_form = 'MASTER_ITEM_JENIS_NEW' THEN
		set var_prefix = '';
		set var_ket = 'MASTER ITEM JENIS';
	end if;
if var_form = 'MASTER_ITEM_KATEGORI_NEW' THEN
		set var_prefix = '';
		set var_ket = 'MASTER ITEM KATEGORI';
	end if;
if var_form = 'MASTER_ITEM_NEW_BRAND' THEN
		set var_prefix = '';
		set var_ket = 'MASTER ITEM BRAND';
	end if;
if var_form = 'IMPORT_SIMRS_PEMROV' THEN
		set var_prefix = '';
		set var_ket = 'IMPORT SIMRS PEMROV';
	end if;
if var_form = 'WORKING_ORDER' THEN
		set var_prefix = 'SPK';
		set var_ket = 'WORKING ORDER FORM NUMBER';
	end if;
if var_form = 'MATERIAL_USAGE' THEN
		set var_prefix = 'USE';
		set var_ket = 'MATERIAL USAGE FORM NUMBER';
	end if;
if var_form = 'REALISASI_WORKING_ORDER' THEN
		set var_prefix = 'PRD';
		set var_ket = 'WORKING ORDER FORM NUMBER';
	end if;
if var_form = 'PELUNASAN_PO' THEN
		set var_prefix = 'LPO';
		set var_ket = 'PELUNASAN PO FORM NUMBER';
	end if;
if var_form = 'PELUNASAN_SO' THEN
		set var_prefix = 'LSO';
		set var_ket = 'PELUNASAN SO FORM NUMBER';
	end if;

	if var_form = 'MASTER_ITEM_KATEGORI_NEW' OR var_form = 'MASTER_ITEM_JENIS_NEW' THEN
		select count(nourut) into var_available from control_no_trans where form = var_form;
	ELSEIF var_form = 'MASTER_ITEM_NEW' THEN
		select count(nourut) into var_available from control_no_trans where form = var_form and jenis = var_jenis and kategori = var_kategori;
	ELSE
		select count(nourut) into var_available from control_no_trans where form = var_form and bulan = var_bulan and tahun = var_tahun;
	END IF;

	if var_available = 0 and (var_form = 'MASTER_ITEM_NEW') THEN
		insert into control_no_trans (
		form,
		prefix,
		jenis,
		kategori,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_jenis,
		var_kategori,
		'000',
		var_ket
		);
	end if;

if var_available = 0 and (var_form = 'MASTER_SERVICE') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;

if var_available = 0 and (var_form = 'IMPORT_SIMRS_PEMROV') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;

if var_available = 0 and (var_form = 'MASTER_ITEM_JENIS_NEW') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'0',
		var_ket
		);
	end if;
 
	if var_available = 0 and (var_form = 'MASTER_ITEM_KATEGORI_NEW') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'0',
		var_ket
		);
	end if;

	if var_available = 0 and (var_form = 'MASTER_ITEM_BRAND_NEW') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000',
		var_ket
		);
	end if;

	if var_available = 0 and (var_form = 'MASTER_EVENT') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;

if var_available = 0 and (var_form = 'MASTER_EVENT_MEMBER') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;

if var_available = 0 and (var_form = 'MASTER_EVENT_ATTENDANCE') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;


	if var_available = 0 and (var_form = 'MASTER_EXPEDITION') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;

	if var_available = 0 and (var_form = 'MASTER_GOLASET') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;
if var_available = 0 and (var_form = 'MASTER_ASET') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'000000',
		var_ket
		);
	end if;

	if var_available = 0 and (var_form = 'FAKTUR_PAJAK_NORMAL') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'00000000',
		var_ket
		);
	end if;

	if var_available = 0 and (var_form = 'FAKTUR_PAJAK_PENGGANTI') THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'00000000',
		var_ket
		);
	end if;

if var_available = 0 and var_form <> 'MASTER_ITEM_NEW' AND var_form <> 'MASTER_EXPEDITION' AND var_form <> 'MASTER_GOLASET' and var_form <> 'MASTER_ASET' and var_form <> "FAKTUR_PAJAK_NORMAL" and var_form <> "FAKTUR_PAJAK_PENGGANTI" and var_form <> "MASTER_EVENT" and var_form <> "MASTER_EVENT_MEMBER" and var_form <> "MASTER_EVENT_ATTENDANCE" and var_form <> "MASTER_ITEM_JENIS_NEW" and var_form <> "MASTER_ITEM_KATEGORI_NEW" and var_form <> "MASTER_ITEM_NEW_BRAND" and var_form <> "IMPORT_SIMRS_PEMROV" and var_form <> "MASTER_SERVICE" THEN
		insert into control_no_trans (
		form,
		prefix,
		bulan,
		tahun,
		nourut,
		keterangan)
		values (
		var_form,
		var_prefix,
		var_bulan,
		var_tahun,
		'00000',
		var_ket
		);
	end if;


COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_insert_ap_status_simrs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_insert_ap_status_simrs`(in var_no_purchase varchar(120), in var_date_trn date, in var_id_supplier varchar(120), in var_purchase_amount double, in var_return_amount double, in var_disc_amount double, in var_paid_amount double, in var_balance double, in var_notes varchar(500))
BEGIN

DECLARE var_count_period double;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;


START TRANSACTION;
insert into ap_status
(no_purchase,
date_trn,
id_supplier,
purchase_amount,
return_amount,
disc_amount,
paid_amount,
balance,
notes
)
values (
var_no_purchase,
var_date_trn,
var_id_supplier,
var_purchase_amount,
var_return_amount,
var_disc_amount,
var_paid_amount,
var_balance,
var_notes
);


COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_insert_closed_tbl` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_insert_closed_tbl`(in var_created_date date, in var_id_acc_income varchar(30), in var_start_date date, in var_end_date date, in var_periode integer, in var_year integer, in var_lock_status integer)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

insert into tbl_close_income(
id_account,
nominal,
closed_date,
closed_period,
closed_year,
id_account_income
)
select b.id_account, sum(b.nominal),var_created_date, var_periode, var_year, var_id_acc_income 
from trn_ledger_det b 
inner JOIN mst_account a on a.id_account=b.id_account 
inner join trn_ledger_head c on c.no_ledger = b.no_ledger
where (c.date_trn between var_start_date and var_end_date)
group by b.id_account
having sum(b.nominal) <> 0;

update i_accounting_period set 
periode = var_periode,
year = var_year,
last_closed_date = var_created_date,
lock_status = var_lock_status;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_item` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_item`(in var_id_item  varchar(25), in var_item_name varchar(60),in  var_id_category varchar(25),in var_id_brand varchar(25), in var_id_account varchar(25), in var_main_unit varchar(25), in var_buy_unit varchar(25), in var_sell_unit varchar(25), in var_flag_buy integer, in var_flag_sell integer,in var_flag_inv integer , in var_blob_image text,in var_modified_user varchar(120), in var_created_date datetime, in var_modified_date datetime, in var_created_user varchar(120), in transid varchar(60),in var_wh varchar(120), in var_price double, in var_id_warehouse varchar(120), in var_max_qty integer, in var_min_qty integer, in var_notes text,in var_length float, in var_width float, in var_height float, in var_weight float, in var_id_account_cogs varchar(60), in var_account_cogs varchar(250), in var_min_qty_unit varchar(30), in var_id_itembrand varchar(60), in var_item_disc_qty double, in var_id_itemdisc varchar(60), in var_qty_disc double, in var_detail integer, in var_id_unitdisc varchar(30), in var_item_disc_unit varchar(30), in var_active_status integer, in var_kadar double, in var_use_notifminqty integer)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	BEGIN

	if var_detail = 0 then
		UPDATE mst_item
		SET item_name = var_item_name,
				id_category = var_id_category,
				id_jenis = var_id_brand,
				id_account = var_id_account,
				main_unit = var_main_unit,
				buy_unit = var_buy_unit,
				sell_unit = var_sell_unit,
				flag_buy =var_flag_buy,
				flag_sell =var_flag_sell,
				flag_inv = var_flag_inv,
				blob_image = var_blob_image,
				modified_user = var_modified_user,
			  created_date = var_created_date,
				modified_date=var_modified_date,
				created_user = var_created_user,
				sell_price=var_price,
				id_warehouse = var_id_warehouse,
				max_qty = var_max_qty,
				min_qty = var_min_qty,
				notes = var_notes,
				length = var_length,
				width = var_width,
				height = var_height,
				weight = var_weight,
			  id_account_cogs = var_id_account_cogs,
				account_cogs = var_account_cogs,
				min_qty_unit = var_min_qty_unit,
				id_brand = var_id_itembrand,
				item_disc_qty = var_item_disc_qty,
				item_disc_unit = var_item_disc_unit,
				active_status = var_active_status,
				kadar=var_kadar,
				use_notifminqty=var_use_notifminqty
		WHERE
				id_item = var_id_item;

		update mst_setunit set qty =1 where id_item = var_id_item and id_unit = var_main_unit;
  
	delete from mst_item_disc where id_item = var_id_item;
	elseif var_detail = 1 then
		call sp_set_itemdisc_det(var_id_item,var_id_itemdisc, var_qty_disc, TRANSID, var_id_unitdisc);
	end if;

	END;

ELSEIF TRANSID = 'INSERT' THEN

	BEGIN
	if var_detail =  0 then
		INSERT INTO mst_item (
		id_item,
		item_name,
		id_category,
		id_jenis,
		id_account,
		main_unit,
		buy_unit,
		sell_unit,
		flag_buy,
		flag_sell,
		flag_inv,
		blob_image,
		modified_user,
		created_date,
		modified_date,
		created_user,
		sell_price,
		id_warehouse,
		max_qty,
		min_qty,
		notes,
		length,
		width,
		height,
		weight,
		id_account_cogs,
		account_cogs,
		min_qty_unit,
		id_brand,
		item_disc_qty,
		item_disc_unit,
		active_status,
		kadar,
		use_notifminqty
	)
	VALUES
	(
		var_id_item,
		var_item_name,
		var_id_category,
		var_id_brand,
		var_id_account,
		var_main_unit,
		var_buy_unit,
		var_sell_unit,
		var_flag_buy,
		var_flag_sell,
		var_flag_inv,
		var_blob_image,
		var_modified_user,
		var_created_date,
		var_modified_date,
		var_created_user,
		var_price,
		var_id_warehouse,
		var_max_qty,
		var_min_qty,
		var_notes,
		var_length,
		var_width,
		var_height,
		var_weight,
		var_id_account_cogs,
		var_account_cogs,
		var_min_qty_unit,
		var_id_itembrand,
		var_item_disc_qty,
		var_item_disc_unit,
		var_active_status,
		var_kadar,
		var_use_notifminqty
	);
	INSERT INTO i_item_beg_balance (
		id_warehouse,
		id_item,
		id_unit,
		balance,
		notes )
	VALUES (
		var_wh,
		var_id_item,
		var_main_unit,
		0,
		''
	);

	insert into mst_setunit(
		id_item,
		id_unit,
		qty,
		notes,
		modified_user,
		modified_date
	)
	values (
		var_id_item,
		var_main_unit,
		1,	
		var_notes,
		var_modified_user,
		var_modified_date
	);

	elseif var_detail = 1 THEN
		call sp_set_itemdisc_det(var_id_item,var_id_itemdisc, var_qty_disc, TRANSID, var_id_unitdisc);
	end if;

END;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	delete from mst_item_disc where id_item = var_id_item;
	delete from mst_setunit where id_item = var_id_item and qty =1; 
	DELETE FROM i_item_beg_balance where id_item = var_id_item;
	DELETE FROM mst_item
	WHERE id_item = var_id_item;

		

	
END;

END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_itembrand` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_itembrand`(in var_itembrand_id varchar(60), in var_itembrand_nm varchar(200), in description text, in transid varchar(60), in var_disc double)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	BEGIN
		UPDATE mst_itembrand
		SET mst_itembrand_id = var_itembrand_id,
				mst_itembrand_nm = var_itembrand_nm,
				description = description,
				disc = var_disc
		WHERE
				mst_itembrand_id = var_itembrand_id;
	END;

ELSEIF TRANSID = 'INSERT' THEN

	BEGIN
		INSERT INTO mst_itembrand (
		mst_itembrand_id,
		mst_itembrand_nm,
		description,
		disc
	)
	VALUES
	(
		var_itembrand_id,
		var_itembrand_nm,
		description,
		var_disc
	);
	end;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	
	DELETE FROM mst_itembrand
	WHERE mst_itembrand_id = var_itembrand_id;
	
END;

END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_itemcat` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_itemcat`(in var_itemjenis_id varchar(60),in var_itemcat_id varchar(60), in var_itemcat_nm varchar(200), in description text, in transid varchar(60),in var_disc double)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	BEGIN
		UPDATE mst_itemcat
		SET mst_itemjenis_id = var_itemjenis_id,
				mst_itemcat_id = var_itemcat_id,
				mst_itemcat_nm = var_itemcat_nm,
				description = description,
				discount = var_disc
		WHERE
				mst_itemcat_id = var_itemcat_id;
	END;

ELSEIF TRANSID = 'INSERT' THEN

	BEGIN
		INSERT INTO mst_itemcat (
		mst_itemjenis_id,
		mst_itemcat_id,
		mst_itemcat_nm,
		description,
		discount
	)
	VALUES
	(
		var_itemjenis_id,
		var_itemcat_id,
		var_itemcat_nm,
		description,
		var_disc
	);
	end;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	
	DELETE FROM mst_itemcat
	WHERE mst_itemcat_id = var_itemcat_id;
	
END;

END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_itemjenis` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_itemjenis`(in var_itemjenis_id varchar(60), in var_itemjenis_nm varchar(200), in description text, in transid varchar(60),in var_disc double, in var_default_price double)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	BEGIN
		UPDATE mst_itemjenis
		SET mst_itemjenis_id = var_itemjenis_id,
				mst_itemjenis_nm = var_itemjenis_nm,
				description = description,
				discount = var_disc,
				default_price = var_default_price
		WHERE
				mst_itemjenis_id = var_itemjenis_id;
	END;

ELSEIF TRANSID = 'INSERT' THEN

	BEGIN
		INSERT INTO mst_itemjenis (
		mst_itemjenis_id,
		mst_itemjenis_nm,
		description,
		discount,
		default_price
	)
	VALUES
	(
		var_itemjenis_id,
		var_itemjenis_nm,
		description,
		var_disc,
		var_default_price
	);
	end;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	
	DELETE FROM mst_itemjenis
	WHERE mst_itemjenis_id = var_itemjenis_id;
	
END;

END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_item_import` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_item_import`()
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		INSERT INTO mst_item (
		id_item,
		item_name,
		id_category,
		id_jenis,
		id_account,
		main_unit,
		buy_unit,
		sell_unit,
		flag_buy,
		flag_sell,
		flag_inv,
		blob_image,
		modified_user,
		created_date,
		modified_date,
		created_user,
		sell_price,
		id_warehouse,
		max_qty,
		min_qty,
		notes,
		length,
		width,
		height,
		weight,
		id_account_cogs,
		account_cogs,
		min_qty_unit,
		id_brand,
		item_disc_qty,
		item_disc_unit
	)
	select id_item,
		item_name,
		'NN',
		'NN',
		(select func_get_acc_inventory()),
		'pcs',
		'pcs',
		'pcs',
		flag_buy,
		flag_sell,
		flag_inv,
		'',
		'import',
		(select now()),
		(select now()),
		'import',
		sell_price,
		(select id_warehouse from mst_warehouse where id_warehouse = 'WH001'),
		0,
		0,
		notes,
		length,
		width,
		height,
		weight,
		(select func_get_acc_cogs()),
		(select account_name from mst_account where id_account = (select func_get_acc_inventory())),
		'pcs',
		'NN',
		0,
		'pcs' from mst_item_import;

delete from mst_item_import;

COMMIT;
	END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_journal` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_journal`(in var_no_journal varchar(30),in var_date_trn date,in var_comment text, in var_created_user varchar(120),in var_created_date date,in var_modified_user varchar(120),in var_modified_date date, in var_id_account varchar(30), in var_notes text, in var_amount double, in var_detail integer, in transid varchar(60), in varloop integer,in var_total double, in id_curr varchar(30), in var_kurs double)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_journal_det where journal_no = var_no_journal;
		delete from trn_journal_head where journal_no = var_no_journal;
		
		insert into trn_journal_head(
			 journal_no,
			 date_trn,
			 description,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 total,
			 id_currency,
			 kurs
			)
		values(var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 var_total,
					 id_curr,
					 var_kurs);

		delete from trn_ledger_det where no_ledger = var_no_journal;
		delete from trn_ledger_head where no_ledger = var_no_journal;
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'General Journal',
						var_total);
	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_journal_det where journal_no = var_no_journal;			
		end if;

		insert into trn_journal_det 
			(journal_no,
			id_account,
			notes,
			amount
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));

		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_journal;			
		end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));
		end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_journal_head
			(
			 journal_no,
			 date_trn,
			 description,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 total,
			 id_currency,
			 kurs
			)
			values(
					 var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
						var_total,
						id_curr,
						var_kurs);
		insert into trn_ledger_head (
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values (
				var_no_journal,
				var_date_trn,
				var_comment,
				var_created_user,
				var_created_date,
				var_modified_user,
				var_modified_date,
				'General Journal',
				round(var_total * var_kurs,0)
			);

	elseif var_detail = 1 THEN
		insert into trn_journal_det 
			(journal_no,
			id_account,	
			notes,
			amount
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));
		insert into trn_ledger_det (
				no_ledger,
				id_account,
				notes,
				nominal
			) values (
				var_no_journal,
				var_id_account,
				var_notes,
				round(var_amount*var_kurs)
			);
	end if;


	ELSEIF TRANSID = 'DELETE' THEN

			delete from trn_ledger_det where no_ledger = var_no_journal;
			delete from trn_journal_det where journal_no = var_no_journal;
			delete from trn_ledger_head where no_ledger = var_no_journal;
			delete from trn_journal_head where journal_no = var_no_journal;
		  

	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_journal_adjust` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_journal_adjust`(in var_no_journal varchar(30),in var_date_trn date,in var_comment text, in var_created_user varchar(120),in var_created_date date,in var_modified_user varchar(120),in var_modified_date date, in var_id_account varchar(30), in var_notes text, in var_amount double, in var_detail integer, in transid varchar(60), in varloop integer,in var_total double, in id_curr varchar(30), in var_kurs double)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_adjustjournal_det where journal_no = var_no_journal;
		delete from trn_adjustjournal_head where journal_no = var_no_journal;
		
		insert into trn_adjustjournal_head(
			 journal_no,
			 date_trn,
			 description,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 total,
			 id_currency,
			 kurs
			)
		values(var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 var_total,
					 id_curr,
					 var_kurs);

		delete from trn_ledger_det where no_ledger = var_no_journal;
		delete from trn_ledger_head where no_ledger = var_no_journal;
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'General Journal',
						var_total);
	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_adjustjournal_det where journal_no = var_no_journal;			
		end if;

		insert into trn_adjustjournal_det 
			(journal_no,
			id_account,
			notes,
			amount
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));

		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_journal;			
		end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));
		end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_adjustjournal_head
			(
			 journal_no,
			 date_trn,
			 description,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 total,
			 id_currency,
			 kurs
			)
			values(
					 var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
						var_total,
						id_curr,
						var_kurs);
		insert into trn_ledger_head (
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values (
				var_no_journal,
				var_date_trn,
				var_comment,
				var_created_user,
				var_created_date,
				var_modified_user,
				var_modified_date,
				'General Journal',
				round(var_total * var_kurs,0)
			);

	elseif var_detail = 1 THEN
		insert into trn_adjustjournal_det 
			(journal_no,
			id_account,	
			notes,
			amount
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));
		insert into trn_ledger_det (
				no_ledger,
				id_account,
				notes,
				nominal
			) values (
				var_no_journal,
				var_id_account,
				var_notes,
				round(var_amount*var_kurs)
			);
	end if;


	ELSEIF TRANSID = 'DELETE' THEN

			delete from trn_ledger_det where no_ledger = var_no_journal;
			delete from trn_adjustjournal_det where journal_no = var_no_journal;
			delete from trn_ledger_head where no_ledger = var_no_journal;
			delete from trn_adjustjournal_head where journal_no = var_no_journal;
		  

	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_journal_depreciation` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_journal_depreciation`(in var_no_journal varchar(30),in var_date_trn date, in var_created_user varchar(120),in var_created_date date,in var_modified_user varchar(120),in var_modified_date date,in var_id_aset varchar(30),in var_id_account_depr varchar(30),in var_id_account_akum varchar(30) , in var_notes text, in var_amount double, in var_detail integer, in transid varchar(60), in varloop integer,in var_total double, in id_curr varchar(30), in var_kurs double, in var_period double, in var_years double)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN
		if var_detail = 0 THEN
	
		delete from trn_ledger_det where no_ledger = var_no_journal;
		delete from trn_ledger_head where no_ledger = var_no_journal;
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_journal,
					 var_date_trn,
					 'Jurnal Penyusutan Aset',
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Aset Depreciation',
						var_total);
	elseif var_detail = 1 THEN
		
		delete from i_aset_depreciation where id_accasetdep = var_no_journal and id_aset = var_id_aset and period=var_period and years=var_years ;
	
		insert into i_aset_depreciation 
		(id_accasetdep,
		 id_aset,
		 nominal,
		 date_trn,
		 notes,
		 period,
		 years,
		 created_date,
		 modified_date,
		 created_user,
		 modified_user
		) values 
		(var_no_journal,
		 var_id_aset,
		 round(var_amount*var_kurs,0),
		 var_date_trn,
		 var_notes,
		 var_period,
		 var_years,
		 var_created_date,
		 var_modified_date,
		 var_created_user,
		 var_modified_user);
	
		
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_journal,
						var_id_account_depr,
						concat('Biaya Penyusutan Aset ',var_id_aset),
						round(var_amount*var_kurs,0));

		
		
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_journal,
						var_id_account_akum,
						concat('Akumulasi Penyusutan Aset ',var_id_aset),
						-1*round(var_amount*var_kurs,0));
		
		end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		
		insert into trn_ledger_head (
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values (
				var_no_journal,
				var_date_trn,
				'Jurnal Penyusutan Aset',
				var_created_user,
				var_created_date,
				var_modified_user,
				var_modified_date,
				'Aset Depreciation',
				round(var_total * var_kurs,0)
			);

	elseif var_detail = 1 THEN
			
			if varloop = 0 THEN
				insert into trn_ledger_head (
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values (
				var_no_journal,
				var_date_trn,
				'Jurnal Penyusutan Aset',
				var_created_user,
				var_created_date,
				var_modified_user,
				var_modified_date,
				'Aset Depreciation',
				round(var_total * var_kurs,0)
			);
			end if;
			delete from i_aset_depreciation where id_accasetdep = var_no_journal and id_aset = var_id_aset and period=var_period and years=var_years ; 
	
		insert into i_aset_depreciation 
		(id_accasetdep,
		 id_aset,
		 nominal,
		 date_trn,
		 notes,
		 period,
		 years,
		 created_date,
		 modified_date,
		 created_user,
		 modified_user
		) values 
		(var_no_journal,
		 var_id_aset,
		 round(var_amount*var_kurs,0),
		 var_date_trn,
		 var_notes,
		 var_period,
		 var_years,
		 var_created_date,
		 var_modified_date,
		 var_created_user,
		 var_modified_user);

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_journal,
						var_id_account_depr,
						concat('Biaya Penyusutan Aset ',var_id_aset),
						round(var_amount*var_kurs,0));

	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_journal,
						var_id_account_akum,
						concat('Akumulasi Penyusutan Aset ',var_id_aset),
						-1*round(var_amount*var_kurs,0));

	end if;


	ELSEIF TRANSID = 'DELETE' THEN
			delete from i_aset_depreciation where id_accasetdep = var_no_journal;
			delete from trn_ledger_det where no_ledger = var_no_journal;
			delete from trn_ledger_head where no_ledger = var_no_journal;
		  

	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_journal_simrs_kasirsentral` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_journal_simrs_kasirsentral`(in var_no_journal varchar(30),in var_date_trn date,in var_comment text, in var_created_user varchar(120),in var_created_date date,in var_modified_user varchar(120),in var_modified_date date, in var_id_account varchar(30), in var_notes text, in var_amount double, in var_detail integer, in transid varchar(60), in varloop integer,in var_total double, in id_curr varchar(30), in var_kurs double)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_journallayananmedik_det where journal_no = var_no_journal;
		delete from trn_journallayananmedik_head where journal_no = var_no_journal;
		
		insert into trn_journallayananmedik_head(
			 journal_no,
			 date_trn,
			 description,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 total,
			 id_currency,
			 kurs
			)
		values(var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 var_total,
					 id_curr,
					 var_kurs);

		delete from trn_ledger_det where no_ledger = var_no_journal;
		delete from trn_ledger_head where no_ledger = var_no_journal;
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Kasir Sentral SIMRS Journal',
						var_total);
	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_journallayananmedik_det where journal_no = var_no_journal;			
		end if;

		insert into trn_journallayananmedik_det
			(journal_no,
			id_account,
			notes,
			amount
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));

		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_journal;			
		end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));
		end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_journallayananmedik_head
			(
			 journal_no,
			 date_trn,
			 description,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 total,
			 id_currency,
			 kurs
			)
			values(
					 var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
						var_total,
						id_curr,
						var_kurs);
		insert into trn_ledger_head (
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values (
				var_no_journal,
				var_date_trn,
				var_comment,
				var_created_user,
				var_created_date,
				var_modified_user,
				var_modified_date,
				'Kasir Sentral SIMRS Journal',
				round(var_total * var_kurs,0)
			);

	elseif var_detail = 1 THEN
		insert into trn_journallayananmedik_det
			(journal_no,
			id_account,	
			notes,
			amount
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));
		insert into trn_ledger_det (
				no_ledger,
				id_account,
				notes,
				nominal
			) values (
				var_no_journal,
				var_id_account,
				var_notes,
				round(var_amount*var_kurs)
			);
	end if;


	ELSEIF TRANSID = 'DELETE' THEN

			delete from trn_ledger_det where no_ledger = var_no_journal;
			delete from trn_journallayananmedik_det where journal_no = var_no_journal;
			delete from trn_ledger_head where no_ledger = var_no_journal;
			delete from trn_journallayananmedik_head where journal_no = var_no_journal;
		  

	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_journal_simrs_pembelian` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_journal_simrs_pembelian`(in var_no_journal varchar(30),in var_date_trn date,in var_comment text, in var_created_user varchar(120),in var_created_date date,in var_modified_user varchar(120),in var_modified_date date, in var_id_account varchar(30), in var_notes text, in var_amount double, in var_detail integer, in transid varchar(60), in varloop integer,in var_total double, in id_curr varchar(30), in var_kurs double)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_journalpembelian_det where journal_no = var_no_journal;
		delete from trn_journalpembelian_head where journal_no = var_no_journal;
		
		insert into trn_journalpembelian_head(
			 journal_no,
			 date_trn,
			 description,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 total,
			 id_currency,
			 kurs
			)
		values(var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 var_total,
					 id_curr,
					 var_kurs);

		delete from trn_ledger_det where no_ledger = var_no_journal;
		delete from trn_ledger_head where no_ledger = var_no_journal;
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'pembelian SIMRS Journal',
						var_total);
	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_journalpembelian_det where journal_no = var_no_journal;			
		end if;

		insert into trn_journalpembelian_det
			(journal_no,
			id_account,
			notes,
			amount
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));

		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_journal;			
		end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));
		end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_journalpembelian_head
			(
			 journal_no,
			 date_trn,
			 description,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 total,
			 id_currency,
			 kurs
			)
			values(
					 var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
						var_total,
						id_curr,
						var_kurs);
		insert into trn_ledger_head (
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values (
				var_no_journal,
				var_date_trn,
				var_comment,
				var_created_user,
				var_created_date,
				var_modified_user,
				var_modified_date,
				'pembelian SIMRS Journal',
				round(var_total * var_kurs,0)
			);

	elseif var_detail = 1 THEN
		insert into trn_journalpembelian_det
			(journal_no,
			id_account,	
			notes,
			amount
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));
		insert into trn_ledger_det (
				no_ledger,
				id_account,
				notes,
				nominal
			) values (
				var_no_journal,
				var_id_account,
				var_notes,
				round(var_amount*var_kurs)
			);
	end if;


	ELSEIF TRANSID = 'DELETE' THEN

			delete from trn_ledger_det where no_ledger = var_no_journal;
			delete from trn_journalpembelian_det where journal_no = var_no_journal;
			delete from trn_ledger_head where no_ledger = var_no_journal;
			delete from trn_journalpembelian_head where journal_no = var_no_journal;
		  

	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_journal_simrs_uploadpemrov` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_journal_simrs_uploadpemrov`(in var_no_journal varchar(30),in var_date_trn date,in var_comment text, in var_created_user varchar(120),in var_created_date date,in var_modified_user varchar(120),in var_modified_date date, in var_id_account varchar(30), in var_notes text, in var_amount double, in var_detail integer, in transid varchar(60), in varloop integer,in var_total double, in id_curr varchar(30), in var_kurs double)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_journaluploadpemrov_det where journal_no = var_no_journal;
		delete from trn_journaluploadpemrov_head where journal_no = var_no_journal;
		
		insert into trn_journaluploadpemrov_head(
			 journal_no,
			 date_trn,
			 description,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 total,
			 id_currency,
			 kurs
			)
		values(var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 var_total,
					 id_curr,
					 var_kurs);

		delete from trn_ledger_det where no_ledger = var_no_journal;
		delete from trn_ledger_head where no_ledger = var_no_journal;
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Import Aplikasi Pemrov',
						var_total);
	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_journaluploadpemrov_det where journal_no = var_no_journal;			
		end if;

		insert into trn_journaluploadpemrov_det
			(journal_no,
			id_account,
			notes,
			amount
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));

		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_journal;			
		end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));
		end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_journaluploadpemrov_head
			(
			 journal_no,
			 date_trn,
			 description,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 total,
			 id_currency,
			 kurs
			)
			values(
					 var_no_journal,
					 var_date_trn,
					 var_comment,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
						var_total,
						id_curr,
						var_kurs);
		insert into trn_ledger_head (
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values (
				var_no_journal,
				var_date_trn,
				var_comment,
				var_created_user,
				var_created_date,
				var_modified_user,
				var_modified_date,
				'Import Aplikasi Pemrov',
				round(var_total * var_kurs,0)
			);

	elseif var_detail = 1 THEN
		insert into trn_journaluploadpemrov_det
			(journal_no,
			id_account,	
			notes,
			amount
			)
		values (var_no_journal,
						var_id_account,
						var_notes,
						round(var_amount*var_kurs,0));
		insert into trn_ledger_det (
				no_ledger,
				id_account,
				notes,
				nominal
			) values (
				var_no_journal,
				var_id_account,
				var_notes,
				round(var_amount*var_kurs)
			);
	end if;


	ELSEIF TRANSID = 'DELETE' THEN

			delete from trn_ledger_det where no_ledger = var_no_journal;
			delete from trn_journaluploadpemrov_det where journal_no = var_no_journal;
			delete from trn_ledger_head where no_ledger = var_no_journal;
			delete from trn_journaluploadpemrov_head where journal_no = var_no_journal;
		  

	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_list_opname` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_list_opname`(in var_field varchar(255), in var_criteria text, in detail integer,in var_date_filter integer,in var_tgl_awal date,in var_tgl_akhir date)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;

	declare filter text;
	select concat('%',var_criteria,'%') into filter;
	
	
if var_date_filter = 0 then 
	if var_field = 'Stock Opname No' then
		select a.no_opname,a.date_trn,a.id_warehouse,
		sum(b.qty_onhand) as balance, 
		sum(b.qty_opname) as opname from i_opname_head a 
		inner join i_opname_det b on b.no_opname = a.no_opname
		where a.no_opname like filter
		group by a.no_opname, a.date_trn
		order by a.no_opname;
	elseif var_field = 'Warehouse ID' then
		select a.no_opname,a.date_trn,a.id_warehouse,
		sum(b.qty_onhand) as balance, 
		sum(b.qty_opname) as opname from i_opname_head a 
		inner join i_opname_det b on b.no_opname = a.no_opname
		where a.id_warehouse like filter
		group by a.no_opname, a.date_trn
		order by a.id_warehouse;
	end if;
elseif var_date_filter = 1 then 
	if var_field = 'Stock Opname No' then
		select a.no_opname,a.date_trn,a.id_warehouse,
		sum(b.qty_onhand) as balance, 
		sum(b.qty_opname) as opname from i_opname_head a 
		inner join i_opname_det b on b.no_opname = a.no_opname
		where a.no_opname like filter and (a.date_trn between var_tgl_awal and var_tgl_akhir)
		group by a.no_opname, a.date_trn
		order by a.no_opname;
	elseif var_field = 'Warehouse ID' then
		select a.no_opname,a.date_trn,a.id_warehouse,
		sum(b.qty_onhand) as balance, 
		sum(b.qty_opname) as opname from i_opname_head a 
		inner join i_opname_det b on b.no_opname = a.no_opname
		where a.id_warehouse like filter and (a.date_trn between var_tgl_awal and var_tgl_akhir)
		group by a.no_opname, a.date_trn
		order by a.id_warehouse;
	end if;
end if;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_marketing` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_marketing`(in var_id_employee varchar(25),in var_first_name varchar(60),in var_last_name varchar(60),in var_address varchar(255),in var_city  varchar(120),in var_state varchar(255),in var_postal_code  varchar(25),in  var_country varchar(120),in var_phone1  varchar(60),in  var_phone2  varchar(60),in  var_phone3  varchar(60),in var_fax varchar(60),in var_email varchar(120),in var_website varchar(120),in  var_photo text,in var_target double,in var_id_account varchar(25),in  var_modified_user varchar(120),in var_created_date date,in var_modified_date date,in var_created_user varchar(120),in transid varchar(60), in var_status integer, in var_notes text, in var_grade varchar(120), in var_position_id int, var_department_id int)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	BEGIN
		UPDATE mst_employee
			SET first_name = var_first_name,
			last_name = var_last_name,
			address = var_address,
			city = var_city,
			state = var_state,
			postal_code = var_postal_code,
			country = var_country,
			phone1 = var_phone1,
			phone2 = var_phone2,
			phone3 = var_phone3,
			fax = var_fax,
			email = var_email,
			website = var_website,
			photo = var_photo,
			target = var_target,
			id_account = var_id_account,
			notes=var_notes,
			`status` = var_status,
			modified_user = var_modified_user,
			created_date = var_created_date,
			modified_date = var_modified_date,
			created_user = var_created_user,
			grade=var_grade,
			position_id=var_position_id,
			department_id = var_department_id
		WHERE
			id_employee = var_id_employee;
	
	END;

ELSEIF TRANSID = 'INSERT' THEN

	BEGIN
		INSERT INTO mst_employee (
			id_employee,
			first_name,
			last_name,
			address,
			city,
			state,
			postal_code,
			country,
			phone1,
			phone2,
			phone3,
			fax,
			email,
			website,
			photo,
			target,
			id_account,
			notes,
			`status`,
			modified_user,
			created_date,
			modified_date,
			created_user,
			grade,
			position_id,
			department_id
		)
		VALUES
		(
			var_id_employee,
			var_first_name,
			var_last_name,
			var_address,
			var_city,
			var_state,
			var_postal_code,
			var_country,
			var_phone1,
			var_phone2,
			var_phone3,
			var_fax,
			var_email,
			var_website,
			var_photo,
			var_target,
			var_id_account,
			var_notes,
			var_status,
			var_modified_user,
			var_created_date,
			var_modified_date,
			var_created_user,
			var_grade,
			var_position_id,
			var_department_id
		);
	
END;

ELSEIF TRANSID = 'DELETE' THEN
	BEGIN
		DELETE
		FROM
			mst_employee
	WHERE
		id_employee = var_id_employee;
END;


END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_material_usage` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_material_usage`(in var_usage_no varchar(60),in var_wo_no varchar(60),in var_date_trn date,in var_pic varchar(60),in var_department_id integer,in var_notes varchar(400),in var_modified_user varchar(60),in var_created_date datetime,in var_modified_date datetime,in var_created_user varchar(60),in var_item_id varchar(60),in var_qty double,in var_id_unit varchar(30),in var_cost double,in var_total_cost double,in var_material_type_id integer,in var_detail integer, in varloop integer, in transid varchar(120), in var_head_cost double, in var_id_item_production varchar(60), in var_id_warehouse varchar(60))
BEGIN

DECLARE total_qty_before double;
DECLARE qty_before double;
DECLARE BDPAccount varchar(60);
DECLARE MaterialAccount varchar(60);


DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		
		delete from i_stock_out where no_stock_out = var_usage_no;
		delete from trn_ledger_det where no_ledger = var_usage_no;
		delete from trn_ledger_head where no_ledger = var_usage_no;
		delete from trn_usage_material_det where usage_no = var_usage_no;
		delete from trn_usage_material_head where usage_no = var_usage_no;


	insert into trn_usage_material_head(
			usage_no,
			wo_no,
			id_item_production,
			date_trn,
			department_id,
			notes,
			total_cost,
			modified_user,
			created_date,
			modified_date,
			created_user,
			id_warehouse
		)
		values(var_usage_no,
					 var_wo_no,
					 var_id_item_production,
					 var_date_trn,
					 var_department_id,
					 var_notes,
					 var_head_cost,
					 var_modified_user,
					 var_created_date,
					 var_modified_date,
					 var_created_user,
					 var_id_warehouse
		);

	insert into trn_ledger_head (
		no_ledger,
		date_trn,
		description,
		total,
		created_user,
		created_date,
		modified_user,
		modified_date,
		post_from) 
	values (
		var_usage_no,
		var_date_trn,
		var_notes,
		var_head_cost,
		var_created_user,
		var_created_date,
		var_modified_user,
		var_modified_date,
		'Material Usage'
	);
	
	
	select a.id_account_bdp into BDPAccount from mst_department_produksi a inner join trn_wo_head b on b.department_id = a.department_id where b.wo_no = var_wo_no;
	
	insert into trn_ledger_det (
		no_ledger,
		id_account,
		notes,
		nominal
	) values (
		var_usage_no,
		BDPAccount,
		var_notes,
		var_head_cost
	);

	elseif var_detail = 1 THEN
		
			select case when sum(a.qty) is null then 0 else sum(a.qty) end into total_qty_before from trn_usage_material_det a 
			inner join trn_usage_material_head b on b.usage_no = a.usage_no where b.wo_no = var_wo_no and a.item_id = var_item_id;

			select case when a.qty is null then 0 else a.qty end into qty_before from trn_usage_material_det a 
			inner join trn_usage_material_head b on b.usage_no = a.usage_no where b.usage_no = var_usage_no and b.wo_no = var_wo_no and a.item_id = var_item_id;
		
	
		insert into trn_usage_material_det (
			usage_no,	
			item_id,
			qty,
			id_unit,
			cost,
			total_cost,
			material_type_id
		)
		values (
			var_usage_no,	
			var_item_id,
			var_qty,
			var_id_unit,
			var_cost,
			var_total_cost,
			var_material_type_id
		);

		if var_material_type_id = 1 then
			update trn_wo_material_det set real_qty = case when total_qty_before is null then 0 else total_qty_before end - 
			case when qty_before is null then 0 else qty_before end +
			var_qty where no_wo = var_wo_no and id_item = var_item_id;
		end if;
		if var_material_type_id = 2 then
			update trn_wo_wip_det set real_qty = case when total_qty_before is null then 0 else total_qty_before end - 
			case when qty_before is null then 0 else qty_before end +
			var_qty where wo_no = var_wo_no and id_item = var_item_id;
		end if;
		

		insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
       id_warehouse
			)
		values (var_usage_no,
			 var_date_trn,
			 var_item_id,
			 var_qty,
			 var_id_unit,
			 round(var_cost),
			 round(var_cost),
			 var_id_warehouse
			);


		select a.id_account into MaterialAccount from mst_item a where a.id_item = var_item_id;
	
			
			insert into trn_ledger_det (
				no_ledger,
				id_account,
				notes,
				nominal
			) values (
				var_usage_no,
				MaterialAccount,
				var_notes,
				-1*var_total_cost
			);
	
		end if;

ELSEIF TRANSID = 'INSERT' THEN
	
		if var_detail = 0 then

	insert into trn_usage_material_head(
			usage_no,
			wo_no,
			id_item_production,
			date_trn,
			department_id,
			notes,
			total_cost,
			modified_user,
			created_date,
			modified_date,
			created_user,
			id_warehouse
		)
		values(var_usage_no,
					 var_wo_no,
					 var_id_item_production,
					 var_date_trn,
					 var_department_id,
					 var_notes,
					 var_head_cost,
					 var_modified_user,
					 var_created_date,
					 var_modified_date,
					 var_created_user,
					 var_id_warehouse
		);

		insert into trn_ledger_head (
		no_ledger,
		date_trn,
		description,
		total,
		created_user,
		created_date,
		modified_user,
		modified_date,
		post_from) 
	values (
		var_usage_no,
		var_date_trn,
		var_notes,
		var_head_cost,
		var_created_user,
		var_created_date,
		var_modified_user,
		var_modified_date,
		'Material Usage'
	);
	
	
	select a.id_account_bdp into BDPAccount from mst_department_produksi a inner join trn_wo_head b on b.department_id = a.department_id where b.wo_no = var_wo_no;
	
	insert into trn_ledger_det (
		no_ledger,
		id_account,
		notes,
		nominal
	) values (
		var_usage_no,
		BDPAccount,
		var_notes,
		var_head_cost
	);

	elseif var_detail = 1 THEN
		
		insert into trn_usage_material_det (
			usage_no,	
			item_id,
			qty,
			id_unit,
			cost,
			total_cost,
			material_type_id
		)
		values (
			var_usage_no,	
			var_item_id,
			var_qty,
			var_id_unit,
			var_cost,
			var_total_cost,
			var_material_type_id
		);

		
		insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
       id_warehouse
			)
		values (var_usage_no,
			 var_date_trn,
			 var_item_id,
			 var_qty,
			 var_id_unit,
			 round(var_cost),
			 round(var_cost),
			 var_id_warehouse
			);

		if var_material_type_id = 1 then
			update trn_wo_material_det set real_qty = case when real_qty is null then 0 else real_qty end + var_qty 
			where no_wo = var_wo_no and id_item = var_item_id;
		end if;
			update trn_wo_wip_det set real_qty = case when real_qty is null then 0 else real_qty end + var_qty 
			where wo_no = var_wo_no and id_item = var_item_id;

			select a.id_account into MaterialAccount from mst_item a where a.id_item = var_item_id;
	
			
			insert into trn_ledger_det (
				no_ledger,
				id_account,
				notes,
				nominal
			) values (
				var_usage_no,
				MaterialAccount,
				var_notes,
				-1*var_total_cost
			);

	end if;

ELSEIF TRANSID = 'DELETE' THEN

			select case when sum(a.qty) is null then 0 else sum(a.qty) end into total_qty_before from trn_usage_material_det a 
			inner join trn_usage_material_head b on b.usage_no = a.usage_no where b.wo_no = var_wo_no and a.item_id = var_item_id;

			select case when a.qty is null then 0 else a.qty end into qty_before from trn_usage_material_det a 
			inner join trn_usage_material_head b on b.usage_no = a.usage_no where b.usage_no = var_usage_no and b.wo_no = var_wo_no and a.item_id = var_item_id;

		if var_material_type_id = 1 then
			update trn_wo_material_det set real_qty = case when total_qty_before is null then 0 else total_qty_before end - 
			case when qty_before is null then 0 else qty_before end +
			var_qty where no_wo = var_wo_no and id_item = var_item_id;
		end if;
		if var_material_type_id = 2 then
			update trn_wo_wip_det set real_qty = case when total_qty_before is null then 0 else total_qty_before end - 
			case when qty_before is null then 0 else qty_before end +
			var_qty where wo_no = var_wo_no and id_item = var_item_id;
		end if;

		delete from trn_usage_material_det where usage_no = var_usage_no;
		delete from trn_usage_material_head where usage_no = var_usage_no;
		delete from trn_ledger_det where no_ledger = var_usage_no;
		delete from trn_ledger_head where no_ledger = var_usage_no;
		delete from i_stock_out where no_stock_out = var_usage_no;

			
END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_new_user` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_new_user`(in var_username varchar(25), in var_password varchar(25), in var_id_employee varchar(25), in var_create_user varchar(120), in var_create_date datetime, in var_modified_user varchar(120), in var_modified_date datetime, in var_flag_active int)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	INSERT INTO mst_user (
	username,
	password,
	id_employee,
	created_user,
	created_date,
	modified_user,
	modified_date,
	flag_active
	)
VALUES
	(
		var_username,
		md5(var_password),
		var_id_employee,
		var_create_user,
		var_create_date,
		var_modified_user,
		var_modified_date,
		var_flag_active
	);

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_notif_piutangjt` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_notif_piutangjt`()
BEGIN
declare tgl_sekarang date;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

select now() into tgl_sekarang;
select no_sales,customer,jatuh_tempo,balance from view_piutang_jt
where `MONTH`(date_trn) = `MONTH`(tgl_sekarang);


COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_payment_ap` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_payment_ap`(in var_no_payment_ap varchar(30), in var_id_supplier varchar(30), in var_date_trn date, in var_notes text, in var_total double, in var_id_account varchar(30), in var_created_user varchar(30), in var_created_date date, in var_modified_user varchar(30), in var_modified_date date,in var_number_asc integer, in var_no_purchase varchar(60),in var_invoice_date date, in var_ap_amount double,in var_ap_return double, in var_discount double, in var_ap_amount_net double, in  var_paid_amount double, in var_detail integer, in varloop integer, in transid varchar(120), in var_curr varchar(30),in var_kurs double, in var_flag_kurs_pu integer, in var_paid_org double, in var_total_disc double)
BEGIN
declare var_acc_piutang varchar(120);
declare var_acc_pay_disc varchar(120);
declare var_acc_selisih_kurs varchar(120);
declare var_curr_def varchar(30);
declare var_curr_pu varchar(30);
DECLARE ap_disc_before DOUBLE;
DECLARE ap_balance_before DOUBLE;
declare ap_payment_before DOUBLE;
declare jml_piutang DOUBLE;
declare jml_retur DOUBLE;
declare jml_disc double;
declare var_kurs_pu double;
declare var_total_selisih_kurs_rugi double;
declare var_total_selisih_kurs_laba double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

select func_get_defcurr() into var_curr_def;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_payment_ap_det where no_payment_ap = var_no_payment_ap;
		delete from trn_payment_ap_head where no_payment_ap = var_no_payment_ap;
		delete from trn_ledger_det where no_ledger = var_no_payment_ap;
		delete from trn_ledger_head where no_ledger = var_no_payment_ap;
		
		
		insert into trn_payment_ap_head(
			 no_payment_ap,
			 id_supplier,
			 date_trn,
			 notes,
			 total,
			 id_account,
		   created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 id_currency,
			 flag_kurs_pu
			)
		values(var_no_payment_ap,
			 var_id_supplier,
			 var_date_trn,
			 var_notes,
			 var_total,
			 var_id_account,
		   var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_curr,
			 var_flag_kurs_pu
			);

		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_payment_ap,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'AP Payment Form',
						var_total);

	elseif var_detail = 1 THEN

		if varloop = 0 then
			delete from trn_payment_ap_det where no_payment_ap = var_no_payment_ap;			
		end if;
		insert into trn_payment_ap_det 
			(no_payment_ap,
			 number_asc,
			 no_purchase,
			 invoice_date,
			 ap_amount,
			 ap_return,
			 discount,
			 ap_amount_net,
			 paid_amount,
			 kurs
			)
		values (var_no_payment_ap,
			 var_number_asc,
			 var_no_purchase,
			 var_invoice_date,
			 var_ap_amount,
			 var_ap_return,
			 var_discount,
			 var_ap_amount_net,
			 var_paid_amount,
			 var_kurs
			);
		

				
		
				
			
		
		select disc_amount into ap_disc_before from ap_status where no_purchase = var_no_purchase;
		select balance into ap_balance_before from ap_status where no_purchase = var_no_purchase;
		select paid_amount into ap_payment_before from ap_status where no_purchase = var_no_purchase;
		if ap_balance_before is null then 
			set ap_balance_before = 0;
		end if;
		if ap_disc_before is null THEN
			set ap_disc_before = 0;
		end if;
		if ap_payment_before is null THEN
			set ap_payment_before = 0;
		end if;
		update ap_status set disc_amount = case when disc_amount is null then 0 else disc_amount end  - ap_disc_before, balance = case when balance is null then 0 else balance end - ap_balance_before, paid_amount = case when paid_amount is null then 0 else paid_amount end - ap_payment_before where no_purchase = var_no_purchase;
		update ap_status set disc_amount = case when disc_amount is null then 0 else disc_amount end + var_discount, balance = case when balance is null then 0 else balance end + ((var_ap_amount - var_ap_return) - var_discount - var_paid_amount),paid_amount = case when paid_amount is null then 0 else paid_amount end + var_paid_amount where no_purchase = var_no_purchase;
		
	end if;

	
if var_detail = 0 then

	
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_id_account,
						var_notes,
						round(-1*var_total,0));

		

		


		select id_account into var_acc_piutang from i_set_account_def where acc_parameter = 'acc_credit_purchase';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_acc_piutang,
						var_notes,
						round(var_total+var_total_disc,0));



		select id_account into var_acc_pay_disc from i_set_account_def where acc_parameter = 'acc_pay_purchase_disc';
if var_total_disc > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_acc_pay_disc,
						var_notes,
						round((-1*var_total_disc),0));
end if;
end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_payment_ap_head(
			 no_payment_ap,
			 id_supplier,
			 date_trn,
			 notes,
			 total,
			 id_account,
		   created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 id_currency,
       flag_kurs_pu
			)
		values(var_no_payment_ap,
			 var_id_supplier,
			 var_date_trn,
			 var_notes,
			 var_total,
			 var_id_account,
		   var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_curr,
			 var_flag_kurs_pu
			);

			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_payment_ap,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'AP Payment Form',
						var_total);

	elseif var_detail = 1 THEN
		insert into trn_payment_ap_det 
			(no_payment_ap,
			 number_asc,
			 no_purchase,
			 invoice_date,
			 ap_amount,
			 ap_return,
			 discount,
			 ap_amount_net,
			 paid_amount,
			 kurs
			)
		values (var_no_payment_ap,
			 var_number_asc,
			 var_no_purchase,
			 var_invoice_date,
			 var_ap_amount,
			 var_ap_return,
			 var_discount,
			 var_ap_amount_net,
			 var_paid_amount,
			 var_kurs
			);


				
				
				
				

		update ap_status set disc_amount = case when disc_amount is null then 0 else disc_amount end + var_discount, balance = case when balance is null then 0 else balance end + ((var_ap_amount - var_ap_return) - var_discount - var_paid_amount),paid_amount = case when paid_amount is null then 0 else paid_amount end + var_paid_amount 
		where no_purchase = var_no_purchase;

	
	end if;

if var_detail = 0 then
	
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_id_account,
						var_notes,
						round(-1 * var_total,0));

		




		select id_account into var_acc_piutang from i_set_account_def where acc_parameter = 'acc_credit_purchase';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_acc_piutang,
						var_notes,
						round(var_total+var_total_disc,0));


		select id_account into var_acc_pay_disc from i_set_account_def where acc_parameter = 'acc_pay_purchase_disc';
if var_total_disc > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_acc_pay_disc,
						var_notes,
						round(-1 * var_total_disc,0));
end if;
end if; 

	ELSEIF TRANSID = 'DELETE' THEN

			
		

if var_detail = 1 then
		update ap_status 
			set disc_amount = case when disc_amount is null then 0 else disc_amount end  - var_discount, 
					balance = case when balance is null then 0 else balance end + var_paid_amount, 
					paid_amount = case when paid_amount is null then 0 else paid_amount end - var_paid_amount 
		where no_purchase = var_no_purchase;
elseif var_detail = 0 then
			delete from trn_payment_ap_det where no_payment_ap = var_no_payment_ap;
			delete from trn_payment_ap_head where no_payment_ap = var_no_payment_ap;
			delete from trn_ledger_det where no_ledger = var_no_payment_ap;
			delete from trn_ledger_head where no_ledger = var_no_payment_ap;
			
end if;
			
			
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_payment_ap_simrs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_payment_ap_simrs`(in var_no_payment_ap varchar(30), in var_id_supplier varchar(30), in var_date_trn date, in var_notes text, in var_total double, in var_id_account varchar(30), in var_created_user varchar(30), in var_created_date date, in var_modified_user varchar(30), in var_modified_date date,in var_number_asc integer, in var_no_purchase varchar(60),in var_invoice_date date, in var_ap_amount double,in var_ap_return double, in var_discount double, in var_ap_amount_net double, in  var_paid_amount double, in var_detail integer, in varloop integer, in transid varchar(120), in var_curr varchar(30),in var_kurs double, in var_flag_kurs_pu integer, in var_paid_org double, in var_total_disc double)
BEGIN
declare var_acc_piutang varchar(120);
declare var_acc_pay_disc varchar(120);
declare var_acc_selisih_kurs varchar(120);
declare var_curr_def varchar(30);
declare var_curr_pu varchar(30);
DECLARE ap_disc_before DOUBLE;
DECLARE ap_balance_before DOUBLE;
declare ap_payment_before DOUBLE;
declare jml_piutang DOUBLE;
declare jml_retur DOUBLE;
declare jml_disc double;
declare var_kurs_pu double;
declare var_total_selisih_kurs_rugi double;
declare var_total_selisih_kurs_laba double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

select func_get_defcurr() into var_curr_def;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_payment_ap_det where no_payment_ap = var_no_payment_ap;
		delete from trn_payment_ap_head where no_payment_ap = var_no_payment_ap;
		delete from trn_ledger_det where no_ledger = var_no_payment_ap;
		delete from trn_ledger_head where no_ledger = var_no_payment_ap;
		
		
		insert into trn_payment_ap_head(
			 no_payment_ap,
			 id_supplier,
			 date_trn,
			 notes,
			 total,
			 id_account,
		   created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 id_currency,
			 flag_kurs_pu
			)
		values(var_no_payment_ap,
			 var_id_supplier,
			 var_date_trn,
			 var_notes,
			 var_total,
			 var_id_account,
		   var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_curr,
			 var_flag_kurs_pu
			);

		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_payment_ap,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'AP Payment Form',
						var_total);

	elseif var_detail = 1 THEN

		if varloop = 0 then
			delete from trn_payment_ap_det where no_payment_ap = var_no_payment_ap;			
		end if;
		insert into trn_payment_ap_det 
			(no_payment_ap,
			 number_asc,
			 no_purchase,
			 invoice_date,
			 ap_amount,
			 ap_return,
			 discount,
			 ap_amount_net,
			 paid_amount,
			 kurs
			)
		values (var_no_payment_ap,
			 var_number_asc,
			 var_no_purchase,
			 var_invoice_date,
			 var_ap_amount,
			 var_ap_return,
			 var_discount,
			 var_ap_amount_net,
			 var_paid_amount,
			 var_kurs
			);
		

				
		
				
			
		
		select disc_amount into ap_disc_before from ap_status where no_purchase = var_no_purchase;
		select balance into ap_balance_before from ap_status where no_purchase = var_no_purchase;
		select paid_amount into ap_payment_before from ap_status where no_purchase = var_no_purchase;
		if ap_balance_before is null then 
			set ap_balance_before = 0;
		end if;
		if ap_disc_before is null THEN
			set ap_disc_before = 0;
		end if;
		if ap_payment_before is null THEN
			set ap_payment_before = 0;
		end if;
		update ap_status set disc_amount = case when disc_amount is null then 0 else disc_amount end  - ap_disc_before, balance = case when balance is null then 0 else balance end - ap_balance_before, paid_amount = case when paid_amount is null then 0 else paid_amount end - ap_payment_before where no_purchase = var_no_purchase;
		update ap_status set disc_amount = case when disc_amount is null then 0 else disc_amount end + var_discount, balance = case when balance is null then 0 else balance end + ((var_ap_amount - var_ap_return) - var_discount - var_paid_amount),paid_amount = case when paid_amount is null then 0 else paid_amount end + var_paid_amount where no_purchase = var_no_purchase;
		
	end if;

	
if var_detail = 0 then

	
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_id_account,
						var_notes,
						round(-1*var_total,0));

		

		


		
		select id_account into var_acc_piutang from i_component_account_purchsimrs where notes = 'HUTANG USAHA';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_acc_piutang,
						var_notes,
						round(var_total+var_total_disc,0));



		
		select id_account into var_acc_pay_disc from i_component_account_purchsimrs where notes = 'POTONGAN PEMBELIAN';
if var_total_disc > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_acc_pay_disc,
						var_notes,
						round((-1*var_total_disc),0));
end if;
end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_payment_ap_head(
			 no_payment_ap,
			 id_supplier,
			 date_trn,
			 notes,
			 total,
			 id_account,
		   created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 id_currency,
       flag_kurs_pu
			)
		values(var_no_payment_ap,
			 var_id_supplier,
			 var_date_trn,
			 var_notes,
			 var_total,
			 var_id_account,
		   var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_curr,
			 var_flag_kurs_pu
			);

			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_payment_ap,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'AP Payment Form',
						var_total);

	elseif var_detail = 1 THEN
		insert into trn_payment_ap_det 
			(no_payment_ap,
			 number_asc,
			 no_purchase,
			 invoice_date,
			 ap_amount,
			 ap_return,
			 discount,
			 ap_amount_net,
			 paid_amount,
			 kurs
			)
		values (var_no_payment_ap,
			 var_number_asc,
			 var_no_purchase,
			 var_invoice_date,
			 var_ap_amount,
			 var_ap_return,
			 var_discount,
			 var_ap_amount_net,
			 var_paid_amount,
			 var_kurs
			);


				
				
				
				

		update ap_status set disc_amount = case when disc_amount is null then 0 else disc_amount end + var_discount, balance = case when balance is null then 0 else balance end + ((var_ap_amount - var_ap_return) - var_discount - var_paid_amount),paid_amount = case when paid_amount is null then 0 else paid_amount end + var_paid_amount 
		where no_purchase = var_no_purchase;

	
	end if;

if var_detail = 0 then
	
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_id_account,
						var_notes,
						round(-1 * var_total,0));

		




		
		select id_account into var_acc_piutang from i_component_account_purchsimrs where notes = 'HUTANG USAHA';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_acc_piutang,
						var_notes,
						round(var_total+var_total_disc,0));


			
		select id_account into var_acc_pay_disc from i_component_account_purchsimrs where notes = 'POTONGAN PEMBELIAN';
if var_total_disc > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_acc_pay_disc,
						var_notes,
						round(-1 * var_total_disc,0));
end if;
end if; 

	ELSEIF TRANSID = 'DELETE' THEN

			
		

if var_detail = 1 then
		update ap_status 
			set disc_amount = case when disc_amount is null then 0 else disc_amount end  - var_discount, 
					balance = case when balance is null then 0 else balance end + var_paid_amount, 
					paid_amount = case when paid_amount is null then 0 else paid_amount end - var_paid_amount 
		where no_purchase = var_no_purchase;
elseif var_detail = 0 then
			delete from trn_payment_ap_det where no_payment_ap = var_no_payment_ap;
			delete from trn_payment_ap_head where no_payment_ap = var_no_payment_ap;
			delete from trn_ledger_det where no_ledger = var_no_payment_ap;
			delete from trn_ledger_head where no_ledger = var_no_payment_ap;
			
end if;
			
			
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_payment_ar` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_payment_ar`(in var_no_payment_ap varchar(30), in var_id_supplier varchar(30), in var_date_trn date, in var_notes text, in var_total double, in var_id_account varchar(30), in var_created_user varchar(30), in var_created_date date, in var_modified_user varchar(30), in var_modified_date date,in var_number_asc integer, in var_no_purchase varchar(60),in var_invoice_date date, in var_ap_amount double,in var_ap_return double, in var_discount double, in var_ap_amount_net double, in  var_paid_amount double, in var_detail integer, in varloop integer, in transid varchar(120), in var_curr varchar(30),in var_kurs double, in var_flag_kurs_pu integer, in var_paid_org double, in var_total_disc double)
BEGIN
declare var_acc_piutang varchar(120);
declare var_acc_pay_disc varchar(120);
declare var_acc_selisih_kurs varchar(120);
declare var_curr_def varchar(30);
declare var_curr_pu varchar(30);
DECLARE ap_disc_before DOUBLE;
DECLARE ap_balance_before DOUBLE;
declare ap_payment_before DOUBLE;
declare jml_piutang DOUBLE;
declare jml_retur DOUBLE;
declare jml_disc double;
declare var_paid double;
declare var_kurs_pu double;
declare var_total_selisih_kurs_rugi double;
declare var_total_selisih_kurs_laba double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

set var_paid = 0;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_payment_ar_det where no_payment_ar = var_no_payment_ap;
		delete from trn_payment_ar_head where no_payment_ar = var_no_payment_ap;
		delete from trn_ledger_det where no_ledger = var_no_payment_ap;
		delete from trn_ledger_head where no_ledger = var_no_payment_ap;
		
		
		insert into trn_payment_ar_head(
			 no_payment_ar,
			 id_customer,
			 date_trn,
			 notes,
			 total,
			 id_account,
		   created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 id_currency,
			 flag_kurs_pu
			)
		values(var_no_payment_ap,
			 var_id_supplier,
			 var_date_trn,
			 var_notes,
			 var_total,
			 var_id_account,
		   var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_curr,
			 var_flag_kurs_pu
			);

		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_payment_ap,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'AR Payment Form',
						var_total);

	elseif var_detail = 1 THEN

		if varloop = 0 then
			delete from trn_payment_ar_det where no_payment_ar = var_no_payment_ap;			
		end if;
		insert into trn_payment_ar_det 
			(no_payment_ar,
			 number_asc,
			 no_invoice,
			 invoice_date,
			 ap_amount,
			 ap_return,
			 discount,
			 ap_amount_net,
			 paid_amount,
			 kurs
			)
		values (var_no_payment_ap,
			 var_number_asc,
			 var_no_purchase,
			 var_invoice_date,
			 var_ap_amount,
			 var_ap_return,
			 var_discount,
			 var_ap_amount_net,
			 var_paid_amount,
			 var_kurs
			);
		
		
		select disc_amount into ap_disc_before from ar_status where no_sales = var_no_purchase;
		select balance into ap_balance_before from ar_status where no_sales = var_no_purchase;
		select paid_amount into ap_payment_before from ar_status where no_sales = var_no_purchase;
		if ap_balance_before is null then 
			set ap_balance_before = 0;
		end if;
		if ap_disc_before is null THEN
			set ap_disc_before = 0;
		end if;
		if ap_payment_before is null THEN
			set ap_payment_before = 0;
		end if;
		update ar_status set disc_amount = case when disc_amount is null then 0 else disc_amount end  - ap_disc_before, balance = case when balance is null then 0 else balance end - ap_balance_before, paid_amount = case when paid_amount is null then 0 else paid_amount end - ap_payment_before where no_sales = var_no_purchase;
		update ar_status set disc_amount = case when disc_amount is null then 0 else disc_amount end + var_discount, balance = case when balance is null then 0 else balance end + ((var_ap_amount - var_ap_return) - var_discount - var_paid_amount),paid_amount = case when paid_amount is null then 0 else paid_amount end + var_paid_amount where no_sales = var_no_purchase;
		
	end if;

if var_detail = 0 then
	select total into var_paid from trn_payment_ar_head where no_payment_ar = var_no_payment_ap;
	
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_id_account,
						var_notes,
						-1*var_total);

		


		select id_account into var_acc_piutang from i_set_account_def where acc_parameter = 'acc_credit_sales';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_acc_piutang,
						var_notes,
						round(var_total+var_total_disc,0));


		select id_account into var_acc_pay_disc from i_set_account_def where acc_parameter = 'acc_pay_sales_disc';
if var_total_disc > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_acc_pay_disc,
						var_notes,
						-1*var_total_disc);
end if;
end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_payment_ar_head(
			 no_payment_ar,
			 id_customer,
			 date_trn,
			 notes,
			 total,
			 id_account,
		   created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 id_currency,
       flag_kurs_pu
			)
		values(var_no_payment_ap,
			 var_id_supplier,
			 var_date_trn,
			 var_notes,
			 var_total,
			 var_id_account,
		   var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_curr,
			 var_flag_kurs_pu
			);

			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_payment_ap,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'AR Payment Form',
						var_total);

	elseif var_detail = 1 THEN
		insert into trn_payment_ar_det 
			(no_payment_ar,
			 number_asc,
			 no_invoice,
			 invoice_date,
			 ap_amount,
			 ap_return,
			 discount,
			 ap_amount_net,
			 paid_amount,
			 kurs
			)
		values (var_no_payment_ap,
			 var_number_asc,
			 var_no_purchase,
			 var_invoice_date,
			 var_ap_amount,
			 var_ap_return,
			 var_discount,
			 var_ap_amount_net,
			 var_paid_amount,
			 var_kurs
			);

		update ar_status set disc_amount = case when disc_amount is null then 0 else disc_amount end + var_discount, balance = case when balance is null then 0 else balance end + ((var_ap_amount - var_ap_return) - var_discount - var_paid_amount),paid_amount = case when paid_amount is null then 0 else paid_amount end + var_paid_amount 
		where no_sales = var_no_purchase;
		
	end if;

if var_detail = 0 then
		select total into var_paid from trn_payment_ar_head where no_payment_ar = var_no_payment_ap;
	
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_id_account,
						var_notes,
						-1 * var_total);

		



		select id_account into var_acc_piutang from i_set_account_def where acc_parameter = 'acc_credit_sales';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_acc_piutang,
						var_notes,
						round(var_total+var_total_disc,0));



		select id_account into var_acc_pay_disc from i_set_account_def where acc_parameter = 'acc_pay_sales_disc';
if var_total_disc > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_payment_ap,
						var_acc_pay_disc,
						var_notes,
						-1 * var_total_disc);
end if;
end if; 

	ELSEIF TRANSID = 'DELETE' THEN

			
		

if var_detail = 1 then
		update ar_status 
			set disc_amount = case when disc_amount is null then 0 else disc_amount end  - var_discount, 
					balance = case when balance is null then 0 else balance end + var_paid_amount, 
					paid_amount = case when paid_amount is null then 0 else paid_amount end - var_paid_amount 
		where no_sales = var_no_purchase;
elseif var_detail = 0 then
			delete from trn_ledger_det where no_ledger = var_no_payment_ap;
			delete from trn_ledger_head where no_ledger = var_no_payment_ap;
			delete from trn_payment_ar_det where no_payment_ar = var_no_payment_ap;
			delete from trn_payment_ar_head where no_payment_ar = var_no_payment_ap;
end if;
			
			
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_pelunasan_po` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_pelunasan_po`(in var_no_purchase varchar(30), in var_date_trn date, in var_no_purchase_order varchar(30), in var_id_supplier varchar(30), in var_payment_method varchar(30), in var_payment_term_days integer, in var_disc_term_days integer, in var_disc_term_nominal double,  in var_subtotal double, in var_freight double, in var_tax double, in var_total double, in var_notes text, in var_created_user varchar(30), in var_created_date date,  in var_modified_user varchar(30), in var_modified_date date, in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in  var_qty integer, in var_id_unit varchar(30), in var_price double,  in var_nominal double, in var_id_curr varchar(30),in var_detail integer, in varloop integer, in transid varchar(120), in var_cogs double, in var_chk_so integer,in var_disc  double, in var_id_account varchar(30), in var_item_name varchar(250), in var_kurs double, in var_um double, in var_id_warehouse varchar(30), in var_weight double, in var_priceperweight double)
BEGIN
declare var_pay_method integer;
declare var_id_account_head varchar(30);
declare var_id_account_det varchar(30);
declare var_id_account_disc varchar(30);
declare var_id_account_tax varchar(30);
declare var_id_account_freight varchar(30);
declare var_nmb_asc integer;
declare var_convert_nom double;
declare var_rnd_subtotal double;
declare var_rnd_freight double;
declare var_rnd_diskon double;
declare var_rnd_total double;
declare var_rnd_ppn double;
declare var_id_account_um varchar(30);

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		set var_convert_nom = var_kurs;
		if var_convert_nom is null THEN
			set var_convert_nom = 1;
		end if;


IF TRANSID = 'UPDATE' THEN


	if var_detail = 0 then

		
		
		delete from trn_ledger_det where no_ledger = var_no_purchase;
		delete from trn_ledger_head where no_ledger = var_no_purchase;
		delete from trn_payoff_po_det where no_purchase = var_no_purchase;
		delete from trn_payoff_po_head where no_purchase = var_no_purchase;

		
			
			if var_payment_method = 1 THEN
				
				set var_id_account_head = var_id_account;
			elseif var_payment_method = 2 THEN
				select id_account into var_id_account_head from mst_supplier where id_supplier = var_id_supplier;
			end if;

			select id_account into var_id_account_um from i_set_account_def where acc_parameter = 'acc_dp_po';
		
	if var_chk_so = 1 then
		insert into trn_payoff_po_head(
			 no_purchase,
			 date_trn,
			 no_purchase_order,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs,
			 um
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_no_purchase_order,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs,
			 var_um
			);
		elseif var_chk_so = 0 THEN
			insert into trn_payoff_po_head(
			 no_purchase,
			 date_trn,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs,
			 um
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs,
			 var_um
			);
	end if;
	

	set var_rnd_freight = round((var_freight * var_convert_nom),0);
		if var_rnd_freight is null then 
			set var_rnd_freight = 0;
		end if;
		set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;


	


		
		
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_purchase,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Purchase Form',
						round(var_rnd_total,0));
		
		
		select id_account into var_id_account_freight from i_set_account_def where acc_parameter = 'acc_freight';
	
			if var_freight > 0 then
			set var_rnd_freight = round((var_freight * var_convert_nom),0);

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_freight,
						concat('Biaya Angkut Pembelian - ',var_no_purchase),
						var_rnd_freight);
			end if;
		


			select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_beli';
			
			if var_disc > 0 then
			set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_purchase,
						var_id_account_disc,
						concat('Diskon Pembelian - ',var_no_purchase),
						var_rnd_diskon);
			end if;
			

		select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_in';
		
		if var_tax > 0 then
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);

			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_purchase,
						var_id_account_tax,
						concat('Pajak Pembelian - ',var_no_purchase),
						var_rnd_ppn);
			end if;
			
		if var_um > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_um,
						concat('Uang Muka Pembelian - ',var_no_purchase),
						round(-1*(var_um),0));
		end if;


		if var_total > 0 then
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_head,
						concat('Pembelian - ',var_no_purchase),
						round(-1*(var_rnd_total-var_um),0));
		end if;
		


	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_payoff_po_det where no_purchase = var_no_purchase;			
		end if;
		insert into trn_payoff_po_det
			(no_purchase,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 item_name,
			 weight,
			 priceperweight
			)
		values (var_no_purchase,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_item_name,
			 var_weight,
			 var_priceperweight
			);


		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase  and (id_account <> var_id_account_disc or id_account <> var_id_account_tax or id_account <> var_id_account_head or id_account <> var_id_account_freight);
		end if;

		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_det,
						concat('Pembelian - ',var_id_item),
						round((var_nominal*var_convert_nom),0));


		if varloop = 0 THEN
			delete from i_stock_in where no_stock_in = var_no_purchase;
		end if;

		select price into var_price from trn_purchase_order_det where no_purchase_order = var_no_purchase_order and id_item = var_id_item;

		insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_purchase,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 round(var_price * var_convert_nom,0),
			 round(var_price * var_convert_nom,0),
			 var_id_warehouse
			);

	end if;

	ELSEIF TRANSID = 'INSERT' THEN

		if var_detail = 0 then
		
			
			if var_payment_method = 1 THEN
				
				set var_id_account_head = var_id_account;
			elseif var_payment_method = 2 THEN
				select id_account into var_id_account_head from mst_supplier where id_supplier = var_id_supplier;
			end if;

			select id_account into var_id_account_um from i_set_account_def where acc_parameter = 'acc_dp_po';
		
	if var_chk_so = 1 then
		insert into trn_payoff_po_head(
			 no_purchase,
			 date_trn,
			 no_purchase_order,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs,
			 um
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_no_purchase_order,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs,
			 var_um
			);
		elseif var_chk_so = 0 THEN
			insert into trn_payoff_po_head(
			 no_purchase,
			 date_trn,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs,
			 um
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs,
			 var_um
			);
	end if;
	
	set var_rnd_freight = round((var_freight * var_convert_nom),0);
		if var_rnd_freight is null then 
			set var_rnd_freight = 0;
		end if;
		set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;


	update trn_purchase_order_head set flag_status_invoice = 1 where no_purchase_order = var_no_purchase_order;
	

	
		
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_purchase,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Purchase Form',
						round(var_rnd_total,0));

select id_account into var_id_account_freight from i_set_account_def where acc_parameter = 'acc_freight';
			if var_freight > 0 then
			set var_rnd_freight = round((var_freight * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_freight,
						concat('Biaya Angkut Pembelian - ',var_no_purchase),
						var_rnd_freight);
			end if;


select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_beli';
			if var_disc > 0 then
			set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_disc,
						concat('Diskon Pembelian - ',var_no_purchase),
						var_rnd_diskon);
			end if;

select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_in';
			if var_tax > 0 then
			set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_tax,
						concat('Pajak Pembelian - ',var_no_purchase),
						var_rnd_ppn);
			end if;

		if var_um > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_um,
						concat('Uang Muka Pembelian - ',var_no_purchase),
						round(-1*(var_um),0));
		end if;


		if var_total > 0 then
			set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_head,
						concat('Pembelian - ',var_no_purchase),
						round(-1*(var_rnd_total-var_um),0));
		end if;



	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_payoff_po_det where no_purchase = var_no_purchase;			
		end if;
		insert into trn_payoff_po_det
			(no_purchase,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 item_name,
			 weight,
			 priceperweight
			)
		values (var_no_purchase,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_item_name,
			 var_weight,
			 var_priceperweight
			);


		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase  and (id_account <> var_id_account_disc or id_account <> var_id_account_tax or id_account <> var_id_account_head or id_account <> var_id_account_freight);
		end if;

		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_det,
						concat('Pembelian - ',var_id_item),
						round((var_nominal*var_convert_nom),0));

		
		if varloop = 0 THEN
			delete from i_stock_in where no_stock_in = var_no_purchase;
		end if;

		select price into var_price from trn_purchase_order_det where no_purchase_order = var_no_purchase_order and id_item = var_id_item;

		insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_purchase,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 round(var_price * var_convert_nom,0),
			 round(var_price * var_convert_nom,0),
			 var_id_warehouse
			);



	end if;

	ELSEIF TRANSID = 'DELETE' THEN

	
		
		delete from i_stock_in where no_stock_in = var_no_purchase;
		delete from trn_ledger_det where no_ledger = var_no_purchase;
		delete from trn_ledger_head where no_ledger = var_no_purchase;
		delete from trn_payoff_po_det where no_purchase = var_no_purchase;
		delete from trn_payoff_po_head where no_purchase = var_no_purchase;
		update trn_purchase_order_head set flag_status_invoice = 0 where no_purchase_order = var_no_purchase_order;
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_pelunasan_so` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_pelunasan_so`(in var_no_purchase varchar(30), in var_date_trn date, in var_no_purchase_order varchar(30), in var_id_supplier varchar(30), in var_payment_method varchar(30), in var_payment_term_days integer, in var_disc_term_days integer, in var_disc_term_nominal double,  in var_subtotal double, in var_freight double, in var_tax double, in var_total double, in var_notes text, in var_created_user varchar(30), in var_created_date date,  in var_modified_user varchar(30), in var_modified_date date, in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in  var_qty integer, in var_id_unit varchar(30), in var_price double,  in var_nominal double, in var_id_curr varchar(30),in var_detail integer, in varloop integer, in transid varchar(120), in var_cogs double, in var_chk_so integer,in var_disc  double, in var_id_account varchar(30), in var_item_name varchar(250), in var_kurs double, in var_um double, in var_id_warehouse varchar(30), in var_weight double, in var_priceperweight double)
BEGIN
declare var_pay_method integer;
declare var_id_account_head varchar(30);
declare var_id_account_det varchar(30);
declare var_id_account_sales varchar(30);
declare var_id_account_cogs varchar(30);
declare var_id_account_disc varchar(30);
declare var_id_account_tax varchar(30);
declare var_id_account_freight varchar(30);
declare var_nmb_asc integer;
declare var_convert_nom double;
declare var_rnd_subtotal double;
declare var_rnd_freight double;
declare var_rnd_diskon double;
declare var_rnd_total double;
declare var_rnd_ppn double;
declare var_id_account_um varchar(30);
declare maks_record_cogs double;
declare var_cogs double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		set var_convert_nom = var_kurs;
		if var_convert_nom is null THEN
			set var_convert_nom = 1;
		end if;


IF TRANSID = 'UPDATE' THEN


	if var_detail = 0 then

		
		
		delete from trn_ledger_det where no_ledger = var_no_purchase;
		delete from trn_ledger_head where no_ledger = var_no_purchase;
		delete from trn_payoff_so_det where no_purchase = var_no_purchase;
		delete from trn_payoff_so_head where no_purchase = var_no_purchase;

		
			
			if var_payment_method = 1 THEN
				
				set var_id_account_head = var_id_account;
			elseif var_payment_method = 2 THEN
				select id_account into var_id_account_head from mst_customer where id_customer = var_id_supplier;
			end if;

			select id_account into var_id_account_um from i_set_account_def where acc_parameter = 'acc_dp_sales';
		
	if var_chk_so = 1 then
		insert into trn_payoff_so_head(
			 no_purchase,
			 date_trn,
			 no_purchase_order,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs,
			 um
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_no_purchase_order,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs,
			 var_um
			);
		elseif var_chk_so = 0 THEN
			insert into trn_payoff_so_head(
			 no_purchase,
			 date_trn,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs,
			 um
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs,
			 var_um
			);
	end if;
	

	set var_rnd_freight = round((var_freight * var_convert_nom),0);
		if var_rnd_freight is null then 
			set var_rnd_freight = 0;
		end if;
		set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;


	


		
		
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_purchase,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Form',
						round(var_rnd_total,0));
		
		
		select id_account into var_id_account_freight from i_set_account_def where acc_parameter = 'acc_freight';
	
			if var_freight > 0 then
			set var_rnd_freight = round((var_freight * var_convert_nom),0);

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_freight,
						concat('Biaya Angkut - ',var_no_purchase),
						-1*var_rnd_freight);
			end if;
		


			select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_sales';
			
			if var_disc > 0 then
			set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_purchase,
						var_id_account_disc,
						concat('Diskon Penjualan - ',var_no_purchase),
						-1*var_rnd_diskon);
			end if;
			

		select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_out';
		
		if var_tax > 0 then
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);

			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_purchase,
						var_id_account_tax,
						concat('Pajak Penjualan - ',var_no_purchase),
						-1*var_rnd_ppn);
			end if;
			
		if var_um > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_um,
						concat('Uang Muka Penjualan - ',var_no_purchase),
						round((var_um),0));
		end if;


		if var_total > 0 then
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_head,
						concat('Pelunasan UM - ',var_no_purchase),
						round((var_rnd_total-var_um),0));
		end if;

		if var_subtotal > 0 then
		set var_rnd_subtotal = (var_subtotal * var_convert_nom); 
		select id_account into var_id_account_sales from i_set_account_def where acc_parameter = 'acc_sales';

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_sales,
						concat('Penjualan - ',var_no_purchase),
						round((-1*var_rnd_subtotal),0));
		end if;
		


	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_payoff_so_det where no_purchase = var_no_purchase;			
		end if;
		insert into trn_payoff_so_det
			(no_purchase,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 item_name,
			 weight,
			 priceperweight
			)
		values (var_no_purchase,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_item_name,
			 var_weight,
			 var_priceperweight
			);


		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase  and (id_account <> var_id_account_disc or id_account <> var_id_account_tax or id_account <> var_id_account_head or id_account <> var_id_account_freight or id_account <> var_id_account_cogs);
		end if;


		call sp_recalculate_cogs_avg(var_id_item,var_id_item,var_date_trn,var_date_trn,0);
		select case when max(nmb_asc) is null then 0 else max(nmb_asc) end into maks_record_cogs from lap_mutasi_hpp where id_item = var_id_item;
		if maks_record_cogs > 0 THEN
			set maks_record_cogs = maks_record_cogs -1;
		ELSE
			set maks_record_cogs = 0;
		end if;

		select case when price is null then 0 else price end into var_cogs from lap_mutasi_hpp where id_item = var_id_item and nmb_asc = maks_record_cogs;

		
		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;
	
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_cogs,
						concat('Harga Pokok Penjualan - ',var_id_item),
						round((var_cogs*var_qty),0));

	if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase  and (id_account <> var_id_account_disc or id_account <> var_id_account_tax or id_account <> var_id_account_head or id_account <> var_id_account_freight or id_account <> var_id_account_det);
		end if;

		select id_account into var_id_account_det from mst_item where id_item = var_id_item;


	insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_det,
						concat('Penjualan - ',var_id_item),
						round((-1*var_cogs*var_qty),0));


		if varloop = 0 THEN
			delete from i_stock_out where no_stock_out = var_no_purchase;
		end if;

		select price into var_price from trn_purchase_order_det where no_purchase_order = var_no_purchase_order and id_item = var_id_item;

		insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_purchase,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 round(var_price * var_convert_nom,0),
			 round(var_price * var_convert_nom,0),
			 var_id_warehouse
			);

	end if;

	ELSEIF TRANSID = 'INSERT' THEN

		if var_detail = 0 then

		

			
			if var_payment_method = 1 THEN
				
				set var_id_account_head = var_id_account;
			elseif var_payment_method = 2 THEN
				select id_account into var_id_account_head from mst_customer where id_customer = var_id_supplier;
			end if;

			select id_account into var_id_account_um from i_set_account_def where acc_parameter = 'acc_dp_sales';
		
	if var_chk_so = 1 then
		insert into trn_payoff_so_head(
			 no_purchase,
			 date_trn,
			 no_purchase_order,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs,
			 um
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_no_purchase_order,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs,
			 var_um
			);
		elseif var_chk_so = 0 THEN
			insert into trn_payoff_so_head(
			 no_purchase,
			 date_trn,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs,
			 um
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs,
			 var_um
			);
	end if;
	

	set var_rnd_freight = round((var_freight * var_convert_nom),0);
		if var_rnd_freight is null then 
			set var_rnd_freight = 0;
		end if;
		set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;


	


		
		
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_purchase,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Form',
						round(var_rnd_total,0));
		
		
		select id_account into var_id_account_freight from i_set_account_def where acc_parameter = 'acc_freight';
	
			if var_freight > 0 then
			set var_rnd_freight = round((var_freight * var_convert_nom),0);

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_freight,
						concat('Biaya Angkut - ',var_no_purchase),
						-1*var_rnd_freight);
			end if;
		


			select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_sales';
			
			if var_disc > 0 then
			set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_purchase,
						var_id_account_disc,
						concat('Diskon Penjualan - ',var_no_purchase),
						-1*var_rnd_diskon);
			end if;
			

		select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_out';
		
		if var_tax > 0 then
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);

			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_purchase,
						var_id_account_tax,
						concat('Pajak Penjualan - ',var_no_purchase),
						-1*var_rnd_ppn);
			end if;
			
		if var_um > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_um,
						concat('Uang Muka Penjualan - ',var_no_purchase),
						round((var_um),0));
		end if;


		if var_total > 0 then
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_head,
						concat('Pelunasan UM - ',var_no_purchase),
						round((var_rnd_total-var_um),0));
		end if;

		if var_subtotal > 0 then
		set var_rnd_subtotal = (var_subtotal * var_convert_nom); 
		select id_account into var_id_account_sales from i_set_account_def where acc_parameter = 'acc_sales';

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_sales,
						concat('Penjualan - ',var_no_purchase),
						round((-1*var_rnd_subtotal),0));
		end if;
		


	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_payoff_so_det where no_purchase = var_no_purchase;			
		end if;
		insert into trn_payoff_so_det
			(no_purchase,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 item_name,
			 weight,
			 priceperweight
			)
		values (var_no_purchase,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_item_name,
			 var_weight,
			 var_priceperweight
			);


		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase  and (id_account <> var_id_account_disc or id_account <> var_id_account_tax or id_account <> var_id_account_head or id_account <> var_id_account_freight or id_account <> var_id_account_cogs or id_account <> var_id_account_sales or id_account <> var_id_account_um);
		end if;


		call sp_recalculate_cogs_avg(var_id_item,var_id_item,var_date_trn,var_date_trn,0);
		select case when max(nmb_asc) is null then 0 else max(nmb_asc) end into maks_record_cogs from lap_mutasi_hpp where id_item = var_id_item;
		if maks_record_cogs > 0 THEN
			set maks_record_cogs = maks_record_cogs -1;
		ELSE
			set maks_record_cogs = 0;
		end if;

		select case when price is null then 0 else price end into var_cogs from lap_mutasi_hpp where id_item = var_id_item and nmb_asc = maks_record_cogs;

		
		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;
		
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_cogs,
						concat('Harga Pokok Penjualan - ',var_id_item),
						round((var_cogs*var_qty),0));

	if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase  and (id_account <> var_id_account_disc or id_account <> var_id_account_tax or id_account <> var_id_account_head or id_account <> var_id_account_freight or id_account <> var_id_account_det or id_account <> var_id_account_sales or id_account <> var_id_account_um);
		end if;


	select id_account into var_id_account_det from mst_item where id_item = var_id_item;

	insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_det,
						concat('Penjualan - ',var_id_item),
						round((-1*var_cogs*var_qty),0));


		if varloop = 0 THEN
			delete from i_stock_out where no_stock_out = var_no_purchase;
		end if;

		select price into var_price from trn_purchase_order_det where no_purchase_order = var_no_purchase_order and id_item = var_id_item;

		insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_purchase,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 round(var_price * var_convert_nom,0),
			 round(var_price * var_convert_nom,0),
			 var_id_warehouse
			);

	end if;

	ELSEIF TRANSID = 'DELETE' THEN

	
		
		delete from i_stock_out where no_stock_out = var_no_purchase;
		delete from trn_ledger_det where no_ledger = var_no_purchase;
		delete from trn_ledger_head where no_ledger = var_no_purchase;
		delete from trn_payoff_so_det where no_purchase = var_no_purchase;
		delete from trn_payoff_so_head where no_purchase = var_no_purchase;
		update trn_purchase_order_head set flag_status_invoice = 0 where no_purchase_order = var_no_purchase_order;
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_pinjaman` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_pinjaman`(in var_no_pinjam varchar(120), in var_no_jual varchar(120), in var_id_item varchar(60), in var_item_name varchar(250), in var_nominal double, in var_date_trn date, in var_flag_surat  integer, in var_berat double, in TRANSID varchar(120), in var_created_date datetime, in var_created_user varchar(120), in var_modified_date datetime, in var_modified_user varchar(120), in var_detail integer, in var_no_asc double, in var_id_item_detail varchar(60), in var_weight double, in var_bunga double, in var_item_name_det varchar(250), in var_jangka_waktu integer)
BEGIN
declare ar_balance_before double;
	declare var_id_account varchar(120);
	IF TRANSID = 'UPDATE' THEN
	BEGIN
			
	if var_detail = 0 then
		delete from trn_ledger_det where no_ledger = var_no_pinjam;
		delete from trn_ledger_head where no_ledger = var_no_pinjam;
	  delete from trn_pinjam_det where no_pinjam = var_no_pinjam;
		delete from i_stock_in where no_stock_in = var_no_pinjam;

			UPDATE trn_pinjam
				set
				id_customer = var_no_jual,
				id_item = var_id_item,
				item_name = var_item_name,
				nominal = var_nominal,
				date_trn = var_date_trn,
				flag_surat = var_flag_surat,
				berat = var_berat,
				created_date=created_date,
				created_user=created_user,
				modified_date=var_modified_date,
				modified_user=var_modified_user,
				bunga = var_bunga,
				jangka_waktu = var_jangka_waktu
			WHERE
				no_pinjam = var_no_pinjam;
		

			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_pinjam,
					 var_date_trn,
					 concat('Pinjaman Koperasi dengan jaminan - ',var_item_name),
				   'admin',
					 var_date_trn,
					 'admin',
					 var_date_trn,
					 'Koperasi Form',
						var_nominal);



		
		select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_credit_sales';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_pinjam,
						var_id_account,
						concat('Pinjaman Koperasi dengan jaminan - ',var_item_name),
						var_nominal);

		
		select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_cash_cashier';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_pinjam,
						var_id_account,
						concat('Pinjaman Koperasi dengan jaminan - ',var_item_name),
						-1*var_nominal);

	elseif var_detail = 1 THEN

		insert into trn_pinjam_det (
			no_pinjam,
			no_asc,
			id_item,
			weight, 
			item_name)
		values (
			var_no_pinjam,
			var_no_asc,
			var_id_item_detail,
			var_weight,
			var_item_name_det
		);

  if var_id_item_detail <> '' then
		insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_pinjam,
			 var_date_trn,
			 var_id_item_detail,
			 1,
			 'pcs',
			 round(0,0),
			 round(0,0),
			 'WH001'
			);
	end if;

		
end if;
	END;

	ELSEIF TRANSID = 'INSERT' THEN
	BEGIN
	
		if var_detail = 0 then
			INSERT INTO trn_pinjam (
				no_pinjam,
				id_customer,
				id_item,
				item_name,
				nominal,
				date_trn,
				flag_surat,
				berat,
				created_date,
				created_user,
				modified_date,
				modified_user,
				bunga,
				jangka_waktu
			)
			VALUES
			(
				var_no_pinjam,
				var_no_jual,
				var_id_item,
				var_item_name,
				var_nominal,
				var_date_trn,
				var_flag_surat,
			  var_berat,
				var_created_date,
				var_created_user,
				var_modified_date,
				var_modified_user,
			  var_bunga,
				var_jangka_waktu
			);
			
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_pinjam,
					 var_date_trn,
					 concat('Pinjaman Koperasi dengan jaminan - ',var_item_name),
				   'admin',
					 var_date_trn,
					 'admin',
					 var_date_trn,
					 'Koperasi Form',
						var_nominal);


			
		select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_credit_sales';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_pinjam,
						var_id_account,
						concat('Pinjaman Koperasi dengan jaminan - ',var_item_name),
						var_nominal);

		
		select id_account into var_id_account from i_set_account_def where acc_parameter = 'acc_cash_cashier';
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_pinjam,
						var_id_account,
						concat('Pinjaman Koperasi dengan jaminan - ',var_item_name),
						-1*var_nominal);

		elseif var_detail = 1 then 
			insert into trn_pinjam_det (
			no_pinjam,
			no_asc,
			id_item,
			weight,
			item_name)
		values (
			var_no_pinjam,
			var_no_asc,
			var_id_item_detail,
			var_weight,
			var_item_name_det
		);

if var_id_item_detail <> '' then
		insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_pinjam,
			 var_date_trn,
			 var_id_item_detail,
			 1,
			 'pcs',
			 round(0,0),
			 round(0,0),
			 'WH001'
			);
end if;

		end if;

	END;

	ELSEIF TRANSID = 'DELETE' THEN
	BEGIN

		delete from trn_pinjam_det where no_pinjam = var_no_pinjam;

		DELETE
		FROM
			trn_pinjam
		WHERE
			no_pinjam = var_no_pinjam;
		
		delete from trn_ledger_det where no_ledger = var_no_pinjam;
		delete from trn_ledger_head where no_ledger = var_no_pinjam;
		delete from i_stock_in where no_stock_in = var_no_pinjam;
	END;

	END IF;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_po` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_po`(in var_no_purchase_order varchar(30), in var_id_supplier varchar(30), in var_date_trn date, in var_notes text, in var_subtotal double, in var_freight double, in var_tax double, in var_total double, in var_modified_user varchar(30), in var_created_date date, in var_modified_date date, in var_created_user varchar(30), in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in var_qty integer, in var_id_unit varchar(30), in var_price double, in var_nominal double, in var_id_curr varchar(30), in var_detail integer, in varloop integer, in transid varchar(120), in var_no_request_order varchar(60),in var_kurs double, in var_um double,in var_account_um varchar(30), in var_weight double, in var_priceperweight double)
BEGIN
DECLARE var_id_account_um varchar(60);
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then

			delete from trn_ledger_det where no_ledger = var_no_purchase_order;
			delete from trn_ledger_head where no_ledger = var_no_purchase_order;

		delete from trn_purchase_order_det where no_purchase_order = var_no_purchase_order;
		delete from trn_purchase_order_head where no_purchase_order = var_no_purchase_order;
		
		insert into trn_purchase_order_head(
			 no_purchase_order,
			 id_supplier,
			 date_trn,
			 notes,
			 subtotal,
			 freight,
			 tax,
			 total,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 kurs,
			 um,
			 account_um
			)
		values(var_no_purchase_order,
			 var_id_supplier,
			 var_date_trn,
			 var_notes,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
       var_kurs,
			 var_um,
			 var_account_um
			);

			if var_um > 0 and var_account_um <> '' THEN

				update trn_purchase_order_head set um = var_um where no_purchase_order = var_no_purchase_order;
				update trn_purchase_order_head set account_um = var_account_um where no_purchase_order = var_no_purchase_order;

				insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
			values(var_no_purchase_order,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'DP Purchase Order',
						var_kurs * var_um);


			
			select id_account into var_id_account_um from i_set_account_def where acc_parameter = 'acc_dp_po';
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_purchase_order,
						var_id_account_um,
						concat('Uang Muka PO - ',var_no_purchase_order),
						var_kurs * var_um);

			
			
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_purchase_order,
						var_account_um,
						concat('Uang Muka PO - ',var_no_purchase_order),
						-1*var_um * var_kurs);


			end if;

			

		

	elseif var_detail = 1 THEN
		
		insert into trn_purchase_order_det 
			(no_purchase_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 no_request_order,
			 weight,
			 priceperweight
			)
		values (var_no_purchase_order,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_no_request_order,
			 var_weight,
			 var_priceperweight
			);
		end if;
	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_purchase_order_head(
			 no_purchase_order,
			 id_supplier,
			 date_trn,
			 notes,
			 subtotal,
			 freight,
			 tax,
			 total,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 flag_status_invoice,
			 kurs,
			 um,
			 account_um
			)
		values(var_no_purchase_order,
			 var_id_supplier,
			 var_date_trn,
			 var_notes,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 0,
			 var_kurs,
			 var_um,
			 var_account_um
			);
	elseif var_detail = 1 THEN
		insert into trn_purchase_order_det 
			(no_purchase_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 no_request_order,
			 weight,
			 priceperweight
			)
		values (var_no_purchase_order,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_no_request_order,
			 var_weight,
			 var_priceperweight
			);
	end if;

	ELSEIF TRANSID = 'DELETE' THEN
				delete from trn_ledger_det where no_ledger = var_no_purchase_order;
				delete from trn_ledger_head where no_ledger = var_no_purchase_order;
			delete from trn_purchase_order_det where no_purchase_order = var_no_purchase_order;
			delete from trn_purchase_order_head where no_purchase_order = var_no_purchase_order;
			
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_po_um` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_po_um`(in var_no_purchase_order varchar(30), in var_id_supplier varchar(30), in var_date_trn date, in var_notes text, in var_subtotal double, in var_freight double, in var_tax double, in var_total double, in var_modified_user varchar(30), in var_created_date date, in var_modified_date date, in var_created_user varchar(30), in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in var_qty integer, in var_id_unit varchar(30), in var_price double, in var_nominal double, in var_id_curr varchar(30), in var_detail integer, in varloop integer, in transid varchar(120), in var_no_request_order varchar(60),in var_kurs double, in var_um double, in var_account_um varchar(30))
BEGIN
DECLARE var_id_account_um varchar(60);
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_ledger_det where no_ledger = var_no_purchase_order;
		delete from trn_ledger_head where no_ledger = var_no_purchase_order;
		delete from trn_purchase_order_det where no_purchase_order = var_no_purchase_order;
		delete from trn_purchase_order_head where no_purchase_order = var_no_purchase_order;
		
		insert into trn_purchase_order_head(
			 no_purchase_order,
			 id_supplier,
			 date_trn,
			 notes,
			 subtotal,
			 freight,
			 tax,
			 total,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 kurs,
			 um,
			 account_um
			)
		values(var_no_purchase_order,
			 var_id_supplier,
			 var_date_trn,
			 var_notes,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
       var_kurs,
			 var_um,
			 var_account_um
			);

			if var_um > 0 THEN

				update trn_purchase_head set um = var_um where no_purchase_order = var_no_purchase_order;
				update trn_purchase_head set account_um = var_account_um where no_purchase_order = var_no_purchase_order;

				insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
			values(var_no_purchase_order,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'DP Purchase Order',
						var_um);


			
			select id_account into var_id_account_um from i_set_account_def where acc_parameter = 'acc_dp_po';
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_purchase_order,
						var_id_account_um,
						concat('Uang Muka PO - ',var_no_purchase_order),
						var_um);

			
			
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_purchase_order,
						var_account_um,
						concat('Uang Muka PO - ',var_no_purchase_order),
						-1*var_um);


			end if;

			

		

	elseif var_detail = 1 THEN
		
		insert into trn_purchase_order_det 
			(no_purchase_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 no_request_order
			)
		values (var_no_purchase_order,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_no_request_order
			);
		end if;
	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_purchase_order_head(
			 no_purchase_order,
			 id_supplier,
			 date_trn,
			 notes,
			 subtotal,
			 freight,
			 tax,
			 total,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 flag_status_invoice,
			 kurs,
			 um,
			 account_um
			)
		values(var_no_purchase_order,
			 var_id_supplier,
			 var_date_trn,
			 var_notes,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 0,
			 var_kurs,
			 var_um,
			 var_account_um
			);
	elseif var_detail = 1 THEN
		insert into trn_purchase_order_det 
			(no_purchase_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 no_request_order
			)
		values (var_no_purchase_order,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_no_request_order
			);
	end if;

	ELSEIF TRANSID = 'DELETE' THEN
			delete from trn_ledger_det where no_ledger = var_no_purchase_order;
			delete from trn_ledger_head where no_ledger = var_no_purchase_order;
			delete from trn_purchase_order_det where no_purchase_order = var_no_purchase_order;
			delete from trn_purchase_order_head where no_purchase_order = var_no_purchase_order;
			
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_purchase` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_purchase`(in var_no_purchase varchar(30), in var_date_trn date, in var_no_purchase_order varchar(30), in var_id_supplier varchar(30), in var_payment_method varchar(30), in var_payment_term_days integer, in var_disc_term_days integer, in var_disc_term_nominal double,  in var_subtotal double, in var_freight double, in var_tax double, in var_total double, in var_notes text, in var_created_user varchar(30), in var_created_date date,  in var_modified_user varchar(30), in var_modified_date date, in var_number_asc integer, in var_id_item varchar(30),in var_item_name varchar(250), in var_notes_det text, in  var_qty integer, in var_id_unit varchar(30), in var_price double,  in var_nominal double, in var_id_curr varchar(30),in var_detail integer, in varloop integer, in transid varchar(120), in var_cogs double, in var_chk_so integer,in var_disc  double)
BEGIN
declare var_pay_method integer;
declare var_id_account_head varchar(30);
declare var_id_account_det varchar(30);
declare var_id_account_disc varchar(30);
declare var_id_account_tax varchar(30);
declare var_id_account_freight varchar(30);
declare var_nmb_asc integer;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;


IF TRANSID = 'UPDATE' THEN
	
	if var_detail = 0 then

		
		if var_payment_method = 2 then
			delete from ap_status where no_purchase = var_no_purchase;
		end if;
		delete from trn_ledger_det where no_ledger = var_no_purchase;
		delete from trn_ledger_head where no_ledger = var_no_purchase;
		delete from trn_purchase_det where no_purchase = var_no_purchase;
		delete from trn_purchase_head where no_purchase = var_no_purchase;

		
	if var_chk_so = 1 then
		insert into trn_purchase_head(
			 no_purchase,
			 date_trn,
			 no_purchase_order,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_no_purchase_order,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc
			);
		elseif var_chk_so = 0 THEN
			insert into trn_purchase_head(
			 no_purchase,
			 date_trn,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc
			);
	end if;
	


	if var_payment_method = 2 then
		insert into ap_status (
			no_purchase,
			date_trn,
			id_supplier,
			purchase_amount,
			notes
		)
		values (
			var_no_purchase,
			var_date_trn,
			var_id_supplier,
			var_total,
			var_notes
		);
	end if;

	
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_purchase,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Purchase Form',
						var_total);

select id_account into var_id_account_freight from i_set_account_def where acc_parameter = 'acc_freight';
			if var_freight > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_freight,
						concat('Biaya Angkut Pembelian - ',var_no_purchase),
						var_freight);
			end if;


select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_beli';
			if var_disc > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_disc,
						concat('Diskon Pembelian - ',var_no_purchase),
						-1*var_disc/100 * (var_subtotal+var_freight));
			end if;

select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_in';
			if var_tax > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_tax,
						concat('Pajak Pembelian - ',var_no_purchase),
						var_tax/100 * (var_subtotal+var_freight-(var_disc/100 * (var_subtotal+var_freight))));
			end if;

				
			select payment_method into var_pay_method from trn_purchase_head where no_purchase = var_no_purchase;
			if var_pay_method = 1 THEN
				select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_cash_purchase';
			elseif var_pay_method = 2 THEN
				select id_account into var_id_account_head from mst_supplier where id_supplier = var_id_supplier;
			end if;

if var_total > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_head,
						concat('Pembelian - ',var_no_purchase),
						-1*var_total);
		end if;



	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_purchase_det where no_purchase = var_no_purchase;			
		end if;
		insert into trn_purchase_det 
			(no_purchase,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr
			)
		values (var_no_purchase,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr
			);


		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase  and (id_account <> var_id_account_disc or id_account <> var_id_account_tax or id_account <> var_id_account_head or id_account <> var_id_account_freight);
		end if;

		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_det,
						concat('Pembelian - ',var_id_item),
						var_nominal);
	end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 then

		
	if var_chk_so = 1 then
		insert into trn_purchase_head(
			 no_purchase,
			 date_trn,
			 no_purchase_order,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_no_purchase_order,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc
			);
		elseif var_chk_so = 0 THEN
			insert into trn_purchase_head(
			 no_purchase,
			 date_trn,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc
			);
	end if;
	


	update trn_purchase_order_head set flag_status_invoice = 1 where no_purchase_order = var_no_purchase_order;
	if var_payment_method = 2 then
		insert into ap_status (
			no_purchase,
			date_trn,
			id_supplier,
			purchase_amount,
			notes
		)
		values (
			var_no_purchase,
			var_date_trn,
			var_id_supplier,
			var_total,
			var_notes
		);
	end if;

	
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_purchase,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Purchase Form',
						var_total);

select id_account into var_id_account_freight from i_set_account_def where acc_parameter = 'acc_freight';
			if var_freight > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_freight,
						concat('Biaya Angkut Pembelian - ',var_no_purchase),
						var_freight);
			end if;


select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_beli';
			if var_disc > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_disc,
						concat('Diskon Pembelian - ',var_no_purchase),
						-1*var_disc/100 * (var_subtotal+var_freight));
			end if;

select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_in';
			if var_tax > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_tax,
						concat('Pajak Pembelian - ',var_no_purchase),
						var_tax/100 * (var_subtotal+var_freight-(var_disc/100 * (var_subtotal+var_freight))));
			end if;

				
			select payment_method into var_pay_method from trn_purchase_head where no_purchase = var_no_purchase;
			if var_pay_method = 1 THEN
				select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_cash_purchase';
			elseif var_pay_method = 2 THEN
				select id_account into var_id_account_head from mst_supplier where id_supplier = var_id_supplier;
			end if;

if var_total > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_head,
						concat('Pembelian - ',var_no_purchase),
						-1*var_total);
		end if;



	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_purchase_det where no_purchase = var_no_purchase;			
		end if;
		insert into trn_purchase_det 
			(no_purchase,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr
			)
		values (var_no_purchase,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr
			);


		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase  and (id_account <> var_id_account_disc or id_account <> var_id_account_tax or id_account <> var_id_account_head or id_account <> var_id_account_freight);
		end if;

		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_det,
						concat('Pembelian - ',var_id_item),
						var_nominal);
	end if;

	ELSEIF TRANSID = 'DELETE' THEN

	
		if var_payment_method = 2 then
			delete from ap_status where no_purchase = var_no_purchase;
		end if;
		delete from trn_ledger_det where no_ledger = var_no_purchase;
		delete from trn_ledger_head where no_ledger = var_no_purchase;
		delete from trn_purchase_det where no_purchase = var_no_purchase;
		delete from trn_purchase_head where no_purchase = var_no_purchase;
		update trn_purchase_order_head set flag_status_invoice = 0 where no_purchase_order = var_no_purchase_order;
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_purchase2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_purchase2`(in var_no_purchase varchar(30), in var_date_trn date, in var_no_purchase_order varchar(30), in var_id_supplier varchar(30), in var_payment_method varchar(30), in var_payment_term_days integer, in var_disc_term_days integer, in var_disc_term_nominal double,  in var_subtotal double, in var_freight double, in var_tax double, in var_total double, in var_notes text, in var_created_user varchar(30), in var_created_date date,  in var_modified_user varchar(30), in var_modified_date date, in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in  var_qty integer, in var_id_unit varchar(30), in var_price double,  in var_nominal double, in var_id_curr varchar(30),in var_detail integer, in varloop integer, in transid varchar(120), in var_cogs double, in var_chk_so integer,in var_disc  double, in var_id_account varchar(30), in var_item_name varchar(250), in var_kurs double, in var_um double)
BEGIN
declare var_pay_method integer;
declare var_id_account_head varchar(30);
declare var_id_account_det varchar(30);
declare var_id_account_disc varchar(30);
declare var_id_account_tax varchar(30);
declare var_id_account_freight varchar(30);
declare var_nmb_asc integer;
declare var_convert_nom double;
declare var_rnd_subtotal double;
declare var_rnd_freight double;
declare var_rnd_diskon double;
declare var_rnd_total double;
declare var_rnd_ppn double;
declare var_id_account_um varchar(30);

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		set var_convert_nom = var_kurs;
		if var_convert_nom is null THEN
			set var_convert_nom = 1;
		end if;


IF TRANSID = 'UPDATE' THEN


	if var_detail = 0 then

		
		if var_payment_method = 2 then
			delete from ap_status where no_purchase = var_no_purchase;
		end if;
		delete from trn_ledger_det where no_ledger = var_no_purchase;
		delete from trn_ledger_head where no_ledger = var_no_purchase;
		delete from trn_purchase_det where no_purchase = var_no_purchase;
		delete from trn_purchase_head where no_purchase = var_no_purchase;

		
			
			if var_payment_method = 1 THEN
				
				set var_id_account_head = var_id_account;
			elseif var_payment_method = 2 THEN
				select id_account into var_id_account_head from mst_supplier where id_supplier = var_id_supplier;
			end if;

			select id_account into var_id_account_um from i_set_account_def where acc_parameter = 'acc_dp_po';
		
	if var_chk_so = 1 then
		insert into trn_purchase_head(
			 no_purchase,
			 date_trn,
			 no_purchase_order,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs,
			 um
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_no_purchase_order,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs,
			 var_um
			);
		elseif var_chk_so = 0 THEN
			insert into trn_purchase_head(
			 no_purchase,
			 date_trn,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs,
			 um
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs,
			 var_um
			);
	end if;
	

	set var_rnd_freight = round((var_freight * var_convert_nom),0);
		if var_rnd_freight is null then 
			set var_rnd_freight = 0;
		end if;
		set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;


	if var_payment_method = 2 then
		insert into ap_status (
			no_purchase,
			date_trn,
			id_supplier,
			purchase_amount,
			notes
		)
		values (
			var_no_purchase,
			var_date_trn,
			var_id_supplier,
			round(var_rnd_total,0),
			var_notes
		);
	end if;


		
		
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_purchase,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Purchase Form',
						round(var_rnd_total,0));
		
		
		select id_account into var_id_account_freight from i_set_account_def where acc_parameter = 'acc_freight';
	
			if var_freight > 0 then
			set var_rnd_freight = round((var_freight * var_convert_nom),0);

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_freight,
						concat('Biaya Angkut Pembelian - ',var_no_purchase),
						var_rnd_freight);
			end if;
		


			select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_beli';
			
			if var_disc > 0 then
			set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_purchase,
						var_id_account_disc,
						concat('Diskon Pembelian - ',var_no_purchase),
						var_rnd_diskon);
			end if;
			

		select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_in';
		
		if var_tax > 0 then
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);

			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_purchase,
						var_id_account_tax,
						concat('Pajak Pembelian - ',var_no_purchase),
						var_rnd_ppn);
			end if;
			
		if var_um > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_um,
						concat('Uang Muka Pembelian - ',var_no_purchase),
						round(-1*(var_um),0));
		end if;


		if var_total > 0 then
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_head,
						concat('Pembelian - ',var_no_purchase),
						round(-1*(var_rnd_total-var_um),0));
		end if;
		


	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_purchase_det where no_purchase = var_no_purchase;			
		end if;
		insert into trn_purchase_det 
			(no_purchase,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 item_name
			)
		values (var_no_purchase,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_item_name
			);


		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase  and (id_account <> var_id_account_disc or id_account <> var_id_account_tax or id_account <> var_id_account_head or id_account <> var_id_account_freight);
		end if;

		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_det,
						concat('Pembelian - ',var_id_item),
						round((var_nominal*var_convert_nom),0));
	end if;

	ELSEIF TRANSID = 'INSERT' THEN

		if var_detail = 0 then
		
			
			if var_payment_method = 1 THEN
				
				set var_id_account_head = var_id_account;
			elseif var_payment_method = 2 THEN
				select id_account into var_id_account_head from mst_supplier where id_supplier = var_id_supplier;
			end if;

			select id_account into var_id_account_um from i_set_account_def where acc_parameter = 'acc_dp_po';
		
	if var_chk_so = 1 then
		insert into trn_purchase_head(
			 no_purchase,
			 date_trn,
			 no_purchase_order,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs,
			 um
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_no_purchase_order,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs,
			 var_um
			);
		elseif var_chk_so = 0 THEN
			insert into trn_purchase_head(
			 no_purchase,
			 date_trn,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs,
			 um
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs,
			 var_um
			);
	end if;
	
	set var_rnd_freight = round((var_freight * var_convert_nom),0);
		if var_rnd_freight is null then 
			set var_rnd_freight = 0;
		end if;
		set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;


	update trn_purchase_order_head set flag_status_invoice = 1 where no_purchase_order = var_no_purchase_order;
	if var_payment_method = 2 then
		insert into ap_status (
			no_purchase,
			date_trn,
			id_supplier,
			purchase_amount,
			notes
		)
		values (
			var_no_purchase,
			var_date_trn,
			var_id_supplier,
			round(var_rnd_total,0),
			var_notes
		);
	end if;

	
		
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_purchase,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Purchase Form',
						round(var_rnd_total,0));

select id_account into var_id_account_freight from i_set_account_def where acc_parameter = 'acc_freight';
			if var_freight > 0 then
			set var_rnd_freight = round((var_freight * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_freight,
						concat('Biaya Angkut Pembelian - ',var_no_purchase),
						var_rnd_freight);
			end if;


select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_beli';
			if var_disc > 0 then
			set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_disc,
						concat('Diskon Pembelian - ',var_no_purchase),
						var_rnd_diskon);
			end if;

select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_in';
			if var_tax > 0 then
			set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_tax,
						concat('Pajak Pembelian - ',var_no_purchase),
						var_rnd_ppn);
			end if;

		if var_um > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_um,
						concat('Uang Muka Pembelian - ',var_no_purchase),
						round(-1*(var_um),0));
		end if;


		if var_total > 0 then
			set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_head,
						concat('Pembelian - ',var_no_purchase),
						round(-1*(var_rnd_total-var_um),0));
		end if;



	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_purchase_det where no_purchase = var_no_purchase;			
		end if;
		insert into trn_purchase_det 
			(no_purchase,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 item_name
			)
		values (var_no_purchase,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_item_name
			);


		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase  and (id_account <> var_id_account_disc or id_account <> var_id_account_tax or id_account <> var_id_account_head or id_account <> var_id_account_freight);
		end if;

		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_det,
						concat('Pembelian - ',var_id_item),
						round((var_nominal*var_convert_nom),0));
	end if;

	ELSEIF TRANSID = 'DELETE' THEN

	
		if var_payment_method = 2 then
			delete from ap_status where no_purchase = var_no_purchase;
		end if;
		delete from trn_ledger_det where no_ledger = var_no_purchase;
		delete from trn_ledger_head where no_ledger = var_no_purchase;
		delete from trn_purchase_det where no_purchase = var_no_purchase;
		delete from trn_purchase_head where no_purchase = var_no_purchase;
		update trn_purchase_order_head set flag_status_invoice = 0 where no_purchase_order = var_no_purchase_order;
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_purchase_direct` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_purchase_direct`(in var_no_purchase varchar(30), in var_date_trn date, in var_no_purchase_order varchar(30), in var_id_supplier varchar(30), in var_payment_method varchar(30), in var_payment_term_days integer, in var_disc_term_days integer, in var_disc_term_nominal double,  in var_subtotal double, in var_freight double, in var_tax double, in var_total double, in var_notes text, in var_created_user varchar(30), in var_created_date date,  in var_modified_user varchar(30), in var_modified_date date, in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in  var_qty integer, in var_id_unit varchar(30), in var_price double,  in var_nominal double, in var_id_curr varchar(30),in var_detail integer, in varloop integer, in transid varchar(120), in var_cogs double, in var_chk_so integer,in var_disc  double, in var_id_account varchar(30), in var_item_name varchar(250), in var_kurs double, in var_weight double, in var_perweight double)
BEGIN
declare var_pay_method integer;
declare var_id_account_head varchar(30);
declare var_id_account_det varchar(30);
declare var_id_account_disc varchar(30);
declare var_id_account_tax varchar(30);
declare var_id_account_freight varchar(30);
declare var_nmb_asc integer;
declare var_convert_nom double;
declare var_rnd_subtotal double;
declare var_rnd_freight double;
declare var_rnd_diskon double;
declare var_rnd_total double;
declare var_rnd_ppn double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		set var_convert_nom = var_kurs;
		if var_convert_nom is null THEN
			set var_convert_nom = 1;
		end if;


IF TRANSID = 'UPDATE' THEN


	if var_detail = 0 then
	
			delete from i_stock_in where no_stock_in = var_no_purchase;
		if var_payment_method = 2 then
			delete from ap_status where no_purchase = var_no_purchase;
		end if;
		delete from trn_ledger_det where no_ledger = var_no_purchase;
		delete from trn_ledger_head where no_ledger = var_no_purchase;
		delete from trn_purchasedirect_det where no_purchase = var_no_purchase;
		delete from trn_purchasedirect_head where no_purchase = var_no_purchase;

			if var_payment_method = 1 THEN
				
				set var_id_account_head = var_id_account;
			elseif var_payment_method = 2 THEN
				select id_account into var_id_account_head from mst_supplier where id_supplier = var_id_supplier;
			end if;

		
	if var_chk_so = 1 then
		insert into trn_purchasedirect_head(
			 no_purchase,
			 date_trn,
			 no_purchase_order,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_no_purchase_order,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs
			);
		elseif var_chk_so = 0 THEN
			insert into trn_purchasedirect_head(
			 no_purchase,
			 date_trn,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs
			);
	end if;
	

	set var_rnd_freight = round((var_freight * var_convert_nom),0);
		if var_rnd_freight is null then 
			set var_rnd_freight = 0;
		end if;
		set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;


	if var_payment_method = 2 then
		insert into ap_status (
			no_purchase,
			date_trn,
			id_supplier,
			purchase_amount,
			notes
		)
		values (
			var_no_purchase,
			var_date_trn,
			var_id_supplier,
			round(var_rnd_total,0),
			var_notes
		);
	end if;
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_purchase,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Purchase Form',
						round(var_rnd_total,0));
		
		
		select id_account into var_id_account_freight from i_set_account_def where acc_parameter = 'acc_freight';
	
			if var_freight > 0 then
			set var_rnd_freight = round((var_freight * var_convert_nom),0);

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_freight,
						concat('Biaya Angkut Pembelian - ',var_no_purchase),
						var_rnd_freight);
			end if;
		


			select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_beli';
			
			if var_disc > 0 then
			set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_purchase,
						var_id_account_disc,
						concat('Diskon Pembelian - ',var_no_purchase),
						var_rnd_diskon);
			end if;
			

		select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_in';
		
		if var_tax > 0 then
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);

			insert into trn_ledger_det 
				(no_ledger,
				id_account,
				notes,
				nominal
				)
			values (var_no_purchase,
						var_id_account_tax,
						concat('Pajak Pembelian - ',var_no_purchase),
						var_rnd_ppn);
			end if;
			

		if var_total > 0 then
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_head,
						concat('Pembelian - ',var_no_purchase),
						round(-1*var_rnd_total,0));
		end if;
		


	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_purchasedirect_det where no_purchase = var_no_purchase;			
		end if;
		insert into trn_purchasedirect_det 
			(no_purchase,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 item_name,
			 weight,
			 perweight
			)
		values (var_no_purchase,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_item_name,
			 var_weight,
			 var_perweight
			);

			insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_purchase,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 round(var_price * var_convert_nom,0),
			 round(var_price * var_convert_nom,0),
			 'WH001'
			);

		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase  and (id_account <> var_id_account_disc or id_account <> var_id_account_tax or id_account <> var_id_account_head or id_account <> var_id_account_freight);
		end if;

		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_det,
						concat('Pembelian - ',var_id_item),
						round((var_nominal*var_convert_nom),0));
	end if;

	ELSEIF TRANSID = 'INSERT' THEN

		if var_detail = 0 then
		
			
			if var_payment_method = 1 THEN
				
				set var_id_account_head = var_id_account;
			elseif var_payment_method = 2 THEN
				select id_account into var_id_account_head from mst_supplier where id_supplier = var_id_supplier;
			end if;
		
	if var_chk_so = 1 then
		insert into trn_purchasedirect_head(
			 no_purchase,
			 date_trn,
			 no_purchase_order,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_no_purchase_order,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs
			);
		elseif var_chk_so = 0 THEN
			insert into trn_purchasedirect_head(
			 no_purchase,
			 date_trn,
			 id_supplier,
			 payment_method,
			 payment_term_days,
			 disc_term_days,
			 disc_term_nominal,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 id_account,
			 kurs
			)
		values(var_no_purchase,
			 var_date_trn,
			 var_id_supplier,
			 var_payment_method,
			 var_payment_term_days,
			 var_disc_term_days,
			 var_disc_term_nominal,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_id_account_head,
			 var_kurs
			);
	end if;
	
	set var_rnd_freight = round((var_freight * var_convert_nom),0);
		if var_rnd_freight is null then 
			set var_rnd_freight = 0;
		end if;
		set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;


	update trn_purchase_order_head set flag_status_invoice = 1 where no_purchase_order = var_no_purchase_order;
	if var_payment_method = 2 then
		insert into ap_status (
			no_purchase,
			date_trn,
			id_supplier,
			purchase_amount,
			notes
		)
		values (
			var_no_purchase,
			var_date_trn,
			var_id_supplier,
			round(var_rnd_total,0),
			var_notes
		);
	end if;

	
		
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_purchase,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Purchase Form',
						round(var_rnd_total,0));

select id_account into var_id_account_freight from i_set_account_def where acc_parameter = 'acc_freight';
			if var_freight > 0 then
			set var_rnd_freight = round((var_freight * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_freight,
						concat('Biaya Angkut Pembelian - ',var_no_purchase),
						var_rnd_freight);
			end if;


select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_beli';
			if var_disc > 0 then
			set var_rnd_diskon = round((-1*var_disc/100 * (var_subtotal) * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_disc,
						concat('Diskon Pembelian - ',var_no_purchase),
						var_rnd_diskon);
			end if;

select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_in';
			if var_tax > 0 then
			set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_tax,
						concat('Pajak Pembelian - ',var_no_purchase),
						var_rnd_ppn);
			end if;

		if var_total > 0 then
			set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_freight + var_rnd_diskon + var_rnd_ppn;
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_head,
						concat('Pembelian - ',var_no_purchase),
						round(-1*var_rnd_total,0));
		end if;



	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_purchasedirect_det where no_purchase = var_no_purchase;			
		end if;
		insert into trn_purchasedirect_det 
			(no_purchase,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 item_name,
			 weight,
			 perweight
			)
		values (var_no_purchase,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_item_name,
			 var_weight,
			 var_perweight
			);

		insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_purchase,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 round(var_price * var_convert_nom,0),
			 round(var_price * var_convert_nom,0),
			 'WH001'
			);

		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase  and (id_account <> var_id_account_disc or id_account <> var_id_account_tax or id_account <> var_id_account_head or id_account <> var_id_account_freight);
		end if;

		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase,
						var_id_account_det,
						concat('Pembelian - ',var_id_item),
						round((var_nominal*var_convert_nom),0));
	end if;

	ELSEIF TRANSID = 'DELETE' THEN

		delete from i_stock_in where no_stock_in = var_no_purchase;
		if var_payment_method = 2 then
			delete from ap_status where no_purchase = var_no_purchase;
		end if;
		delete from trn_ledger_det where no_ledger = var_no_purchase;
		delete from trn_ledger_head where no_ledger = var_no_purchase;
		delete from trn_purchasedirect_det where no_purchase = var_no_purchase;
		delete from trn_purchasedirect_head where no_purchase = var_no_purchase;
		update trn_purchase_order_head set flag_status_invoice = 0 where no_purchase_order = var_no_purchase_order;
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_purchase_return` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_purchase_return`(in var_no_purchase_return varchar(30), in var_date_trn date,  in var_id_supplier varchar(30), in var_paymethod integer, in var_subtotal double, in var_freight double,in var_disc double, in var_tax double, in var_total double, in var_notes text, in var_created_user varchar(30), in var_created_date date, in var_modified_user varchar(30), in var_modified_date date , in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in var_qty integer, in var_id_unit varchar(25), in  var_price double, in  var_nominal double, in var_id_curr varchar(25), in var_no_purchase varchar(30),  in var_detail integer, in varloop integer, in transid varchar(120),in var_cogs double, in nilai_retur_lalu double,in var_qty_purch int, in var_kurs double, in warehouse varchar(60), in var_weight double, in var_priceperweight double)
BEGIN
declare var_pay_method integer;
declare var_id_account_head varchar(30);
declare var_id_account_det varchar(30);
declare var_id_account_disc varchar(30);
declare var_id_account_tax varchar(30);
declare var_id_account_freight varchar(30);
declare var_convert_nom double;
declare var_rnd_subtotal double;
declare var_rnd_freight double;
declare var_rnd_diskon double;
declare var_rnd_total double;
declare var_rnd_ppn double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		set var_convert_nom = var_kurs;
		if var_convert_nom is null THEN
			set var_convert_nom = 1;
		end if;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_purchase_return_det where no_purchase_return = var_no_purchase_return;
		delete from trn_purchase_return_head where no_purchase_return = var_no_purchase_return;
		delete from i_stock_out where no_stock_out = var_no_purchase_return;
		delete from trn_ledger_det where no_ledger = var_no_purchase_return;
		delete from trn_ledger_head where no_ledger = var_no_purchase_return;
		
		
		insert into trn_purchase_return_head(
			 no_purchase_return,
			 date_trn,
			 id_supplier,
			 payment_method,
			 subtotal,
			 freight,		
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 kurs,
			 id_warehouse
			)
		values(var_no_purchase_return,
			 var_date_trn,
			 var_id_supplier,
			 var_paymethod,
			 var_subtotal,
			 var_freight,		
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_kurs,
			 warehouse
			);


		set var_rnd_freight = round((var_freight * var_convert_nom),0);
		if var_rnd_freight is null then 
			set var_rnd_freight = 0;
		end if;
		set var_rnd_diskon = round((var_disc/100 * (var_subtotal) * var_convert_nom),0);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round((-1*var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) - var_rnd_diskon - var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;

if var_paymethod = 2 then
	
	
	update ap_status set return_amount = case when return_amount is null then 0 else return_amount end - nilai_retur_lalu where no_purchase = var_no_purchase;
	update ap_status set return_amount = case when return_amount is null then 0 else return_amount end + round(var_rnd_total,0) where no_purchase = var_no_purchase;
	
end if;


insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_purchase_return,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Purchase Return Form',
						round(var_rnd_total,0));




select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_beli';

			if var_disc > 0 then
			set var_rnd_diskon = round((var_disc/100 * (var_subtotal) * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase_return,
						var_id_account_disc,
						concat('Diskon Pembelian - ',var_no_purchase_return),
						var_rnd_diskon);
			end if;

select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_in';
			if var_tax > 0 then
			set var_rnd_ppn = round((-1*var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase_return,
						var_id_account_tax,
						concat('Pajak Pembelian - ',var_no_purchase_return),
						var_rnd_ppn);
			end if;

				
			select payment_method into var_pay_method from trn_purchase_return_head where no_purchase_return = var_no_purchase_return;
			if var_pay_method = 1 THEN
				select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_cash_purchase';
			elseif var_pay_method = 2 THEN
				select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_credit_purchase';
			end if;

if var_total > 0 then
			set var_rnd_total = (var_subtotal * var_convert_nom) - var_rnd_diskon - var_rnd_ppn;
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase_return,
						var_id_account_head,
						concat('Retur Pembelian - ',var_no_purchase_return),
						round(var_rnd_total,0));
		end if;


	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_purchase_return_det where no_purchase_return = var_no_purchase_return;
		end if;
		insert into trn_purchase_return_det 
			(no_purchase_return,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 no_purchase,
			 qty_purch,
			 weight,
			 priceperweight
			)
		values (var_no_purchase_return,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_no_purchase,
			 var_qty_purch,
			 var_weight,
			 var_priceperweight
			);
		
		if varloop = 0 then
			delete from i_stock_out where no_stock_out = var_no_purchase_return;			
		end if;
		insert into i_stock_out (
			no_stock_out,
			date_trn,
			id_item,
			qty,
			id_unit,
			cogs,
			price,
      id_warehouse
		)
		values (
			var_no_purchase_return,
			var_date_trn,
			var_id_item,
			var_qty,
			var_id_unit,
			round((var_cogs * var_convert_nom),0),
			round((var_price * var_convert_nom),0),
      warehouse
		);
		

			
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;
		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase_return  and id_account = var_id_account_det;
		end if;
		
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase_return,
						var_id_account_det,
						concat('Retur Pembelian - ',var_id_item),
						round((-1*var_nominal*var_convert_nom),0));
		end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_purchase_return_head(
			 no_purchase_return,
			 date_trn,
			 id_supplier,
			 payment_method,
			 subtotal,
			 freight,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 disc,
			 kurs,
			 id_warehouse
			)
		values(var_no_purchase_return,
			 var_date_trn,
			 var_id_supplier,
			 var_paymethod,
			 var_subtotal,
			 var_freight,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_disc,
			 var_kurs,
			 warehouse
			);

		
		set var_rnd_freight = round((var_freight * var_convert_nom),0);
		if var_rnd_freight is null then 
			set var_rnd_freight = 0;
		end if;
		set var_rnd_diskon = round((var_disc/100 * (var_subtotal) * var_convert_nom),0);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round((-1*var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) - var_rnd_diskon - var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;


		if var_paymethod = 2 then
			
			
			
			update ap_status set return_amount = case when return_amount is null then 0 else return_amount end + round(var_rnd_total,0) where no_purchase = var_no_purchase;
	end if;


		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_purchase_return,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Purchase Return Form',
						round(var_rnd_total,0));




select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_beli';
			if var_disc > 0 then
			set var_rnd_diskon = round((var_disc/100 * (var_subtotal) * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase_return,
						var_id_account_disc,
						concat('Diskon Pembelian - ',var_no_purchase_return),
						var_rnd_diskon);
			end if;

select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_in';
			if var_tax > 0 then
			set var_rnd_ppn = round((-1*var_tax/100 * (var_subtotal-(var_disc/100 * (var_subtotal))) * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase_return,
						var_id_account_tax,
						concat('Pajak Pembelian - ',var_no_purchase_return),
						var_rnd_ppn);
			end if;

				
			select payment_method into var_pay_method from trn_purchase_return_head where no_purchase_return = var_no_purchase_return;
			if var_pay_method = 1 THEN
				select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_cash_purchase';
			elseif var_pay_method = 2 THEN
				select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_credit_purchase';
			end if;

if var_total > 0 then
			set var_rnd_total = (var_subtotal * var_convert_nom) - var_rnd_diskon - var_rnd_ppn;
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase_return,
						var_id_account_head,
						concat('Retur Pembelian - ',var_no_purchase_return),
						round(var_rnd_total,0));
		end if;


	elseif var_detail = 1 THEN
		insert into trn_purchase_return_det 
			(no_purchase_return,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 no_purchase,
			 qty_purch,
			  weight,
			 priceperweight
			)
		values (var_no_purchase_return,
			 var_number_asc,
			 var_id_item,
			 var_notes,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_no_purchase,
			 var_qty_purch,
			 var_weight,
			 var_priceperweight
			);

		insert into i_stock_out (
			no_stock_out,
			date_trn,
			id_item,
			qty,
			id_unit,
			cogs,
			price,
      id_warehouse
		)
		values (
			var_no_purchase_return,
			var_date_trn,
			var_id_item,
			var_qty,
			var_id_unit,
			round(var_cogs*var_convert_nom,0),
			round(var_price*var_convert_nom,0),
			warehouse
		);


		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;
		if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_purchase_return  and id_account = var_id_account_det;
		end if;

		
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_purchase_return,
						var_id_account_det,
						concat('Retur Pembelian - ',var_id_item),
						round((-1*var_nominal*var_convert_nom),0));



	end if;

	ELSEIF TRANSID = 'DELETE' THEN

			delete from trn_purchase_return_det where no_purchase_return = var_no_purchase_return;
			delete from trn_purchase_return_head where no_purchase_return = var_no_purchase_return;
			if var_paymethod = 2 then
				
				
				update ap_status set return_amount = case when return_amount is null then 0 else return_amount end - nilai_retur_lalu where no_purchase=var_no_purchase;
				
			end if;
			delete from i_stock_out where no_stock_out = var_no_purchase_return;
			delete from trn_ledger_det where no_ledger = var_no_purchase_return;
			delete from trn_ledger_head where no_ledger = var_no_purchase_return;

	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_recalculate_cogs_avg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_recalculate_cogs_avg`(in var_akun1 varchar(30), in var_akun2 varchar(30),in var_tgl_awal date, in var_tgl_akhir date, in var_date_filter integer)
BEGIN
	DECLARE done INT DEFAULT FALSE;
	DECLARE var_item varchar(30);
	DECLARE var_notes text;
	declare i integer;
	DECLARE cur1 CURSOR FOR select id_item from mst_item where (id_item between var_akun1 and var_akun2) order by id_item asc;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

	delete from lap_mutasi_hpp;
	set i = 0;
	OPEN cur1;
  REPEAT
  FETCH cur1 INTO var_item;
  IF done = 0 THEN
		call sp_cogs_avg(var_item,var_date_filter,var_tgl_awal,var_tgl_akhir,i);
		set i = i+1;
	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

	call sp_update_i_cogs();
	call sp_update_i_cogs3();
	call sp_update_i_cogs2();


	COMMIT;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_received_order` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_received_order`(in var_no_received_order varchar(30),in var_no_purchase_order varchar(30),in var_id_supplier varchar(30), in var_date_trn date, in var_notes text, in var_modified_user varchar(30), in var_created_date date, in var_modified_date date, in var_created_user varchar(30), in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in var_qty integer, in var_id_unit varchar(30), in var_detail integer, in varloop integer, in transid varchar(120), in var_received_qty integer, in var_qty_before integer, in var_warehouse_name varchar(250),in var_id_warehouse varchar(30))
BEGIN

declare var_price double;
declare var_convert_nom double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

select case when kurs is null then 1 else kurs end into var_convert_nom from trn_purchase_order_head where no_purchase_order = var_no_purchase_order;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_received_order_det where no_received_order = var_no_received_order;
		delete from trn_received_order_head where no_received_order = var_no_received_order;
		
		insert into trn_received_order_head(
			 no_received_order,
			 no_purchase_order,
			 id_supplier,
			 date_trn,
			 notes,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user
			)
		values(var_no_received_order,
			 var_no_purchase_order,
			 var_id_supplier,
			 var_date_trn,
			 var_notes,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
			 var_created_user
			);

	elseif var_detail = 1 THEN
		
		if varloop = 0 THEN
			delete from trn_received_order_det where no_received_order = var_no_received_order;
		end if;

		update trn_purchase_order_det set qty_received = 
		case when qty_received is null then 0 else qty_received end - var_qty_before where no_purchase_order = var_no_purchase_order
		and id_item = var_id_item;
 
		insert into trn_received_order_det 
			(no_received_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 received_qty,
			 id_warehouse,
			 warehouse_name
			)
		values (var_no_received_order,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_received_qty,
			 var_id_warehouse,
			 var_warehouse_name
			);

		update trn_purchase_order_det set qty_received = 
		case when qty_received is null then 0 else qty_received end + var_received_qty where no_purchase_order = var_no_purchase_order and id_item = var_id_item;
		
		
		if varloop = 0 THEN
			delete from i_stock_in where no_stock_in = var_no_received_order;
		end if;

		select price into var_price from trn_purchase_order_det where no_purchase_order = var_no_purchase_order and id_item = var_id_item;
		
		
		
		
		


		insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_received_order,
			 var_date_trn,
			 var_id_item,
			 var_received_qty,
			 var_id_unit,
			 round(var_price * var_convert_nom,0),
			 round(var_price * var_convert_nom,0),
			 var_id_warehouse
			);

		end if;
	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_received_order_head(
			 no_received_order,
			 no_purchase_order,
			 id_supplier,
			 date_trn,
			 notes,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user
			)
		values(var_no_received_order,
					 var_no_purchase_order,
					 var_id_supplier,
				   var_date_trn,
					 var_notes,
					 var_modified_user,
					 var_created_date,
					 var_modified_date,
					 var_created_user
			);
	elseif var_detail = 1 THEN
		insert into trn_received_order_det 
			(no_received_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 received_qty,
			 id_warehouse,
			 warehouse_name
			)
		values (var_no_received_order,
					  var_number_asc,
						var_id_item,
						var_notes_det,
					  var_qty,
						var_id_unit,
					  var_received_qty,
						var_id_warehouse,
						var_warehouse_name
			);

			update trn_purchase_order_det set qty_received = 
			case when qty_received is null then 0 else qty_received end + var_received_qty where no_purchase_order = var_no_purchase_order and id_item = var_id_item;
			
		select price into var_price from trn_purchase_order_det where no_purchase_order = var_no_purchase_order and id_item = var_id_item;
		
		
		
		
		


		insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_received_order,
			 var_date_trn,
			 var_id_item,
			 var_received_qty,
			 var_id_unit,
			 round(var_price * var_convert_nom,0),
			 round(var_price * var_convert_nom,0),
			 var_id_warehouse
			);

	end if;

	ELSEIF TRANSID = 'DELETE' THEN
			if var_detail = 0 THEN
				delete from i_stock_in where no_stock_in = var_no_received_order;
				delete from trn_received_order_det where no_received_order = var_no_received_order;
				delete from trn_received_order_head where no_received_order = var_no_received_order;
			end if;
			if var_detail = 1 then
					update trn_purchase_order_det set qty_received = 
					case when qty_received is null then 0 else qty_received end - var_received_qty where no_purchase_order = var_no_purchase_order
					and id_item = var_id_item;
				end if;
END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_reconcile` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_reconcile`(in var_no_reconcile varchar(60), in var_date_trn date, in var_id_account_head varchar(30), in var_balance_before double, in var_reconcile double, in var_balance_after double, in var_created_user varchar(120), in var_created_date date, in var_modified_user varchar(120), in var_modified_date date, in var_id_account_det varchar(30),  in var_notes text, in var_amount_in double, in var_amount_out double, in var_detail integer, in var_loop integer,in transid varchar(60),in var_notes_head text,in id_curr varchar(30), in var_kurs double)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_reconcile_det where no_reconcile = var_no_reconcile;
		delete from trn_reconcile_head where no_reconcile = var_no_reconcile;
		delete from trn_ledger_det where no_ledger = var_no_reconcile;
		delete from trn_ledger_head where no_ledger = var_no_reconcile;

		
		insert into trn_reconcile_head (
			no_reconcile,
			date_trn,
			id_account_bank,
			balance_before,
			reconcile,
			balance_after,
			notes,
			created_user,
			created_date,
			modified_user,
			modified_date,
			id_currency,
			kurs
		)
		values(
			var_no_reconcile, 
			var_date_trn, 
			var_id_account_head,
			var_balance_before, 
			var_reconcile,
			var_balance_after,
			var_notes_head,
			var_created_user, 
			var_created_date, 
			var_modified_user, 
			var_modified_date,
			id_curr,
			var_kurs
		);

		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_reconcile,
					 var_date_trn,
					 concat('Reconcile ',var_id_account_head),
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Reconcile Cash/Bank',
						round(var_reconcile * var_kurs,0));
	
			if var_reconcile > 0 then
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				)
				values (
					var_no_reconcile,
					var_id_account_head,
					concat('Reconcile ',var_id_account_head),
					round(var_reconcile * var_kurs,0)
				);	
			elseif var_reconcile < 0 THEN
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				)
				values (
					var_no_reconcile,
					var_id_account_head,
					concat('reconcile',var_id_account_head),
					round(-1 * var_reconcile * var_kurs,0)
				);	

			end if;

	elseif var_detail = 1 THEN
			insert into trn_reconcile_det (
				no_reconcile,
				id_account,
				notes,
				amount_in,
				amount_out
			)
			values (
				var_no_reconcile,
				var_id_account_det,
				var_notes,
				var_amount_in,
				var_amount_out
			);
			
			if var_amount_in > 0 then
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				)
				values (
					var_no_reconcile,
					var_id_account_det,
					var_notes,
					round(-1 * var_amount_in * var_kurs,0)
				);
			elseif var_amount_out > 0 THEN
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				)
				values (
					var_no_reconcile,
					var_id_account_det,
					var_notes,
					round(var_amount_out * var_kurs,0)
				);
			end if;

	end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 then

		
		insert into trn_reconcile_head (
			no_reconcile,
			date_trn,
			id_account_bank,
			balance_before,
			reconcile,
			balance_after,
			notes,
			created_user,
			created_date,
			modified_user,
			modified_date,
		  id_currency,
			kurs
		)
		values(
			var_no_reconcile, 
			var_date_trn, 
			var_id_account_head,
			var_balance_before, 
			var_reconcile,
			var_balance_after,
			var_notes_head,
			var_created_user, 
			var_created_date, 
			var_modified_user, 
			var_modified_date,
			id_curr,
			var_kurs
		);

		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_reconcile,
					 var_date_trn,
					 concat('Reconcile',var_id_account_head),
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Reconcile Cash/Bank',
						round(var_reconcile * var_kurs,0));
	
			if var_reconcile > 0 then
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				)
				values (
					var_no_reconcile,
					var_id_account_head,
					concat('reconcile',var_id_account_head),
					round(var_reconcile * var_kurs,0)
				);	
			elseif var_reconcile < 0 THEN
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				)
				values (
					var_no_reconcile,
					var_id_account_head,
					concat('reconcile',var_id_account_head),
					round(-1 * var_reconcile* var_kurs,0)
				);	

			end if;

	elseif var_detail = 1 THEN
			insert into trn_reconcile_det (
				no_reconcile,
				id_account,
				notes,
				amount_in,
				amount_out
			)
			values (
				var_no_reconcile,
				var_id_account_det,
				var_notes,
				var_amount_in,
				var_amount_out
			);
			
			if var_amount_in > 0 then
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				)
				values (
					var_no_reconcile,
					var_id_account_det,
					var_notes,
					round(-1 * var_amount_in * var_kurs,0)
				);
			elseif var_amount_out > 0 THEN
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				)
				values (
					var_no_reconcile,
					var_id_account_det,
					var_notes,
					round(var_amount_out * var_kurs,0)
				);
			end if;

	end if;

	ELSEIF TRANSID = 'DELETE' THEN

		delete from trn_reconcile_det where no_reconcile = var_no_reconcile;
		delete from trn_reconcile_head where no_reconcile = var_no_reconcile;
		delete from trn_ledger_det where no_ledger = var_no_reconcile;
		delete from trn_ledger_head where no_ledger = var_no_reconcile;

	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rekapitulasi_hpp_akhir` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rekapitulasi_hpp_akhir`(in var_id_item1 varchar(60), in var_id_item2 varchar(60))
BEGIN

DECLARE done INT DEFAULT FALSE;
declare i integer;
declare var_item varchar(30);
declare var_item_temp varchar(30);
declare var_saldo double;
declare var_price double;
declare var_nominal double;
DECLARE cur1 CURSOR FOR select id_item,case when saldo is null then 0 else saldo end as saldo,case when price is null then 0 else price end as price,
case when saldo is null then 0 else saldo end * case when price is null then 0 else price end as nominal from lap_mutasi_hpp where (id_item between var_id_item1 and var_id_item2)
and case when saldo is null then 0 else saldo end > 0
order by id_item, nmb_asc desc;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
DECLARE EXIT HANDLER FOR SQLEXCEPTION

BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

delete from lap_rekap_hpp_akhir;

insert into lap_rekap_hpp_akhir (id_item)
select distinct id_item from lap_mutasi_hpp
where case when saldo is null then 0 else saldo end > 0 and (id_item BETWEEN var_id_item1 and var_id_item2)
order by id_item, nmb_asc desc;

set i =0;
OPEN cur1;
  REPEAT
  FETCH cur1 INTO var_item, var_saldo,var_price,var_nominal;
  IF NOT done THEN
		if i = 0 or (i>0 and var_item_temp <> var_item) then
			update lap_rekap_hpp_akhir set
			saldo = var_saldo,
			price = var_price,
			nominal = var_nominal
			where id_item = var_item;
		end if;
		set var_item_temp = var_item;
		set i = i+1;
	END IF;
	UNTIL done END REPEAT;
CLOSE cur1;




COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_ro` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_ro`(in var_no_request_order varchar(30), in var_date_trn date, in var_notes text, in var_modified_user varchar(30), in var_created_date date, in var_modified_date date, in var_created_user varchar(30), in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in var_qty integer, in var_id_unit varchar(30), in var_detail integer, in varloop integer, in transid varchar(120), in var_flag_status int4, in var_id_warehouse varchar(60), in var_date_required date)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_request_order_det where no_request_order = var_no_request_order;
		delete from trn_request_order_head where no_request_order = var_no_request_order;
		
		insert into trn_request_order_head(
			 no_request_order,
			 date_trn,
			 notes,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 id_warehouse,
			 date_required
			)
		values(var_no_request_order,
			 var_date_trn,
			 var_notes,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 var_id_warehouse,
			 var_date_required
			);

	elseif var_detail = 1 THEN
		
		insert into trn_request_order_det 
			(no_request_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 flag_status
			)
		values (var_no_request_order,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_flag_status
			);
		end if;
	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_request_order_head(
			 no_request_order,
			 date_trn,
			 notes,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 id_warehouse,
			 date_required
			)
		values(var_no_request_order,
			 var_date_trn,
			 var_notes,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 var_id_warehouse,
			 var_date_required
			);
	elseif var_detail = 1 THEN
		insert into trn_request_order_det 
			(no_request_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 flag_status
			)
		values (var_no_request_order,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_flag_status
			);
	end if;

	ELSEIF TRANSID = 'DELETE' THEN

			delete from trn_request_order_det where no_request_order = var_no_request_order;
			delete from trn_request_order_head where no_request_order = var_no_request_order;
			
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_all_ledger` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_all_ledger`(in var_akun1 varchar(30), in var_akun2 varchar(30),in var_tgl_awal date, in var_tgl_akhir date, in var_date_filter integer)
BEGIN
	DECLARE done INT DEFAULT FALSE;
	DECLARE var_akun varchar(30);
	DECLARE cur1 CURSOR FOR select id_account from mst_account where (id_account between var_akun1 and var_akun2) and flag_header = 0 order by id_account asc;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
	
	create temporary table if not exists lap_ledger(
		no_ledger varchar(60),
		date_trn date,
		id_account varchar(50),
		account_name varchar(120),
		notes text,
		debet double,
		credit double,
		saldo double,
		company text,
		flag_default varchar(3)
	);

	delete from lap_ledger;

	OPEN cur1;
  REPEAT
  FETCH cur1 INTO var_akun;
  IF NOT done THEN
		call sp_rpt_ledger(var_akun,var_date_filter,var_tgl_awal,var_tgl_akhir);
	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

		select *,
	(
		SELECT
			`mst_company`.`address`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_address`,
	(
		SELECT
			`mst_company`.`city`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_city`, (SELECT case when header_text is null then '' else header_text end as header_text from i_project_name where project_default =1) as header_text from lap_ledger;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_all_mutasi_stock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_all_mutasi_stock`(in var_akun1 varchar(30), in var_akun2 varchar(30),in var_tgl_awal date, in var_tgl_akhir date, in var_date_filter integer, in warehouse varchar(60))
BEGIN
	DECLARE done INT DEFAULT FALSE;
	DECLARE var_item varchar(30);
	DECLARE var_notes text;
	DECLARE cur1 CURSOR FOR select id_item from mst_item where (id_item between var_akun1 and var_akun2) order by id_item asc;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
	
	create temporary table if not exists lap_mutasi_stock(
		no_bukti varchar(60),
		date_trn date,
		id_item varchar(50),
		item_name varchar(120),
		masuk double,
		keluar double,
		saldo double,
		company text,
		notes text,
		unit varchar(30),
		id_warehouse varchar(60)
	);

	delete from lap_mutasi_stock;

	OPEN cur1;
  REPEAT
  FETCH cur1 INTO var_item;
  IF NOT done THEN
		call sp_rpt_mutasi_stock(var_item,var_date_filter,var_tgl_awal,var_tgl_akhir,warehouse);
	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

		select no_bukti,
		date_trn date,
		id_item,
		item_name,
		masuk,
		keluar,
		saldo,
		company,
		notes,unit,id_warehouse from lap_mutasi_stock;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_apbalance_bln_supp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_apbalance_bln_supp`(in var_year integer)
BEGIN

declare convertmonth integer;
declare jml_bln,i integer;
declare jml_jan,jml_feb,jml_mar,jml_apr,jml_mei,jml_juni,jml_juli,jml_agust,jml_sept,jml_okt,jml_nov,jml_des double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	drop temporary table if EXISTS lap_apbalance_bln_supp;
	create temporary table if not EXISTS lap_apbalance_bln_supp(
		id_supplier varchar(30),
		nama_supplier varchar(250),
		Jan double,
		Feb double,
		Mar double,
		Apr double,
		May double,
		June double,
		July double,
		August double,
		Sept double,
		Oct double,
		Nov double,
		Des double,
		Tahun double
	);
	
delete from lap_apbalance_bln_supp;
insert into lap_apbalance_bln_supp (id_supplier, nama_supplier)
select distinct a.id_supplier, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama from ap_status a 
inner join mst_supplier b on b.id_supplier = a.id_supplier;
 
UPDATE lap_apbalance_bln_supp 
				set Tahun = var_year;

	
				UPDATE lap_apbalance_bln_supp a inner join 
				(select case when sum(purchase_amount) is null then 0 else sum(purchase_amount) end - 
				 case when sum(return_amount) is null then 0 else sum(return_amount) end -
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 1 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Jan = b.total;

				UPDATE lap_apbalance_bln_supp a inner join 
				(select case when sum(purchase_amount) is null then 0 else sum(purchase_amount) end - 
				 case when sum(return_amount) is null then 0 else sum(return_amount) end -
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 2 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Feb = b.total;

				UPDATE lap_apbalance_bln_supp a inner join 
				(select case when sum(purchase_amount) is null then 0 else sum(purchase_amount) end - 
				 case when sum(return_amount) is null then 0 else sum(return_amount) end -
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 3 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Mar = b.total;

				UPDATE lap_apbalance_bln_supp a inner join 
				(select case when sum(purchase_amount) is null then 0 else sum(purchase_amount) end - 
				 case when sum(return_amount) is null then 0 else sum(return_amount) end -
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 4 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Apr = b.total;

				UPDATE lap_apbalance_bln_supp a inner join 
				(select case when sum(purchase_amount) is null then 0 else sum(purchase_amount) end - 
				 case when sum(return_amount) is null then 0 else sum(return_amount) end -
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 5 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set May = b.total;

				UPDATE lap_apbalance_bln_supp a inner join 
				(select case when sum(purchase_amount) is null then 0 else sum(purchase_amount) end - 
				 case when sum(return_amount) is null then 0 else sum(return_amount) end -
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 6 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set June = b.total;

				UPDATE lap_apbalance_bln_supp a inner join 
				(select case when sum(purchase_amount) is null then 0 else sum(purchase_amount) end - 
				 case when sum(return_amount) is null then 0 else sum(return_amount) end -
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 7 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set July = b.total;

				UPDATE lap_apbalance_bln_supp a inner join 
				(select case when sum(purchase_amount) is null then 0 else sum(purchase_amount) end - 
				 case when sum(return_amount) is null then 0 else sum(return_amount) end -
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 8 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set August = b.total;

				UPDATE lap_apbalance_bln_supp a inner join 
				(select case when sum(purchase_amount) is null then 0 else sum(purchase_amount) end - 
				 case when sum(return_amount) is null then 0 else sum(return_amount) end -
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 9 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Sept = b.total;

				UPDATE lap_apbalance_bln_supp a inner join 
				(select case when sum(purchase_amount) is null then 0 else sum(purchase_amount) end - 
				 case when sum(return_amount) is null then 0 else sum(return_amount) end -
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 10 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Oct = b.total;

				UPDATE lap_apbalance_bln_supp a inner join 
				(select case when sum(purchase_amount) is null then 0 else sum(purchase_amount) end - 
				 case when sum(return_amount) is null then 0 else sum(return_amount) end -
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 11 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Nov = b.total;

				UPDATE lap_apbalance_bln_supp a inner join 
				(select case when sum(purchase_amount) is null then 0 else sum(purchase_amount) end - 
				 case when sum(return_amount) is null then 0 else sum(return_amount) end -
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 12 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Des = b.total;
	
	call sp_rpt_apbalance_bln_supp_init0;

	
	select *, (select company_name from mst_company where flag_active = 1) as company_name,
(select id_currency from mst_currency where flag_default = 1) as curr from lap_apbalance_bln_supp;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_apbalance_bln_supp_init0` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_apbalance_bln_supp_init0`()
BEGIN
	DECLARE done INT DEFAULT FALSE;
	declare var_id_supplier varchar(120);
	DECLARE cur1 CURSOR FOR select id_supplier from lap_apbalance_bln_supp;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
	
	OPEN cur1;
  REPEAT
  FETCH cur1 INTO var_id_supplier;
  IF NOT done THEN

		update lap_apbalance_bln_supp 
			set Jan = case when Jan is null then 0 else Jan end, 
					Feb = case when Feb is null then 0 else Feb end,
					Mar = case when Mar is null then 0 else Mar end,
					Apr = case when Apr is null then 0 else Apr end,
					May = case when May is null then 0 else May end,
					June = case when June is null then 0 else June end,
					July = case when July is null then 0 else July end,
					August = case when August is null then 0 else August end,
					Sept = case when Sept is null then 0 else Sept end,
					Oct = case when Oct is null then 0 else Oct end,
					Nov = case when Nov is null then 0 else Nov end,
					Des = case when Des is null then 0 else Des end
		where id_supplier = var_id_supplier;

	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_appayment_bln_supp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_appayment_bln_supp`(in var_year integer)
BEGIN

declare convertmonth integer;
declare jml_bln,i integer;
declare jml_jan,jml_feb,jml_mar,jml_apr,jml_mei,jml_juni,jml_juli,jml_agust,jml_sept,jml_okt,jml_nov,jml_des double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	drop temporary table if EXISTS lap_appayment_bln_supp;
	create temporary table if not EXISTS lap_appayment_bln_supp(
		id_supplier varchar(30),
		nama_supplier varchar(250),
		Jan double,
		Feb double,
		Mar double,
		Apr double,
		May double,
		June double,
		July double,
		August double,
		Sept double,
		Oct double,
		Nov double,
		Des double,
		Tahun double
	);
	
delete from lap_appayment_bln_supp;
insert into lap_appayment_bln_supp (id_supplier, nama_supplier)
select distinct a.id_supplier, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama from ap_status a 
inner join mst_supplier b on b.id_supplier = a.id_supplier;
 
UPDATE lap_appayment_bln_supp 
				set Tahun = var_year;

	
				UPDATE lap_appayment_bln_supp a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 1 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Jan = b.total;

				UPDATE lap_appayment_bln_supp a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 2 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Feb = b.total;

				UPDATE lap_appayment_bln_supp a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 3 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Mar = b.total;

				UPDATE lap_appayment_bln_supp a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 4 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Apr = b.total;

				UPDATE lap_appayment_bln_supp a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 5 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set May = b.total;

				UPDATE lap_appayment_bln_supp a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 6 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set June = b.total;

				UPDATE lap_appayment_bln_supp a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 7 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set July = b.total;

				UPDATE lap_appayment_bln_supp a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 8 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set August = b.total;

				UPDATE lap_appayment_bln_supp a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 9 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Sept = b.total;

				UPDATE lap_appayment_bln_supp a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 10 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Oct = b.total;

				UPDATE lap_appayment_bln_supp a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 11 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Nov = b.total;

				UPDATE lap_appayment_bln_supp a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_supplier
				 from ap_status where month(date_trn) = 12 and year(date_trn) = var_year
				 group by id_supplier) b on b.id_supplier = a.id_supplier
				 set Des = b.total;
	
	call sp_rpt_appayment_bln_supp_init0;

	
	select *, (select company_name from mst_company where flag_active = 1) as company_name,
(select id_currency from mst_currency where flag_default = 1) as curr from lap_appayment_bln_supp;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_appayment_bln_supp_init0` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_appayment_bln_supp_init0`()
BEGIN
	DECLARE done INT DEFAULT FALSE;
	declare var_id_supplier varchar(120);
	DECLARE cur1 CURSOR FOR select id_supplier from lap_appayment_bln_supp;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

	OPEN cur1;
  REPEAT
  FETCH cur1 INTO var_id_supplier;
  IF NOT done THEN

		update lap_appayment_bln_supp 
			set Jan = case when Jan is null then 0 else Jan end, 
					Feb = case when Feb is null then 0 else Feb end,
					Mar = case when Mar is null then 0 else Mar end,
					Apr = case when Apr is null then 0 else Apr end,
					May = case when May is null then 0 else May end,
					June = case when June is null then 0 else June end,
					July = case when July is null then 0 else July end,
					August = case when August is null then 0 else August end,
					Sept = case when Sept is null then 0 else Sept end,
					Oct = case when Oct is null then 0 else Oct end,
					Nov = case when Nov is null then 0 else Nov end,
					Des = case when Des is null then 0 else Des end
		where id_supplier = var_id_supplier;

	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_arbalance_bln_supp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_arbalance_bln_supp`(in var_year integer)
BEGIN

declare convertmonth integer;
declare jml_bln,i integer;
declare jml_jan,jml_feb,jml_mar,jml_apr,jml_mei,jml_juni,jml_juli,jml_agust,jml_sept,jml_okt,jml_nov,jml_des double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	drop temporary table if EXISTS lap_arbalance_bln_cust;
	create temporary table if not EXISTS lap_arbalance_bln_cust(
		id_customer varchar(30),
		nama_customer varchar(250),
		Jan double,
		Feb double,
		Mar double,
		Apr double,
		May double,
		June double,
		July double,
		August double,
		Sept double,
		Oct double,
		Nov double,
		Des double,
		Tahun double
	);
	
delete from lap_arbalance_bln_cust;
insert into lap_arbalance_bln_cust (id_customer, nama_customer)
select distinct a.id_customer, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama from ar_status a 
inner join mst_customer b on b.id_customer = a.id_customer;
 
UPDATE lap_arbalance_bln_cust
				set Tahun = var_year;

	
				UPDATE lap_arbalance_bln_cust a inner join 
				(select case when sum(sales_amount) is null then 0 else sum(sales_amount) end -
				 case when sum(return_amount) is null then 0 else sum(return_amount) end - 
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end
				 as total, id_customer
				 from ar_status where month(date_trn) = 1
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Jan = b.total;

				UPDATE lap_arbalance_bln_cust a inner join 
				(select case when sum(sales_amount) is null then 0 else sum(sales_amount) end -
				 case when sum(return_amount) is null then 0 else sum(return_amount) end - 
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end
				as total, id_customer
				 from ar_status where month(date_trn) = 2
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Feb = b.total;

				UPDATE lap_arbalance_bln_cust a inner join 
				(select case when sum(sales_amount) is null then 0 else sum(sales_amount) end -
				 case when sum(return_amount) is null then 0 else sum(return_amount) end - 
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end
				as total, id_customer
				 from ar_status where month(date_trn) = 3
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Mar = b.total;

				UPDATE lap_arbalance_bln_cust a inner join 
				(select case when sum(sales_amount) is null then 0 else sum(sales_amount) end -
				 case when sum(return_amount) is null then 0 else sum(return_amount) end - 
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end
				as total, id_customer
				 from ar_status where month(date_trn) = 4
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Apr = b.total;

				UPDATE lap_arbalance_bln_cust a inner join 
				(select case when sum(sales_amount) is null then 0 else sum(sales_amount) end -
				 case when sum(return_amount) is null then 0 else sum(return_amount) end - 
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end
				as total, id_customer
				 from ar_status where month(date_trn) = 5
				 group by id_customer) b on b.id_customer = a.id_customer
				 set May = b.total;

				UPDATE lap_arbalance_bln_cust a inner join 
				(select case when sum(sales_amount) is null then 0 else sum(sales_amount) end - 
					case when sum(return_amount) is null then 0 else sum(return_amount) end - 
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end
				as total, id_customer
				 from ar_status where month(date_trn) = 6
				 group by id_customer) b on b.id_customer = a.id_customer
				 set June = b.total;

				UPDATE lap_arbalance_bln_cust a inner join 
				(select case when sum(sales_amount) is null then 0 else sum(sales_amount) end -
				 case when sum(return_amount) is null then 0 else sum(return_amount) end - 
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end
				as total, id_customer
				 from ar_status where month(date_trn) = 7
				 group by id_customer) b on b.id_customer = a.id_customer
				 set July = b.total;

				UPDATE lap_arbalance_bln_cust a inner join 
				(select case when sum(sales_amount) is null then 0 else sum(sales_amount) end -
				 case when sum(return_amount) is null then 0 else sum(return_amount) end - 
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end
				as total, id_customer
				 from ar_status where month(date_trn) = 8
				 group by id_customer) b on b.id_customer = a.id_customer
				 set August = b.total;

				UPDATE lap_arbalance_bln_cust a inner join 
				(select case when sum(sales_amount) is null then 0 else sum(sales_amount) end -
				 case when sum(return_amount) is null then 0 else sum(return_amount) end - 
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end
				as total, id_customer
				 from ar_status where month(date_trn) = 9
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Sept = b.total;

				UPDATE lap_arbalance_bln_cust a inner join 
				(select case when sum(sales_amount) is null then 0 else sum(sales_amount) end -
				 case when sum(return_amount) is null then 0 else sum(return_amount) end - 
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end
				as total, id_customer
				 from ar_status where month(date_trn) = 10
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Oct = b.total;

				UPDATE lap_arbalance_bln_cust a inner join 
				(select case when sum(sales_amount) is null then 0 else sum(sales_amount) end -
				 case when sum(return_amount) is null then 0 else sum(return_amount) end - 
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end
				as total, id_customer
				 from ar_status where month(date_trn) = 11
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Nov = b.total;

				UPDATE lap_arbalance_bln_cust a inner join 
				(select case when sum(sales_amount) is null then 0 else sum(sales_amount) end -
				 case when sum(return_amount) is null then 0 else sum(return_amount) end - 
				 case when sum(disc_amount) is null then 0 else sum(disc_amount) end -
				 case when sum(paid_amount) is null then 0 else sum(paid_amount) end
				as total, id_customer
				 from ar_status where month(date_trn) = 12
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Des = b.total;
	
	call sp_rpt_arbalance_bln_supp_init0;

	
	select *, (select company_name from mst_company where flag_active = 1) as company_name,
(select id_currency from mst_currency where flag_default = 1) as curr from lap_arbalance_bln_cust;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_arbalance_bln_supp_init0` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_arbalance_bln_supp_init0`()
BEGIN
	DECLARE done INT DEFAULT FALSE;
	declare var_id_customer varchar(120);
	DECLARE cur1 CURSOR FOR select id_customer from lap_arbalance_bln_cust;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

	OPEN cur1;
  REPEAT
  FETCH cur1 INTO var_id_customer;
  IF NOT done THEN

		update lap_arbalance_bln_cust
			set Jan = case when Jan is null then 0 else Jan end, 
					Feb = case when Feb is null then 0 else Feb end,
					Mar = case when Mar is null then 0 else Mar end,
					Apr = case when Apr is null then 0 else Apr end,
					May = case when May is null then 0 else May end,
					June = case when June is null then 0 else June end,
					July = case when July is null then 0 else July end,
					August = case when August is null then 0 else August end,
					Sept = case when Sept is null then 0 else Sept end,
					Oct = case when Oct is null then 0 else Oct end,
					Nov = case when Nov is null then 0 else Nov end,
					Des = case when Des is null then 0 else Des end
		where id_customer = var_id_customer;

	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_arpayment_bln_supp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_arpayment_bln_supp`(in var_year integer)
BEGIN

declare convertmonth integer;
declare jml_bln,i integer;
declare jml_jan,jml_feb,jml_mar,jml_apr,jml_mei,jml_juni,jml_juli,jml_agust,jml_sept,jml_okt,jml_nov,jml_des double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	drop temporary table if EXISTS lap_arpayment_bln_cust;
	create temporary table if not EXISTS lap_arpayment_bln_cust(
		id_customer varchar(30),
		nama_customer varchar(250),
		Jan double,
		Feb double,
		Mar double,
		Apr double,
		May double,
		June double,
		July double,
		August double,
		Sept double,
		Oct double,
		Nov double,
		Des double,
		Tahun double
	);
	
delete from lap_arpayment_bln_cust;
insert into lap_arpayment_bln_cust (id_customer, nama_customer)
select distinct a.id_customer, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama from ar_status a 
inner join mst_customer b on b.id_customer = a.id_customer;
 
UPDATE lap_arpayment_bln_cust 
				set Tahun = var_year;

	
				UPDATE lap_arpayment_bln_cust a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_customer
				 from ar_status where month(date_trn) = 1
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Jan = b.total;

				UPDATE lap_arpayment_bln_cust a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_customer
				 from ar_status where month(date_trn) = 2
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Feb = b.total;

				UPDATE lap_arpayment_bln_cust a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_customer
				 from ar_status where month(date_trn) = 3
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Mar = b.total;

				UPDATE lap_arpayment_bln_cust a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_customer
				 from ar_status where month(date_trn) = 4
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Apr = b.total;

				UPDATE lap_arpayment_bln_cust a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_customer
				 from ar_status where month(date_trn) = 5
				 group by id_customer) b on b.id_customer = a.id_customer
				 set May = b.total;

				UPDATE lap_arpayment_bln_cust a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_customer
				 from ar_status where month(date_trn) = 6
				 group by id_customer) b on b.id_customer = a.id_customer
				 set June = b.total;

				UPDATE lap_arpayment_bln_cust a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_customer
				 from ar_status where month(date_trn) = 7
				 group by id_customer) b on b.id_customer = a.id_customer
				 set July = b.total;

				UPDATE lap_arpayment_bln_cust a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_customer
				 from ar_status where month(date_trn) = 8
				 group by id_customer) b on b.id_customer = a.id_customer
				 set August = b.total;

				UPDATE lap_arpayment_bln_cust a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_customer
				 from ar_status where month(date_trn) = 9
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Sept = b.total;

				UPDATE lap_arpayment_bln_cust a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_customer
				 from ar_status where month(date_trn) = 10
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Oct = b.total;

				UPDATE lap_arpayment_bln_cust a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_customer
				 from ar_status where month(date_trn) = 11
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Nov = b.total;

				UPDATE lap_arpayment_bln_cust a inner join 
				(select case when sum(paid_amount) is null then 0 else sum(paid_amount) end as total, id_customer
				 from ar_status where month(date_trn) = 12
				 group by id_customer) b on b.id_customer = a.id_customer
				 set Des = b.total;
	
	call sp_rpt_arpayment_bln_supp_init0;

	
	select *, (select company_name from mst_company where flag_active = 1) as company_name,
(select id_currency from mst_currency where flag_default = 1) as curr from lap_arpayment_bln_cust;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_arpayment_bln_supp_init0` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_arpayment_bln_supp_init0`()
BEGIN
	DECLARE done INT DEFAULT FALSE;
	declare var_id_customer varchar(120);
	DECLARE cur1 CURSOR FOR select id_customer from lap_arpayment_bln_cust;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

	OPEN cur1;
  REPEAT
  FETCH cur1 INTO var_id_customer;
  IF NOT done THEN

		update lap_arpayment_bln_cust
			set Jan = case when Jan is null then 0 else Jan end, 
					Feb = case when Feb is null then 0 else Feb end,
					Mar = case when Mar is null then 0 else Mar end,
					Apr = case when Apr is null then 0 else Apr end,
					May = case when May is null then 0 else May end,
					June = case when June is null then 0 else June end,
					July = case when July is null then 0 else July end,
					August = case when August is null then 0 else August end,
					Sept = case when Sept is null then 0 else Sept end,
					Oct = case when Oct is null then 0 else Oct end,
					Nov = case when Nov is null then 0 else Nov end,
					Des = case when Des is null then 0 else Des end
		where id_customer = var_id_customer;

	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

	COMMIT;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_cashbank_reg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_cashbank_reg`(in var_criteria text, in tgl_awal date, in tgl_akhir date, in date_filter integer)
BEGIN

declare filter text;
declare sawalD double;
declare sawalK double;
declare tglsawal date;
declare def char(1);
declare acc_nm varchar(120);
declare company text;
declare saldo_awal double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	select cast(date_trn as date) into tglsawal from trn_ledger_head order by date_trn asc limit 1;
if date_filter = 1 then
	if tglsawal < tgl_awal then
		set tglsawal = tgl_awal;
	end if;
end if;


select company_name into company from mst_company limit 1;
select def_position into def from mst_account where id_account = var_criteria;
select account_name into acc_nm from mst_account where id_account = var_criteria;

if date_filter = 1 then
	
	select case when b.def_position ='D' then sum(a.nominal) else 0 end into sawalD
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
	where c.date_trn < tgl_awal and a.id_account = var_criteria;

	select case when b.def_position ='K' then -1*sum(a.nominal) else 0 end into sawalK
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
	where c.date_trn < tgl_awal and a.id_account = var_criteria;
elseif date_filter = 0 THEN
	
	select case when b.def_position ='D' then sum(a.nominal) else 0 end into sawalD
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
	where c.date_trn < tglsawal and a.id_account = var_criteria;

	select case when b.def_position ='K' then -1*sum(a.nominal) else 0 end into sawalK
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
	where c.date_trn < tglsawal and a.id_account = var_criteria;
end if;

select beg_balance into saldo_awal from mst_account where id_account = var_criteria and flag_header=0;

	IF sawalD IS NULL THEN 
		 SET sawalD=0;
	END IF;


	IF sawalK IS NULL THEN 
		 SET sawalK=0;
	END IF;

	if def = 'D' THEN
		set sawalD = sawalD + saldo_awal;
	elseif def = 'K' THEN
		set sawalK = sawalK +saldo_awal; 
	end if;

	IF sawalD IS NULL THEN 
		 SET sawalD=0;
	END IF;


	IF sawalK IS NULL THEN 
		 SET sawalK=0;
	END IF;

	create temporary table if not exists lap_cashbank_register(
		no_ledger varchar(60),
		date_trn date,
		id_account varchar(50),
		account_name varchar(120),
		notes text,
		debet double,
		credit double,
		saldo double,
		company text
	);

	delete from lap_cashbank_register;

	if date_filter = 1 then
	if def = 'D' then
	insert into lap_cashbank_register	
	select * from (
		select 'Saldo Awal' as no_ledger,tglsawal as date_trn,var_criteria as id_account,acc_nm as account_name,'' as notes,sawalD AS DEBET,sawalK AS KREDIT,
		sawalD - sawalK as saldo, company as company
		union ALL
			select a.no_ledger, c.date_trn,a.id_account,b.account_name,a.notes,
			case when a.nominal >= 0 then a.nominal else 0 end as debet,
			case when a.nominal < 0 then -1*a.nominal else 0 end as credit,
			sawalD + a.nominal as saldo, company as company
			from trn_ledger_det a
			inner join mst_account b on b.id_account = a.id_account
			inner join trn_ledger_head c on c.no_ledger=a.no_ledger
			WHERE (c.date_trn between tgl_awal and tgl_akhir) and a.id_account = var_criteria
	) x order by x.date_trn asc;
	elseif def = 'K' THEN
	insert into lap_cashbank_register	
	select * from (
		select 'Saldo Awal' as no_ledger,tglsawal as date_trn,var_criteria as id_account,acc_nm as account_name,'Saldo Awal Perkiraan' as notes,sawalD AS DEBET,sawalK AS KREDIT,
		sawalK - sawalD as saldo, company as company
		union ALL
			select a.no_ledger, c.date_trn,a.id_account,b.account_name,a.notes,
			case when a.nominal >= 0 then a.nominal else 0 end as debet,
			case when a.nominal < 0 then -1*a.nominal else 0 end as credit,
			sawalK - a.nominal as saldo, company as company
			from trn_ledger_det a
			inner join mst_account b on b.id_account = a.id_account
			inner join trn_ledger_head c on c.no_ledger=a.no_ledger
			WHERE (c.date_trn between tgl_awal and tgl_akhir) and a.id_account = var_criteria
	) x order by x.date_trn asc;
	end if;
	elseif date_filter = 0 THEN
	if def = 'D' then
	insert into lap_cashbank_register
	select * from (
		select 'Saldo Awal' as no_ledger,tglsawal as date_trn,var_criteria as id_account,acc_nm as account_name,'Saldo Awal Perkiraan' as notes,sawalD AS DEBET,sawalK AS KREDIT,
		sawalD - sawalK as saldo, company as company
		union ALL
		select a.no_ledger, c.date_trn,a.id_account,b.account_name,a.notes,
		case when a.nominal >= 0 then a.nominal else 0 end as debet,
		case when a.nominal < 0 then -1*a.nominal else 0 end as credit,
		sawalD + a.nominal as saldo, company as company
		from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head c on c.no_ledger=a.no_ledger
		WHERE a.id_account = var_criteria
	) x order by x.date_trn asc;
	elseif def = 'K' then
	insert into lap_cashbank_register
	select * from (
		select 'Saldo Awal' as no_ledger,tglsawal as date_trn,var_criteria as id_account,acc_nm as account_name,'Saldo Awal Perkiraan' as notes,sawalD AS DEBET,sawalK AS KREDIT,
		sawalK - sawalD as saldo, company as company
		union ALL
		select a.no_ledger, c.date_trn,a.id_account,b.account_name,a.notes,
		case when a.nominal >= 0 then a.nominal else 0 end as debet,
		case when a.nominal < 0 then -1*a.nominal else 0 end as credit,
		sawalK - a.nominal as saldo, company as company
		from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head c on c.no_ledger=a.no_ledger
		WHERE a.id_account = var_criteria
	) x order by x.date_trn asc;
	end if;
	end if;

	select *,(
		SELECT
			`mst_company`.`address`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_address`,
	(
		SELECT
			`mst_company`.`city`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_city`, (SELECT case when header_text is null then '' else header_text end as header_text from i_project_name where project_default =1) as header_text from lap_cashbank_register;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_cash_flow` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_rpt_cash_flow`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN
declare var_acc_parameter varchar(250);
declare saldo_awal double;
declare saldo_sebelum_periode double;
declare saldo_akhir double;
declare nominal double;
declare nominal_cashbank double;
declare nominal_lain double;
declare total_perpindahan double;
declare keterangan text;
declare golongan integer;
declare var_id_trans integer;
DECLARE done INT DEFAULT FALSE;
DECLARE cur1 CURSOR FOR select id_component from tempx_component_cashflow_simrs_head order by id_component asc;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	create TEMPORARY TABLE IF NOT EXISTS lap_arus_kas_bumn(
		id_component int,
		group_component integer,
		nominal double
	);

	create TEMPORARY TABLE IF NOT EXISTS temp_no_ledger_kas(
		no_ledger varchar(120)
	);

	delete from lap_arus_kas_bumn;

	
	select sum(case when a.beg_balance is null then 0 else a.beg_balance end) into saldo_awal from mst_account a 
	where a.id_account in (select id_account from i_cashbank_setup);
	if saldo_awal is null THEN
		set saldo_awal = 0;
	end if;

	if date_filter = 1 then
	select sum(case when a.nominal is null then 0 else a.nominal end) into saldo_sebelum_periode from trn_ledger_det a 
	inner join (select no_ledger from trn_ledger_head where date_trn < var_start_date) b 
	on b.no_ledger = a.no_ledger
	where a.id_account in (select id_account from i_cashbank_setup);
	end if;
	
	if saldo_sebelum_periode is null THEN
		set saldo_sebelum_periode = 0;
	end if;
	set saldo_awal = saldo_awal + saldo_sebelum_periode;

	set total_perpindahan = 0;
	
	delete from temp_no_ledger_kas;
	if date_filter = 1 then
		
		insert into temp_no_ledger_kas 
		select distinct a.no_ledger from trn_ledger_det a 
		inner join (select no_ledger from trn_ledger_head where date_trn between var_start_date and var_end_date) b 
		on b.no_ledger = a.no_ledger
		where a.id_account in (select id_account from i_cashbank_setup);
	elseif date_filter = 0 THEN
		
		insert into temp_no_ledger_kas 
		select distinct a.no_ledger from trn_ledger_det a 
		inner join trn_ledger_head b 
		on b.no_ledger = a.no_ledger
		where a.id_account in (select id_account from i_cashbank_setup);
	end if;

	OPEN cur1;
  REPEAT
  FETCH cur1 INTO var_acc_parameter;
  IF NOT done THEN
	
		select notes into keterangan from tempx_component_cashflow_simrs_head where id_component = var_acc_parameter;
		select id_trans into keterangan from tempx_component_cashflow_simrs_head where id_component = var_acc_parameter;
		
		select id_type into golongan from tempx_component_cashflow_simrs_head where id_component = var_acc_parameter;
		set nominal =0;
		
		if var_acc_parameter not in (3,4) then	
			select sum(case when -1*a.nominal is null then 0 else -1*a.nominal end) into nominal from trn_ledger_det a 
			inner join temp_no_ledger_kas b 
			on b.no_ledger = a.no_ledger
			where a.id_account in (select id_account from tempx_component_cashflow_simrs_det 
			where id_component = var_acc_parameter);
		ELSE	
			
			if nominal is null THEN
				set nominal = 0;
			end if;
			if abs(nominal) > 0 then
				set nominal = nominal - nominal_setor;
			end if;
		end if;

			

		
		if nominal is null THEN
			set nominal = 0;
		end if;

		
		insert into lap_arus_kas_bumn
		select var_acc_parameter,golongan,nominal;
		
		set total_perpindahan = total_perpindahan + nominal;
	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

		select sum(case when a.nominal is null then 0 else a.nominal end) into nominal_cashbank from trn_ledger_det a 
		where a.id_account in (select id_account from i_cashbank_setup);
		
		if nominal_cashbank is null THEN
			set nominal_cashbank = 0;
		end if;
		set nominal_lain = nominal_cashbank - total_perpindahan - saldo_awal;
		set total_perpindahan = total_perpindahan + nominal_lain;

		insert into lap_arus_kas_bumn
		select 97,97,total_perpindahan;
			
		insert into lap_arus_kas_bumn
		select 98,98,saldo_awal;
	
		set saldo_akhir = saldo_awal + total_perpindahan;
		insert into lap_arus_kas_bumn
		select 99,99,saldo_akhir;		

		if nominal_lain > 0 THEN
			insert into lap_arus_kas_bumn
			select 3,1,nominal_lain;
		elseif nominal_lain < 0 THEN
			insert into lap_arus_kas_bumn
			select 4,1,nominal_lain;
		end if;
		
		select a.id_component, a.group_component, a.nominal,(select company_name from mst_company where flag_active = 1) as company_name,
		(SELECT case when header_text is null then '' else header_text end as header_text from i_project_name where project_default =1) as header_text,
		(SELECT ID_CURRENCY FROM mst_currency where flag_default = 1) as currency, 
		CASE WHEN a.id_component = 97 then 'KENAIKAN (PENURUNAN) KAS BERSIH SELAMA PERIODE'
		WHEN a.id_component = 98 then 'SALDO AWAL KAS SEBELUM PERIODE'
		WHEN a.id_component = 99 then 'SALDO AKHIR KAS PERIODE' ELSE
		c.type END AS TYPE, b.id_trans,
		CASE WHEN a.id_component = 97 then 'Kenaikan (Penurunan) Kas Bersih Selama Periode'
		WHEN a.id_component = 98 then 'Saldo Awal Kas Sebelum Periode'
		WHEN a.id_component = 99 then 'Saldo Akhir Kas Periode' ELSE
		b.notes end as notes, C.type2 from lap_arus_kas_bumn a 
		LEFT join tempx_component_cashflow_simrs_head b on b.id_component = a.id_component
		LEFT JOIN tempx_component_cashflow_simrs_type c
		on c.id_type = a.group_component;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_cogs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_cogs`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN
declare comp_persediaan_awal text;
declare saldo_persediaan_awal double;
declare comp_persediaan_akhir text;
declare saldo_persediaan_akhir double;
declare comp_pembelian text;
declare saldo_pembelian double;
declare comp_freight text;
declare saldo_freight double;
declare saldo_freight_adj double;
declare comp_retur_beli text;
declare saldo_retur_beli double;
declare comp_disc_beli text;
declare saldo_disc_beli double;
declare saldo_disc_beli_adj double;
declare comp_pembelian_bersih text;
declare saldo_pembelian_bersih double;
declare jml_jual double;
declare perd_awal_periode double;
declare persediaan_transaksi double;
declare barang_tersedia double;
declare hpp double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	create TEMPORARY TABLE IF NOT EXISTS lap_hpp(
		component text,
		group_component integer,
		nominal double
	);

	
	set comp_freight = 'Biaya Angkut';
	set comp_pembelian = 'Pembelian';
	set comp_persediaan_akhir = 'Persediaan Akhir';
	set comp_persediaan_awal = 'Persediaan Awal';
  set comp_retur_beli = 'Retur Pembelian';
	set comp_disc_beli = 'Diskon Pembelian';
	set comp_pembelian_bersih = 'Pembelian Bersih';

	
	select case when sum(a.beg_balance) is null then 0 else sum(a.beg_balance) end into saldo_persediaan_awal from mst_account a 
	inner join i_cogs_acc_setting b on b.id_account_inv = a.id_account;

	
	if date_filter = 1 then
		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into perd_awal_periode from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join i_cogs_acc_setting c on c.id_account_inv = b.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where x.date_trn < var_start_date;
		set saldo_persediaan_awal = saldo_persediaan_awal + perd_awal_periode;
	end if;
	if date_filter = 1 then
		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into persediaan_transaksi from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join i_cogs_acc_setting c on c.id_account_inv = b.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where (x.date_trn between var_start_date and var_end_date);
	elseif date_filter = 0 THEN
		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into persediaan_transaksi from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join i_cogs_acc_setting c on c.id_account_inv = b.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger;
	end if;

	set saldo_persediaan_akhir = saldo_persediaan_awal + persediaan_transaksi;

	
	if date_filter = 1 then
		select case when sum(b.nominal) is null then 0 else sum(b.nominal) end into saldo_pembelian
		from trn_purchase_head a inner join trn_purchase_det b on b.no_purchase = a.no_purchase
		where a.date_trn between var_start_date and var_end_date;
	elseif date_filter = 0 THEN 
		select case when sum(b.nominal) is null then 0 else sum(b.nominal) end into saldo_pembelian 
		from trn_purchase_head a inner join trn_purchase_det b on b.no_purchase = a.no_purchase;
	end if;

	
	if date_filter = 1 then
		select case when sum(a.freight) is null then 0 else sum(a.freight) end into saldo_freight
		from trn_purchase_head a inner join trn_purchase_det b on b.no_purchase = a.no_purchase
		where a.date_trn between var_start_date and var_end_date;
	elseif date_filter = 0 THEN 
		select case when sum(a.freight) is null then 0 else sum(a.freight) end into saldo_freight
		from trn_purchase_head a inner join trn_purchase_det b on b.no_purchase = a.no_purchase;
	end if;
	

	
	if date_filter = 1 then
		select case when sum((a.subtotal + a.freight)*a.disc/100) is null then 0 else sum((a.subtotal + a.freight)*a.disc/100) end into saldo_disc_beli
		from trn_purchase_head a inner join trn_purchase_det b on b.no_purchase = a.no_purchase
		where a.date_trn between var_start_date and var_end_date;
	elseif date_filter = 0 THEN 
		select case when sum((a.subtotal + a.freight)*a.disc/100) is null then 0 else sum((a.subtotal + a.freight)*a.disc/100) end into saldo_disc_beli
		from trn_purchase_head a inner join trn_purchase_det b on b.no_purchase = a.no_purchase;
	end if;

	
	if date_filter = 1 then
		select case when sum(a.subtotal) is null then 0 else sum(a.subtotal) end into saldo_retur_beli
		from trn_purchase_return_head a inner join trn_purchase_return_det b on b.no_purchase_return = a.no_purchase_return
		where a.date_trn between var_start_date and var_end_date;
	elseif date_filter = 0 THEN 
		select case when sum(a.subtotal) is null then 0 else sum(a.subtotal) end into saldo_retur_beli
		from trn_purchase_return_head a inner join trn_purchase_return_det b on b.no_purchase_return = a.no_purchase_return;
	end if;

	
	if date_filter = 1 then
		select case when sum((a.subtotal + a.freight)*a.disc/100) is null then 0 else sum((a.subtotal + a.freight)*a.disc/100) end into saldo_disc_beli_adj
		from trn_purchase_return_head a inner join trn_purchase_return_det b on b.no_purchase_return = a.no_purchase_return
		where a.date_trn between var_start_date and var_end_date;
	elseif date_filter = 0 THEN 
		select case when sum((a.subtotal + a.freight)*a.disc/100) is null then 0 else sum((a.subtotal + a.freight)*a.disc/100) end end into saldo_disc_beli_adj
		from trn_purchase_return_head a inner join trn_purchase_return_det b on b.no_purchase_return = a.no_purchase_return;
	end if;

	
	if date_filter = 1 then
		select case when sum(a.freight) is null then 0 else sum(a.freight) end into saldo_freight_adj
		from trn_purchase_return_head a inner join trn_purchase_return_det b on b.no_purchase_return = a.no_purchase_return
		where a.date_trn between var_start_date and var_end_date;
	elseif date_filter = 0 THEN 
		select case when sum(a.freight) is null then 0 else sum(a.freight) end into saldo_freight_adj
		from trn_purchase_return_head a inner join trn_purchase_return_det b on b.no_purchase_return = a.no_purchase_return;
	end if;

	set saldo_disc_beli = saldo_disc_beli - saldo_disc_beli_adj;
	set saldo_freight = saldo_freight - saldo_freight_adj;
	set saldo_freight = 0;
	set saldo_disc_beli = 0;
	set saldo_pembelian_bersih = saldo_pembelian + saldo_freight - saldo_disc_beli - saldo_retur_beli;
	set barang_tersedia =  saldo_persediaan_awal + saldo_pembelian_bersih;
	set hpp = barang_tersedia - saldo_persediaan_akhir;

delete from lap_hpp;

insert into lap_hpp
select comp_persediaan_awal,1,saldo_persediaan_awal;

insert into lap_hpp
select comp_pembelian,2,saldo_pembelian;



insert into lap_hpp
select comp_retur_beli,2,saldo_retur_beli;



insert into lap_hpp
select 'Barang Tersedia Di Jual',3,barang_tersedia;

insert into lap_hpp
select comp_persediaan_akhir,4,saldo_persediaan_akhir;

insert into lap_hpp
select 'HARGA POKOK PENJUALAN',5,hpp;

select *,(select company_name from mst_company where flag_active = 1) as company_name from lap_hpp;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_depreciation` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_depreciation`(in var_criteria text, in var_periode double, in var_years double)
BEGIN
	declare blnsawal double;
	declare sawal double;
	declare var_nilai_perolehan double;
	declare var_nilai_penyusutan double;
	declare saldo_akhir double;
	declare var_nilai_buku double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;


		if var_years >= get_year() and var_periode > 1 then
			select case when c.nominal is null then 0 else c.nominal end into sawal
			from i_aset_depreciation c inner join mst_aset d on c.id_aset = d.id_aset
			where c.years >= var_years and c.period < var_periode and c.id_aset = var_criteria;
		end if;

		if var_years < get_year() and var_periode = 1 then
			select case when c.nominal is null then 0 else c.nominal end into sawal
			from i_aset_depreciation c inner join mst_aset d on c.id_aset = d.id_aset
			where c.years < var_years and c.period > var_periode and c.id_aset = var_criteria;
		end if;

		select nilai_perolehan into var_nilai_perolehan from mst_aset where id_aset = var_criteria;
		
		select case when c.nominal is null then 0 else c.nominal end into var_nilai_penyusutan
		from i_aset_depreciation c inner join mst_aset d on c.id_aset = d.id_aset
		where c.period = var_periode and c.years = var_years and c.id_aset = var_criteria;

		if sawal is null THEN
			set sawal = 0;
		end if;
		if var_nilai_penyusutan is null THEN
			set var_nilai_penyusutan = 0;
		end if;
		set saldo_akhir = sawal + var_nilai_penyusutan;
		if saldo_akhir is null THEN
			set saldo_akhir = 0;
		end if;
		set var_nilai_buku = var_nilai_perolehan - saldo_akhir;
		if var_nilai_buku is null THEN
			set var_nilai_buku = 0;
		end if;

		insert into lap_akumulasi_aset 
		select a.id_aset, a.nama, a.id_golongan,c.type, b.department_name, var_nilai_perolehan, sawal, var_nilai_penyusutan, var_nilai_buku 
		from mst_aset a inner join mst_department b on b.department_id = a.id_department inner join mst_golaset c 
		on c.id_golongan = a.id_golongan where a.id_aset = var_criteria;
		
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_depreciation_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_depreciation_all`(in var_akun1 varchar(30), in var_akun2 varchar(30), in var_periode double, in var_years double)
BEGIN
	declare errno integer;
	declare errtext varchar(255);
	DECLARE done INT DEFAULT FALSE;
	DECLARE var_aset varchar(30);
	DECLARE cur1 CURSOR FOR select id_aset from mst_aset where (id_aset between var_akun1 and var_akun2) order by id_aset asc;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
		ROLLBACK;
	END;

	START TRANSACTION;
	
		drop temporary table if EXISTS lap_akumulasi_aset;
	create temporary table if not EXISTS lap_akumulasi_aset(
		id_aset varchar(30),
		nama_aset varchar(250),
		id_golongan varchar(120),
		golongan varchar(30),
		departemen varchar(120),
		nilai_perolehan double,
		akumulasi_awal double,
		penyusutan double,
		nilai_buku double
	);
	
	delete from lap_akumulasi_aset;


	OPEN cur1;
  REPEAT
  FETCH cur1 INTO var_aset;
  IF NOT done THEN
		call sp_rpt_depreciation(var_aset,var_periode,var_years);
	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

	select *,(
		SELECT
			`mst_company`.`address`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_address`,
	(
		SELECT
			`mst_company`.`city`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_city`, (SELECT case when header_text is null then '' else header_text end as header_text from i_project_name where project_default =1) as header_text,(
		SELECT
			`mst_company`.`company_name`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_name` from lap_akumulasi_aset;
	
	
	

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_lapumurhutang` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_lapumurhutang`(in var_param integer)
BEGIN
declare date_now date;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;
select now() into date_now;

create temporary table if not EXISTS lap_umur_hutang_2(
		no_purchase varchar(120),
		id_supplier varchar(30),
		supplier varchar(250),
		date_trn date,
		total_ap double,
		paid_amount double,
		balance double,
		term_days integer,
		umur_hutang integer,
		jatuh_tempo date
);


delete from lap_umur_hutang_2;
insert into lap_umur_hutang_2
select a.no_purchase, a.id_supplier,concat(case when c.first_name is null then '' else c.first_name end,' ',case when c.last_name is null then '' else c.last_name end) as customer, 
a.date_trn,
(case when a.purchase_amount is null then 0 else a.purchase_amount end - 
case when a.return_amount is null then 0 else a.return_amount end - case when a.disc_amount is null then 0 else a.disc_amount end) as total_ar
, case when a.paid_amount is null then 0 else a.paid_amount end as paid_amount,
(case when a.purchase_amount is null then 0 else a.purchase_amount end - 
case when a.return_amount is null then 0 else a.return_amount end - case when a.disc_amount is null then 0 else a.disc_amount end) -
case when a.paid_amount is null then 0 else a.paid_amount end
 as balance, b.payment_term_days,
DATEDIFF(date_now,cast(date_add(a.date_trn,interval b.payment_term_days day) as date)) as umur_hutang,
cast(date_add(a.date_trn,interval b.payment_term_days day) as date) as jatuh_tempo
from ap_status a
inner join trn_purchase_head b on b.no_purchase = a.no_purchase
inner join mst_supplier c on c.id_supplier = b.id_supplier;

select 
	no_purchase, 
	id_supplier,
	supplier,
	date_trn,
	total_ap,
	paid_amount,
	balance,
	term_days,
	jatuh_tempo,
	case when umur_hutang < 0 then balance else 0 end as "Belum Jatuh Tempo",
	case when umur_hutang >= 0 and umur_hutang <=30 then balance else 0 end as "<=30Hari",
	case when umur_hutang > 30 and umur_hutang <=60 then balance else 0 end as "31-60Hari",
	case when umur_hutang > 60 and umur_hutang <=90 then balance else 0 end as "61-90Hari",
	case when umur_hutang > 90 and umur_hutang <=120 then balance else 0 end as "91-120Hari",
	case when umur_hutang > 120 then balance else 0 end as ">120Hari",
	(select prosentase from i_set_ap_prosentase where id_cadangan = 1) as "Persen Belum JT",
  (select prosentase from i_set_ap_prosentase where id_cadangan = 2) as "Persen <=30Hari",
  (select prosentase from i_set_ap_prosentase where id_cadangan = 3) as "Persen 31-60Hari",
  (select prosentase from i_set_ap_prosentase where id_cadangan = 4) as "Persen 61-90Hari",
  (select prosentase from i_set_ap_prosentase where id_cadangan = 5) as "Persen 91-120Hari",
  (select prosentase from i_set_ap_prosentase where id_cadangan = 6) as "Persen >120Hari",
	(select company_name from mst_company where flag_active = 1) as company_name
from lap_umur_hutang_2;

commit;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_lapumurpiutang` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_lapumurpiutang`(in var_param integer)
BEGIN
declare date_now date;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

select now() into date_now;

create temporary table if not EXISTS lap_umur_piutang(
		no_sales varchar(120),
		id_customer varchar(30),
		customer varchar(250),
		date_trn date,
		total_ar double,
		paid_amount double,
		balance double,
		term_days integer,
		umur_piutang integer,
		jatuh_tempo date
);


delete from lap_umur_piutang;
insert into lap_umur_piutang
	select a.no_sales, a.id_customer,concat(case when c.first_name is null then '' else c.first_name end,' ',case when c.last_name is null then '' else c.last_name end) as customer, 
a.date_trn,
(case when a.sales_amount is null then 0 else a.sales_amount end - 
case when a.return_amount is null then 0 else a.return_amount end - case when a.disc_amount is null then 0 else a.disc_amount end) as total_ar
, case when a.paid_amount is null then 0 else a.paid_amount end as paid_amount,
(case when a.sales_amount is null then 0 else a.sales_amount end - 
case when a.return_amount is null then 0 else a.return_amount end - case when a.disc_amount is null then 0 else a.disc_amount end) -
case when a.paid_amount is null then 0 else a.paid_amount end
 as balance, b.termpaydisc,
DATEDIFF(date_now,cast(date_add(a.date_trn,interval b.termpaydisc day) as date)) as umur_piutang,
cast(date_add(a.date_trn,interval b.termpaydisc day) as date) as jatuh_tempo
from ar_status a
inner join trn_sales_head b on b.no_sales = a.no_sales
inner join mst_customer c on c.id_customer = b.id_customer;

select 
	no_sales, 
	id_customer,
	customer,
	date_trn,
	total_ar,
	paid_amount,
	balance,
	term_days,
	jatuh_tempo,
	case when umur_piutang < 0 then balance else 0 end as "Belum Jatuh Tempo",
	case when umur_piutang >= 0 and umur_piutang <=30 then balance else 0 end as "<=30Hari",
	case when umur_piutang > 30 and umur_piutang <=60 then balance else 0 end as "31-60Hari",
	case when umur_piutang > 60 and umur_piutang <=90 then balance else 0 end as "61-90Hari",
	case when umur_piutang > 90 and umur_piutang <=120 then balance else 0 end as "91-120Hari",
  (select prosentase from i_set_ar_prosentase where id_cadangan = 1) as "Persen Belum JT",
  (select prosentase from i_set_ar_prosentase where id_cadangan = 2) as "Persen <=30Hari",
  (select prosentase from i_set_ar_prosentase where id_cadangan = 3) as "Persen 31-60Hari",
  (select prosentase from i_set_ar_prosentase where id_cadangan = 4) as "Persen 61-90Hari",
  (select prosentase from i_set_ar_prosentase where id_cadangan = 5) as "Persen 91-120Hari",
  (select prosentase from i_set_ar_prosentase where id_cadangan = 6) as "Persen >120Hari",
	case when umur_piutang > 120 then balance else 0 end as ">120Hari",
	(select company_name from mst_company where flag_active = 1) as company_name
from lap_umur_piutang;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_ledger` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_ledger`(in var_criteria text,in date_filter integer, in tgl_awal date, in tgl_akhir date)
BEGIN

declare filter text;
declare sawalD double;
declare sawalK double;
declare saldo_awal double;
declare tglsawal date;
declare def char(1);
declare acc_nm varchar(120);
declare company text;
declare mutasi_debet double;
declare mutasi_kredit double;
declare mutasi_saldo double;
declare mutasi_sawal double;
declare mutasi_debet_awal double;
declare mutasi_kredit_awal double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	select cast(date_trn as date) into tglsawal from trn_ledger_head order by date_trn asc limit 1;
if date_filter = 1 then
	if tglsawal < tgl_awal then
		set tglsawal = tgl_awal;
	end if;
end if;


select company_name into company from mst_company limit 1;
select def_position into def from mst_account where id_account = var_criteria;
select account_name into acc_nm from mst_account where id_account = var_criteria;

if date_filter = 1 then
	
		select case when b.def_position ='D' then sum(a.nominal) else 0 end into sawalD
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
		where c.date_trn < tgl_awal and a.id_account = var_criteria;
	

	select case when b.def_position ='K' then -1*sum(a.nominal) else 0 end into sawalK
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
	where c.date_trn < tgl_awal and a.id_account = var_criteria;
elseif date_filter = 0 THEN
	
	select case when b.def_position ='D' then sum(a.nominal) else 0 end into sawalD
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
	where c.date_trn < tglsawal and a.id_account = var_criteria;

	select case when b.def_position ='K' then -1*sum(a.nominal) else 0 end into sawalK
				 from trn_ledger_det a inner join mst_account b 
				 on b.id_account = a.id_account
				 inner join trn_ledger_head c on c.no_ledger = a.no_ledger
	where c.date_trn < tglsawal and a.id_account = var_criteria;
end if;


	
	select beg_balance into saldo_awal from mst_account where id_account = var_criteria and flag_header=0;
	
	IF sawalD IS NULL THEN 
		 SET sawalD=0;
	END IF;


	IF sawalK IS NULL THEN 
		 SET sawalK=0;
	END IF;

	if def = 'D' THEN
		set sawalD = sawalD + saldo_awal;
	elseif def = 'K' THEN
		set sawalK = sawalK +saldo_awal; 
	end if;

	IF sawalD IS NULL THEN 
		 SET sawalD=0;
	END IF;


	IF sawalK IS NULL THEN 
		 SET sawalK=0;
	END IF;
	

	if date_filter = 1  then

	if def = 'D' then
	select sawalD into mutasi_debet_awal;
	select sum(case when a.nominal >= 0 then a.nominal else 0 end) into mutasi_debet
			from trn_ledger_det a
			inner join mst_account b on b.id_account = a.id_account
			inner join trn_ledger_head c on c.no_ledger=a.no_ledger
			WHERE (c.date_trn between tgl_awal and tgl_akhir) and a.id_account = var_criteria;
	end if;
	if def = 'K' then
	select sawalK into mutasi_kredit_awal;
	select sum(case when a.nominal < 0 then -1*a.nominal else 0 end) into mutasi_kredit
			from trn_ledger_det a
			inner join mst_account b on b.id_account = a.id_account
			inner join trn_ledger_head c on c.no_ledger=a.no_ledger
			WHERE (c.date_trn between tgl_awal and tgl_akhir) and a.id_account = var_criteria;
	end if;

	if def = 'D' and (mutasi_debet_awal > 0 or mutasi_debet > 0) then
	insert into lap_ledger	
			select 'Saldo Awal' as no_ledger,tglsawal as date_trn,var_criteria as id_account,acc_nm as account_name,'Saldo Awal Perkiraan' as notes,sawalD AS DEBET,sawalK AS KREDIT,
			sawalD - sawalK as saldo, company as company,def
		union ALL
			select a.no_ledger, c.date_trn,a.id_account,b.account_name,a.notes,
			case when a.nominal >= 0 then a.nominal else 0 end as debet,
			case when a.nominal < 0 then -1*a.nominal else 0 end as credit,
			sawalD + a.nominal as saldo, company as company,def
			from trn_ledger_det a
			inner join mst_account b on b.id_account = a.id_account
			inner join trn_ledger_head c on c.no_ledger=a.no_ledger
			WHERE (c.date_trn between tgl_awal and tgl_akhir) and a.id_account = var_criteria
	order by date_trn asc;
	elseif def = 'K' and (mutasi_kredit_awal > 0 or mutasi_kredit > 0) THEN
	insert into lap_ledger	
		select 'Saldo Awal' as no_ledger,tglsawal as date_trn,var_criteria as id_account,acc_nm as account_name,'Saldo Awal Perkiraan' as notes,sawalD AS DEBET,sawalK AS KREDIT,
		sawalK - sawalD as saldo, company as company,def
		union ALL
			select a.no_ledger, c.date_trn,a.id_account,b.account_name,a.notes,
			case when a.nominal >= 0 then a.nominal else 0 end as debet,
			case when a.nominal < 0 then -1*a.nominal else 0 end as credit,
			sawalK - a.nominal as saldo, company as company,def
			from trn_ledger_det a
			inner join mst_account b on b.id_account = a.id_account
			inner join trn_ledger_head c on c.no_ledger=a.no_ledger
			WHERE (c.date_trn between tgl_awal and tgl_akhir) and a.id_account = var_criteria
	order by date_trn asc;
	end if;
	elseif date_filter = 0 then

	if def = 'D' then
	select sawalD into mutasi_debet_awal;
	select sum(case when a.nominal >= 0 then a.nominal else 0 end) into mutasi_debet
			from trn_ledger_det a
			inner join mst_account b on b.id_account = a.id_account
			inner join trn_ledger_head c on c.no_ledger=a.no_ledger
			WHERE a.id_account = var_criteria;
	end if;
	if def = 'K' then
	select sawalK into mutasi_kredit_awal;
	select sum(case when a.nominal < 0 then -1*a.nominal else 0 end) into mutasi_kredit
			from trn_ledger_det a
			inner join mst_account b on b.id_account = a.id_account
			inner join trn_ledger_head c on c.no_ledger=a.no_ledger
			WHERE a.id_account = var_criteria;
	end if;
	if def = 'D' and (mutasi_debet_awal > 0 or mutasi_debet > 0) then
	insert into lap_ledger
		select 'Saldo Awal' as no_ledger,tglsawal as date_trn,var_criteria as id_account,acc_nm as account_name,'Saldo Awal Perkiraan' as notes,sawalD AS DEBET,sawalK AS KREDIT,
		sawalD - sawalK as saldo, company as company,def
		union ALL
		select a.no_ledger, c.date_trn,a.id_account,b.account_name,a.notes,
		case when a.nominal >= 0 then a.nominal else 0 end as debet,
		case when a.nominal < 0 then -1*a.nominal else 0 end as credit,
		sawalD + a.nominal as saldo, company as company,def
		from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head c on c.no_ledger=a.no_ledger
		WHERE a.id_account = var_criteria
	order by date_trn asc;
	elseif def = 'K' and (mutasi_kredit_awal > 0 or mutasi_kredit > 0)  then
	insert into lap_ledger
		select 'Saldo Awal' as no_ledger,tglsawal as date_trn,var_criteria as id_account,acc_nm as account_name,'Saldo Awal Perkiraan' as notes,sawalD AS DEBET,sawalK AS KREDIT,
		sawalK - sawalD as saldo, company as company,def
		union ALL
		select a.no_ledger, c.date_trn,a.id_account,b.account_name,a.notes,
		case when a.nominal >= 0 then a.nominal else 0 end as debet,
		case when a.nominal < 0 then -1*a.nominal else 0 end as credit,
		sawalK - a.nominal as saldo, company as company,def
		from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head c on c.no_ledger=a.no_ledger
		WHERE a.id_account = var_criteria
	order by date_trn asc;
	end if;
	end if;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_mutasi_stock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_mutasi_stock`(in var_criteria text,in date_filter integer, in tgl_awal date, in tgl_akhir date, in warehouse varchar(60))
BEGIN
	declare filter text;
	declare sawal double;
	declare sawal_periodeD double;
	declare sawal_periodeK double;
	declare def varchar(3);
	declare tglsawal date;
	declare item_nm varchar(120);
	declare company text;
	declare var_unit varchar(30);
	declare var_unit_terkecil varchar(30);
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

	select company_name into company from mst_company limit 1;
	select item_name into item_nm from mst_item where id_item = var_criteria;
	select id_unit into var_unit from i_item_beg_balance where id_item = var_criteria;
	select main_unit into var_unit_terkecil from mst_item where id_item = var_criteria;

	select cast(a.date_trn as date) into tglsawal from 
	(select date_trn from i_stock_in union select date_trn from i_stock_out) a order by a.date_trn asc limit 1;
	if date_filter = 1 then
		if tglsawal < tgl_awal then
			set tglsawal = tgl_awal;
		end if;
	end if;

	if date_filter = 1 then
	
		select case when sum(qty) is null then 0 else sum(qty) end into sawal_periodeD
		from i_stock_in
		where date_trn < tgl_awal and id_item = var_criteria and id_warehouse = warehouse;

		select case when sum(qty) is null then 0 else sum(qty) end into sawal_periodeK
		from i_stock_out
		where date_trn < tgl_awal and id_item = var_criteria and id_warehouse = warehouse;
elseif date_filter = 0 THEN
	
		select case when sum(qty) is null then 0 else sum(qty) end into sawal_periodeD
		from i_stock_in
		where date_trn < tglsawal and id_item = var_criteria and id_warehouse = warehouse;

		select case when sum(qty) is null then 0 else sum(qty) end into sawal_periodeK
		from i_stock_out
		where date_trn < tglsawal and id_item = var_criteria and id_warehouse = warehouse;
end if;

	
	select sum(balance) into sawal from i_item_beg_balance where id_item = var_criteria and id_warehouse = warehouse;
	set sawal_periodeD = sawal_periodeD + sawal;

	IF sawal_periodeD IS NULL THEN 
		 SET sawal_periodeD=0;
	END IF;


	IF sawal_periodeK IS NULL THEN 
		 SET sawal_periodeK=0;
	END IF;

	


	

	if date_filter = 1 then
	insert into lap_mutasi_stock
	select * from (
			select 'Saldo Awal' as no_bukti,tglsawal as date_trn,var_criteria as id_item,item_nm as item_name,sawal_periodeD AS DEBET,sawal_periodeK AS KREDIT,
			sawal_periodeD - sawal_periodeK as saldo, company as company,
			'Saldo Awal Barang',var_unit_terkecil,warehouse
		union ALL
			select a.no_stock_in, a.date_trn,a.id_item,b.item_name,
			case when (a.qty * c.qty) is null then 0 else (a.qty * c.qty) end as debet,
			0,
			sawal_periodeD + (a.qty * c.qty) as saldo, company as company,
			case when SUBSTR(a.no_stock_in,5,3) = 'REV' then 'Pembelian'
					 when SUBSTR(a.no_stock_in,5,3) = 'PRU' then 'Retur Pembelian'
					 when SUBSTR(a.no_stock_in,5,3) = 'SRU' then 'Retur Penjualan'
					 when SUBSTR(a.no_stock_in,5,2) = 'DO' then 'Penjualan'
					 when SUBSTR(a.no_stock_in,5,3) = 'ADS' then 'Koreksi Stock'
					 when SUBSTR(a.no_stock_in,5,3) = 'TRF' then 'Pindah Gudang'
			else '' end as notes,var_unit_terkecil, warehouse
			from i_stock_in a
			inner join mst_item b on b.id_item = a.id_item
			inner join mst_setunit c on c.id_unit = a.id_unit and c.id_item = a.id_item
			WHERE (a.date_trn between tgl_awal and tgl_akhir) and a.id_item = var_criteria and a.id_warehouse = warehouse
		union ALL
			select a.no_stock_out, a.date_trn,a.id_item,b.item_name,
			0,
			case when (a.qty * c.qty) is null then 0 else (a.qty * c.qty) end as kredit,
			sawal_periodeK + (a.qty * c.qty) as saldo, company as company,
			case when SUBSTR(a.no_stock_out,5,3) = 'REV' then 'Pembelian'
					 when SUBSTR(a.no_stock_out,5,3) = 'PRU' then 'Retur Pembelian'
					 when SUBSTR(a.no_stock_out,5,3) = 'SRU' then 'Retur Penjualan'
					 when SUBSTR(a.no_stock_out,5,2) = 'DO' then 'Penjualan'
					 when SUBSTR(a.no_stock_out,5,3) = 'ADS' then 'Koreksi Stock'
					 when SUBSTR(a.no_stock_out,5,3) = 'TRF' then 'Pindah Gudang'
			else '' end as notes,var_unit_terkecil, warehouse
			from i_stock_out a
			inner join mst_item b on b.id_item = a.id_item
			inner join mst_setunit c on c.id_unit = a.id_unit and c.id_item = a.id_item
			WHERE (a.date_trn between tgl_awal and tgl_akhir) and a.id_item = var_criteria and a.id_warehouse = warehouse
	) x order by x.date_trn asc;
	elseif date_filter = 0 THEN
	insert into lap_mutasi_stock
	select * from (
			select 'Saldo Awal' as no_bukti,tglsawal as date_trn,var_criteria as id_item,item_nm as item_name,sawal_periodeD AS DEBET,sawal_periodeK AS KREDIT,
			sawal_periodeD - sawal_periodeK as saldo, company as company,'Saldo Awal Barang',var_unit_terkecil,warehouse
		union ALL
			select a.no_stock_in, a.date_trn,a.id_item,b.item_name,
			case when (a.qty * c.qty) is null then 0 else (a.qty * c.qty) end as debet,
			0,
			sawal_periodeD + (a.qty * c.qty) as saldo, company as company,
			case when SUBSTR(a.no_stock_in,5,3) = 'REV' then 'Pembelian'
					 when SUBSTR(a.no_stock_in,5,3) = 'PRU' then 'Retur Pembelian'
					 when SUBSTR(a.no_stock_in,5,3) = 'SRU' then 'Retur Penjualan'
					 when SUBSTR(a.no_stock_in,5,2) = 'DO' then 'Penjualan'
					 when SUBSTR(a.no_stock_in,5,3) = 'ADS' then 'Koreksi Stock'
					 when SUBSTR(a.no_stock_in,5,3) = 'TRF' then 'Pindah Gudang'
			else '' end as notes,var_unit_terkecil, warehouse
			from i_stock_in a
			inner join mst_item b on b.id_item = a.id_item
			inner join mst_setunit c on c.id_unit = a.id_unit and c.id_item = a.id_item
			WHERE a.id_item = var_criteria and a.id_warehouse = warehouse
		union ALL
			select a.no_stock_out, a.date_trn,a.id_item,b.item_name,
			0,
			case when (a.qty * c.qty) is null then 0 else (a.qty * c.qty) end as kredit,
			sawal_periodeK + (a.qty * c.qty) as saldo, company as company,
			case when SUBSTR(a.no_stock_out,5,3) = 'REV' then 'Pembelian'
					 when SUBSTR(a.no_stock_out,5,3) = 'PRU' then 'Retur Pembelian'
					 when SUBSTR(a.no_stock_out,5,3) = 'SRU' then 'Retur Penjualan'
					 when SUBSTR(a.no_stock_out,5,2) = 'DO' then 'Penjualan'
					 when SUBSTR(a.no_stock_out,5,3) = 'ADS' then 'Koreksi Stock'
					 when SUBSTR(a.no_stock_out,5,3) = 'TRF' then 'Pindah Gudang'
			else '' end as notes,var_unit_terkecil, warehouse
			from i_stock_out a
			inner join mst_item b on b.id_item = a.id_item
			inner join mst_setunit c on c.id_unit = a.id_unit and c.id_item = a.id_item
			WHERE a.id_item = var_criteria and a.id_warehouse = warehouse
	) x order by x.date_trn asc;
	end if;

	COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_perubahan_hargabeli` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_perubahan_hargabeli`(in var int)
BEGIN
	DECLARE done INT DEFAULT FALSE;
	declare var_tanggal date; 
	declare var_id_item varchar(30);
	declare var_price double;
	declare var_id_supplier varchar(250);
	declare var_no_purchase varchar(120);
	declare price_bef double;
	declare var_curr varchar(60);
	DECLARE i integer;
	DECLARE cur1 CURSOR FOR select b.date_trn,a.id_item,a.price,b.id_supplier,b.no_purchase,a.id_curr from trn_purchase_det a
													inner join trn_purchase_head b on b.no_purchase = a.no_purchase order by date_trn asc;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

	drop temporary table if EXISTS lap_perubahan_hargabeli;
	create temporary table if not EXISTS lap_perubahan_hargabeli(
		id_item varchar(30),
		tanggal date,
		harga double,
		supplier varchar(250),
		no_purchase varchar(120),
		id_currency varchar(60)
	);

	delete from lap_perubahan_hargabeli;

	set i = 1;
	OPEN cur1;
  REPEAT
  FETCH cur1 INTO var_tanggal, var_id_item, var_price, var_id_supplier, var_no_purchase, var_curr;
  IF NOT done THEN

		
		if i = 1 THEN
				insert into lap_perubahan_hargabeli
				values (var_id_item,var_tanggal,var_price,var_id_supplier,var_no_purchase,var_curr);
		else 
				if price_bef <> var_price THEN
					insert into lap_perubahan_hargabeli
					values (var_id_item,var_tanggal,var_price,var_id_supplier,var_no_purchase,var_curr);
				end if;
		end if;
		set price_bef = var_price;

	END IF;
	set i=i+1;
	UNTIL done END REPEAT;
	CLOSE cur1;
	
select a.id_item,b.item_name,a.tanggal,a.harga,a.no_purchase,concat(case when c.first_name is null then '' else c.first_name end,' ',case when c.last_name is null then '' else c.last_name end) as supplier, a.supplier as id_supplier,
(select company_name from mst_company where flag_active = 1) as company_name,id_currency from lap_perubahan_hargabeli a
inner join mst_item b on b.id_item = a.id_item
inner join mst_supplier c on c.id_supplier = a.supplier order by a.tanggal;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_perubahan_modal` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_perubahan_modal`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN
declare comp_modal_awal text;
declare saldo_modal_awal double;
declare comp_modal_akhir text;
declare saldo_modal_akhir double;
declare saldo_pendapatan double;
declare saldo_biaya double;
declare comp_laba_rugi text;
declare comp_laba_rugi_accummulated text;
declare saldo_laba_rugi double;
declare saldo_laba_rugi_accumulated double;
declare comp_prive text;
declare saldo_prive double;
declare modal_awal_periode double;
declare var_include_prive integer;
declare var_account_accumulated_profit integer;
declare var_startbln_tahunlalu integer;
declare var_startth_tahunlalu integer;
declare var_starttgl_tahunlalu integer;
declare var_endbln_tahunlalu integer;
declare var_endth_tahunlalu integer;
declare var_endtgl_tahunlalu integer;
declare var_startbln_tahunlalu_string varchar(2);
declare var_startth_tahunlalu_string varchar(4);
declare var_starttgl_tahunlalu_string varchar(2);
declare var_startdate_tahunlalu date;
declare var_endbln_tahunlalu_string varchar(2);
declare var_endth_tahunlalu_string varchar(4);
declare var_endtgl_tahunlalu_string varchar(2);
declare var_enddate_tahunlalu date;


DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	create TEMPORARY TABLE IF NOT EXISTS lap_perubahan_modal(
		component text,
		group_component integer,
		nominal double
	);

	
	set comp_modal_awal = 'Ekuitas Awal';
	set comp_modal_akhir = 'Ekuitas Akhir';
	select profit_notes into comp_laba_rugi from i_project_name where project_default =1;
  set comp_prive = 'Prive';
	select case when notes is null then '' else notes	end as notes into comp_laba_rugi_accummulated from i_set_account_def where acc_parameter = 'acc_accummulated_profit';
	
	select case when sum(a.beg_balance) is null then 0 else sum(a.beg_balance) end into saldo_modal_awal from mst_account a 
	inner join i_set_account_def b on b.id_account = a.id_account
	where b.acc_parameter = 'acc_capital';

	select include_prive into var_include_prive from i_project_name where project_default =1;	
	
	
	set saldo_modal_awal = saldo_modal_awal;
	if date_filter = 1 then
		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into saldo_prive from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join i_set_account_def c on c.id_account = b.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where (x.date_trn between '1900-01-01' and var_end_date)
		and c.acc_parameter = 'acc_prive';
	elseif date_filter = 0 THEN
		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into saldo_prive from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join i_set_account_def c on c.id_account = b.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where c.acc_parameter = 'acc_prive';
	end if;
	if date_filter = 1 then
		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into saldo_laba_rugi_accumulated from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join i_set_account_def c on c.id_account = b.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where (x.date_trn between '1900-01-01' and var_end_date)
		and c.acc_parameter = 'acc_accummulated_profit';
	elseif date_filter = 0 THEN
		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into saldo_laba_rugi_accumulated from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join i_set_account_def c on c.id_account = b.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where c.acc_parameter = 'acc_accummulated_profit';
	end if;
	if date_filter = 1 then
		select case when sum(a.nominal) is null then 0 else abs(sum(a.nominal)) end into saldo_pendapatan from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where (x.date_trn between '1900-01-01' and var_end_date) and b.is_income = 1 and b.golongan = 4;
	elseif date_filter = 0 THEN
		select case when sum(a.nominal) is null then 0 else abs(sum(a.nominal)) end into saldo_pendapatan from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where b.is_income = 1 and b.golongan = 4;
	end if;
if date_filter = 1 then
		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into saldo_biaya from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where (x.date_trn between '1900-01-01' and var_end_date) and b.is_income = 1 and b.golongan in (5,6,7);
	elseif date_filter = 0 THEN
		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into saldo_biaya from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where b.is_income = 1 and b.golongan in (5,6,7);
	end if;

	set saldo_laba_rugi = saldo_pendapatan - saldo_biaya;
	set saldo_modal_akhir = saldo_modal_awal - saldo_prive + saldo_laba_rugi;
	
delete from lap_perubahan_modal;

insert into lap_perubahan_modal
select comp_modal_awal,1,saldo_modal_awal;

if var_include_prive = 1 then
	insert into lap_perubahan_modal
	select comp_prive,2,saldo_prive;
end if;

insert into lap_perubahan_modal
select comp_laba_rugi_accummulated,3,saldo_laba_rugi_accumulated;

insert into lap_perubahan_modal
select comp_laba_rugi,4,saldo_laba_rugi;

insert into lap_perubahan_modal
select comp_modal_akhir,5,saldo_modal_akhir;


set var_startbln_tahunlalu_string = cast(month(var_start_date) as unsigned);
set var_startth_tahunlalu_string = cast(year(var_start_date)-1 as unsigned);
set var_starttgl_tahunlalu_string = cast(day(var_start_date) as unsigned);
set var_startdate_tahunlalu = cast(concat(var_startth_tahunlalu_string,'-',var_startbln_tahunlalu_string,'-',var_starttgl_tahunlalu_string) as date);

set var_endbln_tahunlalu_string = cast(month(var_end_date) as unsigned);
set var_endth_tahunlalu_string = cast(year(var_end_date)-1 as unsigned);
set var_endtgl_tahunlalu_string = cast(day(var_end_date) as unsigned);
set var_enddate_tahunlalu = cast(concat(var_endth_tahunlalu_string,'-',var_endbln_tahunlalu_string,'-',var_endtgl_tahunlalu_string) as date);

call sp_rpt_perubahan_modal_tahunlalu(var_startdate_tahunlalu,var_enddate_tahunlalu,date_filter);

select a.component,a.group_component,a.nominal,b.nominal as nominal_th_lalu,(select company_name from mst_company where flag_active = 1) as company_name,
(SELECT ID_CURRENCY FROM mst_currency where flag_default = 1) as currency,
(
		SELECT
			`mst_company`.`address`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_address`,
	(
		SELECT
			`mst_company`.`city`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_city`, (SELECT case when header_text is null then '' else header_text end as header_text from i_project_name where project_default =1) as header_text 
 from lap_perubahan_modal a inner join lap_perubahan_modal_tahunlalu b on b.group_component = a.group_component;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_perubahan_modal_tahunlalu` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_rpt_perubahan_modal_tahunlalu`(in var_start_date date, in var_end_date date, in date_filter integer)
BEGIN
declare comp_modal_awal text;
declare saldo_modal_awal double;
declare comp_modal_akhir text;
declare saldo_modal_akhir double;
declare saldo_pendapatan double;
declare saldo_biaya double;
declare comp_laba_rugi text;
declare comp_laba_rugi_accummulated text;
declare saldo_laba_rugi double;
declare saldo_laba_rugi_accumulated double;
declare comp_prive text;
declare saldo_prive double;
declare modal_awal_periode double;
declare var_include_prive integer;
declare var_account_accumulated_profit integer;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	create TEMPORARY TABLE IF NOT EXISTS lap_perubahan_modal_tahunlalu(
		component text,
		group_component integer,
		nominal double
	);

	
	set comp_modal_awal = 'Ekuitas Awal';
	set comp_modal_akhir = 'Ekuitas Akhir';
	select profit_notes into comp_laba_rugi from i_project_name where project_default =1;
  set comp_prive = 'Prive';
	select case when notes is null then '' else notes	end as notes into comp_laba_rugi_accummulated from i_set_account_def where acc_parameter = 'acc_accummulated_profit';
	
	select case when sum(a.beg_balance) is null then 0 else sum(a.beg_balance) end into saldo_modal_awal from mst_account a 
	inner join i_set_account_def b on b.id_account = a.id_account
	where b.acc_parameter = 'acc_capital';

	select include_prive into var_include_prive from i_project_name where project_default =1;	
	
	
	if date_filter = 1 then

	
		set saldo_modal_awal = saldo_modal_awal;

		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into saldo_prive from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join i_set_account_def c on c.id_account = b.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where (x.date_trn between '1900-01-01' and var_end_date)
		and c.acc_parameter = 'acc_prive';

		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into saldo_laba_rugi_accumulated from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join i_set_account_def c on c.id_account = b.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where (x.date_trn between '1900-01-01' and var_end_date)
		and c.acc_parameter = 'acc_accummulated_profit';

		select case when sum(a.nominal) is null then 0 else abs(sum(a.nominal)) end into saldo_pendapatan from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where (x.date_trn between '1900-01-01' and var_end_date) and b.is_income = 1 and b.golongan = 4;

		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into saldo_biaya from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where (x.date_trn between '1900-01-01' and var_end_date) and b.is_income = 1 and b.golongan in (5,6,7);

elseif date_filter = 0 then

		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into saldo_prive from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join i_set_account_def c on c.id_account = b.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where (x.date_trn < var_end_date)
		and c.acc_parameter = 'acc_prive';

		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into saldo_laba_rugi_accumulated from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join i_set_account_def c on c.id_account = b.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where (x.date_trn < var_end_date)
		and c.acc_parameter = 'acc_accummulated_profit';

		select case when sum(a.nominal) is null then 0 else abs(sum(a.nominal)) end into saldo_pendapatan from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where (x.date_trn < var_end_date) and b.is_income = 1 and b.golongan = 4;

		select case when sum(a.nominal) is null then 0 else sum(a.nominal) end into saldo_biaya from trn_ledger_det a
		inner join mst_account b on b.id_account = a.id_account
		inner join trn_ledger_head x on x.no_ledger = a.no_ledger
		where (x.date_trn < var_end_date) and b.is_income = 1 and b.golongan in (5,6,7);

end if;

	set saldo_laba_rugi = saldo_pendapatan - saldo_biaya;
	set saldo_modal_akhir = saldo_modal_awal - saldo_prive + saldo_laba_rugi;
	
delete from lap_perubahan_modal_tahunlalu;

insert into lap_perubahan_modal_tahunlalu
select comp_modal_awal,1,saldo_modal_awal;

if var_include_prive = 1 then
	insert into lap_perubahan_modal_tahunlalu
	select comp_prive,2,saldo_prive;
end if;

insert into lap_perubahan_modal_tahunlalu
select comp_laba_rugi_accummulated,3,saldo_laba_rugi_accumulated;

insert into lap_perubahan_modal_tahunlalu
select comp_laba_rugi,4,saldo_laba_rugi;

insert into lap_perubahan_modal_tahunlalu
select comp_modal_akhir,5,saldo_modal_akhir;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_rangking_pelanggan` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_rangking_pelanggan`(in date_filter integer, in startdate date, in enddate date)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	create temporary table if not exists lap_rangking_pelanggan(
		id_customer varchar(60),
		nama_customer varchar(250),
		address text,
		sales varchar(120),
		tanggal date
	);

	delete from lap_rangking_pelanggan;

	if date_filter = 1 then
		insert into lap_rangking_pelanggan
		select a.id_customer as ID, concat(case when a.first_name is null then '' else a.first_name end,' ',case when a.last_name is null then '' else a.last_name end) as Nama, a.address as Alamat,
		b.no_purchase as Sales, b.date_trn as Tanggal from mst_customer a inner join 
		trn_payoff_so_head b on b.id_supplier = a.id_customer
		where b.date_trn between startdate and enddate;
	elseif date_filter = 0 THEN
		insert into lap_rangking_pelanggan
		select a.id_customer as ID, concat(case when a.first_name is null then '' else a.first_name end,' ',case when a.last_name is null then '' else a.last_name end) as Nama, a.address as Alamat,
		b.no_purchase as Sales, b.date_trn as Tanggal from mst_customer a inner join 
		trn_payoff_so_head b on b.id_supplier = a.id_customer;
	end if;

select a.id_customer as ID, concat(case when a.first_name is null then '' else a.first_name end,' ',case when a.last_name is null then '' else a.last_name end) as Nama, a.address as Alamat,
count(b.sales) as Sales, (select company_name from mst_company where flag_active = 1) as company_name  from mst_customer a inner join 
lap_rangking_pelanggan b on b.id_customer = a.id_customer
group by a.id_customer
order by count(b.sales) desc;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_rangking_supplier` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_rangking_supplier`(in date_filter integer, in startdate date, in enddate date)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	create temporary table if not exists lap_rangking_supplier(
		id_supplier varchar(60),
		nama_supplier varchar(250),
		address text,
		purchase varchar(120),
		tanggal date
	);

	delete from lap_rangking_supplier;

	if date_filter = 1 then
		insert into lap_rangking_supplier
		select a.id_supplier as ID, concat(case when a.first_name is null then '' else a.first_name end,' ',case when a.last_name is null then '' else a.last_name end) as Nama, a.address as Alamat,
		b.no_purchase as purchase, b.date_trn as Tanggal from mst_supplier a inner join 
		trn_payoff_po_head b on b.id_supplier = a.id_supplier
		where b.date_trn between startdate and enddate;
	elseif date_filter = 0 THEN
		insert into lap_rangking_supplier
		select a.id_supplier as ID, concat(case when a.first_name is null then '' else a.first_name end,' ',case when a.last_name is null then '' else a.last_name end) as Nama, a.address as Alamat,
		b.no_purchase as purchase, b.date_trn as Tanggal from mst_supplier a inner join 
		trn_payoff_po_head b on b.id_supplier = a.id_supplier;
	end if;

select a.id_supplier as ID, concat(case when a.first_name is null then '' else a.first_name end,' ',case when a.last_name is null then '' else a.last_name end) as Nama, a.address as Alamat,
count(b.purchase) as purchase, (select company_name from mst_company where flag_active = 1) as company_name  from mst_supplier a inner join 
lap_rangking_supplier b on b.id_supplier = a.id_supplier
group by a.id_supplier
order by count(b.purchase) desc;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_rekapomzet_pelanggan` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_rekapomzet_pelanggan`(in date_filter integer, in startdate date, in enddate date)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	create temporary table if not exists lap_rekapomzet_pelanggan(
		id_customer varchar(60),
		nama_customer varchar(250),
		address text,
		sales double,
		tanggal date,
    id_currency varchar(60)
	);

	delete from lap_rekapomzet_pelanggan;

	if date_filter = 1 then
		insert into lap_rekapomzet_pelanggan
		select a.id_customer as ID, concat(case when a.first_name is null then '' else a.first_name end,' ',case when a.last_name is null then '' else a.last_name end) as Nama, a.address as Alamat,
		b.subtotal as Sales, b.date_trn as Tanggal,x.id_curr  from mst_customer a inner join 
		trn_sales_head b on b.id_customer = a.id_customer inner join (select distinct no_sales,id_curr from trn_sales_det) x on x.no_sales = b.no_sales
		where b.date_trn between startdate and enddate;
	elseif date_filter = 0 THEN
		insert into lap_rekapomzet_pelanggan
		select a.id_customer as ID, concat(case when a.first_name is null then '' else a.first_name end,' ',case when a.last_name is null then '' else a.last_name end) as Nama, a.address as Alamat,
		b.subtotal as Sales, b.date_trn as Tanggal,x.id_curr from mst_customer a inner join 
		trn_sales_head b on b.id_customer = a.id_customer inner join (select distinct no_sales,id_curr from trn_sales_det) x on x.no_sales = b.no_sales;
	end if;

	select id_customer, nama_customer, address, sum(sales) as nominal_penjualan, (select company_name from mst_company where flag_active = 1) as company_name, id_currency 
  from lap_rekapomzet_pelanggan 
	group by id_customer, nama_customer, address, id_currency
	order by sum(sales) desc		
	;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_rekappemb_bln_supp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_rekappemb_bln_supp`(in var_year integer)
BEGIN

declare convertmonth integer;
declare jml_bln,i integer;
declare jml_jan,jml_feb,jml_mar,jml_apr,jml_mei,jml_juni,jml_juli,jml_agust,jml_sept,jml_okt,jml_nov,jml_des double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	drop temporary table if EXISTS lap_rekapbeli_bln_supp;
	create temporary table if not EXISTS lap_rekapbeli_bln_supp(
		id_supplier varchar(30),
		nama_supplier varchar(250),
		Jan double,
		Feb double,
		Mar double,
		Apr double,
		May double,
		June double,
		July double,
		August double,
		Sept double,
		Oct double,
		Nov double,
		Des double,
		Tahun double,
		curr varchar(60)
	);
	
delete from lap_rekapbeli_bln_supp;
insert into lap_rekapbeli_bln_supp (id_supplier, nama_supplier)
select distinct a.id_supplier, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama from trn_payoff_po_head a 
inner join mst_supplier b on b.id_supplier = a.id_supplier;
 
UPDATE lap_rekapbeli_bln_supp 
				set Tahun = var_year;

	
				UPDATE lap_rekapbeli_bln_supp a inner join 
				(select sum(total) as total,id_supplier, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_po_head a inner join trn_payoff_po_det z on z.no_purchase = a.no_purchase where month(date_trn) = 1 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_supplier, id_curr
				 from trn_purchasedirect_head a inner join trn_purchasedirect_det z on z.no_purchase = a.no_purchase where month(date_trn) = 1 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_supplier = a.id_supplier
				 set Jan = b.total, curr=b.id_curr;

				UPDATE lap_rekapbeli_bln_supp a inner join 
				(select sum(total) as total,id_supplier, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_po_head a inner join trn_payoff_po_det z on z.no_purchase = a.no_purchase where month(date_trn) = 2 and year(date_trn) = var_year
				union all
select distinct case when total is null then 0 else total end as total, id_supplier, id_curr
				 from trn_purchasedirect_head a inner join trn_purchasedirect_det z on z.no_purchase = a.no_purchase where month(date_trn) = 2 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_supplier = a.id_supplier
				 set Feb = b.total, curr=b.id_curr;

				UPDATE lap_rekapbeli_bln_supp a inner join 
				(select sum(total) as total,id_supplier, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_po_head a inner join trn_payoff_po_det z on z.no_purchase = a.no_purchase where month(date_trn) = 3 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_supplier, id_curr
				 from trn_purchasedirect_head a inner join trn_purchasedirect_det z on z.no_purchase = a.no_purchase where month(date_trn) = 3 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_supplier = a.id_supplier
				 set Mar = b.total, curr=b.id_curr;

				UPDATE lap_rekapbeli_bln_supp a inner join 
				(select sum(total) as total,id_supplier, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_po_head a inner join trn_payoff_po_det z on z.no_purchase = a.no_purchase where month(date_trn) = 4 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_supplier, id_curr
				 from trn_purchasedirect_head a inner join trn_purchasedirect_det z on z.no_purchase = a.no_purchase where month(date_trn) = 4 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_supplier = a.id_supplier
				 set Apr = b.total, curr=b.id_curr;

				UPDATE lap_rekapbeli_bln_supp a inner join 
				(select sum(total) as total,id_supplier, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_po_head a inner join trn_payoff_po_det z on z.no_purchase = a.no_purchase where month(date_trn) = 5 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_supplier, id_curr
				 from trn_purchasedirect_head a inner join trn_purchasedirect_det z on z.no_purchase = a.no_purchase where month(date_trn) = 5 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_supplier = a.id_supplier
				 set May = b.total, curr=b.id_curr;

				UPDATE lap_rekapbeli_bln_supp a inner join 
				(select sum(total) as total,id_supplier, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_po_head a inner join trn_payoff_po_det z on z.no_purchase = a.no_purchase where month(date_trn) = 6 and year(date_trn) = var_year
				union all
			select distinct case when total is null then 0 else total end as total, id_supplier, id_curr
				 from trn_purchasedirect_head a inner join trn_purchasedirect_det z on z.no_purchase = a.no_purchase where month(date_trn) = 6 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_supplier = a.id_supplier
				 set June = b.total, curr=b.id_curr;

				UPDATE lap_rekapbeli_bln_supp a inner join 
				(select sum(total) as total,id_supplier, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_po_head a inner join trn_payoff_po_det z on z.no_purchase = a.no_purchase where month(date_trn) = 7 and year(date_trn) = var_year
				union all
select distinct case when total is null then 0 else total end as total, id_supplier, id_curr
				 from trn_purchasedirect_head a inner join trn_purchasedirect_det z on z.no_purchase = a.no_purchase where month(date_trn) = 7 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_supplier = a.id_supplier
				 set July = b.total, curr=b.id_curr;

				UPDATE lap_rekapbeli_bln_supp a inner join 
				(select sum(total) as total,id_supplier, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_po_head a inner join trn_payoff_po_det z on z.no_purchase = a.no_purchase where month(date_trn) = 8 and year(date_trn) = var_year
				union all
			select distinct case when total is null then 0 else total end as total, id_supplier, id_curr
				 from trn_purchasedirect_head a inner join trn_purchasedirect_det z on z.no_purchase = a.no_purchase where month(date_trn) = 8 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_supplier = a.id_supplier
				 set August = b.total, curr=b.id_curr;

				UPDATE lap_rekapbeli_bln_supp a inner join 
				(select sum(total) as total,id_supplier, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_po_head a inner join trn_payoff_po_det z on z.no_purchase = a.no_purchase where month(date_trn) = 9 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_supplier, id_curr
				 from trn_purchasedirect_head a inner join trn_purchasedirect_det z on z.no_purchase = a.no_purchase where month(date_trn) = 9 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_supplier = a.id_supplier
				 set Sept= b.total, curr=b.id_curr;

				UPDATE lap_rekapbeli_bln_supp a inner join 
				(select sum(total) as total,id_supplier, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_po_head a inner join trn_payoff_po_det z on z.no_purchase = a.no_purchase where month(date_trn) = 10 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_supplier, id_curr
				 from trn_purchasedirect_head a inner join trn_purchasedirect_det z on z.no_purchase = a.no_purchase where month(date_trn) = 10 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_supplier = a.id_supplier
				 set Oct = b.total, curr=b.id_curr;

				UPDATE lap_rekapbeli_bln_supp a inner join 
				(select sum(total) as total,id_supplier, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_po_head a inner join trn_payoff_po_det z on z.no_purchase = a.no_purchase where month(date_trn) = 11 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_supplier, id_curr
				 from trn_purchasedirect_head a inner join trn_purchasedirect_det z on z.no_purchase = a.no_purchase where month(date_trn) = 11 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_supplier = a.id_supplier
				 set Nov = b.total, curr=b.id_curr;

				UPDATE lap_rekapbeli_bln_supp a inner join 
				(select sum(total) as total,id_supplier, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_po_head a inner join trn_payoff_po_det z on z.no_purchase = a.no_purchase where month(date_trn) = 12 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_supplier, id_curr
				 from trn_purchasedirect_head a inner join trn_purchasedirect_det z on z.no_purchase = a.no_purchase where month(date_trn) = 12 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_supplier = a.id_supplier
				 set Des = b.total, curr=b.id_curr;
	
	call sp_rpt_rekappemb_bln_supp_init0;

	
	select *, (select company_name from mst_company where flag_active = 1) as company_name from lap_rekapbeli_bln_supp;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_rekappemb_bln_supp_init0` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_rekappemb_bln_supp_init0`()
BEGIN
	DECLARE done INT DEFAULT FALSE;
	declare var_id_supplier varchar(120);
	DECLARE cur1 CURSOR FOR select id_supplier from lap_rekapbeli_bln_supp;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

	OPEN cur1;
  REPEAT
  FETCH cur1 INTO var_id_supplier;
  IF NOT done THEN

		update lap_rekapbeli_bln_supp
			set Jan = case when Jan is null then 0 else Jan end, 
					Feb = case when Feb is null then 0 else Feb end,
					Mar = case when Mar is null then 0 else Mar end,
					Apr = case when Apr is null then 0 else Apr end,
					May = case when May is null then 0 else May end,
					June = case when June is null then 0 else June end,
					July = case when July is null then 0 else July end,
					August = case when August is null then 0 else August end,
					Sept = case when Sept is null then 0 else Sept end,
					Oct = case when Oct is null then 0 else Oct end,
					Nov = case when Nov is null then 0 else Nov end,
					Des = case when Des is null then 0 else Des end
		where id_supplier = var_id_supplier;

	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_rekappenj_bln_cust` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_rekappenj_bln_cust`(in var_year integer)
BEGIN

declare convertmonth integer;
declare jml_bln,i integer;
declare jml_jan,jml_feb,jml_mar,jml_apr,jml_mei,jml_juni,jml_juli,jml_agust,jml_sept,jml_okt,jml_nov,jml_des double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	drop temporary table if EXISTS lap_rekapjual_bln_cust;
	create temporary table if not EXISTS lap_rekapjual_bln_cust(
		id_customer varchar(30),
		nama_customer varchar(250),
		Jan double,
		Feb double,
		Mar double,
		Apr double,
		May double,
		June double,
		July double,
		August double,
		Sept double,
		Oct double,
		Nov double,
		Des double,
		Tahun double,
    curr varchar(60)
	);
	
delete from lap_rekapjual_bln_cust;
insert into lap_rekapjual_bln_cust (id_customer, nama_customer)
select distinct a.* from (
select a.id_supplier as id_customer, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama from trn_payoff_so_head a 
inner join mst_customer b on b.id_customer = a.id_supplier
union ALL
select case when b.id_customer is null then '' else a.id_customer end as id_customer, case when b.id_customer is null then a.customer else concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) end as nama from trn_cashier_head a 
LEFT join mst_customer b on b.id_customer = a.id_customer) a;

 
UPDATE lap_rekapjual_bln_cust 
				set Tahun = var_year;

	
				UPDATE lap_rekapjual_bln_cust a inner join 
				(select sum(total) as total,id_supplier as id_customer, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_so_head a inner join trn_payoff_so_det z on z.no_purchase = a.no_purchase where month(date_trn) = 1 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_customer, id_curr
				 from trn_cashier_head a inner join trn_cashier_det z on z.no_sales = a.no_sales where month(date_trn) = 1 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_customer = a.id_customer
				 set Jan = b.total, curr=b.id_curr;


				UPDATE lap_rekapjual_bln_cust a inner join 
				(select sum(total) as total,id_supplier as id_customer, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_so_head a inner join trn_payoff_so_det z on z.no_purchase = a.no_purchase where month(date_trn) = 2 and year(date_trn) = var_year
				union all
select distinct case when total is null then 0 else total end as total, id_customer, id_curr
				 from trn_cashier_head a inner join trn_cashier_det z on z.no_sales = a.no_sales where month(date_trn) = 2 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_customer = a.id_customer
				 set Feb = b.total, curr=b.id_curr;


				UPDATE lap_rekapjual_bln_cust a inner join 
				(select sum(total) as total,id_supplier as id_customer, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_so_head a inner join trn_payoff_so_det z on z.no_purchase = a.no_purchase where month(date_trn) = 3 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_customer, id_curr
				 from trn_cashier_head a inner join trn_cashier_det z on z.no_sales = a.no_sales where month(date_trn) = 3 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_customer = a.id_customer
				 set Mar = b.total, curr=b.id_curr;


				UPDATE lap_rekapjual_bln_cust a inner join 
				(select sum(total) as total,id_supplier as id_customer, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_so_head a inner join trn_payoff_so_det z on z.no_purchase = a.no_purchase where month(date_trn) = 4 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_customer, id_curr
				 from trn_cashier_head a inner join trn_cashier_det z on z.no_sales = a.no_sales where month(date_trn) = 4 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_customer = a.id_customer
				 set Apr = b.total, curr=b.id_curr;


				UPDATE lap_rekapjual_bln_cust a inner join 
				(select sum(total) as total,id_supplier as id_customer, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_so_head a inner join trn_payoff_so_det z on z.no_purchase = a.no_purchase where month(date_trn) = 5 and year(date_trn) = var_year
				union all
select distinct case when total is null then 0 else total end as total, id_customer, id_curr
				 from trn_cashier_head a inner join trn_cashier_det z on z.no_sales = a.no_sales where month(date_trn) = 5 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_customer = a.id_customer
				 set May = b.total, curr=b.id_curr;


				UPDATE lap_rekapjual_bln_cust a inner join 
				(select sum(total) as total,id_supplier as id_customer, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_so_head a inner join trn_payoff_so_det z on z.no_purchase = a.no_purchase where month(date_trn) = 6 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_customer, id_curr
				 from trn_cashier_head a inner join trn_cashier_det z on z.no_sales = a.no_sales where month(date_trn) = 6 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_customer= a.id_customer
				 set June = b.total, curr=b.id_curr;


				UPDATE lap_rekapjual_bln_cust a inner join 
				(select sum(total) as total,id_supplier as id_customer, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_so_head a inner join trn_payoff_so_det z on z.no_purchase = a.no_purchase where month(date_trn) = 7 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_customer, id_curr
				 from trn_cashier_head a inner join trn_cashier_det z on z.no_sales = a.no_sales where month(date_trn) = 7 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_customer = a.id_customer
				 set July = b.total, curr=b.id_curr;


				UPDATE lap_rekapjual_bln_cust a inner join 
				(select sum(total) as total,id_supplier as id_customer, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_so_head a inner join trn_payoff_so_det z on z.no_purchase = a.no_purchase where month(date_trn) = 8 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_customer, id_curr
				 from trn_cashier_head a inner join trn_cashier_det z on z.no_sales = a.no_sales where month(date_trn) = 8 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_customer = a.id_customer
				 set August = b.total, curr=b.id_curr;


				UPDATE lap_rekapjual_bln_cust a inner join 
								(select sum(total) as total,id_supplier as id_customer, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_so_head a inner join trn_payoff_so_det z on z.no_purchase = a.no_purchase where month(date_trn) = 9 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_customer, id_curr
				 from trn_cashier_head a inner join trn_cashier_det z on z.no_sales = a.no_sales where month(date_trn) = 9 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_customer = a.id_customer
				 set Sept = b.total, curr=b.id_curr;


				UPDATE lap_rekapjual_bln_cust a inner join 
				(select sum(total) as total,id_supplier as id_customer, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_so_head a inner join trn_payoff_so_det z on z.no_purchase = a.no_purchase where month(date_trn) = 10 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_customer, id_curr
				 from trn_cashier_head a inner join trn_cashier_det z on z.no_sales = a.no_sales where month(date_trn) = 10 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_customer = a.id_customer
				 set Oct = b.total, curr=b.id_curr;


				UPDATE lap_rekapjual_bln_cust a inner join 
				(select sum(total) as total,id_supplier as id_customer, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_so_head a inner join trn_payoff_so_det z on z.no_purchase = a.no_purchase where month(date_trn) = 11 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_customer, id_curr
				 from trn_cashier_head a inner join trn_cashier_det z on z.no_sales = a.no_sales where month(date_trn) = 11 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_customer = a.id_customer
				 set Nov = b.total, curr=b.id_curr;


				UPDATE lap_rekapjual_bln_cust a inner join 
				(select sum(total) as total,id_supplier as id_customer, id_curr from (select distinct case when (total + um) is null then 0 else (total + um) end as total, id_supplier, id_curr
				 from trn_payoff_po_head a inner join trn_payoff_po_det z on z.no_purchase = a.no_purchase where month(date_trn) = 12 and year(date_trn) = var_year
				union all
				select distinct case when total is null then 0 else total end as total, id_customer, id_curr
				 from trn_cashier_head a inner join trn_cashier_det z on z.no_sales = a.no_sales where month(date_trn) = 12 and year(date_trn) = var_year
				 ) b group by id_supplier,id_curr) b on b.id_customer = a.id_customer
				 set Des = b.total, curr=b.id_curr;

	
	call sp_rpt_rekappenj_bln_cust_init0;

	
	select *, (select company_name from mst_company where flag_active = 1) as company_name from lap_rekapjual_bln_cust;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_rekappenj_bln_cust_grafik` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_rekappenj_bln_cust_grafik`(in var_year integer)
BEGIN

declare convertmonth integer;
declare jml_bln,i integer;
declare jml_jan,jml_feb,jml_mar,jml_apr,jml_mei,jml_juni,jml_juli,jml_agust,jml_sept,jml_okt,jml_nov,jml_des double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	drop temporary table if EXISTS lap_rekapjual_bln_cust;
	create temporary table if not EXISTS lap_rekapjual_bln_cust(
		id_customer varchar(30),
		nama_customer varchar(250),
		Jan double,
		Feb double,
		Mar double,
		Apr double,
		May double,
		June double,
		July double,
		August double,
		Sept double,
		Oct double,
		Nov double,
		Des double,
		Tahun double
	);
	
delete from lap_rekapjual_bln_cust;
insert into lap_rekapjual_bln_cust (id_customer, nama_customer)
select distinct a.id_customer, concat(case when b.first_name is null then '' else b.first_name end,' ',case when b.last_name is null then '' else b.last_name end) as nama from trn_sales_head a 
inner join mst_customer b on b.id_customer = a.id_customer;
 
UPDATE lap_rekapjual_bln_cust 
				set Tahun = var_year;

	
				UPDATE lap_rekapjual_bln_cust a inner join 
				(select case when sum(total) is null then 0 else sum(total) end as total, id_customer,kurs
				 from trn_sales_head where month(date_trn) = 1 and year(date_trn) = var_year
				 group by id_customer,kurs) b on b.id_customer = a.id_customer
				 set Jan = b.total * b.kurs;

				UPDATE lap_rekapjual_bln_cust a inner join 
				(select case when sum(total) is null then 0 else sum(total) end as total, id_customer,kurs
				 from trn_sales_head where month(date_trn) = 2 and year(date_trn) = var_year
				 group by id_customer,kurs) b on b.id_customer = a.id_customer
				 set Feb = b.total* b.kurs;

				UPDATE lap_rekapjual_bln_cust a inner join 
				(select case when sum(total) is null then 0 else sum(total) end as total, id_customer,kurs
				 from trn_sales_head where month(date_trn) = 3 and year(date_trn) = var_year
				 group by id_customer,kurs) b on b.id_customer = a.id_customer
				 set Mar = b.total* b.kurs;

				UPDATE lap_rekapjual_bln_cust a inner join 
				(select case when sum(total) is null then 0 else sum(total) end as total, id_customer,kurs
				 from trn_sales_head where month(date_trn) = 4 and year(date_trn) = var_year
				 group by id_customer,kurs) b on b.id_customer = a.id_customer
				 set Apr = b.total* b.kurs;

				UPDATE lap_rekapjual_bln_cust a inner join 
				(select case when sum(total) is null then 0 else sum(total) end as total, id_customer,kurs
				 from trn_sales_head where month(date_trn) = 5 and year(date_trn) = var_year
				 group by id_customer,kurs) b on b.id_customer = a.id_customer
				 set May = b.total* b.kurs;

				UPDATE lap_rekapjual_bln_cust a inner join 
				(select case when sum(total) is null then 0 else sum(total) end as total, id_customer,kurs
				 from trn_sales_head where month(date_trn) = 6 and year(date_trn) = var_year
				 group by id_customer,kurs) b on b.id_customer = a.id_customer
				 set June = b.total* b.kurs;

				UPDATE lap_rekapjual_bln_cust a inner join 
				(select case when sum(total) is null then 0 else sum(total) end as total, id_customer,kurs
				 from trn_sales_head where month(date_trn) = 7 and year(date_trn) = var_year
				 group by id_customer,kurs) b on b.id_customer = a.id_customer
				 set July = b.total* b.kurs;

				UPDATE lap_rekapjual_bln_cust a inner join 
				(select case when sum(total) is null then 0 else sum(total) end as total, id_customer,kurs
				 from trn_sales_head where month(date_trn) = 8 and year(date_trn) = var_year
				 group by id_customer,kurs) b on b.id_customer = a.id_customer
				 set August = b.total* b.kurs;

				UPDATE lap_rekapjual_bln_cust a inner join 
				(select case when sum(total) is null then 0 else sum(total) end as total, id_customer,kurs
				 from trn_sales_head where month(date_trn) = 9 and year(date_trn) = var_year
				 group by id_customer,kurs) b on b.id_customer = a.id_customer
				 set Sept = b.total* b.kurs;

				UPDATE lap_rekapjual_bln_cust a inner join 
				(select case when sum(total) is null then 0 else sum(total) end as total, id_customer,kurs
				 from trn_sales_head where month(date_trn) = 10 and year(date_trn) = var_year
				 group by id_customer,kurs) b on b.id_customer = a.id_customer
				 set Oct = b.total* b.kurs;

				UPDATE lap_rekapjual_bln_cust a inner join 
				(select case when sum(total) is null then 0 else sum(total) end as total, id_customer,kurs
				 from trn_sales_head where month(date_trn) = 11 and year(date_trn) = var_year
				 group by id_customer,kurs) b on b.id_customer = a.id_customer
				 set Nov = b.total* b.kurs;

				UPDATE lap_rekapjual_bln_cust a inner join 
				(select case when sum(total) is null then 0 else sum(total) end as total, id_customer,kurs
				 from trn_sales_head where month(date_trn) = 12 and year(date_trn) = var_year
				 group by id_customer,kurs) b on b.id_customer = a.id_customer
				 set Des = b.total* b.kurs;
	
	call sp_rpt_rekappenj_bln_cust_init0;

	
	select sum(jan) as jan,
	sum(feb) as feb,
	sum(mar) as mar,
	sum(apr) as apr,
	sum(may) as may,
	sum(june) as june,
	sum(july) as july,
	sum(august) as august,
	sum(sept) as sept,
	sum(oct) as oct,
	sum(nov) as nov,
	sum(des) as des from lap_rekapjual_bln_cust;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_rekappenj_bln_cust_init0` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_rekappenj_bln_cust_init0`()
BEGIN
	DECLARE done INT DEFAULT FALSE;
	declare var_id_customer varchar(120);
	DECLARE cur1 CURSOR FOR select id_customer from lap_rekapjual_bln_cust;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

	OPEN cur1;
  REPEAT
  FETCH cur1 INTO var_id_customer;
  IF NOT done THEN

		update lap_rekapjual_bln_cust
			set Jan = case when Jan is null then 0 else Jan end, 
					Feb = case when Feb is null then 0 else Feb end,
					Mar = case when Mar is null then 0 else Mar end,
					Apr = case when Apr is null then 0 else Apr end,
					May = case when May is null then 0 else May end,
					June = case when June is null then 0 else June end,
					July = case when July is null then 0 else July end,
					August = case when August is null then 0 else August end,
					Sept = case when Sept is null then 0 else Sept end,
					Oct = case when Oct is null then 0 else Oct end,
					Nov = case when Nov is null then 0 else Nov end,
					Des = case when Des is null then 0 else Des end
		where id_customer = var_id_customer;

	END IF;
	UNTIL done END REPEAT;
	CLOSE cur1;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_stock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_stock`(in var_criteria varchar(120), in var_start_date date, in var_end_date date)
BEGIN

declare stock_awal integer;
declare stock_in_bef_period integer;
declare stock_out_bef_period integer;
declare stock_bef_period integer;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

create table if not EXISTS temp_mutasi_stock (
	nobukti varchar(120), 
	date_trn date, 
	id_item varchar(60), 
	item_name varchar(250), 
	qty_in integer, 
	qty_out integer,
	notes text
);

select case when sum(balance) is null then 0 else sum(balance) end as balance into stock_awal from i_item_beg_balance where id_item = var_criteria;
select case when sum(qty) is null then 0 else sum(qty) end as qty into stock_in_bef_period from i_stock_in where id_item = var_criteria
and date_trn < var_start_date;
select case when sum(qty) is null then 0 else sum(qty) end as qty into stock_out_bef_period from i_stock_out where id_item = var_criteria
and date_trn < var_start_date;

set stock_bef_period = stock_awal + stock_in_bef_period-stock_out_bef_period;
if stock_bef_period is null THEN
	set stock_bef_period = 0;
end if;

delete from temp_mutasi_stock;
insert into temp_mutasi_stock
select * from (
	select 'Saldo Awal' as nobukti, 
		var_start_date as date_trn,
		var_criteria as id_item,
		"" as item_name,
		stock_bef_period as qty_in,
		0 as qty_out,
		"" as notes
	union all
	select a.no_stock_in, 
		a.date_trn, 
		a.id_item, 
		b.item_name, 
		a.qty qty_in, 
		0 qty_out,
		"Pembelian" as notes
	from i_stock_in a
	inner join mst_item b on b.id_item = a.id_item
	union ALL
	select a.no_stock_out, 
		a.date_trn, 
		a.id_item, 
		b.item_name, 
		0 qty_in, 
		a.qty qty_out,
		"Penjualan" as notes
	from i_stock_out a
	inner join mst_item b on b.id_item = a.id_item) x
where x.id_item = var_criteria
and x.date_trn between var_start_date and var_end_date
order by x.date_trn;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_rpt_stock_summary` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_rpt_stock_summary`(in var_criteria varchar(120), in var_start_date date, in var_end_date date)
BEGIN

declare stock_awal integer;
declare stock_in_bef_period integer;
declare stock_out_bef_period integer;
declare stock_bef_period integer;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

create table if not EXISTS temp_mutasi_stock (
	nobukti varchar(120), 
	date_trn date, 
	id_item varchar(60), 
	item_name varchar(250), 
	qty_in integer, 
	qty_out integer,
	notes text
);

select case when sum(balance) is null then 0 else sum(balance) end as balance into stock_awal from i_item_beg_balance where id_item = var_criteria;
select case when sum(qty) is null then 0 else sum(qty) end as qty into stock_in_bef_period from i_stock_in where id_item = var_criteria
and date_trn < var_start_date;
select case when sum(qty) is null then 0 else sum(qty) end as qty into stock_out_bef_period from i_stock_out where id_item = var_criteria
and date_trn < var_start_date;

set stock_bef_period = stock_awal + stock_in_bef_period-stock_out_bef_period;
if stock_bef_period is null THEN
	set stock_bef_period = 0;
end if;

delete from temp_mutasi_stock;
insert into temp_mutasi_stock
select * from (
	select 'Saldo Awal' as nobukti, 
		var_start_date as date_trn,
		var_criteria as id_item,
		"" as item_name,
		stock_bef_period as qty_in,
		0 as qty_out,
		"" as notes
	union all
	select a.no_stock_in, 
		a.date_trn, 
		a.id_item, 
		b.item_name, 
		a.qty qty_in, 
		0 qty_out,
		"Pembelian" as notes
	from i_stock_in a
	inner join mst_item b on b.id_item = a.id_item
	union ALL
	select a.no_stock_out, 
		a.date_trn, 
		a.id_item, 
		b.item_name, 
		0 qty_in, 
		a.qty qty_out,
		"Penjualan" as notes
	from i_stock_out a
	inner join mst_item b on b.id_item = a.id_item) x
where x.id_item = var_criteria
and x.date_trn between var_start_date and var_end_date
order by x.date_trn;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_sales` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_sales`(in var_no_sales varchar(30), in var_date_trn date, in var_no_sales_order varchar(30), in var_id_customer varchar(30), in var_payment_method integer, in var_subtotal double, in var_discount double, in var_tax double, in var_total double, in var_notes text, in var_created_user varchar(30), in var_created_date date, in var_modified_user varchar(30), in var_modified_date date, in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in var_qty integer, in var_id_unit varchar(25), in var_price double, in var_nominal double,  in var_id_curr varchar(25), in var_detail integer, in varloop integer, in transid varchar(120),  in var_cogs double, in var_chk_so integer,in var_id_employee varchar(30), in var_term integer, in var_termpaydisc integer, in var_discpay integer,in var_id_account varchar(30), in var_kurs double, in var_id_item_disc varchar(60), in var_item_name_disc varchar(250), in var_qty_disc double, in var_id_unit_disc varchar(30), in var_uang_muka double, in var_freight double)
BEGIN
declare var_pay_method integer;
declare var_id_account_head varchar(30);
declare var_id_account_det varchar(30);
declare var_id_account_cogs varchar(30);
declare var_id_account_disc varchar(30);
declare var_id_account_tax varchar(30);
declare var_id_account_sales varchar(30);
declare var_id_account_um varchar(30);
declare var_cogs double;
declare maks_record_cogs integer;
declare var_convert_nom double;
declare var_rnd_subtotal double;
declare var_rnd_freight double;
declare var_rnd_diskon double;
declare var_rnd_total double;
declare var_rnd_ppn double;
declare var_rnd_um double;
declare var_id_account_freight varchar(30);

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		set var_convert_nom = var_kurs;
		if var_convert_nom is null THEN
			set var_convert_nom = 1;
		end if;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		
		
		if var_payment_method = 2 then
			delete from ar_status where no_sales = var_no_sales;
		end if;
		delete from trn_ledger_det where no_ledger = var_no_sales;
		delete from trn_ledger_head where no_ledger = var_no_sales;
		delete from trn_sales_discitem_det where no_sales = var_no_sales;
		delete from trn_sales_det where no_sales = var_no_sales;
		delete from trn_sales_head where no_sales = var_no_sales;
			
			if var_payment_method  = 1 THEN
				
				set var_id_account_head = var_id_account;
			elseif var_payment_method  = 2 THEN
				select id_account into var_id_account_head from mst_customer where id_customer = var_id_customer;
			end if;


		if var_chk_so = 1 then
		insert into trn_sales_head(
			 no_sales,
			 date_trn,
			 no_sales_order,
			 id_customer,
			 payment_method,
			 subtotal,
		   discount,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 term,
			 termpaydisc,
			 discpay,
			 id_account,
			 kurs,
			 uang_muka,
			 freight
			)
		values(var_no_sales,
			 var_date_trn,
			 var_no_sales_order,
			 var_id_customer,
			 var_payment_method,
			 var_subtotal,
		   var_discount,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_term,
			 var_termpaydisc,
			 var_discpay,
			 var_id_account_head,
			 var_kurs,
			 var_uang_muka,
			 var_freight
			);
		elseif var_chk_so = 0 THEN
			insert into trn_sales_head(
			 no_sales,
			 date_trn,
			 id_customer,
			 payment_method,
			 subtotal,
		   discount,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 term,
			 termpaydisc,
			 discpay,
			 id_account,
			 uang_muka,
			 freight
			)
		values(var_no_sales,
			 var_date_trn,
			 var_id_customer,
			 var_payment_method,
			 var_subtotal,
		   var_discount,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_term,
			 var_termpaydisc,
			 var_discpay,
			 var_id_account_head,
			 var_uang_muka,
			 var_freight
			);
		end IF;

		update trn_sales_order_head set flag_status_invoice = 1 where no_sales_order = var_no_sales_order;

		if var_payment_method = 2 then
			insert into ar_status (
				no_sales,
				date_trn,
				id_customer,
				sales_amount,
				notes
			)
			values (
				var_no_sales,
				var_date_trn,
				var_id_customer,
				round(var_total * var_convert_nom,0),
				var_notes
			);
		end if;
		
		set var_rnd_freight = round(var_freight * var_convert_nom,0);
		if var_rnd_freight is null THEN
			set var_rnd_freight = 0;
		end if;
		set var_rnd_um = round(var_uang_muka * var_convert_nom,0);
		if var_rnd_um is null THEN
			set var_rnd_um = 0;
		end if;
		set var_rnd_diskon = round(var_discount/100 * var_subtotal * var_convert_nom,0);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_discount/100 * (var_subtotal))) * var_convert_nom),0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) - var_rnd_diskon + var_rnd_ppn - var_rnd_um + var_rnd_freight;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;
		
		
		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_sales,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Form',
						var_rnd_total);

		select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_sales';
		select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_out';
		select id_account into var_id_account_sales from i_set_account_def where acc_parameter = 'acc_sales';
		select id_account into var_id_account_um from i_set_account_def where acc_parameter = 'acc_dp_sales';
		select id_account into var_id_account_freight from i_set_account_def where acc_parameter = 'acc_freight_sales';

		if var_discount > 0 then
			set var_rnd_diskon = round(var_discount/100 * var_subtotal * var_convert_nom,0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_disc,
						concat('Diskon Penjualan - ',var_no_sales),
						var_rnd_diskon);
		end if;

		if var_tax > 0 then
			set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_discount/100 * (var_subtotal))) * var_convert_nom),0);

			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_tax,
						concat('Pajak Penjualan - ',var_no_sales),
						-1*var_rnd_ppn);
		end if;
	
		if var_total > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_head,
						concat('Penjualan - ',var_no_sales),
						var_rnd_total);
		end if;
		
		if var_rnd_freight > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_freight,
						concat('BDD Biaya Angkut Penjualan - ',var_no_sales),
						-1*var_rnd_freight);
		end if;

		if var_rnd_um > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_um,
						concat('Uang Muka Penjualan - ',var_no_sales),
						var_rnd_um);
		end if;

		if var_subtotal > 0 THEN
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_sales,
						concat('Penjualan - ',var_no_sales),
						round(-1*var_subtotal * var_convert_nom,0));
		end if;


	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_sales_det where no_sales = var_no_sales;			
		end if;
		insert into trn_sales_det 
			(no_sales,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr
			)
		values (var_no_sales,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr
			);

		call sp_recalculate_cogs_avg(var_id_item,var_id_item,var_date_trn,var_date_trn,0);
		select case when max(nmb_asc) is null then 0 else max(nmb_asc) end into maks_record_cogs from lap_mutasi_hpp where id_item = var_id_item;
		if maks_record_cogs > 0 THEN
			set maks_record_cogs = maks_record_cogs -1;
		ELSE
			set maks_record_cogs = 0;
		end if;

		select case when price is null then 0 else price end into var_cogs from lap_mutasi_hpp where id_item = var_id_item and nmb_asc = maks_record_cogs;
		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;

		
		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;

	if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales and id_account in (var_id_account_cogs);
	end if;

	if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales,
						var_id_account_cogs,
						concat('HPP - ',var_id_item),
						var_cogs * var_qty);
	end if;

		if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales and id_account =  var_id_account_det;
	end if;

	if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales,
						var_id_account_det,
						concat('Penjualan - ',var_id_item),
						-1*var_cogs*var_qty);
	end if;
	

	elseif var_detail = 2 THEN
		insert into trn_sales_discitem_det(
			no_sales,
			id_item,
			item_name,
			qty,
			id_unit) 
		values (
			var_no_sales,
			var_id_item_disc,
			var_item_name_disc,
			var_qty_disc,
			var_id_unit_disc
		);

		call sp_recalculate_cogs_avg(var_id_item_disc,var_id_item_disc,var_date_trn,var_date_trn,0);
		select case when max(nmb_asc) is null then 0 else max(nmb_asc) end into maks_record_cogs from lap_mutasi_hpp where id_item = var_id_item_disc;
		if maks_record_cogs > 0 THEN
			set maks_record_cogs = maks_record_cogs -1;
		ELSE
			set maks_record_cogs = 0;
		end if;

		select case when price is null then 0 else price end into var_cogs from lap_mutasi_hpp where id_item = var_id_item_disc and nmb_asc = maks_record_cogs;
		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;

		
		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;

	if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales,
						var_id_account_cogs,
						concat('HPP Bonus Item - ',var_id_item_disc),
						var_cogs * var_qty_disc);
	end if;

	if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales,
						var_id_account_det,
						concat('Penjualan Bonus Item - ',var_id_item_disc),
						-1*var_cogs*var_qty_disc);
	end if;

end if;


	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 then
		
			if var_payment_method  = 1 THEN
				
				set var_id_account_head = var_id_account;
			elseif var_payment_method  = 2 THEN
				select id_account into var_id_account_head from mst_customer where id_customer = var_id_customer;
			end if;
		if var_chk_so = 1 then
		insert into trn_sales_head(
			 no_sales,
			 date_trn,
			 no_sales_order,
			 id_customer,
			 payment_method,
			 subtotal,
		   discount,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 term,
			 termpaydisc,
			 discpay,
			 id_account,
			 kurs,
			 uang_muka,
			 freight
			)
		values(var_no_sales,
			 var_date_trn,
			 var_no_sales_order,
			 var_id_customer,
			 var_payment_method,
			 var_subtotal,
		   var_discount,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_term,
			 var_termpaydisc,
			 var_discpay,
			 var_id_account_head,
			 var_kurs,
			 var_uang_muka,
			 var_freight
			);
		elseif var_chk_so = 0 THEN
			insert into trn_sales_head(
			 no_sales,
			 date_trn,
			 id_customer,
			 payment_method,
			 subtotal,
		   discount,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 term,
			 termpaydisc,
			 discpay,
			 id_account,
			 uang_muka,
			 freight
			)
		values(var_no_sales,
			 var_date_trn,
			 var_id_customer,
			 var_payment_method,
			 var_subtotal,
		   var_discount,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_term,
			 var_termpaydisc,
			 var_discpay,
			 var_id_account_head,
			 var_uang_muka,
			 var_freight
			);
		end IF;

		update trn_sales_order_head set flag_status_invoice = 1 where no_sales_order = var_no_sales_order;

		if var_payment_method = 2 then
			insert into ar_status (
				no_sales,
				date_trn,
				id_customer,
				sales_amount,
				notes
			)
			values (
				var_no_sales,
				var_date_trn,
				var_id_customer,
				round(var_total*var_convert_nom,0),
				var_notes
			);
		end if;

		set var_rnd_freight = round(var_freight * var_convert_nom,0);
		if var_rnd_freight is null THEN
			set var_rnd_freight = 0;
		end if;
		set var_rnd_um = round(var_uang_muka * var_convert_nom,0);
		if var_rnd_um is null THEN
			set var_rnd_um = 0;
		end if;
		set var_rnd_diskon = round(var_discount/100 * var_subtotal * var_convert_nom,0);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_discount/100 * (var_subtotal))) * var_convert_nom),0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) - var_rnd_diskon + var_rnd_ppn - var_rnd_um + var_rnd_freight;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;
		

		insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_sales,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Form',
						var_rnd_total);

		select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_sales';
		select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_out';
		select id_account into var_id_account_sales from i_set_account_def where acc_parameter = 'acc_sales';
		select id_account into var_id_account_um from i_set_account_def where acc_parameter = 'acc_dp_sales';
		select id_account into var_id_account_freight from i_set_account_def where acc_parameter = 'acc_freight_sales';

		if var_discount > 0 then
			set var_rnd_diskon = round(var_discount/100 * var_subtotal * var_convert_nom,0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_disc,
						concat('Diskon Penjualan - ',var_no_sales),
						var_rnd_diskon);
		end if;

		if var_tax > 0 then
			set var_rnd_ppn = round((var_tax/100 * (var_subtotal-(var_discount/100 * (var_subtotal))) * var_convert_nom),0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_tax,
						concat('Pajak Penjualan - ',var_no_sales),
						-1*var_rnd_ppn);
		end if;


		if var_total > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_head,
						concat('Penjualan - ',var_no_sales),
						var_rnd_total);
		end if;

		if var_rnd_freight > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_freight,
						concat('BDD Biaya Angkut Penjualan - ',var_no_sales),
						-1*var_rnd_freight);
		end if;

		if var_rnd_um > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_um,
						concat('Uang Muka Penjualan - ',var_no_sales),
						var_rnd_um);
		end if;

		if var_subtotal > 0 THEN
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales,
						var_id_account_sales,
						concat('Penjualan - ',var_no_sales),
						round(-1*var_subtotal*var_convert_nom,0));
		end if;


	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_sales_det where no_sales = var_no_sales;			
		end if;
		insert into trn_sales_det 
			(no_sales,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr
			)
		values (var_no_sales,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr
			);

		

		call sp_recalculate_cogs_avg(var_id_item,var_id_item,var_date_trn,var_date_trn,0);
		select case when max(nmb_asc) is null then 0 else max(nmb_asc) end into maks_record_cogs from lap_mutasi_hpp where id_item = var_id_item;
		if maks_record_cogs > 0 THEN
			set maks_record_cogs = maks_record_cogs -1;
		ELSE
			set maks_record_cogs = 0;
		end if;

		select case when price is null then 0 else price end into var_cogs from lap_mutasi_hpp where id_item = var_id_item and nmb_asc = maks_record_cogs;
		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;

		
		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;

	if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales and id_account in (var_id_account_cogs);
	end if;

	if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales,
						var_id_account_cogs,
						concat('HPP - ',var_id_item),
						var_cogs * var_qty);
	end if;

		if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales and id_account =  var_id_account_det;
	end if;

	if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales,
						var_id_account_det,
						concat('Penjualan - ',var_id_item),
						-1*var_cogs*var_qty);
	end if;

	elseif var_detail = 2 THEN
		insert into trn_sales_discitem_det(
			no_sales,
			id_item,
			item_name,
			qty,
			id_unit) 
		values (
			var_no_sales,
			var_id_item_disc,
			var_item_name_disc,
			var_qty_disc,
			var_id_unit_disc
		);

		call sp_recalculate_cogs_avg(var_id_item_disc,var_id_item_disc,var_date_trn,var_date_trn,0);
		select case when max(nmb_asc) is null then 0 else max(nmb_asc) end into maks_record_cogs from lap_mutasi_hpp where id_item = var_id_item_disc;
		if maks_record_cogs > 0 THEN
			set maks_record_cogs = maks_record_cogs -1;
		ELSE
			set maks_record_cogs = 0;
		end if;

		select case when price is null then 0 else price end into var_cogs from lap_mutasi_hpp where id_item = var_id_item_disc and nmb_asc = maks_record_cogs;
		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;

		
		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;

	if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales,
						var_id_account_cogs,
						concat('HPP Bonus Item - ',var_id_item_disc),
						var_cogs * var_qty_disc);
	end if;

	if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales,
						var_id_account_det,
						concat('Penjualan Bonus Item - ',var_id_item_disc),
						-1*var_cogs*var_qty_disc);
	end if;

	
end if;

	ELSEIF TRANSID = 'DELETE' THEN
			
		if var_payment_method = 2 then
			delete from ar_status where no_sales = var_no_sales;
		end if;
		delete from trn_ledger_det where no_ledger = var_no_sales;
		delete from trn_ledger_head where no_ledger = var_no_sales;
		delete from trn_sales_discitem_det where no_sales = var_no_sales;
		delete from trn_sales_det where no_sales = var_no_sales;
		delete from trn_sales_head where no_sales = var_no_sales;
		update trn_sales_order_head set flag_status_invoice = 0 where no_sales_order = var_no_sales_order;
			
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_sales_order` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_sales_order`(in var_no_sales_order varchar(30), in var_id_customer varchar(30), in var_date_trn date, in var_notes text, in var_subtotal double, in var_tax  double, in var_total double, in var_modified_user varchar(30), in var_created_date date, in var_modified_date date, in var_created_user varchar(30),in var_number_asc integer,in var_id_item varchar(30),in var_notes_det text, in var_qty integer, in var_id_unit varchar(30), in var_price double, in var_nominal double, in var_id_curr varchar(30) , in var_detail integer, in varloop integer, in transid varchar(120), in var_kurs double, in var_id_employee varchar(60), in var_item_name varchar(250), in var_id_itemdisc varchar(120), in var_item_namedisc varchar(250), in var_id_unitdisc varchar(60), in var_nom_discbrand double, in var_nom_disctype double, in var_nom_disccat double, in var_discount double, in var_nett_total double, in var_is_discbrand integer, in var_is_disctype integer, in var_is_disccat integer, in var_is_discitem integer, in var_qty_discitem double, in var_id_type varchar(30), in var_id_category varchar(30), in var_id_brand varchar(30), in var_uang_muka double, in var_id_account varchar(30), in var_id_curr_um varchar(30), in var_kurs_um double, in var_id_ekspedisi varchar(30), in var_freight_est double, in var_weight double, in var_perweight double)
BEGIN
declare var_rnd_um double;
declare var_convert_nom double;
declare var_account_um varchar(30);

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	set var_convert_nom = var_kurs_um;
		if var_convert_nom is null THEN
			set var_convert_nom = 1;
		end if;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_ledger_det where no_ledger = var_no_sales_order;
		delete from trn_ledger_head where no_ledger = var_no_sales_order;
		delete from trn_so_discbrand_det where no_sales_order = var_no_sales_order;
		delete from trn_so_disccat_det where no_sales_order = var_no_sales_order;
		delete from trn_so_discitem_det where no_sales_order = var_no_sales_order;
		delete from trn_so_disctype_det where no_sales_order = var_no_sales_order;
		delete from trn_sales_order_det where no_sales_order = var_no_sales_order;
		delete from trn_sales_order_head where no_sales_order = var_no_sales_order;
	
		insert into trn_sales_order_head(
			 no_sales_order,
			 id_customer,
			 date_trn,
			 notes,
			 subtotal,
			 tax,
			 total,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 kurs,
			 id_employee,
			 discount,
			 nett_total,
			 is_discbrand,
			 is_disctype,
			 is_disccat,
			 is_discitem,
			 uang_muka,
			 id_account,
			 id_curr_um,
			 kurs_um,
			 id_ekspedisi,
			 freight_est
			)
		values(var_no_sales_order,
			 var_id_customer,
			 var_date_trn,
			 var_notes,
			 var_subtotal,
			 var_tax,
			 var_total,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 var_kurs,
			 var_id_employee,
			 var_discount,
			 var_nett_total,
			 var_is_discbrand,
			 var_is_disctype,
			 var_is_disccat,
			 var_is_discitem,
			 var_uang_muka,
			 var_id_account,
			 var_id_curr_um,
			 var_kurs_um,
			 var_id_ekspedisi,
			 var_freight_est
			);

			set var_rnd_um = round((var_uang_muka * var_convert_nom),0);
			if var_rnd_um is null then 
				set var_rnd_um = 0;
			end if;

		if var_rnd_um > 0 then
			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_sales_order,
					 var_date_trn,
					 'Pembayaran Uang Muka',
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Order Form',
						var_rnd_um);

		
		select id_account into var_account_um from i_set_account_def where acc_parameter = 'acc_dp_sales' limit 1;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales_order,
						var_account_um,
						concat('Uang Muka Pesanan - ',var_no_sales_order),
						-1*var_rnd_um);

		
		select id_account into var_account_um from i_set_account_def where acc_parameter = 'acc_dp_sales' limit 1;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales_order,
						var_id_account,
						concat('Penerimaan Uang Muka Pesanan - ',var_no_sales_order),
						var_rnd_um);
		end if;
		
	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_sales_order_det where no_sales_order = var_no_sales_order;			
		end if;
		insert into trn_sales_order_det 
			(no_sales_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 id_type,
			 id_category,
			 id_brand,
			 weight,
			 perweight
			)
		values (var_no_sales_order,
			 var_number_asc,
			 var_id_item,
			 var_notes,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_id_type,
			 var_id_category,
			 var_id_brand,
			 var_weight,
			 var_perweight
			);
		elseif var_detail = 2 THEN
			insert into trn_so_discbrand_det (
				no_sales_order,
				id_item,
				item_name,
				nom_disc
			) values (
				var_no_sales_order,
				var_id_item,
				var_item_name,
				var_nom_discbrand
			);
		elseif var_detail = 3 THEN
			insert into trn_so_disccat_det (
				no_sales_order,
				id_item,
				item_name,
				nom_disc
			) values (
				var_no_sales_order,
				var_id_item,
				var_item_name,
				var_nom_disccat
			);
		ELSEIF var_detail = 4 THEN
			insert into trn_so_disctype_det (
				no_sales_order,
				id_item,
				item_name,
				nom_disc
			) values (
				var_no_sales_order,
				var_id_item,
				var_item_name,
				var_nom_disctype
			);
		ELSEIF var_detail = 5 THEN
			insert into trn_so_discitem_det (
				no_sales_order,
				id_item,
				item_name,
				qty,
				id_unit
			) values (
				var_no_sales_order,
				var_id_itemdisc,
				var_item_namedisc,
				var_qty_discitem,
				var_id_unitdisc
			);
		end if;
	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_sales_order_head(
			 no_sales_order,
			 id_customer,
			 date_trn,
			 notes,
			 subtotal,
			 tax,
			 total,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 kurs,
			 id_employee,
			 discount,
			 nett_total,
			 is_discbrand,
			 is_disctype,
			 is_disccat,
			 is_discitem,
			 uang_muka,
			 id_account,
			 id_curr_um,
			 kurs_um,
			 id_ekspedisi,
			 freight_est
			)
		values(var_no_sales_order,
			 var_id_customer,
			 var_date_trn,
			 var_notes,
			 var_subtotal,
			 var_tax,
			 var_total,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 var_kurs,
			 var_id_employee,
			 var_discount,
			 var_nett_total,
			 var_is_discbrand,
			 var_is_disctype,
			 var_is_disccat,
			 var_is_discitem,
			 var_uang_muka,
			 var_id_account,
			 var_id_curr_um,
			 var_kurs_um,
			 var_id_ekspedisi,
			 var_freight_est
			);

		set var_rnd_um = round((var_uang_muka * var_convert_nom),0);
			if var_rnd_um is null then 
				set var_rnd_um = 0;
			end if;

			if var_rnd_um > 0 then
			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_sales_order,
					 var_date_trn,
					 'Pembayaran Uang Muka',
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Order Form',
						var_rnd_um);

		
		select id_account into var_account_um from i_set_account_def where acc_parameter = 'acc_dp_sales' limit 1;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales_order,
						var_account_um,
						concat('Uang Muka Pesanan - ',var_no_sales_order),
						-1*var_rnd_um);

		
		select id_account into var_account_um from i_set_account_def where acc_parameter = 'acc_dp_sales' limit 1;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales_order,
						var_id_account,
						concat('Penerimaan Uang Muka Pesanan - ',var_no_sales_order),
						var_rnd_um);
		end if;

	elseif var_detail = 1 THEN
		insert into trn_sales_order_det 
			(no_sales_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 id_type,
			 id_category,
			 id_brand,
			 weight,
			 perweight
			)
		values (var_no_sales_order,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_id_type,
			 var_id_category,
			 var_id_brand,
			 var_weight,
			 var_perweight
			);

			elseif var_detail = 2 THEN
			insert into trn_so_discbrand_det (
				no_sales_order,
				id_item,
				item_name,
				nom_disc
			) values (
				var_no_sales_order,
				var_id_item,
				var_item_name,
				var_nom_discbrand
			);
		elseif var_detail = 3 THEN
			insert into trn_so_disccat_det (
				no_sales_order,
				id_item,
				item_name,
				nom_disc
			) values (
				var_no_sales_order,
				var_id_item,
				var_item_name,
				var_nom_disccat
			);
		ELSEIF var_detail = 4 THEN
			insert into trn_so_disctype_det (
				no_sales_order,
				id_item,
				item_name,
				nom_disc
			) values (
				var_no_sales_order,
				var_id_item,
				var_item_name,
				var_nom_disctype
			);
		ELSEIF var_detail = 5 THEN
			insert into trn_so_discitem_det (
				no_sales_order,
				id_item,
				item_name,
				qty,
				id_unit
			) values (
				var_no_sales_order,
				var_id_itemdisc,
				var_item_namedisc,
				var_qty_discitem,
				var_id_unitdisc
			);

		end if;

	ELSEIF TRANSID = 'DELETE' THEN
		delete from trn_ledger_det where no_ledger = var_no_sales_order;
		delete from trn_ledger_head where no_ledger = var_no_sales_order;
			delete from trn_so_discbrand_det where no_sales_order = var_no_sales_order;
			delete from trn_so_disccat_det where no_sales_order = var_no_sales_order;
			delete from trn_so_discitem_det where no_sales_order = var_no_sales_order;
			delete from trn_so_disctype_det where no_sales_order = var_no_sales_order;
			delete from trn_sales_order_det where no_sales_order = var_no_sales_order;
			delete from trn_sales_order_head where no_sales_order = var_no_sales_order;
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_sales_order_um` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_sales_order_um`(in var_no_sales_order varchar(30), in var_id_customer varchar(30), in var_date_trn date, in var_notes text, in var_subtotal double, in var_tax  double, in var_total double, in var_modified_user varchar(30), in var_created_date date, in var_modified_date date, in var_created_user varchar(30),in var_number_asc integer,in var_id_item varchar(30),in var_notes_det text, in var_qty integer, in var_id_unit varchar(30), in var_price double, in var_nominal double, in var_id_curr varchar(30) , in var_detail integer, in varloop integer, in transid varchar(120), in var_kurs double, in var_id_employee varchar(60), in var_item_name varchar(250), in var_id_itemdisc varchar(120), in var_item_namedisc varchar(250), in var_id_unitdisc varchar(60), in var_nom_discbrand double, in var_nom_disctype double, in var_nom_disccat double, in var_discount double, in var_nett_total double, in var_is_discbrand integer, in var_is_disctype integer, in var_is_disccat integer, in var_is_discitem integer, in var_qty_discitem double, in var_id_type varchar(30), in var_id_category varchar(30), in var_id_brand varchar(30), in var_uang_muka double, in var_id_account varchar(30), in var_id_curr_um varchar(30), in var_kurs_um double, in var_id_ekspedisi varchar(30), in var_freight_est double, in var_tgl_uang_muka date)
BEGIN
declare var_rnd_um double;
declare var_convert_nom double;
declare var_account_um varchar(30);

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	set var_convert_nom = var_kurs_um;
		if var_convert_nom is null THEN
			set var_convert_nom = 1;
		end if;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_ledger_det where no_ledger = var_no_sales_order;
		delete from trn_ledger_head where no_ledger = var_no_sales_order;
		delete from trn_so_discbrand_det where no_sales_order = var_no_sales_order;
		delete from trn_so_disccat_det where no_sales_order = var_no_sales_order;
		delete from trn_so_discitem_det where no_sales_order = var_no_sales_order;
		delete from trn_so_disctype_det where no_sales_order = var_no_sales_order;
		delete from trn_sales_order_det where no_sales_order = var_no_sales_order;
		delete from trn_sales_order_head where no_sales_order = var_no_sales_order;
	
		insert into trn_sales_order_head(
			 no_sales_order,
			 id_customer,
			 date_trn,
			 notes,
			 subtotal,
			 tax,
			 total,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 kurs,
			 id_employee,
			 discount,
			 nett_total,
			 is_discbrand,
			 is_disctype,
			 is_disccat,
			 is_discitem,
			 uang_muka,
			 id_account,
			 id_curr_um,
			 kurs_um,
			 id_ekspedisi,
			 freight_est,
			 tgl_uang_muka
			)
		values(var_no_sales_order,
			 var_id_customer,
			 var_date_trn,
			 var_notes,
			 var_subtotal,
			 var_tax,
			 var_total,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 var_kurs,
			 var_id_employee,
			 var_discount,
			 var_nett_total,
			 var_is_discbrand,
			 var_is_disctype,
			 var_is_disccat,
			 var_is_discitem,
			 var_uang_muka,
			 var_id_account,
			 var_id_curr_um,
			 var_kurs_um,
			 var_id_ekspedisi,
			 var_freight_est,
			 var_tgl_uang_muka
			);

			set var_rnd_um = round((var_uang_muka * var_convert_nom),0);
			if var_rnd_um is null then 
				set var_rnd_um = 0;
			end if;

		if var_rnd_um > 0 then
			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_sales_order,
					 var_tgl_uang_muka,
					 'Pembayaran Uang Muka',
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Order Form',
						var_rnd_um);

		
		select id_account into var_account_um from i_set_account_def where acc_parameter = 'acc_dp_sales' limit 1;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales_order,
						var_account_um,
						concat('Uang Muka Pesanan - ',var_no_sales_order),
						-1*var_rnd_um);

		
		select id_account into var_account_um from i_set_account_def where acc_parameter = 'acc_dp_sales' limit 1;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales_order,
						var_id_account,
						concat('Penerimaan Uang Muka Pesanan - ',var_no_sales_order),
						var_rnd_um);
		end if;
		
	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_sales_order_det where no_sales_order = var_no_sales_order;			
		end if;
		insert into trn_sales_order_det 
			(no_sales_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 id_type,
			 id_category,
			 id_brand
			)
		values (var_no_sales_order,
			 var_number_asc,
			 var_id_item,
			 var_notes,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_id_type,
			 var_id_category,
			 var_id_brand
			);

		if varloop = 0 THEN
			delete from i_stock_out where no_stock_out = var_no_sales_order;
		end if;
		insert into i_stock_out 
			(no_stock_out,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_sales_order,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 round(var_price * var_convert_nom),
			 round(var_price * var_convert_nom),
			 'WH001'
			);

		elseif var_detail = 2 THEN
			insert into trn_so_discbrand_det (
				no_sales_order,
				id_item,
				item_name,
				nom_disc
			) values (
				var_no_sales_order,
				var_id_item,
				var_item_name,
				var_nom_discbrand
			);
		elseif var_detail = 3 THEN
			insert into trn_so_disccat_det (
				no_sales_order,
				id_item,
				item_name,
				nom_disc
			) values (
				var_no_sales_order,
				var_id_item,
				var_item_name,
				var_nom_disccat
			);
		ELSEIF var_detail = 4 THEN
			insert into trn_so_disctype_det (
				no_sales_order,
				id_item,
				item_name,
				nom_disc
			) values (
				var_no_sales_order,
				var_id_item,
				var_item_name,
				var_nom_disctype
			);
		ELSEIF var_detail = 5 THEN
			insert into trn_so_discitem_det (
				no_sales_order,
				id_item,
				item_name,
				qty,
				id_unit
			) values (
				var_no_sales_order,
				var_id_itemdisc,
				var_item_namedisc,
				var_qty_discitem,
				var_id_unitdisc
			);
		end if;
	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_sales_order_head(
			 no_sales_order,
			 id_customer,
			 date_trn,
			 notes,
			 subtotal,
			 tax,
			 total,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 kurs,
			 id_employee,
			 discount,
			 nett_total,
			 is_discbrand,
			 is_disctype,
			 is_disccat,
			 is_discitem,
			 uang_muka,
			 id_account,
			 id_curr_um,
			 kurs_um,
			 id_ekspedisi,
			 freight_est,
			 tgl_uang_muka
			)
		values(var_no_sales_order,
			 var_id_customer,
			 var_date_trn,
			 var_notes,
			 var_subtotal,
			 var_tax,
			 var_total,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
			 var_created_user,
			 var_kurs,
			 var_id_employee,
			 var_discount,
			 var_nett_total,
			 var_is_discbrand,
			 var_is_disctype,
			 var_is_disccat,
			 var_is_discitem,
			 var_uang_muka,
			 var_id_account,
			 var_id_curr_um,
			 var_kurs_um,
			 var_id_ekspedisi,
			 var_freight_est,
			 var_tgl_uang_muka
			);

		set var_rnd_um = round((var_uang_muka * var_convert_nom),0);
			if var_rnd_um is null then 
				set var_rnd_um = 0;
			end if;

			if var_rnd_um > 0 then
			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_sales_order,
					 var_tgl_uang_muka,
					 'Pembayaran Uang Muka',
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Order Form',
						var_rnd_um);

		
		select id_account into var_account_um from i_set_account_def where acc_parameter = 'acc_dp_sales' limit 1;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales_order,
						var_account_um,
						concat('Uang Muka Pesanan - ',var_no_sales_order),
						-1*var_rnd_um);

		
		select id_account into var_account_um from i_set_account_def where acc_parameter = 'acc_dp_sales' limit 1;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
			values (var_no_sales_order,
						var_id_account,
						concat('Penerimaan Uang Muka Pesanan - ',var_no_sales_order),
						var_rnd_um);
		end if;

	elseif var_detail = 1 THEN
		insert into trn_sales_order_det 
			(no_sales_order,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 id_type,
			 id_category,
			 id_brand
			)
		values (var_no_sales_order,
			 var_number_asc,
			 var_id_item,
			 var_notes_det,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_id_type,
			 var_id_category,
			 var_id_brand
			);

			elseif var_detail = 2 THEN
			insert into trn_so_discbrand_det (
				no_sales_order,
				id_item,
				item_name,
				nom_disc
			) values (
				var_no_sales_order,
				var_id_item,
				var_item_name,
				var_nom_discbrand
			);
		elseif var_detail = 3 THEN
			insert into trn_so_disccat_det (
				no_sales_order,
				id_item,
				item_name,
				nom_disc
			) values (
				var_no_sales_order,
				var_id_item,
				var_item_name,
				var_nom_disccat
			);
		ELSEIF var_detail = 4 THEN
			insert into trn_so_disctype_det (
				no_sales_order,
				id_item,
				item_name,
				nom_disc
			) values (
				var_no_sales_order,
				var_id_item,
				var_item_name,
				var_nom_disctype
			);
		ELSEIF var_detail = 5 THEN
			insert into trn_so_discitem_det (
				no_sales_order,
				id_item,
				item_name,
				qty,
				id_unit
			) values (
				var_no_sales_order,
				var_id_itemdisc,
				var_item_namedisc,
				var_qty_discitem,
				var_id_unitdisc
			);

		end if;

	ELSEIF TRANSID = 'DELETE' THEN
		delete from trn_ledger_det where no_ledger = var_no_sales_order;
		delete from trn_ledger_head where no_ledger = var_no_sales_order;
			delete from trn_so_discbrand_det where no_sales_order = var_no_sales_order;
			delete from trn_so_disccat_det where no_sales_order = var_no_sales_order;
			delete from trn_so_discitem_det where no_sales_order = var_no_sales_order;
			delete from trn_so_disctype_det where no_sales_order = var_no_sales_order;
			delete from trn_sales_order_det where no_sales_order = var_no_sales_order;
			delete from trn_sales_order_head where no_sales_order = var_no_sales_order;
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_sales_return` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_sales_return`(in var_no_sales_return varchar(30), in var_date_trn date, in var_id_customer varchar(30), in var_payment_method integer, in var_subtotal double, in var_disc double, in var_tax double, in var_total double, in var_notes text, in var_created_user varchar(30), in var_created_date date, in var_modified_user varchar(30), in var_modified_date date, in var_number_asc integer, in var_id_item varchar(30), in var_notes_det text, in var_qty integer, in var_id_unit varchar(25), in var_price double, in var_nominal double,  in var_id_curr varchar(25),in var_no_sales varchar(60), in var_detail integer, in varloop integer, in transid varchar(120), in nilai_retur_lalu double,in var_kurs double, in warehouse varchar(60), in var_weight double, in var_priceperweight double)
BEGIN
declare var_pay_method integer;
declare var_id_account_head varchar(30);
declare var_id_account_det varchar(30);
declare var_id_account_cogs varchar(30);
declare var_id_account_disc varchar(30);
declare var_id_account_tax varchar(30);
declare var_id_account_sales varchar(30);
declare var_cogs double;
declare var_convert_nom double;
declare var_rnd_subtotal double;
declare var_rnd_freight double;
declare var_rnd_diskon double;
declare var_rnd_total double;
declare var_rnd_ppn double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		set var_convert_nom = var_kurs;
		if var_convert_nom is null THEN
			set var_convert_nom = 1;
		end if;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_sales_return_det where no_sales_return = var_no_sales_return;
		delete from trn_sales_return_head where no_sales_return = var_no_sales_return;
		delete from i_stock_in where no_stock_in = var_no_sales_return;
		delete from trn_ledger_det where no_ledger = var_no_sales_return;
		delete from trn_ledger_head where no_ledger = var_no_sales_return;
	end if;

if var_detail = 0 THEN
		insert into trn_sales_return_head(
			 no_sales_return,
			 date_trn,
			 id_customer,
			 payment_method,
			 subtotal,
			 disc,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 kurs,
			 id_warehouse
			)
		values(var_no_sales_return,
			 var_date_trn,
			 var_id_customer,
			 var_payment_method,
			 var_subtotal,
			 var_disc,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_kurs,
			 warehouse
			);

if var_payment_method = 2 then
	
	
	update ar_status set return_amount = case when return_amount is null then 0 else return_amount end - round(nilai_retur_lalu * var_convert_nom,0) where no_sales = var_no_sales;
	update ar_status set return_amount = case when return_amount is null then 0 else return_amount end + round(var_total * var_convert_nom,0) where no_sales = var_no_sales;
	
end if;


		set var_rnd_diskon = round(-1*var_disc/100 * var_subtotal * var_convert_nom);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round(var_tax/100 * (var_subtotal-(var_disc/100 * var_subtotal)) * var_convert_nom,0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_diskon + var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;

insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_sales_return,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Return Form',
						var_rnd_total);

select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_sales';
		select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_out';
			

			select payment_method into var_pay_method from trn_sales_return_head where no_sales_return = var_no_sales_return;
			if var_pay_method = 1 THEN
				
					select id_account into var_id_account_head from trn_sales_head where no_sales = var_no_sales;
			elseif var_pay_method = 2 THEN
				
					select id_account into var_id_account_head from mst_customer where id_customer = var_id_customer;
			end if;

select id_account into var_id_account_sales from i_set_account_def where acc_parameter = 'acc_sales';

	if var_disc > 0 then
	set var_rnd_diskon = round(-1*var_disc/100 * var_subtotal * var_convert_nom); 
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_disc,
						concat('Diskon Penjualan - ',var_no_sales_return),
						var_rnd_diskon);
			end if;

		if var_tax > 0 then
		set var_rnd_ppn = round(var_tax/100 * (var_subtotal-(var_disc/100 * var_subtotal)) * var_convert_nom,0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_tax,
						concat('Pajak Penjualan - ',var_no_sales_return),
						var_rnd_ppn);
			end if;

if var_total > 0 then
			set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_diskon + var_rnd_ppn;
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_head,
						concat('Penjualan - ',var_no_sales_return),
						round(-1*var_rnd_total,0));
end if;


	insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_sales,
						concat('Penjualan - ',var_no_sales_return),
						round(var_subtotal * var_convert_nom,0));



	elseif var_detail = 1 THEN

		insert into trn_sales_return_det 
			(no_sales_return,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 no_sales,
			 weight,
			 priceperweight
			)
		values (var_no_sales_return,
			 var_number_asc,
			 var_id_item,
			 var_notes,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_no_sales,
		   var_weight,
			 var_priceperweight
			);
		

call sp_recalculate_cogs_avg(var_id_item,var_id_item,var_date_trn,var_date_trn,0);
		select case when price is null then 0 else price end into var_cogs from lap_mutasi_hpp where id_item = var_id_item order by date_trn desc limit 1;

		select id_account into var_id_account_det from mst_item where id_item = var_id_item;


		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;

if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales_return and id_account =  var_id_account_cogs;
end if;

if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_cogs,
						concat('HPP - ',var_id_item),
						-1*var_cogs*var_qty);
end if;



		insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_no_sales_return,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 0,
			 round(var_price * var_convert_nom, 0),
			 warehouse
			);


	if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales_return and id_account =  var_id_account_det;
end if;

		
if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_det,
						concat('Penjualan - ',var_id_item),
						var_cogs*var_qty);
end if;


		end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_sales_return_head(
			 no_sales_return,
			 date_trn,
			 id_customer,
			 payment_method,
			 subtotal,
			 disc,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 kurs,
		   id_warehouse
			)
		values(var_no_sales_return,
			 var_date_trn,
			 var_id_customer,
			 var_payment_method,
			 var_subtotal,
			 var_disc,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_kurs,
			 warehouse
			);

if var_payment_method = 2 then
	
	
	
	update ar_status set return_amount = case when return_amount is null then 0 else return_amount end + round(var_total*var_convert_nom,0) where no_sales = var_no_sales;
	
end if;

		set var_rnd_diskon = round(-1*var_disc/100 * var_subtotal * var_convert_nom);
		if var_rnd_diskon is null then 
			set var_rnd_diskon = 0;
		end if;
		set var_rnd_ppn = round(var_tax/100 * (var_subtotal-(var_disc/100 * var_subtotal)) * var_convert_nom,0);
		if var_rnd_ppn is null then 
			set var_rnd_ppn = 0;
		end if;
		set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_diskon + var_rnd_ppn;
		if var_rnd_total is null then 
			set var_rnd_total = 0;
		end if;

insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_sales_return,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Return Form',
						var_rnd_total);

select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_sales';
		select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_out';
			

			select payment_method into var_pay_method from trn_sales_return_head where no_sales_return = var_no_sales_return;
			if var_pay_method = 1 THEN
				
					select id_account into var_id_account_head from trn_sales_head where no_sales = var_no_sales;
			elseif var_pay_method = 2 THEN
				
					select id_account into var_id_account_head from mst_customer where id_customer = var_id_customer;
			end if;

select id_account into var_id_account_sales from i_set_account_def where acc_parameter = 'acc_sales';

	if var_disc > 0 then
			set var_rnd_diskon = round(-1*var_disc/100 * var_subtotal * var_convert_nom);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_disc,
						concat('Diskon Penjualan - ',var_no_sales_return),
						var_rnd_diskon);
			end if;

		if var_tax > 0 then
			set var_rnd_ppn = round(var_tax/100 * (var_subtotal-(var_disc/100 * var_subtotal)) * var_convert_nom,0);
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_tax,
						concat('Pajak Penjualan - ',var_no_sales_return),
						var_rnd_ppn);
			end if;

if var_total > 0 then
			set var_rnd_total = (var_subtotal * var_convert_nom) + var_rnd_diskon + var_rnd_ppn;
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_head,
						concat('Penjualan - ',var_no_sales_return),
						round(-1*var_rnd_total,0));
end if;


	insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_sales,
						concat('Penjualan - ',var_no_sales_return),
						round(var_subtotal * var_convert_nom,0));



	elseif var_detail = 1 THEN

		insert into trn_sales_return_det 
			(no_sales_return,
			 number_asc,
			 id_item,
			 notes,
			 qty,
			 id_unit,
			 price,
			 nominal,
			 id_curr,
			 no_sales,
			 weight,
			 priceperweight
			)
		values (var_no_sales_return,
			 var_number_asc,
			 var_id_item,
			 var_notes,
			 var_qty,
			 var_id_unit,
			 var_price,
			 var_nominal,
			 var_id_curr,
			 var_no_sales,
			 var_weight,
			 var_priceperweight
			);
		

call sp_recalculate_cogs_avg(var_id_item,var_id_item,var_date_trn,var_date_trn,0);
		select case when price is null then 0 else price end into var_cogs from lap_mutasi_hpp where id_item = var_id_item order by date_trn desc limit 1;

		select id_account into var_id_account_det from mst_item where id_item = var_id_item;


		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;

if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales_return and id_account =  var_id_account_cogs;
end if;

if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_cogs,
						concat('HPP - ',var_id_item),
						-1*var_cogs*var_qty);
end if;



		insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
       id_warehouse
			)
		values (var_no_sales_return,
			 var_date_trn,
			 var_id_item,
			 var_qty,
			 var_id_unit,
			 0,
			 round(var_price * var_convert_nom),
			 warehouse
			);


	if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_sales_return and id_account =  var_id_account_det;
end if;

		
if var_cogs > 0 then
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_sales_return,
						var_id_account_det,
						concat('Penjualan - ',var_id_item),
						var_cogs*var_qty);
end if;


		end if;

	ELSEIF TRANSID = 'DELETE' THEN
			delete from trn_sales_return_det where no_sales_return = var_no_sales_return;
			delete from trn_sales_return_head where no_sales_return = var_no_sales_return;
			if var_payment_method = 2 then
				
				
				update ar_status set return_amount = case when return_amount is null then 0 else return_amount end - round(nilai_retur_lalu*var_convert_nom,0) where no_sales = var_no_sales;
				
			end if;
			delete from i_stock_in where no_stock_in = var_no_sales_return;
			delete from trn_ledger_det where no_ledger = var_no_sales_return;
			delete from trn_ledger_head where no_ledger = var_no_sales_return;
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_sales_service` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_sales_service`(in var_no_service varchar(60), in var_id_customer varchar(60), in var_payment_method integer, in var_subtotal double, in var_discount double, in var_tax double, in var_total double, in var_notes text, in var_created_user varchar(60), in  var_created_date date,  in var_modified_user varchar(60), in var_modified_date date,  in var_date_trn date, in var_number_asc integer, in var_id_service varchar(60), in var_id_employee varchar(60), in  var_notes_det text, in var_qty integer, in var_price double, in var_nominal double, in var_id_curr varchar(30), in var_notes_ledger text, in var_amount double, in var_number_asc_item integer, in var_id_item varchar(30), in  var_notes_item text, in varloop integer, in var_detail integer, in transid varchar(120))
BEGIN
declare var_pay_method integer;
declare var_id_account_head varchar(30);
declare var_id_account_det varchar(30);
declare var_id_account_disc varchar(30);
declare var_id_account_tax varchar(30);

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 THEN
		if var_payment_method = 2 then
			delete from ar_status where no_sales = var_no_service;
		end if;
		delete from trn_ledger_det where no_ledger = var_no_service;
		delete from trn_ledger_head where no_ledger = var_no_service;
		delete from trn_service_item_det where no_service = var_no_service;
		delete from trn_service_det where no_service = var_no_service;
		delete from trn_service_head where no_service = var_no_service;	

			insert into trn_service_head(
			 no_service,
			 id_customer,
			 payment_method,
			 subtotal,
			 discount,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 date_trn
			)
		values(var_no_service,
			 var_id_customer,
			 var_payment_method,
			 var_subtotal,
			 var_discount,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_date_trn
			);

insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_service,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Service Form',
						var_total);


if var_payment_method = 2 then
		insert into ar_status (
			no_sales,
			date_trn,
			id_customer,
			sales_amount,
			notes
		)
		values (
			var_no_service,
			var_date_trn,
			var_id_customer,
			var_total,
			var_notes
		);
	end if;

select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_service';
			if var_discount > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_service,
						var_id_account_disc,
						var_notes,
						var_discount/100 * var_subtotal);
			end if;

select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_out';
			if var_tax > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_service,
						var_id_account_tax,
						var_notes,
						-1*var_tax/100 * (var_subtotal-(var_discount/100 * var_subtotal)));
				end if;


			select payment_method into var_pay_method from trn_service_head where no_service = var_no_service;
			if var_pay_method = 1 THEN
				select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_cash_service';
			elseif var_pay_method = 2 THEN
				select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_credit_service';
			end if;

if var_total > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_service,
						var_id_account_head,
						concat('Penjualan Jasa - ',var_no_service),
						var_total);
end if;


		elseif var_detail = 1 THEN

		IF VAR_LOOP = 0 THEN
			delete from trn_service_det where no_service = var_no_service;
		END IF;

			insert into trn_service_det 
				(no_service,
				number_asc,
				id_service,
				id_employee,
				notes,
				qty,
				price,
				nominal,
				id_curr
				)
		values (var_no_service,
						var_number_asc,
					  var_id_service,
					  var_id_employee,
						var_notes,
						var_qty,
						var_price,
					  var_nominal,
					  var_id_curr
					 );



		select id_account into var_id_account_det from mst_service where id_service = var_id_service;
if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_service  and id_account = var_id_account_det;	
end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_service,
						var_id_account_det,
						var_notes,
						-1*var_nominal);

	elseif var_detail = 2 THEN

		if varloop = 0 then
			delete from trn_service_item_det where no_service = var_no_service;			
		end if;
		insert into trn_service_item_det 
			(no_service,
			 number_asc,
			 id_item,
			 notes
			)
		values (var_no_service,
						var_number_asc,
						var_id_item,
						var_notes
					);

	end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
			insert into trn_service_head(
			 no_service,
			 id_customer,
			 payment_method,
			 subtotal,
			 discount,
			 tax,
			 total,
			 notes,
			 created_user,
			 created_date,
			 modified_user,
			 modified_date,
			 date_trn
			)
		values(var_no_service,
			 var_id_customer,
			 var_payment_method,
			 var_subtotal,
			 var_discount,
			 var_tax,
			 var_total,
			 var_notes,
			 var_created_user,
			 var_created_date,
			 var_modified_user,
			 var_modified_date,
			 var_date_trn
			);

if var_payment_method = 2 then
		insert into ar_status (
			no_sales,
			date_trn,
			id_customer,
			sales_amount,
			notes
		)
		values (
			var_no_service,
			var_date_trn,
			var_id_customer,
			var_total,
			var_notes
		);
	end if;


insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_service,
					 var_date_trn,
					 var_notes,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Sales Service Form',
						var_total);

select id_account into var_id_account_disc from i_set_account_def where acc_parameter = 'acc_disc_service';
			if var_discount > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_service,
						var_id_account_disc,
						var_notes,
						var_discount/100 * var_subtotal);
			end if;

select id_account into var_id_account_tax from i_set_account_def where acc_parameter = 'acc_tax_out';
			if var_tax > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_service,
						var_id_account_tax,
						var_notes,
						-1*var_tax/100 * (var_subtotal-(var_discount/100 * var_subtotal)));
				end if;


			select payment_method into var_pay_method from trn_service_head where no_service = var_no_service;
			if var_pay_method = 1 THEN
				select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_cash_service';
			elseif var_pay_method = 2 THEN
				select id_account into var_id_account_head from i_set_account_def where acc_parameter = 'acc_credit_service';
			end if;

if var_total > 0 then
			insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_service,
						var_id_account_head,
						concat('Penjualan Jasa - ',var_no_service),
						var_total);
end if;


		elseif var_detail = 1 THEN
			insert into trn_service_det 
				(no_service,
				number_asc,
				id_service,
				id_employee,
				notes,
				qty,
				price,
				nominal,
				id_curr
				)
		values (var_no_service,
						var_number_asc,
					  var_id_service,
					  var_id_employee,
						var_notes,
						var_qty,
						var_price,
					  var_nominal,
					  var_id_curr
					 );



if varloop = 0 then
			delete from trn_ledger_det where no_ledger = var_no_service  and id_account = var_id_account_det;	
end if;

		
		select id_account into var_id_account_det from mst_service where id_service = var_id_service;
		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_service,
						var_id_account_det,
						var_notes,
						-1*var_nominal);

	elseif var_detail = 2 THEN

		if varloop = 0 then
			delete from trn_service_item_det where no_service = var_no_service;			
		end if;
		insert into trn_service_item_det 
			(no_service,
			 number_asc,
			 id_item,
			 notes
			)
		values (var_no_service,
						var_number_asc,
						var_id_item,
						var_notes
					);

	end if;

	ELSEIF TRANSID = 'DELETE' THEN
			if var_payment_method = 2 then
			delete from ar_status where no_sales = var_no_service;
		end if;
		delete from trn_ledger_det where no_ledger = var_no_service;
		delete from trn_ledger_head where no_ledger = var_no_service;
		delete from trn_service_item_det where no_service = var_no_service;
		delete from trn_service_det where no_service = var_no_service;
		delete from trn_service_head where no_service = var_no_service;	
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_sawal_stock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_sawal_stock`(in var_criteria varchar(120), in var_start_date date, in var_end_date date)
BEGIN

declare stock_awal integer;
declare stock_in_bef_period integer;
declare stock_out_bef_period integer;
declare stock_bef_period integer;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

select balance into stock_awal from i_item_beg_balance where id_item = var_criteria;
select qty into stock_in_bef_period from i_stock_in where id_item = var_criteria
and date_trn < var_start_date;
select qty into stock_out_bef_period from i_stock_out where id_item = var_criteria
and date_trn < var_start_date;

set stock_bef_period = stock_in_bef_period-stock_out_bef_period;

select var_criteria as id_item,stock_bef_period;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_select_opname` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_select_opname`(in var_gudang varchar(120))
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
		
		select a.id_item, a.item_name, a.main_unit,
case when (case when b.balance is null then 0 else b.balance end + 
					 case when c.TotalBeli is null then 0 else c.TotalBeli end - 
					 case when d.TotalJual is null then 0 else d.TotalJual end) is null then 0 else 
(case when b.balance is null then 0 else b.balance end + 
 case when c.TotalBeli is null then 0 else c.TotalBeli end - 
 case when d.TotalJual is null then 0 else d.TotalJual end) end as balance,
 case when a.weight is null then 0 else a.weight end as weight from mst_item a 
inner join i_item_beg_balance b on b.id_item = a.id_item
left join (
	select id_item,case when sum(qty) is null then 0 else sum(qty) end as TotalBeli 
	from i_stock_in GROUP BY id_item order by id_item) c 
on c.id_item = a.id_item
left join (
	select id_item,case when sum(qty) is null then 0 else sum(qty) end as TotalJual 
	from i_stock_out GROUP BY id_item order by id_item) d 
on d.id_item = a.id_item
where a.id_warehouse = var_gudang;


COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_service` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_service`(in var_id_service varchar(25), in var_service_name varchar(60), in var_id_account varchar(25), in var_price double, in var_senior_commission double,in var_junior_commission double, in var_modified_user varchar(120),in var_created_date datetime, in var_modified_date datetime,in var_created_user varchar(120), transid varchar(60),in var_active_status integer, in var_notes varchar(400))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN
	BEGIN
		UPDATE mst_service
		SET 
			service_name = var_service_name,
			id_account = var_id_account,
			price = var_price,
			senior_commission = var_senior_commission,
			junior_commission = var_junior_commission,
			modified_user = var_modified_user,
			created_date = var_created_date,
			modified_date = var_modified_date,
			created_user = var_created_user,
			active_status = var_active_status,
			notes=var_notes
		WHERE
			id_service = var_id_service;
	END;
ELSEIF TRANSID = 'INSERT' THEN
BEGIN
	INSERT INTO mst_service (
		id_service,
		service_name,
		id_account,
		price,
		senior_commission,
		junior_commission,
		modified_user,
		created_date,
		modified_date,
		created_user,
		active_status,
		notes
	)
VALUES
	(
		var_id_service,
		var_service_name,
		var_id_account,
		var_price,
		var_senior_commission,
		var_junior_commission,
		var_modified_user,
		var_created_date,
		var_modified_date,
		var_created_user,
		var_active_status,
		var_notes
	);

END;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	DELETE
FROM
	mst_service
WHERE
	id_service = var_id_service;
END;


END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_setcoa_depproduksi` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_setcoa_depproduksi`(in var_department_id integer, in var_id_account_bdp varchar(60), in var_id_account_material_cost varchar(60), in var_id_account_wip_cost varchar(60), in var_id_account_bop_std varchar(60), in var_id_account_bop_real varchar(60), in var_id_account_directlabor varchar(60),in var_id_account_wages_payable varchar(60), in var_modified_user varchar(120), in var_modified_date datetime, in TRANSID text)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN
	BEGIN
		UPDATE mst_department_produksi
		SET 
			id_account_bdp = var_id_account_bdp,
			id_account_material_cost = var_id_account_material_cost,
			id_account_wip_cost = var_id_account_wip_cost,
			id_account_bop_std = var_id_account_bop_std,
			id_account_bop_real = var_id_account_bop_real,
			id_account_directlabor = var_id_account_directlabor,
			id_account_wages_payable = var_id_account_wages_payable
		WHERE
			department_id = var_department_id;
	END;
END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_setdef_curr` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_setdef_curr`()
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	update mst_currency set flag_default = 1 where id_currency = 'IDR';

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_setup_cashbank` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_setup_cashbank`(in var_id_account varchar(30), in varloop integer,in var_user varchar(120),in var_date date, in i integer)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		if varloop = 0 then
		delete from i_cashbank_setup;
		end if;
		
		if i = 1 then
		insert into i_cashbank_setup(
			 id_account,
			 id_cashbank,
			 modified_by,
			 modified_at
			)
		values(var_id_account,
					 1,
					 var_user,
					 var_date
				   );
		end if;

		if i = 2 then
		
		insert into i_cashbank_setup(
			 id_account,
			 id_cashbank,
			 modified_by,
			 modified_at
			)
		values(var_id_account,
					 2,
					 var_user,
					 var_date
				   );
		end if;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_setup_cashflow` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_setup_cashflow`(in var_id_component varchar(400),in var_id_account varchar(30), in varloop integer, in var_modified_user varchar(200), in var_modified_date datetime)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		delete from tempx_component_cashflow_simrs_det where id_component = var_id_component and id_account = var_id_account;
		
		insert into tempx_component_cashflow_simrs_det(
			 id_component,
			 id_account,
			 modified_user,
			 modified_date
			)
		values(var_id_component,
					 var_id_account,
					 var_modified_user,
					 var_modified_date
				   );

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_setup_coa` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_setup_coa`(in var_acc_parameter varchar(60),in var_id_account varchar(30),in var_notes text , in varloop integer)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		if varloop = 0 then
			delete from i_set_account_def;
		end if;
		

		insert into i_set_account_def(
			 acc_parameter,
			 id_account,
			 notes
			)
		values(
					var_acc_parameter,
					var_id_account,
					var_notes
				   );
		
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_setup_coa_aset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_setup_coa_aset`(in var_id_coa_akumulasi varchar(30), in var_id_coa_aset varchar(30), in var_id_coa_penyusutan varchar(30), in var_id_aset varchar(30))
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

		update mst_aset set id_coa_akumulasi = var_id_coa_akumulasi, id_coa_aset = var_id_coa_aset, id_coa_penyusutan = var_id_coa_penyusutan
		where id_aset = var_id_aset;
		
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_set_ap_prosent` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_set_ap_prosent`(in var_prosentase_not double, in var_prosentase_1 double,in var_prosentase_2 double,in var_prosentase_3 double,in var_prosentase_4 double, in var_prosentase_5 double, in var_modified_date date, in var_modified_user varchar(200))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

update i_set_ap_prosentase set prosentase = var_prosentase_not, modified_date = var_modified_date, modified_user = var_modified_user where id_cadangan = 1;
update i_set_ap_prosentase set prosentase = var_prosentase_1, modified_date = var_modified_date, modified_user = var_modified_user where id_cadangan = 2;
update i_set_ap_prosentase set prosentase = var_prosentase_2, modified_date = var_modified_date, modified_user = var_modified_user where id_cadangan = 3;
update i_set_ap_prosentase set prosentase = var_prosentase_3, modified_date = var_modified_date, modified_user = var_modified_user where id_cadangan = 4;
update i_set_ap_prosentase set prosentase = var_prosentase_4, modified_date = var_modified_date, modified_user = var_modified_user where id_cadangan = 5;
update i_set_ap_prosentase set prosentase = var_prosentase_5, modified_date = var_modified_date, modified_user = var_modified_user where id_cadangan = 6;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_set_ar_prosent` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_set_ar_prosent`(in var_prosentase_not double, in var_prosentase_1 double,in var_prosentase_2 double,in var_prosentase_3 double,in var_prosentase_4 double, in var_prosentase_5 double, in var_modified_date date, in var_modified_user varchar(200))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

update i_set_ar_prosentase set prosentase = var_prosentase_not, modified_date = var_modified_date, modified_user = var_modified_user where id_cadangan = 1;
update i_set_ar_prosentase set prosentase = var_prosentase_1, modified_date = var_modified_date, modified_user = var_modified_user where id_cadangan = 2;
update i_set_ar_prosentase set prosentase = var_prosentase_2, modified_date = var_modified_date, modified_user = var_modified_user where id_cadangan = 3;
update i_set_ar_prosentase set prosentase = var_prosentase_3, modified_date = var_modified_date, modified_user = var_modified_user where id_cadangan = 4;
update i_set_ar_prosentase set prosentase = var_prosentase_4, modified_date = var_modified_date, modified_user = var_modified_user where id_cadangan = 5;
update i_set_ar_prosentase set prosentase = var_prosentase_5, modified_date = var_modified_date, modified_user = var_modified_user where id_cadangan = 6;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_set_itemdisc_det` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_set_itemdisc_det`(in var_id_item varchar(120), in var_id_item_disc varchar(120), in var_qty double, in crud varchar(60), in var_id_unit varchar(30))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

if crud = 'INSERT' then
insert into mst_item_disc (id_item, id_item_disc, qty, id_unit) 
values (var_id_item, var_id_item_disc, var_qty, var_id_unit);
elseif crud = 'UPDATE' THEN
insert into mst_item_disc (id_item, id_item_disc, qty, id_unit) 
values (var_id_item, var_id_item_disc, var_qty, var_id_unit);
elseif crud = 'DELETE' THEN
delete from mst_item_disc where id_item = var_id_item;
end if;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_set_marketing` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_set_marketing`(in var_id_employee varchar(60), in var_modified_user varchar(200), in var_created_date date, in var_modified_date date, in var_created_user varchar(200), transid text)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	INSERT INTO mst_marketing (
		id_employee,
		modified_user,
		created_date,
		modified_date,
		created_user
	)
VALUES
	(
		var_id_employee,
		var_modified_user,
		var_created_date,
		var_modified_date,
		var_created_user
	);



ELSEIF TRANSID = 'DELETE' THEN

	DELETE
FROM
	mst_marketing
WHERE
	id_employee = var_id_employee;




END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_set_unit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_set_unit`(in var_id_item varchar(25), in var_id_unit varchar(15), in var_qty double, in var_id_satuandef varchar(15),in var_notes text, in var_created_user varchar(120), in var_created_date datetime, in var_modified_user varchar(120), in var_modified_date datetime, transid varchar(60))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	UPDATE mst_setunit
SET 
	qty = var_qty,
	notes = var_notes,
	created_user = var_created_user,
	created_date = var_created_date,
	modified_user = var_modified_user,
	modified_date = var_modified_date
WHERE
	id_item = var_id_item
AND 
	id_unit = var_id_unit
AND 
	id_satuandef=var_id_satuandef;


ELSEIF TRANSID = 'INSERT' THEN

	INSERT INTO mst_setunit (
		id_item,
		id_unit,	
		qty,
		id_satuandef,
		notes,
		created_user,
		created_date,
		modified_user,
		modified_date
	)
VALUES
	(
		var_id_item,
		var_id_unit,
		var_qty,
		var_id_satuandef,
		var_notes,
		var_created_user,
		var_created_date,
		var_modified_user,
		var_modified_date
	);


ELSEIF TRANSID = 'DELETE' THEN

	DELETE
FROM
	mst_setunit
WHERE
	id_item = var_id_item
AND 
	id_unit = var_id_unit
AND 
	id_satuandef=var_id_satuandef;



END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_simulasi_cek_aset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_simulasi_cek_aset`(in var_id_golongan varchar(30), in var_nilai_perolehan double, in var_tgl_perolehan date)
BEGIN
declare var_masa_penyusutan double;
declare var_masa_manfaat double;
declare var_th_penyusutan double;
declare var_rate_penyusutan double;
declare var_sisa_nilai_buku double;
declare var_total_penyusutan double;
declare var_tgl_server date;
declare var_bln_server double;
declare var_th_server double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

set var_tgl_server = (select now());
set var_bln_server = month(var_tgl_server);
set var_th_server = year(var_tgl_server);

select rate_penyusutan into var_rate_penyusutan from mst_golaset where id_golongan = var_id_golongan;
select masa_manfaat into var_masa_manfaat from mst_golaset where id_golongan = var_id_golongan;

if var_th_server = year(var_tgl_perolehan) THEN
		set var_masa_penyusutan = MONTH(var_tgl_server) - month(var_tgl_perolehan);
elseif var_th_server > year(var_tgl_perolehan) THEN
		if var_bln_server > month(var_tgl_perolehan) THEN
			set var_th_penyusutan = var_th_server -  (year(var_tgl_perolehan));
			set var_masa_penyusutan = (var_th_penyusutan * 12) + var_bln_server - month(var_tgl_perolehan);
		elseif var_bln_server < month(var_tgl_perolehan) then 
			set var_th_penyusutan = var_th_server -  (year(var_tgl_perolehan)) -1;
			set var_masa_penyusutan = (var_th_penyusutan * 12) + 12 - (month(var_tgl_perolehan)) + var_bln_server;
		elseif var_bln_server = month(var_tgl_perolehan) THEN
			set var_th_penyusutan = var_th_server -  (year(var_tgl_perolehan));
			set var_masa_penyusutan = var_th_penyusutan * 12;
		end if;
ELSE
		set var_masa_penyusutan = 0;
end if;

set var_sisa_nilai_buku = var_nilai_perolehan - (var_nilai_perolehan * var_rate_penyusutan/100/12 * var_masa_penyusutan);
set var_total_penyusutan = var_nilai_perolehan * var_rate_penyusutan/100/12 * var_masa_penyusutan;

select var_nilai_perolehan as harga_perolehan, var_masa_manfaat as masa_manfaat, concat(var_rate_penyusutan,' %') as rate_depr_th, concat(var_masa_penyusutan,' Bulan') as masa_penyusutan, var_rate_penyusutan/100 * var_nilai_perolehan as depr_th,
var_total_penyusutan as akumulasi_penyusutan, var_sisa_nilai_buku as nilai_buku;


COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_standard_cost` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_standard_cost`(in var_id_cost varchar(25), in var_cost_name varchar(60),in var_cost_def double,in var_flag_active integer,in var_notes text,in var_id_account varchar(30), in var_modified_user varchar(120),in var_created_date datetime,in var_modified_date datetime, in var_created_user varchar(120),in  transid varchar(60), in var_id_account_hpp varchar(60))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

BEGIN
	UPDATE mst_standard_cost
SET cost_name = var_cost_name,
cost_def = var_cost_def,
flag_active = var_flag_active,
notes = var_notes,
id_account=var_id_account,
modified_user = var_modified_user,
created_date = var_created_date,
modified_date = var_modified_date,
created_user = var_created_user,
id_account_hpp = var_id_account_hpp
WHERE
	id_cost = var_id_cost;
END;


ELSEIF TRANSID = 'INSERT' THEN

BEGIN
	INSERT INTO mst_standard_cost (
		id_cost,
cost_name,
cost_def,
flag_active,
notes,
id_account,
modified_user,
created_date,
modified_date,
created_user,
id_account_hpp
	)
VALUES
	(
		var_id_cost,
var_cost_name,
var_cost_def,
var_flag_active,
var_notes,
var_id_account,
var_modified_user,
var_created_date,
var_modified_date,
var_created_user,
var_id_account_hpp
	);


END;


ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	DELETE
FROM
	mst_standard_cost
WHERE
	id_cost = var_id_cost;


END;


END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_stock_adjust` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_stock_adjust`(in var_no_adjust_stock varchar(30), in var_date_trn date, in var_id_warehouse varchar(30),in var_total_adjust double, in var_modified_user varchar(120), in var_created_date date, in  var_modified_date date,  in var_created_user varchar(120),in var_id_item varchar(30), in var_notes text, in var_positive double, in var_negative double, in transid varchar(60), in varloop integer, in var_detail integer, in var_desc text,in var_id_unit varchar(30), in var_weight_plus double, in var_weight_minus double)
BEGIN
declare var_id_account_head varchar(30);
declare var_id_account_det varchar(30);
declare var_id_account_cogs varchar(30);
declare var_id_account_disc varchar(30);
declare var_id_account_tax varchar(30);
declare var_id_account_sales varchar(30);
declare var_cogs double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from trn_ledger_det where no_ledger = var_no_adjust_stock;
		delete from trn_ledger_head where no_ledger = var_no_adjust_stock;
		delete from i_stock_in where no_stock_in = var_no_adjust_stock;
		delete from i_stock_out where no_stock_out = var_no_adjust_stock;
		delete from trn_adjust_stock_det where no_adjust_stock = var_no_adjust_stock;
		delete from trn_adjust_stock_head where no_adjust_stock = var_no_adjust_stock;
		
		insert into trn_adjust_stock_head(
			 no_adjust_stock,
			 date_trn,
			 id_warehouse,
			 total_adjust,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 notes
			)
		values(var_no_adjust_stock,
			 var_date_trn,
			 var_id_warehouse,
			 var_total_adjust,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
		   var_created_user,
			 var_desc
			);

			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_adjust_stock,
					 var_date_trn,
					 var_desc,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Adjust Stock Form',
					 var_total_adjust);

	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_adjust_stock_det where no_adjust_stock = var_no_adjust_stock;			
		end if;
		insert into trn_adjust_stock_det 
			(no_adjust_stock,
			id_item,
			notes,
			positive,
			negative,
			id_unit,
			weight_plus,
			weight_minus
			)
		values (var_no_adjust_stock,
				var_id_item,
				var_notes,
				var_positive,
				var_negative,
				var_id_unit,
				var_weight_plus,
				var_weight_minus
			);
		
			if var_weight_plus = 0 and var_weight_minus = 0 then
				update mst_item set weight = weight + (var_weight_plus - var_weight_minus) where id_item = var_id_item;
			end if;
		end if;

if var_positive > 0 then
		insert into i_stock_in 
		(no_stock_in,
		 date_trn,
		 id_item,
		 qty,
		 id_unit,
		 cogs,
		 price,
		 id_warehouse
		)
		values 
		(var_no_adjust_stock,
		 var_date_trn,
		 var_id_item,
		 var_positive,
		 var_id_unit,
		 0,0,
		 var_id_warehouse
		);

call sp_calculate_cogs(var_date_trn, var_id_item);
		select cogs into var_cogs from i_cogs where id_item = var_id_item and date_trn < var_date_trn order by date_trn desc limit 1;
		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;

		
		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;

	if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_adjust_stock and id_account in (var_id_account_cogs);
	end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_adjust_stock,
						var_id_account_cogs,
						concat('Adjust Stock - ',var_id_item),
						-1*var_cogs);

		if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_adjust_stock and id_account =  var_id_account_det;
		end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_adjust_stock,
						var_id_account_det,
						concat('Adjust Stock - ',var_id_item),
						var_cogs);

end if;

if var_negative > 0 THEN
	insert into i_stock_out
		(no_stock_out,
		 date_trn,
		 id_item,
		 qty,
		 id_unit,
		 cogs,
		 price,
		 id_warehouse
		)
		values 
		(var_no_adjust_stock,
		 var_date_trn,
		 var_id_item,
		 var_negative,
		 var_id_unit,
		 0,0,
		 var_id_warehouse
		);

call sp_calculate_cogs(var_date_trn, var_id_item);
		select cogs into var_cogs from i_cogs where id_item = var_id_item and date_trn < var_date_trn order by date_trn desc limit 1;
		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;

		
		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;


	if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_adjust_stock and id_account in (var_id_account_cogs);
	end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_adjust_stock,
						var_id_account_cogs,
						concat('Adjust Stock - ',var_id_item),
						var_cogs);

		if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_adjust_stock and id_account =  var_id_account_det;
		end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_adjust_stock,
						var_id_account_det,
						concat('Adjust Stock - ',var_id_item),
						-1*var_cogs);

end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
		insert into trn_adjust_stock_head(
			 no_adjust_stock,
			 date_trn,
			 id_warehouse,
			 total_adjust,
			 modified_user,
			 created_date,
			 modified_date,
			 created_user,
			 notes
			)
		values(var_no_adjust_stock,
			 var_date_trn,
			 var_id_warehouse,
			 var_total_adjust,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
		   var_created_user,
			 var_desc
			);

			insert into trn_ledger_head(
				no_ledger,
				date_trn,
				description,
				created_user,
				created_date,
				modified_user,
				modified_date,
				post_from,
				total
			)
		values(var_no_adjust_stock,
					 var_date_trn,
					 var_desc,
				   var_created_user,
					 var_created_date,
					 var_modified_user,
					 var_modified_date,
					 'Adjust Stock Form',
					 var_total_adjust);

	elseif var_detail = 1 THEN
		insert into trn_adjust_stock_det 
			(no_adjust_stock,
			id_item,
			notes,
			positive,
			negative,
			id_unit,
			weight_plus,
			weight_minus
			)
		values (var_no_adjust_stock,
				var_id_item,
				var_notes,
				var_positive,
				var_negative,
				var_id_unit,
				var_weight_plus,
				var_weight_minus
			);
			if var_weight_plus = 0 and var_weight_minus = 0 then
				update mst_item set weight = weight + (var_weight_plus - var_weight_minus) where id_item = var_id_item;
			end if;
	end if;

if var_positive > 0 then
		insert into i_stock_in 
		(no_stock_in,
		 date_trn,
		 id_item,
		 qty,
		 id_unit,
		 cogs,
		 price,
		 id_warehouse
		)
		values 
		(var_no_adjust_stock,
		 var_date_trn,
		 var_id_item,
		 var_positive,
		 var_id_unit,
		 0,0,
		 var_id_warehouse
		);

call sp_calculate_cogs(var_date_trn, var_id_item);
		select cogs into var_cogs from i_cogs where id_item = var_id_item and date_trn < var_date_trn order by date_trn desc limit 1;
		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;

		
		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;

	if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_adjust_stock and id_account in (var_id_account_cogs);
	end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_adjust_stock,
						var_id_account_cogs,
						concat('Adjust Stock - ',var_id_item),
						-1*var_cogs);

		if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_adjust_stock and id_account =  var_id_account_det;
		end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_adjust_stock,
						var_id_account_det,
						concat('Adjust Stock - ',var_id_item),
						var_cogs);

end if;

if var_negative > 0 THEN
	insert into i_stock_out
		(no_stock_out,
		 date_trn,
		 id_item,
		 qty,
		 id_unit,
		 cogs,
		 price,
		 id_warehouse
		)
		values 
		(var_no_adjust_stock,
		 var_date_trn,
		 var_id_item,
		 var_negative,
		 var_id_unit,
		 0,0,
		 var_id_warehouse
		);

call sp_calculate_cogs(var_date_trn, var_id_item);
		select cogs into var_cogs from i_cogs where id_item = var_id_item and date_trn < var_date_trn order by date_trn desc limit 1;
		
		select id_account into var_id_account_det from mst_item where id_item = var_id_item;

		
		select id_account_cogs into var_id_account_cogs from mst_item where id_item = var_id_item;


	if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_adjust_stock and id_account in (var_id_account_cogs);
	end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_adjust_stock,
						var_id_account_cogs,
						concat('Adjust Stock - ',var_id_item),
						var_cogs);

		if varloop = 0 THEN
			delete from trn_ledger_det where no_ledger = var_no_adjust_stock and id_account =  var_id_account_det;
		end if;

		insert into trn_ledger_det 
			(no_ledger,
			 id_account,
			 notes,
			 nominal
			)
		values (var_no_adjust_stock,
						var_id_account_det,
						concat('Adjust Stock - ',var_id_item),
						- 1*var_cogs);

end if;


	ELSEIF TRANSID = 'DELETE' THEN

		delete from trn_ledger_det where no_ledger = var_no_adjust_stock;
		delete from trn_ledger_head where no_ledger = var_no_adjust_stock;
		delete from i_stock_in where no_stock_in = var_no_adjust_stock;
		delete from i_stock_out where no_stock_out = var_no_adjust_stock;
		delete from trn_adjust_stock_det where no_adjust_stock = var_no_adjust_stock;
		delete from trn_adjust_stock_head where no_adjust_stock = var_no_adjust_stock;
		
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_stock_opname` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_stock_opname`(in var_no_opname varchar(30), in var_date_trn date, in var_id_warehouse varchar(30), in var_id_item varchar(30), in var_id_unit varchar(30), in var_qty_onhand integer, in var_qty_opname integer, in var_notes text, in TRANSID varchar(120), in var_detail integer, in var_weight_onhand double, in var_weight_opname double)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from i_opname_det where no_opname = var_no_opname;
		delete from i_opname_head where no_opname = var_no_opname;
		
		insert into i_opname_head(
			 no_opname,
			 date_trn,
			 id_warehouse
			)
		values(var_no_opname,
					 var_date_trn,
					 var_id_warehouse
				   );
	elseif var_detail = 1 THEN
		insert into i_opname_det 
			(no_opname,
			id_item,
			id_unit,
			qty_onhand,
			qty_opname,
			notes,
			weight_onhand,
			weight_opname
			)
		values (var_no_opname,
						var_id_item,
						var_id_unit,
						var_qty_onhand,
						var_qty_opname,
						var_notes,
						var_weight_onhand,
						var_weight_opname
						);
		end if;
	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 THEN
			insert into i_opname_head(
			 no_opname,
			 date_trn,
			 id_warehouse
			)
			values(var_no_opname,
			 var_date_trn,
			 var_id_warehouse
			);
	elseif var_detail = 1 THEN
		insert into i_opname_det 
			(no_opname,
			id_item,
			id_unit,
			qty_onhand,
			qty_opname,
			notes,
			weight_onhand,
			weight_opname
			)
		values (var_no_opname,
						var_id_item,
						var_id_unit,
						var_qty_onhand,
						var_qty_opname,
						var_notes,
						var_weight_onhand,
						var_weight_opname
						);
	end if;

	ELSEIF TRANSID = 'DELETE' THEN

			delete from i_opname_det where no_opname = var_no_opname;
			delete from i_opname_head where no_opname = var_no_opname;
			
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_stock_transfer` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_stock_transfer`(in var_no varchar(60), in var_date_trn date, in var_id_warehouse_from varchar(30),in var_id_warehouse_to varchar(30), in var_modified_user varchar(120), in var_created_date date, in  var_modified_date date,  in var_created_user varchar(120),in var_id_item varchar(30), in var_notes text, in var_qty double, in var_unit varchar(30), in transid varchar(60), in varloop integer, in var_detail integer, in var_desc text)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then
		delete from i_stock_in where no_stock_in = var_no;
		delete from i_stock_out where no_stock_out = var_no;
		delete from trn_transfer_stock_det where no_tranfer_stock = var_no;
		delete from trn_transfer_stock_head where no_tranfer_stock = var_no;
		
		insert into trn_transfer_stock_head(
			 no_tranfer_stock,
			 date_trn,
			 id_warehouse_from,
			 id_warehouse_to,
			 notes,
			 modified_user,
			 created_date,
			 modified_date,
		   created_user
			)
		values(var_no,
			 var_date_trn,
			 var_id_warehouse_from,
			 var_id_warehouse_to,
			 var_desc,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
		   var_created_user
			);
		
	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_transfer_stock_det where no_tranfer_stock = var_no;			
		end if;
		insert into trn_transfer_stock_det 
			(no_tranfer_stock,
			 id_item,
			 qty,
			 unit,
			 notes
			)
		values (var_no,
						var_id_item,
						var_qty,
						var_unit,
						var_notes
						);

		insert into i_stock_in 
		(no_stock_in,
		 date_trn,
		 id_item,
		 qty,
		 id_unit,
		 cogs,
		 price,
		 id_warehouse
		)
		values 
		(var_no,
		 var_date_trn,
		 var_id_item,
		 var_qty,
		 var_unit,
		 0,0,
		 var_id_warehouse_to
		);

insert into i_stock_out
		(no_stock_out,
		 date_trn,
		 id_item,
		 qty,
		 id_unit,
		 cogs,
		 price,
		 id_warehouse
		)
		values 
		(var_no,
		 var_date_trn,
		 var_id_item,
		 var_qty,
		 var_unit,
		 0,0,
		 var_id_warehouse_from
		);
end if;

	ELSEIF TRANSID = 'INSERT' THEN
		if var_detail = 0 then
		
		insert into trn_transfer_stock_head(
			 no_tranfer_stock,
			 date_trn,
			 id_warehouse_from,
			 id_warehouse_to,
			 notes,
			 modified_user,
			 created_date,
			 modified_date,
		   created_user
			)
		values(var_no,
			 var_date_trn,
			 var_id_warehouse_from,
			 var_id_warehouse_to,
			 var_desc,
			 var_modified_user,
			 var_created_date,
			 var_modified_date,
		   var_created_user
			);
		
	elseif var_detail = 1 THEN
		if varloop = 0 then
			delete from trn_transfer_stock_det where no_tranfer_stock = var_no;			
		end if;
		insert into trn_transfer_stock_det 
			(no_tranfer_stock,
			 id_item,
			 qty,
			 unit,
			 notes
			)
		values (var_no,
						var_id_item,
						var_qty,
						var_unit,
						var_notes
						);

		insert into i_stock_in 
		(no_stock_in,
		 date_trn,
		 id_item,
		 qty,
		 id_unit,
		 cogs,
		 price,
		 id_warehouse
		)
		values 
		(var_no,
		 var_date_trn,
		 var_id_item,
		 var_qty,
		 var_unit,
		 0,0,
		 var_id_warehouse_to
		);

insert into i_stock_out
		(no_stock_out,
		 date_trn,
		 id_item,
		 qty,
		 id_unit,
		 cogs,
		 price,
		 id_warehouse
		)
		values 
		(var_no,
		 var_date_trn,
		 var_id_item,
		 var_qty,
		 var_unit,
		 0,0,
		 var_id_warehouse_from
		);
end if;


	ELSEIF TRANSID = 'DELETE' THEN

		delete from i_stock_in where no_stock_in = var_no;
		delete from i_stock_out where no_stock_out = var_no;
		delete from trn_transfer_stock_det where no_tranfer_stock = var_no;
		delete from trn_transfer_stock_head where no_tranfer_stock = var_no;
		
	END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_supplier` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_supplier`(in var_id_supplier varchar(25),in var_first_name varchar(60),in var_last_name varchar(60),in var_address varchar(255),in var_city  varchar(120),in var_state varchar(255),in var_postal_code  varchar(25),in  var_country varchar(120),in var_phone1  varchar(60),in  var_phone2  varchar(60),in  var_phone3  varchar(60),in var_fax varchar(60),in var_email varchar(120),in var_website varchar(120),in  var_photo text,in var_id_account varchar(25),in var_contact_person varchar(120),in var_credit_limit double,in var_def_due_date date,in var_def_payment_method   int,in  var_modified_user varchar(120),in var_created_date date,in var_modified_date date,in var_created_user varchar(120),in transid varchar(60),var_status integer, in var_notes text, in var_ap_balance double, in var_flag_credit_limit integer)
BEGIN

declare ar_balance_before double;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	BEGIN
	

		UPDATE mst_supplier
			SET first_name = var_first_name,
			last_name = var_last_name,
			address = var_address,
			city = var_city,
			state = var_state,
			postal_code = var_postal_code,
			country = var_country,
			phone1 = var_phone1,
			phone2 = var_phone2,
			phone3 = var_phone3,
			fax = var_fax,
			email = var_email,
			website = var_website,
			photo = var_photo,
			id_account = var_id_account,
			notes=var_notes,
			contact_person = var_contact_person,
			credit_limit = var_credit_limit,
			def_due_date = var_def_due_date,
			def_payment_method = var_def_payment_method,
			`status` = var_status,
			modified_user = var_modified_user,
			created_date = var_created_date,
			modified_date = var_modified_date,
			created_user = var_created_user,
			ap_balance = var_ap_balance,		
			flag_credit_limit = var_flag_credit_limit

		WHERE
			id_supplier = var_id_supplier;
	
	
			

	END;


ELSEIF TRANSID = 'INSERT' THEN
	BEGIN
		INSERT INTO mst_supplier (
			id_supplier,
			first_name,
			last_name,
			address,
			city,
			state,
			postal_code,
			country,
			phone1,
			phone2,
			phone3,
			fax,
			email,
			website,
			photo,
			id_account,
			notes,
			contact_person,
			credit_limit,
			def_due_date,
			def_payment_method,
			`status`,
			modified_user,
			created_date,
			modified_date,
			created_user,
			ap_balance,
			flag_credit_limit
		)
	VALUES
		(
			var_id_supplier,
			var_first_name,
			var_last_name,
			var_address,
			var_city,
			var_state,
			var_postal_code,
			var_country,
			var_phone1,
			var_phone2,
			var_phone3,
			var_fax,
			var_email,
			var_website,
			var_photo,
			var_id_account,
			var_notes,
			var_contact_person,
			var_credit_limit,
			var_def_due_date,
			var_def_payment_method,
			var_status,
			var_modified_user,
			var_created_date,
			var_modified_date,
			var_created_user,
			var_ap_balance,
			var_flag_credit_limit
		);
		
		
	END;

ELSEIF TRANSID = 'DELETE' THEN

select case when ap_balance is null then 0 else ap_balance end into ar_balance_before from mst_supplier where id_supplier = var_id_supplier;

	

	BEGIN
	DELETE
		FROM
			mst_supplier
		WHERE
			id_supplier = var_id_supplier;
		
			
	END;

END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_test_bigdata` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_test_bigdata`()
BEGIN

	declare i integer;

	set i = 0;
	repeat 
			insert into tesdata
			select 'tesnama', 'tesalamat', 'testelepon', i;
			set i = i+1;
	until i = 100000 end repeat;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_unit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_unit`(in var_id_unit varchar(25), in var_unit varchar(60), in var_notes varchar(255), in var_created_user varchar(120), in var_created_date datetime, in var_modified_user varchar(120), in var_modified_date datetime, in transid varchar(60), in var_flag_default integer)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

BEGIN
	UPDATE mst_unit
SET 
	unit = var_unit,
	notes =var_notes,
	flag_default = var_flag_default,
	modified_user = var_modified_user,
	modified_date = var_modified_date
WHERE	
	id_unit = var_id_unit;

END;


ELSEIF TRANSID = 'INSERT' THEN

BEGIN
	INSERT INTO mst_unit (
		id_unit,
		unit,
		notes,	
		flag_default,
		created_user,
		created_date,
		modified_user,
		modified_date
	)
VALUES
	(
		var_id_unit,
		var_unit,
		var_notes,	
		var_flag_default,
		var_created_user,
		var_created_date,
		var_modified_user,
		var_modified_date
	);



END;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN

	DELETE
FROM
	mst_unit
WHERE
	id_unit = var_id_unit;

END;
END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_unit_konversi` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_unit_konversi`(in var_id_item varchar(60),var_id_unit varchar(60),in var_notes text, in var_qty double, in var_date date, in var_user varchar(120), in i integer)
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

	if i = 0 then
		delete from mst_setunit where id_item = var_id_item;
end if;

	insert into mst_setunit (
		id_item,
		id_unit,
		qty,
		notes,
		modified_user,
		modified_date
	)
	values (
		var_id_item,
		var_id_unit,
		var_qty,
		var_notes,
		var_user,
		var_date
	);
	
	if var_qty =1 then
		update mst_item set main_unit = var_id_unit where id_item = var_id_item;
	end IF;
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_update_i_cogs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_update_i_cogs`()
BEGIN
	declare cogs double;
	DECLARE done INT DEFAULT FALSE;
	declare var_date_trn date;
	declare var_id_item varchar(30);
	declare var_item_name varchar(300);
	declare var_id_item_temp varchar(30);
	declare var_no_bukti varchar(120);
	declare var_masuk double;
	declare var_keluar double;
	declare var_price double;
	declare var_saldo double;
	declare temp_saldo double;
	declare var_nmb double;
	DECLARE var_notes text;
	DECLARE var_company text;
	declare qty double;
	declare i integer;
	declare temp_price double;
	DECLARE cur2 CURSOR FOR select no_bukti,date_trn,id_item,item_name,masuk,keluar,price,saldo,company,notes,nmb_asc 
													from lap_mutasi_hpp order by id_item asc,date_trn asc;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

	set i = 0;
	OPEN cur2;
  REPEAT
  FETCH cur2 INTO var_no_bukti,var_date_trn,var_id_item,var_item_name,var_masuk,var_keluar,var_price,var_saldo,var_company,var_notes,var_nmb;
  IF NOT done THEN
	if var_notes in ('Penjualan','Retur Penjualan','Koreksi Stock','Pindah Gudang','Penjualan Kasir') then
		if var_no_bukti = 'Saldo Awal' then 
			set i = 0;
		end if;
		if i = 1 THEN
			
			update lap_mutasi_hpp set nmb_asc = i where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
		elseif i > 1 THEN
			
			update lap_mutasi_hpp set nmb_asc = i where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
		end if;
	else
		if var_no_bukti = 'Saldo Awal' then 
			set i = 0;
		end if;
		if i = 1 THEN
			
			update lap_mutasi_hpp set nmb_asc = i where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
		elseif i > 1 THEN
			
			update lap_mutasi_hpp set nmb_asc = i where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
		end if;
	end if;
	set i = i+1;
	END IF;
			
	UNTIL done END REPEAT;
	CLOSE cur2;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_update_i_cogs2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_update_i_cogs2`()
BEGIN
	declare cogs double;
	DECLARE done INT DEFAULT FALSE;
	declare var_date_trn date;
	declare var_id_item varchar(30);
	declare var_item_name varchar(300);
	declare var_id_item_temp varchar(30);
	declare var_no_bukti varchar(120);
	declare var_masuk double;
	declare var_keluar double;
	declare var_price double;
	declare var_saldo double;
	declare temp_saldo double;
	declare temp_saldo2 double;
	declare var_nmb double;
	DECLARE var_notes text;
	DECLARE var_company text;
	declare qty double;
	declare i integer;
	declare temp_price double;
	declare temp_price2 double;
	DECLARE cur2 CURSOR FOR select no_bukti,date_trn,id_item,item_name,masuk,keluar,price,saldo,company,notes,nmb_asc 
													from lap_mutasi_hpp order by id_item asc,nmb_asc asc;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

	set i = 0;
	OPEN cur2;
  REPEAT
  FETCH cur2 INTO var_no_bukti,var_date_trn,var_id_item,var_item_name,var_masuk,var_keluar,var_price,var_saldo,var_company,var_notes,var_nmb;
  IF NOT done THEN
	if var_notes in ('Penjualan','Retur Penjualan','Koreksi Stock','Pindah Gudang','Penjualan Kasir') then
		if var_no_bukti = 'Saldo Awal' then 
			set i = 0;
		end if;
		if i = 1 THEN
			select price into cogs from lap_mutasi_hpp where nmb_asc = 0 and id_item = var_id_item;
			select price into temp_price from lap_mutasi_hpp where nmb_asc = i and id_item = var_id_item;
			if cogs > 0 then
				update lap_mutasi_hpp set price = cogs where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
			ELSE
				update lap_mutasi_hpp set price = temp_price where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
			end if;
			update lap_mutasi_hpp set price_in = temp_price where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
			update lap_mutasi_hpp set price_out = temp_price where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
		elseif i > 1 THEN
			select price into temp_price from lap_mutasi_hpp where nmb_asc = i and id_item = var_id_item;
			select price into temp_price2 from lap_mutasi_hpp where nmb_asc = i-1 and id_item = var_id_item;
			select saldo into temp_saldo from lap_mutasi_hpp where nmb_asc = i-1 and id_item = var_id_item;
			set cogs = round(((temp_saldo * temp_price2)+(temp_price * abs(var_masuk - var_keluar)))/(temp_saldo + abs(var_masuk - var_keluar)),0);
			update lap_mutasi_hpp set price = cogs where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
			update lap_mutasi_hpp set price_in = temp_price where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
			update lap_mutasi_hpp set price_out = temp_price where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
		end if;
	else
		if var_no_bukti = 'Saldo Awal' then 
			set i = 0;
		end if;
		if i = 1 THEN
			select price into cogs from lap_mutasi_hpp where nmb_asc = 0 and id_item = var_id_item;
			select price into temp_price from lap_mutasi_hpp where nmb_asc = i and id_item = var_id_item;
			if cogs > 0 then
				update lap_mutasi_hpp set price = cogs where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
			ELSE
				update lap_mutasi_hpp set price = temp_price where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
			end if;
			update lap_mutasi_hpp set price_in = temp_price where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
			update lap_mutasi_hpp set price_out = temp_price where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
		elseif i > 1 THEN
			select price into temp_price from lap_mutasi_hpp where nmb_asc = i and id_item = var_id_item;
			select price into temp_price2 from lap_mutasi_hpp where nmb_asc = i-1 and id_item = var_id_item;
			select saldo into temp_saldo from lap_mutasi_hpp where nmb_asc = i-1 and id_item = var_id_item;
			set cogs = round(((temp_saldo * temp_price2)+(temp_price * abs(var_masuk - var_keluar)))/(temp_saldo + abs(var_masuk - var_keluar)),0);
			update lap_mutasi_hpp set price = cogs where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
			update lap_mutasi_hpp set price_in = temp_price where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
			update lap_mutasi_hpp set price_out = temp_price where id_item = var_id_item and no_bukti = var_no_bukti and nmb_asc = var_nmb;
		end if;
	end if;
	
	set i = i+1;
	END IF;
			
	UNTIL done END REPEAT;
	CLOSE cur2;
	

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_update_i_cogs3` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_update_i_cogs3`()
BEGIN
	declare cogs double;
	DECLARE done INT DEFAULT FALSE;
	declare var_date_trn date;
	declare var_id_item varchar(30);
	declare var_item_name varchar(300);
	declare var_id_item_temp varchar(30);
	declare var_no_bukti varchar(120);
	declare var_masuk double;
	declare var_keluar double;
	declare var_price double;
	declare var_saldo double;
	declare temp_saldo double;
	declare var_nmb double;
	DECLARE var_notes text;
	DECLARE var_company text;
	declare qty_in,qty_out double;
	declare i integer;
	declare temp_price double;
	declare temp_price2 double;
	DECLARE cur2 CURSOR FOR select no_bukti,date_trn,id_item,item_name,masuk,keluar,price,saldo,company,notes,nmb_asc 
													from lap_mutasi_hpp order by id_item asc,date_trn asc;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

	set i = 0;
	OPEN cur2;
  REPEAT
  FETCH cur2 INTO var_no_bukti,var_date_trn,var_id_item,var_item_name,var_masuk,var_keluar,var_price,var_saldo,var_company,var_notes,var_nmb;
  IF NOT done THEN
		if var_no_bukti = 'Saldo Awal' then 
			set i = 0;
			set temp_saldo = abs(var_masuk - var_keluar);
		end if;
		if i > 0 THEN
			select masuk into qty_in from lap_mutasi_hpp where id_item = var_id_item and nmb_asc = var_nmb;
			select keluar into qty_out from lap_mutasi_hpp where id_item = var_id_item and nmb_asc = var_nmb;
			select saldo into temp_saldo from lap_mutasi_hpp where id_item = var_id_item and nmb_asc = var_nmb-1;
			set temp_saldo = temp_saldo + qty_in - qty_out;
			update lap_mutasi_hpp set saldo = temp_saldo where id_item = var_id_item and nmb_asc = var_nmb;
		end if;
	set i = i+1;
	END IF;
			
	UNTIL done END REPEAT;
	CLOSE cur2;
	
COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_user` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_user`(in var_id_unit varchar(25), in var_unit varchar(60), in var_notes varchar(255), in var_created_user varchar(120), in var_created_date datetime, in var_modified_user varchar(120), in var_modified_date datetime, transid varchar(60))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

BEGIN
	UPDATE mst_user
SET 
	password = var_password,
	created_user = var_created_user,
	created_date = var_created_date,
	modified_user = var_modified_user,
	modified_date = var_modified_date
WHERE	
	username = var_username;
END;


ELSEIF TRANSID = 'INSERT' THEN

BEGIN
	INSERT INTO mst_user (
		username,
		password,
		created_user,
		created_date,
		modified_user,
		modified_date
	)
VALUES
	(
		var_username,
		var_password,
		var_created_user,
		var_created_date,
		var_modified_user,
		var_modified_date
	);


END;

ELSEIF TRANSID = 'DELETE' THEN

BEGIN
	DELETE
FROM
	mst_user
WHERE
	username = var_username;
END;

END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_aktiva` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_aktiva`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
	
CREATE TABLE if not EXISTS temp_aktiva (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,

`saldo`  double NULL DEFAULT NULL 
);

delete from temp_aktiva;

	


if date_filter = 1 then
insert into temp_aktiva
 select b.id_account, 
b.account_name, b.parent, case when b.def_position = 'D' then 
(b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) -
(case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)  
when b.def_position = 'K' then 
(b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)  - 
(case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)
end as saldo
from  mst_account b 
left join (select i.no_ledger,y.id_account,y.nominal from trn_ledger_head i inner join trn_ledger_det y on y.no_ledger = i.no_ledger
where (i.date_trn between '1900-01-01' and var_end_date)) a on a.id_account = b.id_account
where b.flag_header=0
and b.is_balance_sheet = 1 and b.is_income = 0 and b.golongan=1
group by b.id_account
having saldo <> 0
order by b.id_account;
elseif date_filter = 0 THEN
insert into temp_aktiva
 select b.id_account, 
b.account_name, b.parent, case when b.def_position = 'D' then 
(b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) -
(case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)  
when b.def_position = 'K' then 
(b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)  - 
(case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)
end as saldo
from  mst_account b 
left join trn_ledger_det a on a.id_account = b.id_account
left join trn_ledger_head c on c.no_ledger = a.no_ledger
where b.is_balance_sheet = 1 and b.is_income = 0 and b.golongan='1' and b.flag_header=0
group by b.id_account
having saldo <> 0
order by b.id_account;
end if;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_aktiva_consol` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_aktiva_consol`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;

	
	

CREATE TABLE if not EXISTS temp_aktiva_consol (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,
`account_parent`  varchar(255) NULL DEFAULT NULL ,
`saldo`  double NULL DEFAULT NULL 
);

delete from temp_aktiva_consol;

if date_filter = 1 then
insert into temp_aktiva_consol
 select b.id_account, 
b.account_name, b.parent,x.account_name, case when b.def_position = 'D' then 
(b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) -
(case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)  
when b.def_position = 'K' then 
(b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)  - 
(case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)
end as saldo
from  mst_account b 
left join trn_ledger_det_consol a on a.id_account = b.id_account
left join trn_ledger_head_consol c on c.no_ledger = a.no_ledger
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where (c.date_trn between var_start_date and var_end_date) and b.flag_header=0
and b.is_balance_sheet = 1 and b.is_income = 0 and left(b.id_account,1)='1'
group by b.id_account
order by b.id_account;
elseif date_filter = 0 THEN
insert into temp_aktiva_consol
 select b.id_account, 
b.account_name, b.parent,x.account_name, case when b.def_position = 'D' then 
(b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) -
(case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)  
when b.def_position = 'K' then 
(b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)  - 
(case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)
end as saldo
from  mst_account b 
left join trn_ledger_det_consol a on a.id_account = b.id_account
left join trn_ledger_head_consol c on c.no_ledger = a.no_ledger
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 1 and b.is_income = 0 and left(b.id_account,1)='1' and b.flag_header=0
group by b.id_account
order by b.id_account;
end if;


END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_aktiva_tahunlalu` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_view_aktiva_tahunlalu`(in var_start_date date, in var_end_date date, in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
	
CREATE TABLE if not EXISTS temp_aktiva_tahunlalu (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,
`saldo`  double NULL DEFAULT NULL 
);

delete from temp_aktiva_tahunlalu;

if date_filter = 1 then
insert into temp_aktiva_tahunlalu
 select b.id_account, 
b.account_name, b.parent, case when b.def_position = 'D' then 
(b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) -
(case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)  
when b.def_position = 'K' then 
(b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)  - 
(case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)
end as saldo
from  mst_account b 
left join (select i.no_ledger,y.id_account,y.nominal from trn_ledger_head i inner join trn_ledger_det y on y.no_ledger = i.no_ledger
where (i.date_trn between '1900-01-01' and var_end_date)) a on a.id_account = b.id_account
where b.flag_header=0
and b.is_balance_sheet = 1 and b.is_income = 0 and b.golongan=1
group by b.id_account
having saldo <> 0
order by b.id_account;

elseif date_filter = 0 THEN

insert into temp_aktiva_tahunlalu
 select b.id_account, 
b.account_name, b.parent, case when b.def_position = 'D' then 
(b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) -
(case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)  
when b.def_position = 'K' then 
(b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)  - 
(case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end)
end as saldo
from  mst_account b 
left join (select i.no_ledger,y.id_account,y.nominal from trn_ledger_head i inner join trn_ledger_det y on y.no_ledger = i.no_ledger
where (i.date_trn < var_end_date)) a on a.id_account = b.id_account
where b.flag_header=0
and b.is_balance_sheet = 1 and b.is_income = 0 and b.golongan=1
group by b.id_account
having saldo <> 0
order by b.id_account;

end if;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_hpp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_hpp`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

drop table if EXISTS neraca_lajur_temp ;
CREATE TABLE if not EXISTS neraca_lajur_temp (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,
`account_parent`  varchar(255) NULL DEFAULT NULL ,
`parent_head`  varchar(255) NULL DEFAULT NULL ,
`account_parent_head`  varchar(255) NULL DEFAULT NULL ,
`parent_head_1`  varchar(255) NULL DEFAULT NULL ,
`account_parent_head_1`  varchar(255) NULL DEFAULT NULL ,
`bdebet`  double NULL DEFAULT NULL ,
`bkredit`  double NULL DEFAULT NULL ,
`debet`  double NULL DEFAULT NULL ,
`kredit`  double NULL DEFAULT NULL ,
`edebet`  double NULL DEFAULT NULL ,
`ekredit`  double NULL DEFAULT NULL ,
PRIMARY KEY (`id_account`)
);

delete from neraca_lajur_temp;

if date_filter = 1 then
insert into neraca_lajur_temp
 select a.id_account, 
b.account_name,b.parent,x.account_name,x.parent,y.account_name,y.parent,z.account_name,
case when b.beg_balance >0 then b.beg_balance else 0 end as bdebet,
case when b.beg_balance <0 then -1*b.beg_balance else 0 end as bkredit, 
case when sum(a.nominal) >0 then sum(a.nominal) else 0 end as debet,
case when sum(a.nominal) <0 then -1*sum(a.nominal) else 0 end as kredit,
(case when b.beg_balance >0 then b.beg_balance else 0 end + case when sum(a.nominal) >0 then sum(a.nominal) else 0 end) as edebet,
(case when b.beg_balance <0 then -1*b.beg_balance else 0 end + case when sum(a.nominal) <0 then -1*sum(a.nominal) else 0 end) AS ekredit
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name,parent from mst_account where flag_header = 1 and parent <> "") x on x.id_account = b.parent
inner join (select id_account, account_name,parent from mst_account where flag_header = 1 and parent <> "") y on y.id_account = x.parent
inner join (select id_account, account_name,parent from mst_account where flag_header = 1 and parent = "") z on z.id_account = y.parent
where c.date_trn between var_start_date and var_end_date
group by a.id_account
order by a.id_account;
elseif date_filter = 0 THEN
insert into neraca_lajur_temp
 select a.id_account, 
b.account_name,b.parent,x.account_name,x.parent,y.account_name,y.parent,z.account_name,
case when b.beg_balance >0 then b.beg_balance else 0 end as bdebet,
case when b.beg_balance <0 then -1*b.beg_balance else 0 end as bkredit, 
case when sum(a.nominal) >0 then sum(a.nominal) else 0 end as debet,
case when sum(a.nominal) <0 then -1*sum(a.nominal) else 0 end as kredit,
(case when b.beg_balance >0 then b.beg_balance else 0 end + case when sum(a.nominal) >0 then sum(a.nominal) else 0 end) as edebet,
(case when b.beg_balance <0 then -1*b.beg_balance else 0 end + case when sum(a.nominal) <0 then -1*sum(a.nominal) else 0 end) AS ekredit
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name,parent from mst_account where flag_header = 1 and parent <> "") x on x.id_account = b.parent
inner join (select id_account, account_name,parent from mst_account where flag_header = 1 and parent <> "") y on y.id_account = x.parent
inner join (select id_account, account_name,parent from mst_account where flag_header = 1 and parent = "") z on z.id_account = y.parent
group by a.id_account
order by a.id_account;
end if;

select *,
(select company_name from mst_company where flag_active = 1) as company_name  from neraca_lajur_temp;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_income` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_income`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	DECLARE Taktiva double;
	DECLARE Tpassiva double;
	DECLARE Tpassiva2 double;
	DECLARE labarugi double;
	DECLARE var_acc_laba varchar(120);

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
		
delete from temp_income;

if date_filter = 1 then
insert into temp_income
 select a.id_account, 
b.account_name, b.parent, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end as saldo, 1,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('4')
group by a.id_account
order by a.id_account;

insert into temp_income
 select a.id_account, 
b.account_name, b.parent, case when (a.nominal) is null then 0 else sum(a.nominal) end as saldo, 2,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('5')
group by a.id_account
order by a.id_account;

insert into temp_income
 select a.id_account, 
b.account_name, b.parent,case when (a.nominal) is null then 0 else sum(a.nominal) end as saldo, 3,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('6','7')
group by a.id_account
order by a.id_account;

ELSEif date_filter = 0 then

insert into temp_income
 select a.id_account, 
b.account_name, b.parent, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end as saldo, 1,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('4')
group by a.id_account
order by a.id_account;

insert into temp_income
 select a.id_account, 
b.account_name, b.parent,case when (a.nominal) is null then 0 else sum(a.nominal) end as saldo, 2,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('5')
group by a.id_account
order by a.id_account;

insert into temp_income
 select a.id_account, 
b.account_name, b.parent, case when (a.nominal) is null then 0 else sum(a.nominal) end as saldo, 3,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('6','7')
group by a.id_account
order by a.id_account;

end if;




COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_income_consol` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_income_consol`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	DECLARE Taktiva double;
	DECLARE Tpassiva double;
	DECLARE Tpassiva2 double;
	DECLARE labarugi double;
	DECLARE var_acc_laba varchar(120);

	DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
	BEGIN
    ROLLBACK;
	END;

	START TRANSACTION;
	
		
delete from temp_income_consol;

if date_filter = 1 then
insert into temp_income_consol
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end, 1,
(select company_name from mst_company where flag_active = 1)
from trn_Ledger_det_consol a
inner join trn_Ledger_head_consol c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where (c.date_trn between var_start_date and var_end_date)
and b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('4')
group by a.id_account
order by a.id_account;

insert into temp_income_consol
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else sum(a.nominal) end, 2,
(select company_name from mst_company where flag_active = 1)
from trn_Ledger_det_consol a
inner join trn_Ledger_head_consol c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where (c.date_trn between var_start_date and var_end_date)
and b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('5')
group by a.id_account
order by a.id_account;

insert into temp_income_consol
 select a.id_account, 
b.account_name, b.parent,x.account_name,case when (a.nominal) is null then 0 else sum(a.nominal) end, 3,
(select company_name from mst_company where flag_active = 1)
from trn_Ledger_det_consol a
inner join trn_Ledger_head_consol c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where (c.date_trn between var_start_date and var_end_date)
and b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('6','7')
group by a.id_account
order by a.id_account;

ELSEif date_filter = 0 then

insert into temp_income_consol
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end, 1,
(select company_name from mst_company where flag_active = 1)
from trn_Ledger_det_consol a
inner join trn_Ledger_head_consol c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('4')
group by a.id_account
order by a.id_account;

insert into temp_income_consol
 select a.id_account, 
b.account_name, b.parent,x.account_name,case when (a.nominal) is null then 0 else sum(a.nominal) end, 2,
(select company_name from mst_company where flag_active = 1)
from trn_Ledger_det_consol a
inner join trn_Ledger_head_consol c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('5')
group by a.id_account
order by a.id_account;

insert into temp_income_consol
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else sum(a.nominal) end, 3,
(select company_name from mst_company where flag_active = 1)
from trn_Ledger_det_consol a
inner join trn_Ledger_head_consol c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('6','7')
group by a.id_account
order by a.id_account;

end if;




COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_income_stats` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_income_stats`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	DECLARE Taktiva double;
	DECLARE Tpassiva double;
	DECLARE Tpassiva2 double;
	DECLARE labarugi double;
	DECLARE var_acc_laba varchar(120);

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

delete from temp_income_stats;

if date_filter = 1 then
insert into temp_income_stats
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end, 1,
(select company_name from mst_company where flag_active = 1),1,0
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where (c.date_trn between var_start_date and var_end_date)
and b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('4')
group by a.id_account
order by a.id_account;

insert into temp_income
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else sum(a.nominal) end, 2,
(select company_name from mst_company where flag_active = 1),0,1
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where (c.date_trn between var_start_date and var_end_date)
and b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('5')
group by a.id_account
order by a.id_account;

insert into temp_income
 select a.id_account, 
b.account_name, b.parent,x.account_name,case when (a.nominal) is null then 0 else sum(a.nominal) end, 3,
(select company_name from mst_company where flag_active = 1),0,1
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where (c.date_trn between var_start_date and var_end_date)
and b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('6','7')
group by a.id_account
order by a.id_account;

ELSEif date_filter = 0 then

insert into temp_income
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end, 1,
(select company_name from mst_company where flag_active = 1),1,0
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('4')
group by a.id_account
order by a.id_account;

insert into temp_income
 select a.id_account, 
b.account_name, b.parent,x.account_name,case when (a.nominal) is null then 0 else sum(a.nominal) end, 2,
(select company_name from mst_company where flag_active = 1),0,1
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('5')
group by a.id_account
order by a.id_account;

insert into temp_income
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else sum(a.nominal) end, 3,
(select company_name from mst_company where flag_active = 1),0,1
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('6','7')
group by a.id_account
order by a.id_account;

end if;




COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_income_tahunlalu` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_view_income_tahunlalu`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	DECLARE Taktiva double;
	DECLARE Tpassiva double;
	DECLARE Tpassiva2 double;
	DECLARE labarugi double;
	DECLARE var_acc_laba varchar(120);

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
		
delete from temp_income_tahunlalu;

if date_filter = 1 then

insert into temp_income_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end, 1,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('4')
group by a.id_account
order by a.id_account;

insert into temp_income_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else sum(a.nominal) end, 2,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('5')
group by a.id_account
order by a.id_account;

insert into temp_income_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name,case when (a.nominal) is null then 0 else sum(a.nominal) end, 3,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('6','7')
group by a.id_account
order by a.id_account;

elseif date_filter = 0 then

insert into temp_income_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end, 1,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn < var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('4')
group by a.id_account
order by a.id_account;

insert into temp_income_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else sum(a.nominal) end, 2,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn < var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('5')
group by a.id_account
order by a.id_account;

insert into temp_income_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name,case when (a.nominal) is null then 0 else sum(a.nominal) end, 3,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn < var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and left(a.id_account,1) in ('6','7')
group by a.id_account
order by a.id_account;

end if;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_laba_rugi` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_laba_rugi`()
BEGIN
	SELECT
	`a`.`id_account` AS `id_account`,
	`a`.`account_name` AS `account_name`,
	`a`.`parent` AS `parent`,
	`a`.`saldo` AS `saldo`,
	`a`.`header_group` AS `header_group`,
	`a`.`company_name` AS `company_name`,
	`c`.`account_name` AS `account_parent`,
	(
		CASE
		WHEN isnull(`b`.`saldo`) THEN
			0
		ELSE
			`b`.`saldo`
		END
	) AS `saldo_th_lalu`,
	(
		SELECT
			`view_curr_def`.`id_currency`
		FROM
			`view_curr_def`
	) AS `curr`,
	`c`.`parent` AS `parent2`,
	ucase(`d`.`account_name`) AS `account_parent2`,
	`d`.`parent` AS `parent3`,
	ucase(`e`.`account_name`) AS `account_parent3`,
	(
		SELECT
			(
				CASE
				WHEN isnull(
					`i_project_name`.`header_text`
				) THEN
					''
				ELSE
					`i_project_name`.`header_text`
				END
			) AS `header_text`
		FROM
			`i_project_name`
		WHERE
			(
				`i_project_name`.`project_default` = 1
			)
	) AS `header_text`,
	(
		SELECT
			(
				CASE
				WHEN isnull(
					`i_project_name`.`profit_notes`
				) THEN
					''
				ELSE
					`i_project_name`.`profit_notes`
				END
			) AS `profit_notes`,get_income() as tInc
		FROM
			`i_project_name`
		WHERE
			(
				`i_project_name`.`project_default` = 1
			)
	) AS `profit_notes`
FROM
	(
		(
			(
				(
					`temp_income` `a`
					LEFT JOIN `temp_income_tahunlalu` `b` ON (
						(
							`b`.`id_account` = `a`.`id_account`
						)
					)
				)
				JOIN `mst_account` `c` ON (
					(
						`c`.`id_account` = `a`.`parent`
					)
				)
			)
			JOIN `mst_account` `d` ON (
				(
					`d`.`id_account` = `c`.`parent`
				)
			)
		)
		JOIN `mst_account` `e` ON (
			(
				`e`.`id_account` = `d`.`parent`
			)
		)
	);

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_lo_rshaji` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_lo_rshaji`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	DECLARE Taktiva double;
	DECLARE Tpassiva double;
	DECLARE Tpassiva2 double;
	DECLARE labarugi double;
	DECLARE var_acc_laba varchar(120);

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
		
delete from temp_income;

if date_filter = 1 then
insert into temp_income
 select a.id_account, 
b.account_name, b.parent, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end as saldo, 1,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 6
group by a.id_account
order by a.id_account;

insert into temp_income
 select a.id_account, 
b.account_name, b.parent,case when (a.nominal) is null then 0 else sum(a.nominal) end as saldo, 3,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 7
group by a.id_account
order by a.id_account;

ELSEif date_filter = 0 then

insert into temp_income
 select a.id_account, 
b.account_name, b.parent, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end as saldo, 1,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 6
group by a.id_account
order by a.id_account;

insert into temp_income
 select a.id_account, 
b.account_name, b.parent, case when (a.nominal) is null then 0 else sum(a.nominal) end as saldo, 3,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 7
group by a.id_account
order by a.id_account;

end if;




COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_lo_rshaji_tahunlalu` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_lo_rshaji_tahunlalu`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	DECLARE Taktiva double;
	DECLARE Tpassiva double;
	DECLARE Tpassiva2 double;
	DECLARE labarugi double;
	DECLARE var_acc_laba varchar(120);

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
		
delete from temp_income_tahunlalu;

if date_filter = 1 then

insert into temp_income_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end, 1,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 6
group by a.id_account
order by a.id_account;

insert into temp_income_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name,case when (a.nominal) is null then 0 else sum(a.nominal) end, 3,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 7
group by a.id_account
order by a.id_account;

elseif date_filter = 0 then

insert into temp_income_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end, 1,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn < var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 6
group by a.id_account
order by a.id_account;

insert into temp_income_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name,case when (a.nominal) is null then 0 else sum(a.nominal) end, 3,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn < var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 7
group by a.id_account
order by a.id_account;

end if;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_lra_rshaji` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_lra_rshaji`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	DECLARE Taktiva double;
	DECLARE Tpassiva double;
	DECLARE Tpassiva2 double;
	DECLARE labarugi double;
	DECLARE var_acc_laba varchar(120);

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
		
delete from temp_income_lra;

if date_filter = 1 then
insert into temp_income_lra
 select a.id_account, 
b.account_name, b.parent, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end as saldo, 1,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 4
group by a.id_account
order by a.id_account;

insert into temp_income_lra
 select a.id_account, 
b.account_name, b.parent, case when (a.nominal) is null then 0 else sum(a.nominal) end as saldo, 2,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 5
group by a.id_account
order by a.id_account;

ELSEif date_filter = 0 then

insert into temp_income_lra
 select a.id_account, 
b.account_name, b.parent, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end as saldo, 1,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 4
group by a.id_account
order by a.id_account;

insert into temp_income_lra
 select a.id_account, 
b.account_name, b.parent,case when (a.nominal) is null then 0 else sum(a.nominal) end as saldo, 2,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 5
group by a.id_account
order by a.id_account;


end if;




COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_lra_rshaji_tahunlalu` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_lra_rshaji_tahunlalu`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	DECLARE Taktiva double;
	DECLARE Tpassiva double;
	DECLARE Tpassiva2 double;
	DECLARE labarugi double;
	DECLARE var_acc_laba varchar(120);

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
		
delete from temp_income_lra_tahunlalu;

if date_filter = 1 then

insert into temp_income_lra_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end, 1,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 4
group by a.id_account
order by a.id_account;

insert into temp_income_lra_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else sum(a.nominal) end, 2,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn between '1900-01-01' and var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 5
group by a.id_account
order by a.id_account;

elseif date_filter = 0 then

insert into temp_income_lra_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else -1*sum(a.nominal) end, 1,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn < var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 4
group by a.id_account
order by a.id_account;

insert into temp_income_lra_tahunlalu
 select a.id_account, 
b.account_name, b.parent,x.account_name, case when (a.nominal) is null then 0 else sum(a.nominal) end, 2,
(select company_name from mst_company where flag_active = 1)
from trn_ledger_det a
inner join (select * from trn_ledger_head where (date_trn < var_end_date)) c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 0 and b.is_income = 1 and b.golongan = 5
group by a.id_account
order by a.id_account;

end if;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_neraca` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_neraca`(in var_start_date date, in var_end_date date)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
	
		
CREATE TABLE neraca_lajur_temp (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,
`account_parent`  varchar(255) NULL DEFAULT NULL ,
`bdebet`  double NULL DEFAULT NULL ,
`bkredit`  double NULL DEFAULT NULL ,
`debet`  double NULL DEFAULT NULL ,
`kredit`  double NULL DEFAULT NULL ,
`edebet`  double NULL DEFAULT NULL ,
`ekredit`  double NULL DEFAULT NULL ,
PRIMARY KEY (`id_account`)
);

delete from neraca_lajur_temp;

insert into neraca_lajur_temp
 select a.id_account, 
b.account_name,b.parent,x.account_name,
case when b.beg_balance >0 then b.beg_balance else 0 end as bdebet,
case when b.beg_balance <0 then -1*b.beg_balance else 0 end as bkredit, 
case when sum(a.nominal) >0 then sum(a.nominal) else 0 end as debet,
case when sum(a.nominal) <0 then -1*sum(a.nominal) else 0 end as kredit,
(case when b.beg_balance >0 then b.beg_balance else 0 end + case when sum(a.nominal) >0 then sum(a.nominal) else 0 end) as edebet,
(case when b.beg_balance <0 then -1*b.beg_balance else 0 end + case when sum(a.nominal) <0 then -1*sum(a.nominal) else 0 end) AS ekredit
from trn_ledger_det a
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account b on b.id_account = a.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where c.date_trn between var_start_date and var_end_date
group by a.id_account
order by a.id_account;

select * from neraca_lajur_temp;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_neraca_lajur` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_neraca_lajur`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	


drop table if EXISTS neraca_lajur_temp ;
CREATE TABLE if not EXISTS neraca_lajur_temp (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,
`account_parent`  varchar(255) NULL DEFAULT NULL ,
`parent_head`  varchar(255) NULL DEFAULT NULL ,
`account_parent_head`  varchar(255) NULL DEFAULT NULL ,
`parent_head_1`  varchar(255) NULL DEFAULT NULL ,
`account_parent_head_1`  varchar(255) NULL DEFAULT NULL ,
`bdebet`  double NULL DEFAULT NULL ,
`bkredit`  double NULL DEFAULT NULL ,
`debet`  double NULL DEFAULT NULL ,
`kredit`  double NULL DEFAULT NULL ,
`edebet`  double NULL DEFAULT NULL ,
`ekredit`  double NULL DEFAULT NULL,  
PRIMARY KEY (`id_account`)
);

delete from neraca_lajur_temp;

if date_filter = 1 then
call sp_view_neraca_lajur_sawal(var_start_date,var_end_date);
insert into neraca_lajur_temp
  select b.id_account, 
b.account_name,b.parent,x.account_name,x.parent,y.account_name,y.parent,z.account_name,
case when b.def_position="D"  then b.beg_balance else 0 end as bdebet,
case when b.def_position="K"  then b.beg_balance else 0 end as bkredit, 
sum(case when (case when a.nominal is null then 0 else a.nominal end) >0 then (case when a.nominal is null then 0 else a.nominal end) else 0 end) as debet,
sum(case when (case when a.nominal is null then 0 else a.nominal end) <0 then -1*(case when a.nominal is null then 0 else a.nominal end) else 0 end) as kredit,
case when b.def_position="D" then 
	case when b.def_position="D"  then b.beg_balance else 0 end -
	case when b.def_position="K"  then b.beg_balance else 0 end +
	sum(case when (case when a.nominal is null then 0 else a.nominal end) >0 then (case when a.nominal is null then 0 else a.nominal end) else 0 end) -
	sum(case when (case when a.nominal is null then 0 else a.nominal end) <0 then -1*(case when a.nominal is null then 0 else a.nominal end) else 0 end) 
else 0 end as edebet,
case when b.def_position="K" then 
	case when b.def_position="K"  then b.beg_balance else 0 end -
	case when b.def_position="D"  then b.beg_balance else 0 end + 
	sum(case when (case when a.nominal is null then 0 else a.nominal end) <0 then -1*(case when a.nominal is null then 0 else a.nominal end) else 0 end) -
	sum(case when (case when a.nominal is null then 0 else a.nominal end) >0 then (case when a.nominal is null then 0 else a.nominal end) else 0 end) 
else 0 end as ekredit
from mst_account b 
left join trn_ledger_det a on a.id_account = b.id_account
left join (select no_ledger from trn_ledger_head where date_trn >= var_start_date and date_trn <= var_end_date) c on c.no_ledger = a.no_ledger
inner join mst_account x on x.id_account = b.parent
inner join mst_account y on y.id_account = x.parent
inner join mst_account z on z.id_account = y.parent
group by b.id_account
having (bdebet <> 0 or bkredit <> 0) or (debet <> 0 or kredit <> 0) or (edebet <> 0 or ekredit <> 0)
order by b.id_account;
elseif date_filter = 0 THEN
insert into neraca_lajur_temp
  select b.id_account, 
b.account_name,b.parent,x.account_name,x.parent,y.account_name,y.parent,z.account_name,
case when b.def_position="D"  then b.beg_balance else 0 end as bdebet,
case when b.def_position="K"  then b.beg_balance else 0 end as bkredit, 
sum(case when (case when a.nominal is null then 0 else a.nominal end) >0 then (case when a.nominal is null then 0 else a.nominal end) else 0 end) as debet,
sum(case when (case when a.nominal is null then 0 else a.nominal end) <0 then -1*(case when a.nominal is null then 0 else a.nominal end) else 0 end) as kredit,
case when b.def_position="D" then 
	case when b.def_position="D"  then b.beg_balance else 0 end -
	case when b.def_position="K"  then b.beg_balance else 0 end +
	sum(case when (case when a.nominal is null then 0 else a.nominal end) >0 then (case when a.nominal is null then 0 else a.nominal end) else 0 end) -
	sum(case when (case when a.nominal is null then 0 else a.nominal end) <0 then -1*(case when a.nominal is null then 0 else a.nominal end) else 0 end) 
else 0 end as edebet,
case when b.def_position="K" then 
	case when b.def_position="K"  then b.beg_balance else 0 end -
	case when b.def_position="D"  then b.beg_balance else 0 end + 
	sum(case when (case when a.nominal is null then 0 else a.nominal end) <0 then -1*(case when a.nominal is null then 0 else a.nominal end) else 0 end) -
	sum(case when (case when a.nominal is null then 0 else a.nominal end) >0 then (case when a.nominal is null then 0 else a.nominal end) else 0 end) 
else 0 end as ekredit
from mst_account b 
left join trn_ledger_det a on a.id_account = b.id_account
left join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account x on x.id_account = b.parent
inner join mst_account y on y.id_account = x.parent
inner join mst_account z on z.id_account = y.parent
group by b.id_account
having (bdebet <> 0 or bkredit <> 0) or (debet <> 0 or kredit <> 0) or (edebet <> 0 or ekredit <> 0)
order by b.id_account;
end if;

if date_filter = 0 then
select *,
(select company_name from mst_company where flag_active = 1) as company_name,
(
		SELECT
			`mst_company`.`address`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_address`,
	(
		SELECT
			`mst_company`.`city`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_city`, (SELECT case when header_text is null then '' else header_text end as header_text from i_project_name where project_default =1) as header_text,
(select id_currency from mst_currency where flag_default=1) as curr  from neraca_lajur_temp;
elseif date_filter = 1 THEN
select a.id_account,
a.account_name,
a.parent,
a.account_parent,
a.parent_head,
a.account_parent_head,
a.parent_head_1,
a.account_parent_head_1,
a.bdebet + case when b.debet is null then 0 else b.debet end as bdebet,
a.bkredit + case when b.kredit is null then 0 else b.kredit end as bkredit,
a.debet,
a.kredit,
a.edebet + case when b.debet is null then 0 else b.debet end as edebet,
a.ekredit + case when b.kredit is null then 0 else b.kredit end as ekredit,
(select company_name from mst_company where flag_active = 1) as company_name,
(
		SELECT
			`mst_company`.`address`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_address`,
	(
		SELECT
			`mst_company`.`city`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_city`, (SELECT case when header_text is null then '' else header_text end as header_text from i_project_name where project_default =1) as header_text,
(select id_currency from mst_currency where flag_default=1) as curr  from neraca_lajur_temp a 
left join neraca_lajur_temp_sawal b on b.id_account = a.id_account;
end if;


END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_neraca_lajur2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_neraca_lajur2`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;



drop table if EXISTS neraca_lajur_temp2 ;
CREATE TABLE if not EXISTS neraca_lajur_temp2 (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,
`account_parent`  varchar(255) NULL DEFAULT NULL ,
`parent_head`  varchar(255) NULL DEFAULT NULL ,
`account_parent_head`  varchar(255) NULL DEFAULT NULL ,
`parent_head_1`  varchar(255) NULL DEFAULT NULL ,
`account_parent_head_1`  varchar(255) NULL DEFAULT NULL ,
`bdebet`  double NULL DEFAULT NULL ,
`bkredit`  double NULL DEFAULT NULL ,
`debet`  double NULL DEFAULT NULL ,
`kredit`  double NULL DEFAULT NULL ,
debetadj double null default null,
kreditadj double null default null,
`edebet`  double NULL DEFAULT NULL ,
`ekredit`  double NULL DEFAULT NULL,  
golongan integer null default null,
PRIMARY KEY (`id_account`)
);

delete from neraca_lajur_temp2;

call sp_view_neraca_lajur_adjust(var_start_date,var_end_date,date_filter);
call sp_view_neraca_lajur_sawal(var_start_date,var_end_date);
if date_filter = 1 then
insert into neraca_lajur_temp2
  select b.id_account, 
b.account_name,b.parent,x.account_name,x.parent,y.account_name,y.parent,z.account_name,
case when b.def_position="D"  then b.beg_balance else 0 end as bdebet,
case when b.def_position="K"  then b.beg_balance else 0 end as bkredit, 
sum(case when (case when a.nominal is null then 0 else a.nominal end) >0 then (case when a.nominal is null then 0 else a.nominal end) else 0 end) as debet,
sum(case when (case when a.nominal is null then 0 else a.nominal end) <0 then -1*(case when a.nominal is null then 0 else a.nominal end) else 0 end) as kredit,
0,0,
case when b.def_position="D" then 
case when b.def_position="D"  then b.beg_balance else 0 end -
case when b.def_position="K"  then b.beg_balance else 0 end +
sum(case when (case when a.nominal is null then 0 else a.nominal end) >0 then (case when a.nominal is null then 0 else a.nominal end) else 0 end) -
sum(case when (case when a.nominal is null then 0 else a.nominal end) <0 then -1*(case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as edebet,
case when b.def_position="K" then 
case when b.def_position="K"  then b.beg_balance else 0 end -
case when b.def_position="D"  then b.beg_balance else 0 end + 
sum(case when (case when a.nominal is null then 0 else a.nominal end) <0 then -1*(case when a.nominal is null then 0 else a.nominal end) else 0 end) -
sum(case when (case when a.nominal is null then 0 else a.nominal end) >0 then (case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as ekredit,
b.golongan
from mst_account b 
left join trn_ledger_det a on a.id_account = b.id_account
left join (select * from trn_ledger_head where date_trn >= var_start_date and date_trn <= var_end_date) c on c.no_ledger = a.no_ledger
inner join mst_account x on x.id_account = b.parent
inner join mst_account y on y.id_account = x.parent
inner join mst_account z on z.id_account = y.parent
group by b.id_account
having edebet <> 0 or ekredit <> 0 or bdebet <> 0 or bkredit <> 0 or debet <> 0 or kredit <> 0
order by b.id_account;
elseif date_filter = 0 THEN
insert into neraca_lajur_temp2
  select b.id_account, 
b.account_name,b.parent,x.account_name,x.parent,y.account_name,y.parent,z.account_name,
case when b.def_position="D"  then b.beg_balance else 0 end as bdebet,
case when b.def_position="K"  then b.beg_balance else 0 end as bkredit, 
sum(case when (case when a.nominal is null then 0 else a.nominal end) >0 then (case when a.nominal is null then 0 else a.nominal end) else 0 end) as debet,
sum(case when (case when a.nominal is null then 0 else a.nominal end) <0 then -1*(case when a.nominal is null then 0 else a.nominal end) else 0 end) as kredit,
0,0,
case when b.def_position="D" then 
case when b.def_position="D"  then b.beg_balance else 0 end -
case when b.def_position="K"  then b.beg_balance else 0 end +
sum(case when (case when a.nominal is null then 0 else a.nominal end) >0 then (case when a.nominal is null then 0 else a.nominal end) else 0 end) -
sum(case when (case when a.nominal is null then 0 else a.nominal end) <0 then -1*(case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as edebet,
case when b.def_position="K" then 
case when b.def_position="K"  then b.beg_balance else 0 end -
case when b.def_position="D"  then b.beg_balance else 0 end + 
sum(case when (case when a.nominal is null then 0 else a.nominal end) <0 then -1*(case when a.nominal is null then 0 else a.nominal end) else 0 end) -
sum(case when (case when a.nominal is null then 0 else a.nominal end) >0 then (case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as ekredit,
b.golongan
from mst_account b 
left join trn_ledger_det a on a.id_account = b.id_account
left join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account x on x.id_account = b.parent
inner join mst_account y on y.id_account = x.parent
inner join mst_account z on z.id_account = y.parent
group by b.id_account
having edebet <> 0 or ekredit <> 0 or bdebet <> 0 or bkredit <> 0 or debet <> 0 or kredit <> 0
order by b.id_account;
end if;

if date_filter = 0 then
select a.id_account,
a.account_name,
a.parent,
a.account_parent,
a.parent_head,
a.account_parent_head,
a.parent_head_1,
a.account_parent_head_1,
a.bdebet as bdebet,
a.bkredit as bkredit,
a.debet - case when b.debet is null then 0 else b.debet end as debet,
a.kredit - case when b.kredit is null then 0 else b.kredit end as kredit,
case when b.debet is null then 0 else b.debet end as debetadj,
case when b.kredit is null then 0 else b.kredit end as kreditadj,
a.edebet + case when b.debet is null then 0 else b.debet end - case when b.debet is null then 0 else b.debet end as edebet,
a.ekredit + case when b.kredit is null then 0 else b.kredit end - case when b.kredit is null then 0 else b.kredit end as ekredit,
(select company_name from mst_company where flag_active = 1) as company_name,
(
		SELECT
			`mst_company`.`address`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_address`,
	(
		SELECT
			`mst_company`.`city`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_city`, (SELECT case when header_text is null then '' else header_text end as header_text from i_project_name where project_default =1) as header_text,
(select id_currency from mst_currency where flag_default=1) as curr,
a.golongan from neraca_lajur_temp2 a
left join neraca_lajur_temp_adjust b on b.id_account = a.id_account;
elseif date_filter = 1 THEN
select a.id_account,
a.account_name,
a.parent,
a.account_parent,
a.parent_head,
a.account_parent_head,
a.parent_head_1,
a.account_parent_head_1,
a.bdebet + case when b.debet is null then 0 else b.debet end as bdebet,
a.bkredit + case when b.kredit is null then 0 else b.kredit end as bkredit,
a.debet - case when c.kredit is null then 0 else c.kredit end as debet,
a.kredit - case when c.kredit is null then 0 else c.kredit end as kredit,
case when c.debet is null then 0 else c.debet end as debetadj,
case when c.kredit is null then 0 else c.kredit end as kreditadj,
a.edebet + case when b.debet is null then 0 else b.debet end + case when c.debet is null then 0 else c.debet end - case when c.debet is null then 0 else c.debet end as edebet,
a.ekredit + case when b.kredit is null then 0 else b.kredit end + case when c.kredit is null then 0 else c.kredit end - case when c.kredit is null then 0 else c.kredit end as ekredit,
(select company_name from mst_company where flag_active = 1) as company_name,
(
		SELECT
			`mst_company`.`address`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_address`,
	(
		SELECT
			`mst_company`.`city`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_city`, (SELECT case when header_text is null then '' else header_text end as header_text from i_project_name where project_default =1) as header_text,
(select id_currency from mst_currency where flag_default=1) as curr,
a.golongan  from neraca_lajur_temp2 a 
left join neraca_lajur_temp_sawal b on b.id_account = a.id_account
left join neraca_lajur_temp_adjust c on c.id_account = a.id_account;
end if;


END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_neraca_lajur_adjust` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_neraca_lajur_adjust`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

drop table if EXISTS neraca_lajur_temp_adjust ;
CREATE TABLE if not EXISTS neraca_lajur_temp_adjust (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,
`account_parent`  varchar(255) NULL DEFAULT NULL ,
`parent_head`  varchar(255) NULL DEFAULT NULL ,
`account_parent_head`  varchar(255) NULL DEFAULT NULL ,
`parent_head_1`  varchar(255) NULL DEFAULT NULL ,
`account_parent_head_1`  varchar(255) NULL DEFAULT NULL ,
`bdebet`  double NULL DEFAULT NULL ,
`bkredit`  double NULL DEFAULT NULL ,
`debet`  double NULL DEFAULT NULL ,
`kredit`  double NULL DEFAULT NULL ,
`edebet`  double NULL DEFAULT NULL ,
`ekredit`  double NULL DEFAULT NULL,  
PRIMARY KEY (`id_account`)
);

delete from neraca_lajur_temp_adjust;

if date_filter = 1 then
insert into neraca_lajur_temp_adjust
  select b.id_account, 
b.account_name,b.parent,x.account_name,x.parent,y.account_name,y.parent,z.account_name,
case when b.def_position="D"  then b.beg_balance else 0 end as bdebet,
case when b.def_position="K"  then b.beg_balance else 0 end as bkredit, 
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end as debet,
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end as kredit,
case when b.def_position="D" then (
case when b.def_position="D"  then b.beg_balance else 0 end -
case when b.def_position="K"  then b.beg_balance else 0 end +
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as edebet,
case when b.def_position="K" then (
case when b.def_position="K"  then b.beg_balance else 0 end -
case when b.def_position="D"  then b.beg_balance else 0 end + 
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as ekredit
from mst_account b 
left join trn_ledger_det a on a.id_account = b.id_account
left join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account x on x.id_account = b.parent
inner join mst_account y on y.id_account = x.parent
inner join mst_account z on z.id_account = y.parent
where c.date_trn >= var_start_date and c.date_trn <= var_end_date and left(c.no_ledger,3) = 'ADJ'
group by b.id_account
having edebet <> 0 or ekredit <> 0
order by b.id_account;
elseif date_filter = 0 THEN
insert into neraca_lajur_temp_adjust
  select b.id_account, 
b.account_name,b.parent,x.account_name,x.parent,y.account_name,y.parent,z.account_name,
case when b.def_position="D"  then b.beg_balance else 0 end as bdebet,
case when b.def_position="K"  then b.beg_balance else 0 end as bkredit, 
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end as debet,
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end as kredit,
case when b.def_position="D" then (
case when b.def_position="D"  then b.beg_balance else 0 end -
case when b.def_position="K"  then b.beg_balance else 0 end +
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as edebet,
case when b.def_position="K" then (
case when b.def_position="K"  then b.beg_balance else 0 end -
case when b.def_position="D"  then b.beg_balance else 0 end + 
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as ekredit
from mst_account b 
left join trn_ledger_det a on a.id_account = b.id_account
left join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account x on x.id_account = b.parent
inner join mst_account y on y.id_account = x.parent
inner join mst_account z on z.id_account = y.parent
where left(c.no_ledger,3) = 'ADJ'
group by b.id_account
having edebet <> 0 or ekredit <> 0
order by b.id_account;
end if;


COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_neraca_lajur_backupsblmoptimasi` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_view_neraca_lajur_backupsblmoptimasi`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

drop table if EXISTS neraca_lajur_temp ;
CREATE TABLE if not EXISTS neraca_lajur_temp (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,
`account_parent`  varchar(255) NULL DEFAULT NULL ,
`parent_head`  varchar(255) NULL DEFAULT NULL ,
`account_parent_head`  varchar(255) NULL DEFAULT NULL ,
`parent_head_1`  varchar(255) NULL DEFAULT NULL ,
`account_parent_head_1`  varchar(255) NULL DEFAULT NULL ,
`bdebet`  double NULL DEFAULT NULL ,
`bkredit`  double NULL DEFAULT NULL ,
`debet`  double NULL DEFAULT NULL ,
`kredit`  double NULL DEFAULT NULL ,
`edebet`  double NULL DEFAULT NULL ,
`ekredit`  double NULL DEFAULT NULL,  
PRIMARY KEY (`id_account`)
);

delete from neraca_lajur_temp;

if date_filter = 1 then
call sp_view_neraca_lajur_sawal(var_start_date,var_end_date);
insert into neraca_lajur_temp
  select b.id_account, 
b.account_name,b.parent,x.account_name,x.parent,y.account_name,y.parent,z.account_name,
case when b.def_position="D"  then b.beg_balance else 0 end as bdebet,
case when b.def_position="K"  then b.beg_balance else 0 end as bkredit, 
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end as debet,
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end as kredit,
case when b.def_position="D" then (
case when b.def_position="D"  then b.beg_balance else 0 end -
case when b.def_position="K"  then b.beg_balance else 0 end +
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as edebet,
case when b.def_position="K" then (
case when b.def_position="K"  then b.beg_balance else 0 end -
case when b.def_position="D"  then b.beg_balance else 0 end + 
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as ekredit
from mst_account b 
inner join trn_ledger_det a on a.id_account = b.id_account
inner join (select * from trn_ledger_head where date_trn >= var_start_date and date_trn <= var_end_date) c on c.no_ledger = a.no_ledger
inner join (select id_account, account_name,parent from mst_account_parent) x on x.id_account = b.parent
inner join (select id_account, account_name,parent from mst_account where flag_header = 1 and parent <> "") y on y.id_account = x.parent
inner join (select id_account, account_name,parent from mst_account where flag_header = 1 and parent = "") z on z.id_account = y.parent
group by b.id_account
order by b.id_account;
elseif date_filter = 0 THEN
insert into neraca_lajur_temp
  select b.id_account, 
b.account_name,b.parent,x.account_name,x.parent,y.account_name,y.parent,z.account_name,
case when b.def_position="D"  then b.beg_balance else 0 end as bdebet,
case when b.def_position="K"  then b.beg_balance else 0 end as bkredit, 
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end as debet,
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end as kredit,
case when b.def_position="D" then (
case when b.def_position="D"  then b.beg_balance else 0 end -
case when b.def_position="K"  then b.beg_balance else 0 end +
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as edebet,
case when b.def_position="K" then (
case when b.def_position="K"  then b.beg_balance else 0 end -
case when b.def_position="D"  then b.beg_balance else 0 end + 
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as ekredit
from mst_account b 
inner join trn_ledger_det a on a.id_account = b.id_account
inner join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join (select id_account, account_name,parent from mst_account where flag_header = 1 and parent <> "") x on x.id_account = b.parent
inner join (select id_account, account_name,parent from mst_account where flag_header = 1 and parent <> "") y on y.id_account = x.parent
inner join (select id_account, account_name,parent from mst_account where flag_header = 1 and parent = "") z on z.id_account = y.parent
group by b.id_account
order by b.id_account;
end if;

if date_filter = 0 then
select *,
(select company_name from mst_company where flag_active = 1) as company_name,
(
		SELECT
			`mst_company`.`address`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_address`,
	(
		SELECT
			`mst_company`.`city`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_city`, (SELECT case when header_text is null then '' else header_text end as header_text from i_project_name where project_default =1) as header_text,
(select id_currency from mst_currency where flag_default=1) as curr  from neraca_lajur_temp;
elseif date_filter = 1 THEN
select a.id_account,
a.account_name,
a.parent,
a.account_parent,
a.parent_head,
a.account_parent_head,
a.parent_head_1,
a.account_parent_head_1,
a.bdebet + case when b.debet is null then 0 else b.debet end as bdebet,
a.bkredit + case when b.kredit is null then 0 else b.kredit end as bkredit,
a.debet,
a.kredit,
a.edebet + case when b.debet is null then 0 else b.debet end as edebet,
a.ekredit + case when b.kredit is null then 0 else b.kredit end as ekredit,
(select company_name from mst_company where flag_active = 1) as company_name,
(
		SELECT
			`mst_company`.`address`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_address`,
	(
		SELECT
			`mst_company`.`city`
		FROM
			`mst_company`
		WHERE
			(
				`mst_company`.`flag_active` = 1
			)
	) AS `company_city`, (SELECT case when header_text is null then '' else header_text end as header_text from i_project_name where project_default =1) as header_text,
(select id_currency from mst_currency where flag_default=1) as curr  from neraca_lajur_temp a 
left join neraca_lajur_temp_sawal b on b.id_account = a.id_account;
end if;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_neraca_lajur_sawal` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_neraca_lajur_sawal`(in var_start_date date, in var_end_date date)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;

drop table if EXISTS neraca_lajur_temp_sawal ;
CREATE TABLE if not EXISTS neraca_lajur_temp_sawal (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,
`account_parent`  varchar(255) NULL DEFAULT NULL ,
`parent_head`  varchar(255) NULL DEFAULT NULL ,
`account_parent_head`  varchar(255) NULL DEFAULT NULL ,
`parent_head_1`  varchar(255) NULL DEFAULT NULL ,
`account_parent_head_1`  varchar(255) NULL DEFAULT NULL ,
`bdebet`  double NULL DEFAULT NULL ,
`bkredit`  double NULL DEFAULT NULL ,
`debet`  double NULL DEFAULT NULL ,
`kredit`  double NULL DEFAULT NULL ,
`edebet`  double NULL DEFAULT NULL ,
`ekredit`  double NULL DEFAULT NULL,  
PRIMARY KEY (`id_account`)
);

delete from neraca_lajur_temp_sawal;


insert into neraca_lajur_temp_sawal
  select b.id_account, 
b.account_name,b.parent,x.account_name,x.parent,y.account_name,y.parent,z.account_name,
case when b.def_position="D"  then b.beg_balance else 0 end as bdebet,
case when b.def_position="K"  then b.beg_balance else 0 end as bkredit, 
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end as debet,
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end as kredit,
case when b.def_position="D" then (
case when b.def_position="D"  then b.beg_balance else 0 end -
case when b.def_position="K"  then b.beg_balance else 0 end +
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as edebet,
case when b.def_position="K" then (
case when b.def_position="K"  then b.beg_balance else 0 end -
case when b.def_position="D"  then b.beg_balance else 0 end + 
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then -1*sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end) else 0 end as ekredit
from mst_account b 
left join trn_ledger_det a on a.id_account = b.id_account
left join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join mst_account x on x.id_account = b.parent
inner join mst_account y on y.id_account = x.parent
inner join mst_account z on z.id_account = y.parent
where c.date_trn < var_start_date 
group by b.id_account
having edebet <> 0 or ekredit <> 0
order by b.id_account;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_opname` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_opname`(var_criteria varchar(120))
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;	
	
		
		select b.id_item,c.item_name, b.id_unit,b.qty_onhand, b.qty_opname, b.notes,a.id_warehouse,a.no_opname, a.date_trn  from i_opname_head a 
inner join i_opname_det b on b.no_opname = a.no_opname
inner join mst_item c on c.id_item = b.id_item
where a.no_opname= var_criteria;


COMMIT;


END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_pasiva` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_view_pasiva`(in var_start_date date, in var_end_date date, in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	DECLARE Taktiva double;
	DECLARE Tpassiva double;
	DECLARE labarugi double;
	DECLARE var_acc_laba varchar(120);

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
	

create TABLE if not EXISTS temp_pasiva (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,

`saldo`  double NULL DEFAULT NULL 
);

delete from temp_pasiva;

if date_filter = 1 then
insert into temp_pasiva
 select b.id_account, 
b.account_name, b.parent, case when b.def_position = 'D' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end  
when b.def_position = 'K' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end  - 
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end
end as saldo
from  mst_account b 
left join (select i.no_ledger,y.id_account,y.nominal from trn_ledger_head i inner join trn_ledger_det y on y.no_ledger = i.no_ledger
where (i.date_trn between '1900-01-01' and var_end_date)) a on a.id_account = b.id_account
where b.is_balance_sheet = 1 and b.is_income = 0 and b.golongan in ('2','3') and b.flag_header=0
group by b.id_account
having saldo <> 0
order by b.id_account;
elseif date_filter = 0 THEN
insert into temp_pasiva
 select b.id_account, 
b.account_name, b.parent, case when b.def_position = 'D' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end
when b.def_position = 'K' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end  - 
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end
end as saldo
from  mst_account b 
left join trn_ledger_det a on a.id_account = b.id_account
left join trn_ledger_head c on c.no_ledger = a.no_ledger
where b.is_balance_sheet = 1 and b.is_income = 0 and b.golongan in ('2','3') and b.flag_header=0
group by b.id_account
having saldo <> 0
order by b.id_account;
end if;

select sum(case when saldo is null then 0 else saldo end) into Taktiva from temp_aktiva;
select sum(case when saldo is null then 0 else saldo end) into Tpassiva from temp_pasiva;

if Taktiva is null then 
	set Taktiva = 0;
end if;

if Tpassiva is null then 
	set Tpassiva = 0;
end if;

set labarugi = Taktiva - Tpassiva;
if labarugi < 0 then 
	set var_acc_laba = (select profit_notes from i_project_name where project_default=1);
elseif labarugi > 0 then 
	set var_acc_laba = (select profit_notes from i_project_name where project_default=1);
end if;

insert into temp_pasiva
 select "3-5000", 
var_acc_laba, "3-5000",labarugi;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_pasiva_consol` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_pasiva_consol`(in var_start_date date, in var_end_date date, in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	DECLARE Taktiva double;
	DECLARE Tpassiva double;
	DECLARE labarugi double;
	DECLARE var_acc_laba varchar(120);

	
	

create TABLE if not EXISTS temp_pasiva_consol (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,
`account_parent`  varchar(255) NULL DEFAULT NULL ,
`saldo`  double NULL DEFAULT NULL 
);

delete from temp_pasiva_consol;

if date_filter = 1 then
insert into temp_pasiva_consol
 select b.id_account, 
b.account_name, b.parent,x.account_name, case when b.def_position = 'D' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end  
when b.def_position = 'K' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end  - 
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end
end as saldo
from  mst_account b 
left join trn_ledger_det_consol a on a.id_account = b.id_account
left join trn_ledger_head_consol c on c.no_ledger = a.no_ledger
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where (c.date_trn between var_start_date and var_end_date)
and b.is_balance_sheet = 1 and b.is_income = 0 and left(b.id_account,1) in ('2','3') and b.flag_header=0
group by b.id_account
order by b.id_account;
elseif date_filter = 0 THEN
insert into temp_pasiva_consol
 select b.id_account, 
b.account_name, b.parent,x.account_name, case when b.def_position = 'D' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end
when b.def_position = 'K' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end  - 
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end
end as saldo
from  mst_account b 
left join trn_ledger_det_consol a on a.id_account = b.id_account
left join trn_ledger_head_consol c on c.no_ledger = a.no_ledger
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 1 and b.is_income = 0 and left(b.id_account,1) in ('2','3') and b.flag_header=0
group by b.id_account
order by b.id_account;
end if;

select sum(saldo) into Taktiva from temp_aktiva;
select sum(saldo) into Tpassiva from temp_pasiva_consol;


set labarugi = Taktiva - Tpassiva;
if labarugi < 0 then 
	set var_acc_laba = "Rugi Periode Berjalan";
elseif labarugi > 0 then 
	set var_acc_laba = "Laba Periode Berjalan";
end if;

insert into temp_pasiva_consol
 select "3-5000", 
var_acc_laba, "3-5000","",labarugi;

END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_pasiva_copy` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_view_pasiva_copy`(in var_start_date date, in var_end_date date, in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	DECLARE Taktiva double;
	DECLARE Tpassiva double;
	DECLARE labarugi double;
	DECLARE var_acc_laba varchar(120);

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
	

create TABLE if not EXISTS temp_pasiva (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,
`account_parent`  varchar(255) NULL DEFAULT NULL ,
`saldo`  double NULL DEFAULT NULL 
);

delete from temp_pasiva;

if date_filter = 1 then
insert into temp_pasiva
 select b.id_account, 
b.account_name, b.parent,x.account_name, case when b.def_position = 'D' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end  
when b.def_position = 'K' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end  - 
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end
end as saldo
from  mst_account b 
left join (select i.id_account,i.nominal from trn_ledger_det i inner join trn_ledger_head y on y.no_ledger = i.no_ledger where (y.date_trn between var_start_date and var_end_date)) a on a.id_account = b.id_account
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 1 and b.is_income = 0 and b.golongan in ('2','3') and b.flag_header=0
group by b.id_account
order by b.id_account;
elseif date_filter = 0 THEN
insert into temp_pasiva
 select b.id_account, 
b.account_name, b.parent,x.account_name, case when b.def_position = 'D' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end
when b.def_position = 'K' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end  - 
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end
end as saldo
from  mst_account b 
left join trn_ledger_det a on a.id_account = b.id_account
left join trn_ledger_head c on c.no_ledger = a.no_ledger
inner join (select id_account, account_name from mst_account) x on x.id_account = b.parent
where b.is_balance_sheet = 1 and b.is_income = 0 and b.golongan in ('2','3') and b.flag_header=0
group by b.id_account
order by b.id_account;
end if;

select sum(saldo) into Taktiva from temp_aktiva;
select sum(saldo) into Tpassiva from temp_pasiva;


set labarugi = Taktiva - Tpassiva;
if labarugi < 0 then 
	set var_acc_laba = (select profit_notes from i_project_name);
elseif labarugi > 0 then 
	set var_acc_laba = (select profit_notes from i_project_name);
end if;

insert into temp_pasiva
 select "3-5000", 
var_acc_laba, "3-5000","",labarugi;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_view_pasiva_tahunlalu` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`%`*/ /*!50003 PROCEDURE `sp_view_pasiva_tahunlalu`(in var_start_date date, in var_end_date date,in date_filter integer)
BEGIN

	DECLARE mRows INTEGER;
	DECLARE Balance DOUBLE;
	DECLARE i INTEGER;
	DECLARE Taktiva double;
	DECLARE Tpassiva double;
	DECLARE labarugi double;
	DECLARE var_acc_laba varchar(120);

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		RESIGNAL;
    ROLLBACK;
	END;

	START TRANSACTION;
	

create TABLE if not EXISTS temp_pasiva_tahunlalu (
`id_account`  varchar(255) NOT NULL ,
`account_name`  varchar(255) NULL DEFAULT NULL ,
`parent`  varchar(255) NULL DEFAULT NULL ,
`saldo`  double NULL DEFAULT NULL 
);

delete from temp_pasiva_tahunlalu;

if date_filter = 1 then

insert into temp_pasiva_tahunlalu
 select b.id_account, 
b.account_name, b.parent, case when b.def_position = 'D' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end  
when b.def_position = 'K' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end  - 
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end
end as saldo
from  mst_account b 
left join (select i.no_ledger,y.id_account,y.nominal from trn_ledger_head i inner join trn_ledger_det y on y.no_ledger = i.no_ledger
where (i.date_trn between '1900-01-01' and var_end_date)) a on a.id_account = b.id_account
where b.is_balance_sheet = 1 and b.is_income = 0 and b.golongan in ('2','3') and b.flag_header=0
group by b.id_account
having saldo <> 0
order by b.id_account;

elseif date_filter = 0 THEN

insert into temp_pasiva_tahunlalu
 select b.id_account, 
b.account_name, b.parent, case when b.def_position = 'D' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end -
case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end  
when b.def_position = 'K' then 
b.beg_balance + case when sum(case when a.nominal is null then 0 else a.nominal end) <0 then abs(sum(case when a.nominal is null then 0 else a.nominal end)) else 0 end  - 
case when sum(case when a.nominal is null then 0 else a.nominal end) >0 then sum(case when a.nominal is null then 0 else a.nominal end) else 0 end
end as saldo
from  mst_account b 
left join (select i.no_ledger,y.id_account,y.nominal from trn_ledger_head i inner join trn_ledger_det y on y.no_ledger = i.no_ledger
where (i.date_trn < var_end_date)) a on a.id_account = b.id_account
where b.is_balance_sheet = 1 and b.is_income = 0 and b.golongan in ('2','3') and b.flag_header=0
group by b.id_account
having saldo <> 0
order by b.id_account;

end if;


select sum(case when saldo is null then 0 else saldo end) into Taktiva from temp_aktiva_tahunlalu;
select sum(case when saldo is null then 0 else saldo end) into Tpassiva from temp_pasiva_tahunlalu;

if Taktiva is null then 
	set Taktiva = 0;
end if;

if Tpassiva is null then 
	set Tpassiva = 0;
end if;

set labarugi = Taktiva - Tpassiva;
if labarugi < 0 then 
	set var_acc_laba = (select profit_notes from i_project_name where project_default=1);
elseif labarugi > 0 then 
	set var_acc_laba = (select profit_notes from i_project_name where project_default=1);
end if;

insert into temp_pasiva_tahunlalu
 select "3-5000", 
var_acc_laba, "3-5000",labarugi;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_warehouse` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = cp850 */ ;
/*!50003 SET character_set_results = cp850 */ ;
/*!50003 SET collation_connection  = cp850_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_warehouse`(in var_id_warehouse varchar(60), in var_warehouse_name varchar(200), in var_qty_max varchar(30), in var_unit_max varchar(30), in var_address varchar(250), in var_phone varchar(120), in var_city varchar(200), in var_notes text, in var_flag_default integer, in var_created_user varchar(120), in var_created_date datetime, in var_modified_user varchar(120), in var_modified_date datetime, in transid  varchar(60), in outlet integer)
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;

START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	UPDATE mst_warehouse
SET 
	id_warehouse = var_id_warehouse,
	warehouse_name = var_warehouse_name,
	qty_max = var_qty_max,
	unit_max = var_unit_max,
	address = var_address,
	phone = var_phone,
	city = var_city,
	notes = var_notes,
	flag_nonactive = var_flag_default,
	created_user = var_created_user,
	created_date = var_created_date,
	modified_user = var_modified_user,
	modified_date = var_modified_date,
	is_outlet = outlet
WHERE	
	id_warehouse = var_id_warehouse;


ELSEIF TRANSID = 'INSERT' THEN

	INSERT INTO mst_warehouse (
		id_warehouse,
		warehouse_name,
		qty_max,
		unit_max,
		address,
		phone,
		city,
		notes,
		flag_nonactive,
		created_user,
		created_date,
		modified_user,
		modified_date,
		is_outlet
	)
VALUES
	(
		var_id_warehouse,
		var_warehouse_name,
		var_qty_max,
		var_unit_max,
		var_address,
		var_phone,
		var_city,
		var_notes,
		var_flag_default,
		var_created_user,	
		var_created_date,
		var_modified_user,	
		var_modified_date,
		outlet
	);


ELSEIF TRANSID = 'DELETE' THEN

DELETE
FROM
	mst_warehouse
WHERE
	id_warehouse = var_id_warehouse;

END
IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_wo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_wo`(in var_wo_no varchar(60),in var_expected_date datetime,in var_realized_date datetime,in var_start_date datetime,in var_date_trn datetime,in var_pic varchar(60),in var_department_id integer,in var_cost_total double,in var_notes varchar(400),in var_modified_user varchar(60),in var_created_date datetime,in var_modified_date datetime,in var_created_user varchar(60),in var_no_bom varchar(60),in var_item_notes varchar(400),in var_qty_item_production double,in var_unit varchar(30),in var_cost_total_wo double,in var_persentage_finished double,in var_id_material varchar(60),in var_qty_material double,in var_id_unit_material varchar(30),in var_cost_material double,in var_notes_material varchar(400),in var_total_cost_material double,in var_id_wip varchar(60),in var_qty_wip double, in var_id_unit_wip varchar(30),in var_cost_wip double,in var_notes_wip varchar(400),in var_total_cost_wip double,in var_id_cost_conversion varchar(60),in var_qty_hour_conversion double,in var_cost_conversion double,in var_notes_conversion varchar(400),in var_total_cost_conversion double,in var_detail integer, in varloop integer, in transid varchar(120))
BEGIN

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
		RESIGNAL;
    ROLLBACK;
END;


START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then

		delete from trn_wo_conversion_det where wo_no = var_wo_no;
		delete from trn_wo_material_det where no_wo = var_wo_no;
		delete from trn_wo_wip_det where wo_no = var_wo_no;
		delete from trn_wo_item_det where wo_no = var_wo_no;
		delete from trn_wo_head where wo_no = var_wo_no;

	insert into trn_wo_head(
			wo_no,
			expected_date,
			realized_date,
			start_date,
			date_trn,
			pic,
			department_id,
			cost_total,
			notes,
			modified_user,
			created_date,
			modified_date,
			created_user
		)
		values(var_wo_no,
			var_expected_date,
			var_realized_date,
			var_start_date,
			var_date_trn,
			var_pic,
			var_department_id,
			var_cost_total,
			var_notes,
			var_modified_user,
			var_created_date,
			var_modified_date,
			var_created_user
		);

	elseif var_detail = 1 THEN
		
		insert into trn_wo_item_det (
			wo_no,
			no_bom,
			item_notes,
			qty_item_production,
			id_unit,
			cost_total_wo,
			persentage_finished
		)
		values (
			var_wo_no,
			var_no_bom,
			var_item_notes,
			var_qty_item_production,
			var_unit,
			var_cost_total_wo,
			var_persentage_finished
		);
		
	elseif var_detail = 2 THEN
		
		insert into trn_wo_material_det (
			no_wo,
			no_bom,
			id_item,
			qty_material,
			id_unit,
			cost,
			notes,
			total_cost
		)
		values (
			var_wo_no,
			var_no_bom,
			var_id_material,
			var_qty_material,
			var_id_unit_material,
			var_cost_material,
			var_notes_material,
			var_total_cost_material
		);

		elseif var_detail = 4 THEN

			insert into trn_wo_conversion_det (
				wo_no,
				no_bom,
				id_cost,
				qty_hour,
				cost,
				notes,
				total_cost
			)
			values (
				var_wo_no,
				var_no_bom,
				var_id_cost_conversion,
				var_qty_hour_conversion,
				var_cost_conversion,
				var_notes_conversion,
				var_total_cost_conversion
			);

		elseif var_detail = 3 THEN
			insert into trn_wo_wip_det (
				wo_no,	
				no_bom,
				id_item,
				qty_material,
				id_unit,
				cost,
				notes,
				total_cost
			)
			values (
				var_wo_no,	
				var_no_bom,
				var_id_wip,
				var_qty_wip,
				var_id_unit_wip,
				var_cost_wip,
				var_notes_wip,
				var_total_cost_wip
			);

		end if;

ELSEIF TRANSID = 'INSERT' THEN
	
		if var_detail = 0 then

		
	insert into trn_wo_head(
			wo_no,
			expected_date,
			realized_date,
			start_date,
			date_trn,
			pic,
			department_id,
			cost_total,
			notes,
			modified_user,
			created_date,
			modified_date,
			created_user
		)
		values(var_wo_no,
			var_expected_date,
			var_realized_date,
			var_start_date,
			var_date_trn,
			var_pic,
			var_department_id,
			var_cost_total,
			var_notes,
			var_modified_user,
			var_created_date,
			var_modified_date,
			var_created_user
		);

	elseif var_detail = 1 THEN
		
		insert into trn_wo_item_det (
			wo_no,
			no_bom,
			item_notes,
			qty_item_production,
			id_unit,
			cost_total_wo,
			persentage_finished
		)
		values (
			var_wo_no,
			var_no_bom,
			var_item_notes,
			var_qty_item_production,
			var_unit,
			var_cost_total_wo,
			var_persentage_finished
		);
		
	elseif var_detail = 2 THEN
		
		insert into trn_wo_material_det (
			no_wo,
			no_bom,
			id_item,
			qty_material,
			id_unit,
			cost,
			notes,
			total_cost
		)
		values (
			var_wo_no,
			var_no_bom,
			var_id_material,
			var_qty_material,
			var_id_unit_material,
			var_cost_material,
			var_notes_material,
			var_total_cost_material
		);

		elseif var_detail = 4 THEN

			insert into trn_wo_conversion_det (
				wo_no,
				no_bom,
				id_cost,
				qty_hour,
				cost,
				notes,
				total_cost
			)
			values (
				var_wo_no,
				var_no_bom,
				var_id_cost_conversion,
				var_qty_hour_conversion,
				var_cost_conversion,
				var_notes_conversion,
				var_total_cost_conversion
			);

		elseif var_detail = 3 THEN
			insert into trn_wo_wip_det (
				wo_no,	
				no_bom,
				id_item,
				qty_material,
				id_unit,
				cost,
				notes,
				total_cost
			)
			values (
				var_wo_no,	
				var_no_bom,
				var_id_wip,
				var_qty_wip,
				var_id_unit_wip,
				var_cost_wip,
				var_notes_wip,
				var_total_cost_wip
			);

		end if;

ELSEIF TRANSID = 'DELETE' THEN
delete from trn_wo_conversion_det where wo_no = var_wo_no;
		delete from trn_wo_material_det where no_wo = var_wo_no;
		delete from trn_wo_wip_det where wo_no = var_wo_no;
		delete from trn_wo_item_det where wo_no = var_wo_no;
		delete from trn_wo_head where wo_no = var_wo_no;



			
END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sp_wo_realized` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50020 DEFINER=`root`@`localhost`*/ /*!50003 PROCEDURE `sp_wo_realized`(in var_realized_no varchar(60), in var_wo_no varchar(60),in var_expected_date datetime,in var_realized_date datetime,in var_date_trn datetime,in var_pic varchar(60),in var_department_id integer,in var_cost_total double,in var_notes varchar(400),in var_modified_user varchar(60),in var_created_date datetime,in var_modified_date datetime,in var_created_user varchar(60),in var_id_item varchar(60),in var_item_notes varchar(400),in var_qty_item_production double,in var_unit varchar(30),in var_cost_total_wo double,in var_persentage_finished double,in var_id_material varchar(60),in var_qty_material double,in var_id_unit_material varchar(30),in var_cost_material double,in var_notes_material varchar(400),in var_total_cost_material double,in var_id_wip varchar(60),in var_qty_wip double, in var_id_unit_wip varchar(30),in var_cost_wip double,in var_notes_wip varchar(400),in var_total_cost_wip double,in var_id_cost_conversion varchar(60),in var_qty_hour_conversion double,in var_cost_conversion double,in var_notes_conversion varchar(400),in var_total_cost_conversion double,in var_detail integer, in varloop integer, in transid varchar(120), in var_id_warehouse varchar(60))
BEGIN

declare BDPAccount varchar(60);

declare PayableAccount varchar(60);
declare var_account varchar(60);

declare BOPStdAccount varchar(60);

declare BOPRealAccount varchar(60);

declare MaterialCostAccount varchar(60);

declare WIPCostAccount varchar(60);

declare WagesCostAccount varchar(60);
declare ConversionCostType int;
declare StdCostWO double;
declare TKLCostReal double;
declare BOPCostReal double;
declare TempCostBDP double;
declare GoodsAccount varchar(60);
declare ConversionName varchar(250);

DECLARE EXIT HANDLER FOR SQLEXCEPTION

BEGIN
		RESIGNAL;
    ROLLBACK;
END;


START TRANSACTION;

IF TRANSID = 'UPDATE' THEN

	if var_detail = 0 then

		
		delete from i_stock_in where no_stock_in = var_realized_no;
		delete from trn_ledger_det where no_ledger = var_realized_no;
		delete from trn_ledger_head where no_ledger = var_realized_no;
		delete from trn_wo_realized_conversion_det where realized_no = var_realized_no;
		delete from trn_wo_realized_material_det where realized_no = var_realized_no;
		delete from trn_wo_realized_wip_det where realized_no = var_realized_no;
		delete from trn_wo_realized_item_det where realized_no = var_realized_no;
		delete from trn_wo_realized_head where realized_no = var_realized_no;

	insert into trn_wo_realized_head(
			realized_no,
			wo_no,
			expected_date,
			realized_date,
			date_trn,
			pic,
			department_id,
			cost_total,
			notes,
			modified_user,
			created_date,
			modified_date,
			created_user,
			id_warehouse
		)
		values(var_realized_no,
			var_wo_no,
			var_expected_date,
			var_realized_date,
			var_date_trn,
			var_pic,
			var_department_id,
			var_cost_total,
			var_notes,
			var_modified_user,
			var_created_date,
			var_modified_date,
			var_created_user,
			var_id_warehouse
		);

	
	
	insert into trn_ledger_head (
		no_ledger,
		date_trn,
		description,
		total,
		created_user,
		created_date,
		modified_user,
		modified_date,
		post_from) 
	values (
		var_realized_no,
		var_date_trn,
		concat(var_notes,'-',var_realized_no),
		var_cost_total,
		var_created_user,
		var_created_date,
		var_modified_user,
		var_modified_date,
		'Realisasi Produksi'
	);

	elseif var_detail = 1 THEN
		
		insert into trn_wo_realized_item_det (
			realized_no,
			id_item,
			item_name,
			qty_item_production,
			id_unit,
			cost_total,
			persentage_finished
		)
		values (
			var_realized_no,
			var_id_item,
			var_item_notes,
			var_qty_item_production,
			var_unit,
			var_cost_total_wo,
			var_persentage_finished
		);
		
		insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_realized_no,
			 var_date_trn,
			 var_id_item,
			 var_qty_item_production,
			 var_unit,
			 round(var_cost_total_wo / var_qty_item_production,0),
			 round(var_cost_total_wo / var_qty_item_production,0),
			 var_id_warehouse
			);

	elseif var_detail = 2 THEN
		
		insert into trn_wo_realized_material_det (
			realized_no,
			id_item,
			qty_material,
			id_unit,
			cost,
			notes,
			total_cost
		)
		values (
			var_realized_no,
			var_id_material,
			var_qty_material,
			var_id_unit_material,
			var_cost_material,
			var_notes_material,
			var_total_cost_material
		);

		elseif var_detail = 4 THEN

			insert into trn_wo_realized_conversion_det (
				realized_no,
				id_cost,
				qty_hour,
				cost,
				notes,
				total_cost
			)
			values (
				var_realized_no,
				var_id_cost_conversion,
				var_qty_hour_conversion,
				var_cost_conversion,
				var_notes_conversion,
				var_total_cost_conversion
			);

			
				
				
				select a.id_account into var_account from mst_standard_cost a where a.id_cost = var_id_cost_conversion;
				select a.cost_name into ConversionName from mst_standard_cost a where a.id_cost = var_id_cost_conversion;
				
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				) values (
					var_realized_no,
					var_account,
					concat('Kewajiban Segera Biaya Konversi', '-', ConversionName),
					var_total_cost_conversion
				);
			
				select type into ConversionCostType from mst_standard_cost where id_cost = var_id_cost_conversion; 
				
				if ConversionCostType = 1 then
					select a.id_account_wages_payable into PayableAccount from mst_department_produksi a where a.department_id = var_department_id;
					insert into trn_ledger_det (
						no_ledger,
						id_account,
						notes,
						nominal
					) values (
						var_realized_no,
						PayableAccount,
						concat('Kewajiban Segera Biaya Konversi', '-', ConversionName),
						-1*var_total_cost_conversion
					);
				elseif ConversionCostType = 2 THEN
					select a.id_account_bop_real into BOPRealAccount from mst_department_produksi a where a.department_id = var_department_id;
					insert into trn_ledger_det (
						no_ledger,
						id_account,
						notes,
						nominal
					) values (
						var_realized_no,
						BOPRealAccount,
						concat('Kewajiban Segera Biaya Konversi', '-', ConversionName),
						-1*var_total_cost_conversion
					);
					
				end if;

				
				
				
				select a.id_account_bdp into BDPAccount from mst_department_produksi a where a.department_id = var_department_id;
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				) values (
					var_realized_no,
					BDPAccount,
					concat('Pembebanan ',ConversionName,' ke Barang Dalam Proses'),
					var_total_cost_conversion 
				);
				
				select a.id_account into var_account from mst_standard_cost a where a.id_cost = var_id_cost_conversion;
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				) values (
					var_realized_no,
					var_account,
					concat('Pembebanan ',ConversionName,' ke Barang Dalam Proses'),
					-1*var_total_cost_conversion
				);
			
			
		elseif var_detail = 3 THEN
			insert into trn_wo_realized_wip_det (
				realized_no,
				id_item,
				qty_material,
				id_unit,
				cost,
				notes,
				total_cost
			)
			values (
				var_realized_no,	
				var_id_wip,
				var_qty_wip,
				var_id_unit_wip,
				var_cost_wip,
				var_notes_wip,
				var_total_cost_wip
			);

		end if;

			if varloop = 0 and var_detail = 5 then
				
				
				select id_account into GoodsAccount from mst_item where id_item = var_id_item;
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				) values (
					var_realized_no,
					GoodsAccount,
					concat('Hasil Produksi','-',var_id_item,'- No Produksi: ',var_realized_no),
					var_cost_total
				);

				
				select a.id_account_bdp into BDPAccount from mst_department_produksi a where a.department_id = var_department_id;
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				) values (
					var_realized_no,
					BDPAccount,
					concat('Hasil Produksi','-',var_id_item,'- No Produksi: ',var_realized_no),
					-1*var_cost_total
				);

			end if;

ELSEIF TRANSID = 'INSERT' THEN
	
	if var_detail = 0 then

	insert into trn_wo_realized_head(
			realized_no,
			wo_no,
			expected_date,
			realized_date,
			date_trn,
			pic,
			department_id,
			cost_total,
			notes,
			modified_user,
			created_date,
			modified_date,
			created_user,
			id_warehouse
		)
		values(var_realized_no,
			var_wo_no,
			var_expected_date,
			var_realized_date,
			var_date_trn,
			var_pic,
			var_department_id,
			var_cost_total,
			var_notes,
			var_modified_user,
			var_created_date,
			var_modified_date,
			var_created_user,
			var_id_warehouse
		);

	
	
	insert into trn_ledger_head (
		no_ledger,
		date_trn,
		description,
		total,
		created_user,
		created_date,
		modified_user,
		modified_date,
		post_from) 
	values (
		var_realized_no,
		var_date_trn,
		concat(var_notes,'-',var_realized_no),
		var_cost_total,
		var_created_user,
		var_created_date,
		var_modified_user,
		var_modified_date,
		'Realisasi Produksi'
	);

	elseif var_detail = 1 THEN
		
		insert into trn_wo_realized_item_det (
			realized_no,
			id_item,
			item_name,
			qty_item_production,
			id_unit,
			cost_total,
			persentage_finished
		)
		values (
			var_realized_no,
			var_id_item,
			var_item_notes,
			var_qty_item_production,
			var_unit,
			var_cost_total_wo,
			var_persentage_finished
		);

		insert into i_stock_in 
			(no_stock_in,
			 date_trn,
			 id_item,
			 qty,
			 id_unit,
			 cogs,
			 price,
			 id_warehouse
			)
		values (var_realized_no,
			 var_date_trn,
			 var_id_item,
			 var_qty_item_production,
			 var_unit,
			 round(var_cost_total_wo / var_qty_item_production,0),
			 round(var_cost_total_wo / var_qty_item_production,0),
			 var_id_warehouse
			);

		
	elseif var_detail = 2 THEN
		
		insert into trn_wo_realized_material_det (
			realized_no,
			id_item,
			qty_material,
			id_unit,
			cost,
			notes,
			total_cost
		)
		values (
			var_realized_no,
			var_id_material,
			var_qty_material,
			var_id_unit_material,
			var_cost_material,
			var_notes_material,
			var_total_cost_material
		);

		elseif var_detail = 4 THEN

			insert into trn_wo_realized_conversion_det (
				realized_no,
				id_cost,
				qty_hour,
				cost,
				notes,
				total_cost
			)
			values (
				var_realized_no,
				var_id_cost_conversion,
				var_qty_hour_conversion,
				var_cost_conversion,
				var_notes_conversion,
				var_total_cost_conversion
			);

			
				
				
				select a.id_account into var_account from mst_standard_cost a where a.id_cost = var_id_cost_conversion;
				select a.cost_name into ConversionName from mst_standard_cost a where a.id_cost = var_id_cost_conversion;
				
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				) values (
					var_realized_no,
					var_account,
					concat('Kewajiban Segera Biaya Konversi', '-', ConversionName),
					var_total_cost_conversion
				);
			
				select type into ConversionCostType from mst_standard_cost where id_cost = var_id_cost_conversion; 
				
				if ConversionCostType = 1 then
					select a.id_account_wages_payable into PayableAccount from mst_department_produksi a where a.department_id = var_department_id;
					insert into trn_ledger_det (
						no_ledger,
						id_account,
						notes,
						nominal
					) values (
						var_realized_no,
						PayableAccount,
						concat('Kewajiban Segera Biaya Konversi', '-', ConversionName),
						-1*var_total_cost_conversion
					);
				elseif ConversionCostType = 2 THEN
					select a.id_account_bop_real into BOPRealAccount from mst_department_produksi a where a.department_id = var_department_id;
					insert into trn_ledger_det (
						no_ledger,
						id_account,
						notes,
						nominal
					) values (
						var_realized_no,
						BOPRealAccount,
						concat('Kewajiban Segera Biaya Konversi', '-', ConversionName),
						-1*var_total_cost_conversion
					);
					
				end if;

				
				
				
				select a.id_account_bdp into BDPAccount from mst_department_produksi a where a.department_id = var_department_id;
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				) values (
					var_realized_no,
					BDPAccount,
					concat('Pembebanan ',ConversionName,' ke Barang Dalam Proses'),
					var_total_cost_conversion 
				);
				
				select a.id_account into var_account from mst_standard_cost a where a.id_cost = var_id_cost_conversion;
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				) values (
					var_realized_no,
					var_account,
					concat('Pembebanan ',ConversionName,' ke Barang Dalam Proses'),
					-1*var_total_cost_conversion
				);
			
			
		elseif var_detail = 3 THEN
			insert into trn_wo_realized_wip_det (
				realized_no,
				id_item,
				qty_material,
				id_unit,
				cost,
				notes,
				total_cost
			)
			values (
				var_realized_no,	
				var_id_wip,
				var_qty_wip,
				var_id_unit_wip,
				var_cost_wip,
				var_notes_wip,
				var_total_cost_wip
			);

		end if;

			if varloop = 0 and var_detail = 5 then
				
				
				select id_account into GoodsAccount from mst_item where id_item = var_id_item;
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				) values (
					var_realized_no,
					GoodsAccount,
					concat('Hasil Produksi','-',var_id_item,'- No Produksi: ',var_realized_no),
					var_cost_total
				);

				
				select a.id_account_bdp into BDPAccount from mst_department_produksi a where a.department_id = var_department_id;
				insert into trn_ledger_det (
					no_ledger,
					id_account,
					notes,
					nominal
				) values (
					var_realized_no,
					BDPAccount,
					concat('Hasil Produksi','-',var_id_item,'- No Produksi: ',var_realized_no),
					-1*var_cost_total
				);

			end if;

ELSEIF TRANSID = 'DELETE' THEN
				
		delete from i_stock_in where no_stock_in = var_realized_no;
		delete from trn_ledger_det where no_ledger = var_realized_no;
		delete from trn_ledger_head where no_ledger = var_realized_no;
		delete from trn_wo_realized_conversion_det where realized_no = var_realized_no;
		delete from trn_wo_realized_material_det where realized_no = var_realized_no;
		delete from trn_wo_realized_wip_det where realized_no = var_realized_no;
		delete from trn_wo_realized_item_det where realized_no = var_realized_no;
		delete from trn_wo_realized_head where realized_no = var_realized_no;

END IF;

COMMIT;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Final view structure for view `coa_detail_view`
--

/*!50001 DROP TABLE IF EXISTS `coa_detail_view`*/;
/*!50001 DROP VIEW IF EXISTS `coa_detail_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `coa_detail_view` AS select `a`.`id_account` AS `id_account`,`a`.`account_name` AS `account_name`,`a`.`parent` AS `parent`,`a`.`flag_active` AS `flag_active`,`a`.`flag_header` AS `flag_header`,`a`.`is_income` AS `is_income`,`a`.`is_balance_sheet` AS `is_balance_sheet`,`a`.`notes` AS `notes`,`a`.`def_position` AS `def_position`,`a`.`modified_user` AS `modified_user`,`a`.`created_date` AS `created_date`,`a`.`modified_date` AS `modified_date`,`a`.`created_user` AS `created_user`,`a`.`beg_balance` AS `beg_balance`,`a`.`golongan` AS `golongan`,`b`.`account_name` AS `header`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select (case when isnull(`i_project_name`.`header_text`) then '' else `i_project_name`.`header_text` end) AS `header_text` from `i_project_name` where (`i_project_name`.`project_default` = 1)) AS `header_text` from (`mst_account` `a` join `coa_header_view` `b` on((`b`.`id_account` = `a`.`parent`))) where (`a`.`flag_header` = 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `coa_header_view`
--

/*!50001 DROP TABLE IF EXISTS `coa_header_view`*/;
/*!50001 DROP VIEW IF EXISTS `coa_header_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `coa_header_view` AS select `mst_account`.`id_account` AS `id_account`,`mst_account`.`account_name` AS `account_name` from `mst_account` where (`mst_account`.`flag_header` = 1) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `combo_billofmaterial`
--

/*!50001 DROP TABLE IF EXISTS `combo_billofmaterial`*/;
/*!50001 DROP VIEW IF EXISTS `combo_billofmaterial`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `combo_billofmaterial` AS select `a`.`date_trn` AS `date_trn`,`a`.`no_bom` AS `no_bom`,concat(`a`.`id_item`,' - ',`d`.`item_name`) AS `item_desc`,`a`.`qty_item_production` AS `qty_item_production`,`a`.`id_unit` AS `id_unit`,`a`.`total_cost` AS `total_cost`,0 AS `finished` from (`mst_bom_head` `a` join `mst_item` `d` on((`d`.`id_item` = `a`.`id_item`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `combo_conversion_cost`
--

/*!50001 DROP TABLE IF EXISTS `combo_conversion_cost`*/;
/*!50001 DROP VIEW IF EXISTS `combo_conversion_cost`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `combo_conversion_cost` AS select `mst_standard_cost`.`id_cost` AS `id_cost`,`mst_standard_cost`.`cost_name` AS `cost_name`,`mst_standard_cost`.`cost_def` AS `cost_def` from `mst_standard_cost` where (`mst_standard_cost`.`flag_active` = 1) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `combo_departemen_produksi`
--

/*!50001 DROP TABLE IF EXISTS `combo_departemen_produksi`*/;
/*!50001 DROP VIEW IF EXISTS `combo_departemen_produksi`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `combo_departemen_produksi` AS select `mst_department_produksi`.`department_id` AS `department_id`,`mst_department_produksi`.`department_name` AS `department_name` from `mst_department_produksi` where (`mst_department_produksi`.`flag_active` = 1) order by `mst_department_produksi`.`department_id` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `combo_employee`
--

/*!50001 DROP TABLE IF EXISTS `combo_employee`*/;
/*!50001 DROP VIEW IF EXISTS `combo_employee`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `combo_employee` AS select `a`.`id_employee` AS `id_employee`,concat((case when isnull(`a`.`first_name`) then '' else `a`.`first_name` end),' ',(case when isnull(`a`.`last_name`) then '' else `a`.`last_name` end)) AS `nama`,(case when isnull(`b`.`position_name`) then '' else `b`.`position_name` end) AS `position_name`,(case when isnull(`c`.`department_name`) then '' else `c`.`department_name` end) AS `department_name` from ((`mst_employee` `a` left join `mst_position` `b` on((`b`.`position_id` = `a`.`position_id`))) left join `mst_department` `c` on((`c`.`department_id` = `a`.`department_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `combo_rem_material_usage_wo`
--

/*!50001 DROP TABLE IF EXISTS `combo_rem_material_usage_wo`*/;
/*!50001 DROP VIEW IF EXISTS `combo_rem_material_usage_wo`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `combo_rem_material_usage_wo` AS select `a`.`no_wo` AS `no_wo`,`a`.`no_bom` AS `no_bom`,`a`.`id_item` AS `id_item`,`b`.`item_name` AS `item_name`,((case when isnull(`a`.`qty_material`) then 0 else `a`.`qty_material` end) - (case when isnull(`a`.`real_qty`) then 0 else `a`.`real_qty` end)) AS `remaining_qty`,`a`.`id_unit` AS `id_unit`,`a`.`cost` AS `cost`,`a`.`total_cost` AS `total_cost`,'Bahan Baku' AS `jenis` from (`trn_wo_material_det` `a` join `mst_item` `b` on((`b`.`id_item` = `a`.`id_item`))) where (((case when isnull(`a`.`qty_material`) then 0 else `a`.`qty_material` end) - (case when isnull(`a`.`real_qty`) then 0 else `a`.`real_qty` end)) > 0) union all select `a`.`wo_no` AS `wo_no`,`a`.`no_bom` AS `no_bom`,`a`.`id_item` AS `id_item`,`b`.`item_name` AS `item_name`,((case when isnull(`a`.`qty_material`) then 0 else `a`.`qty_material` end) - (case when isnull(`a`.`real_qty`) then 0 else `a`.`real_qty` end)) AS `remaining_qty`,`a`.`id_unit` AS `id_unit`,`a`.`cost` AS `cost`,`a`.`total_cost` AS `total_cost`,'Barang Setengah Jadi' AS `jenis` from (`trn_wo_wip_det` `a` join `mst_item` `b` on((`b`.`id_item` = `a`.`id_item`))) where (((case when isnull(`a`.`qty_material`) then 0 else `a`.`qty_material` end) - (case when isnull(`a`.`real_qty`) then 0 else `a`.`real_qty` end)) > 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `combo_supplier_po`
--

/*!50001 DROP TABLE IF EXISTS `combo_supplier_po`*/;
/*!50001 DROP VIEW IF EXISTS `combo_supplier_po`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `combo_supplier_po` AS select distinct `b`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `name`,`b`.`address` AS `address` from `mst_supplier` `b` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `combo_view_opname`
--

/*!50001 DROP TABLE IF EXISTS `combo_view_opname`*/;
/*!50001 DROP VIEW IF EXISTS `combo_view_opname`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `combo_view_opname` AS select `a`.`date_trn` AS `date_trn`,`a`.`no_opname` AS `no_opname`,`a`.`id_warehouse` AS `id_warehouse` from `i_opname_head` `a` where ((case when isnull(`a`.`is_corrected`) then 0 else `a`.`is_corrected` end) = 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `combo_wo_view`
--

/*!50001 DROP TABLE IF EXISTS `combo_wo_view`*/;
/*!50001 DROP VIEW IF EXISTS `combo_wo_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `combo_wo_view` AS select `a`.`wo_no` AS `wo_no`,`b`.`department_name` AS `department_name`,`a`.`department_id` AS `department_id`,cast(`a`.`start_date` as date) AS `tgl_mulai`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `pic`,cast(`a`.`expected_date` as date) AS `expected_date` from ((`trn_wo_head` `a` join `mst_department_produksi` `b` on((`b`.`department_id` = `a`.`department_id`))) join `mst_employee` `c` on((`c`.`id_employee` = `a`.`pic`))) where ((case when isnull(`a`.`finished`) then 0 else `a`.`finished` end) = 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `commission_report_view`
--

/*!50001 DROP TABLE IF EXISTS `commission_report_view`*/;
/*!50001 DROP VIEW IF EXISTS `commission_report_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `commission_report_view` AS select `d`.`date_trn` AS `date_trn`,`a`.`no_service` AS `no_service`,concat(`b`.`first_name`,' ',`b`.`last_name`) AS `nama`,`c`.`service_name` AS `service_name`,`a`.`qty` AS `qty`,`a`.`price` AS `price`,`a`.`nominal` AS `nominal`,`d`.`notes` AS `notes`,(case when (`b`.`grade` = 'Senior') then `c`.`senior_commission` when (`b`.`grade` = 'Junior') then `c`.`junior_commission` end) AS `rate_commission`,(case when (`b`.`grade` = 'Senior') then (`a`.`qty` * `c`.`senior_commission`) when (`b`.`grade` = 'Junior') then (`a`.`qty` * `c`.`junior_commission`) end) AS `commission` from (((`trn_service_det` `a` join `trn_service_head` `d` on((`d`.`no_service` = `a`.`no_service`))) join `mst_employee` `b` on((`b`.`id_employee` = `a`.`id_employee`))) join `mst_service` `c` on((`c`.`id_service` = `a`.`id_service`))) order by `d`.`date_trn`,`a`.`no_service` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `getcombosimpanpinjam`
--

/*!50001 DROP TABLE IF EXISTS `getcombosimpanpinjam`*/;
/*!50001 DROP VIEW IF EXISTS `getcombosimpanpinjam`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `getcombosimpanpinjam` AS select `a`.`no_pinjam` AS `no_pinjam`,`a`.`bunga` AS `bunga`,`a`.`date_trn` AS `date_trn`,`a`.`jangka_waktu` AS `jangka_waktu`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `customer`,`a`.`nominal` AS `nominal`,`a`.`id_customer` AS `id_customer` from (`trn_pinjam` `a` join `mst_customer` `c` on((`c`.`id_customer` = `a`.`id_customer`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `goods_view`
--

/*!50001 DROP TABLE IF EXISTS `goods_view`*/;
/*!50001 DROP VIEW IF EXISTS `goods_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `goods_view` AS select `a`.`id_item` AS `id_item`,`a`.`item_name` AS `item_name`,`a`.`id_barcode` AS `id_barcode`,`b`.`mst_itemcat_nm` AS `mst_itemcat_nm` from (`mst_item` `a` join `mst_itemcat` `b` on((`b`.`mst_itemcat_id` = `a`.`id_category`))) where (((case when isnull(`a`.`flag_sell`) then 0 else `a`.`flag_sell` end) = 1) and (`a`.`active_status` = 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `hitung_rekap_jual_category`
--

/*!50001 DROP TABLE IF EXISTS `hitung_rekap_jual_category`*/;
/*!50001 DROP VIEW IF EXISTS `hitung_rekap_jual_category`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `hitung_rekap_jual_category` AS select `e`.`mst_itemcat_nm` AS `id_category`,sum(`b`.`total`) AS `total` from (((`trn_payoff_so_det` `a` join `trn_payoff_so_head` `b` on((`b`.`no_purchase` = `a`.`no_purchase`))) join `mst_item` `d` on((`d`.`id_item` = `a`.`id_item`))) join `mst_itemcat` `e` on((`e`.`mst_itemcat_id` = `d`.`id_category`))) group by `d`.`id_category` union all select `e`.`mst_itemcat_nm` AS `id_category`,sum(`b`.`total`) AS `total` from (((`trn_cashier_det` `a` join `trn_cashier_head` `b` on((`b`.`no_sales` = `a`.`no_sales`))) join `mst_item` `d` on((`d`.`id_item` = `a`.`id_item`))) join `mst_itemcat` `e` on((`e`.`mst_itemcat_id` = `d`.`id_category`))) group by `d`.`id_category` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `hitung_rekap_jual_view`
--

/*!50001 DROP TABLE IF EXISTS `hitung_rekap_jual_view`*/;
/*!50001 DROP VIEW IF EXISTS `hitung_rekap_jual_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `hitung_rekap_jual_view` AS select month(`trn_payoff_so_head`.`date_trn`) AS `tanggal`,sum(`trn_payoff_so_head`.`total`) AS `total` from `trn_payoff_so_head` where (year(`trn_payoff_so_head`.`date_trn`) = (select `get_year`())) group by month(`trn_payoff_so_head`.`date_trn`) union all select month(`trn_cashier_head`.`date_trn`) AS `tanggal`,sum(`trn_cashier_head`.`total`) AS `total` from `trn_cashier_head` where (year(`trn_cashier_head`.`date_trn`) = (select `get_year`())) group by month(`trn_cashier_head`.`date_trn`) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `items_view`
--

/*!50001 DROP TABLE IF EXISTS `items_view`*/;
/*!50001 DROP VIEW IF EXISTS `items_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `items_view` AS select `a`.`id_item` AS `id_item`,`a`.`item_name` AS `item_name`,`a`.`id_barcode` AS `id_barcode`,`b`.`mst_itemcat_nm` AS `mst_itemcat_nm`,`a`.`flag_buy` AS `flag_buy`,`a`.`flag_inv` AS `flag_inv`,`a`.`flag_sell` AS `flag_sell`,`a`.`sell_unit` AS `sell_unit` from (`mst_item` `a` join `mst_itemcat` `b` on((`b`.`mst_itemcat_id` = `a`.`id_category`))) where (`a`.`active_status` = 1) order by `a`.`id_item` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `lap_rekap_hpp_akhir_view`
--

/*!50001 DROP TABLE IF EXISTS `lap_rekap_hpp_akhir_view`*/;
/*!50001 DROP VIEW IF EXISTS `lap_rekap_hpp_akhir_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `lap_rekap_hpp_akhir_view` AS select `a`.`id_item` AS `id_item`,`b`.`item_name` AS `item_name`,`a`.`saldo` AS `saldo`,`a`.`price` AS `price`,`a`.`nominal` AS `nominal` from (`lap_rekap_hpp_akhir` `a` join `mst_item` `b` on((`b`.`id_item` = `a`.`id_item`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `raw_materials_view`
--

/*!50001 DROP TABLE IF EXISTS `raw_materials_view`*/;
/*!50001 DROP VIEW IF EXISTS `raw_materials_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `raw_materials_view` AS select `a`.`id_item` AS `id_item`,`a`.`item_name` AS `item_name`,`a`.`id_barcode` AS `id_barcode`,`b`.`mst_itemcat_nm` AS `mst_itemcat_nm` from (`mst_item` `a` join `mst_itemcat` `b` on((`b`.`mst_itemcat_id` = `a`.`id_category`))) where (((case when isnull(`a`.`flag_inv`) then 0 else `a`.`flag_inv` end) = 1) and (`a`.`active_status` = 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `rekap_pembelian_view`
--

/*!50001 DROP TABLE IF EXISTS `rekap_pembelian_view`*/;
/*!50001 DROP VIEW IF EXISTS `rekap_pembelian_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `rekap_pembelian_view` AS select month(`trn_purchase_head`.`date_trn`) AS `bulan`,sum((`trn_purchase_head`.`total` * `trn_purchase_head`.`kurs`)) AS `total` from `trn_purchase_head` where (year(`trn_purchase_head`.`date_trn`) = (select `get_year`())) group by month(`trn_purchase_head`.`date_trn`) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `rekap_penjualan_view`
--

/*!50001 DROP TABLE IF EXISTS `rekap_penjualan_view`*/;
/*!50001 DROP VIEW IF EXISTS `rekap_penjualan_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `rekap_penjualan_view` AS select `hitung_rekap_jual_view`.`tanggal` AS `bulan`,sum(`hitung_rekap_jual_view`.`total`) AS `total` from `hitung_rekap_jual_view` group by `hitung_rekap_jual_view`.`tanggal` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `request_quantitative_view`
--

/*!50001 DROP TABLE IF EXISTS `request_quantitative_view`*/;
/*!50001 DROP VIEW IF EXISTS `request_quantitative_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `request_quantitative_view` AS select (case when (month(`trn_request_order_head`.`date_trn`) = 1) then 'Januari' when (month(`trn_request_order_head`.`date_trn`) = 2) then 'Februari' when (month(`trn_request_order_head`.`date_trn`) = 3) then 'Maret' when (month(`trn_request_order_head`.`date_trn`) = 4) then 'April' when (month(`trn_request_order_head`.`date_trn`) = 5) then 'Mei' when (month(`trn_request_order_head`.`date_trn`) = 6) then 'Juni' when (month(`trn_request_order_head`.`date_trn`) = 7) then 'Juli' when (month(`trn_request_order_head`.`date_trn`) = 8) then 'Agustus' when (month(`trn_request_order_head`.`date_trn`) = 9) then 'September' when (month(`trn_request_order_head`.`date_trn`) = 10) then 'Oktober' when (month(`trn_request_order_head`.`date_trn`) = 11) then 'November' when (month(`trn_request_order_head`.`date_trn`) = 12) then 'Desember' else '' end) AS `period`,count(`trn_request_order_head`.`no_request_order`) AS `jumlah` from `trn_request_order_head` where (year(`trn_request_order_head`.`date_trn`) = (select `i_accounting_period`.`year` from `i_accounting_period`)) group by (case when (month(`trn_request_order_head`.`date_trn`) = 1) then 'Januari' when (month(`trn_request_order_head`.`date_trn`) = 2) then 'Februari' when (month(`trn_request_order_head`.`date_trn`) = 3) then 'Maret' when (month(`trn_request_order_head`.`date_trn`) = 4) then 'April' when (month(`trn_request_order_head`.`date_trn`) = 5) then 'Mei' when (month(`trn_request_order_head`.`date_trn`) = 6) then 'Juni' when (month(`trn_request_order_head`.`date_trn`) = 7) then 'Juli' when (month(`trn_request_order_head`.`date_trn`) = 8) then 'Agustus' when (month(`trn_request_order_head`.`date_trn`) = 9) then 'September' when (month(`trn_request_order_head`.`date_trn`) = 10) then 'Oktober' when (month(`trn_request_order_head`.`date_trn`) = 11) then 'November' when (month(`trn_request_order_head`.`date_trn`) = 12) then 'Desember' else '' end) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `rpt_serviceperdateperno`
--

/*!50001 DROP TABLE IF EXISTS `rpt_serviceperdateperno`*/;
/*!50001 DROP VIEW IF EXISTS `rpt_serviceperdateperno`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `rpt_serviceperdateperno` AS select `mst_service`.`service_name` AS `service_name`,`trn_service_det`.`no_service` AS `no_service`,`trn_service_det`.`number_asc` AS `number_asc`,`trn_service_det`.`notes` AS `notes_det`,`trn_service_det`.`qty` AS `qty`,`trn_service_det`.`price` AS `price`,`trn_service_det`.`nominal` AS `nominal`,`trn_service_head`.`date_trn` AS `date_trn`,`mst_employee`.`first_name` AS `first_name`,`mst_employee`.`last_name` AS `last_name`,`mst_customer`.`first_name` AS `first_name2`,`mst_customer`.`last_name` AS `last_name2`,`trn_service_head`.`notes` AS `notes` from ((((`trn_service_det` join `mst_service` on((`trn_service_det`.`id_service` = `mst_service`.`id_service`))) join `trn_service_head` on((`trn_service_det`.`no_service` = `trn_service_head`.`no_service`))) join `mst_employee` on((`trn_service_det`.`id_employee` = `mst_employee`.`id_employee`))) join `mst_customer` on((`trn_service_head`.`id_customer` = `mst_customer`.`id_customer`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `set_path_logo_view`
--

/*!50001 DROP TABLE IF EXISTS `set_path_logo_view`*/;
/*!50001 DROP VIEW IF EXISTS `set_path_logo_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `set_path_logo_view` AS select (case when isnull(`i_upload_path`.`path`) then '' else `i_upload_path`.`path` end) AS `path` from `i_upload_path` where (`i_upload_path`.`form` = 'Logo') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `so_thismonth_view`
--

/*!50001 DROP TABLE IF EXISTS `so_thismonth_view`*/;
/*!50001 DROP VIEW IF EXISTS `so_thismonth_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `so_thismonth_view` AS select date_format(`a`.`date_trn`,'%M,%D') AS `date_trn`,`a`.`no_sales_order` AS `no_sales_order`,concat(`b`.`first_name`,' ',`b`.`last_name`) AS `customer`,`a`.`total` AS `total`,'in progress for invoice' AS `status_notes` from (`trn_sales_order_head` `a` join `mst_customer` `b` on((`b`.`id_customer` = `a`.`id_customer`))) where ((case when isnull(`a`.`flag_status_invoice`) then 0 else `a`.`flag_status_invoice` end) = 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `usage_material_view_report`
--

/*!50001 DROP TABLE IF EXISTS `usage_material_view_report`*/;
/*!50001 DROP VIEW IF EXISTS `usage_material_view_report`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `usage_material_view_report` AS select `a`.`wo_no` AS `wo_no`,`a`.`usage_no` AS `usage_no`,`c`.`item_name` AS `item_name`,`a`.`total_cost` AS `total_cost`,`a`.`notes` AS `notes`,`d`.`item_name` AS `material_name`,`b`.`qty` AS `qty`,`e`.`unit` AS `unit`,`b`.`cost` AS `cost`,`b`.`total_cost` AS `total_cost_material`,`b`.`material_type_id` AS `material_type_id` from ((((`trn_usage_material_head` `a` join `trn_usage_material_det` `b` on((`a`.`usage_no` = `b`.`usage_no`))) join `mst_item` `c` on((`c`.`id_item` = `a`.`id_item_production`))) join `mst_item` `d` on((`d`.`id_item` = `b`.`item_id`))) join `mst_unit` `e` on((`e`.`id_unit` = `b`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_adjuststock`
--

/*!50001 DROP TABLE IF EXISTS `view_adjuststock`*/;
/*!50001 DROP VIEW IF EXISTS `view_adjuststock`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_adjuststock` AS select `a`.`no_adjust_stock` AS `no_adjust_stock`,`b`.`warehouse_name` AS `warehouse_name`,`a`.`date_trn` AS `date_trn`,`a`.`total_adjust` AS `total_adjust`,`a`.`notes` AS `notes` from (`trn_adjust_stock_head` `a` join `mst_warehouse` `b` on((`b`.`id_warehouse` = `a`.`id_warehouse`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_aktiva`
--

/*!50001 DROP TABLE IF EXISTS `view_aktiva`*/;
/*!50001 DROP VIEW IF EXISTS `view_aktiva`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `view_aktiva` AS select `a`.`id_account` AS `id_account`,`a`.`account_name` AS `account_name`,`b`.`parent` AS `parent`,(case when isnull(`c`.`account_name`) then (select `i_project_name`.`profit_notes` from `i_project_name`) else `c`.`account_name` end) AS `account_parent`,(case when isnull(`a`.`saldo`) then 0 else `a`.`saldo` end) AS `saldo`,(case when (`b`.`golongan` = 1) then 'ASET' when (`b`.`golongan` = 2) then 'KEWAJIBAN' when (`b`.`golongan` = 3) then 'EKUITAS' when isnull(`b`.`golongan`) then 'EKUITAS' end) AS `golongan`,(case when isnull(`b`.`golongan`) then 3 else `b`.`golongan` end) AS `id_golongan`,(case when isnull(`c`.`parent`) then '999999' else `c`.`parent` end) AS `id_parent2`,(case when isnull(`d`.`account_name`) then (select `i_project_name`.`profit_notes_header` from `i_project_name`) else `d`.`account_name` end) AS `parent2`,(select (case when isnull(`i_project_name`.`header_text`) then '' else `i_project_name`.`header_text` end) AS `header_text` from `i_project_name` where (`i_project_name`.`project_default` = 1)) AS `header_text`,(select sum(`temp_pasiva`.`saldo`) from `temp_pasiva`) AS `total_pasiva`,(select sum(`temp_pasiva_tahunlalu`.`saldo`) from `temp_pasiva_tahunlalu`) AS `total_pasiva_lalu`,(select sum(`temp_aktiva`.`saldo`) from `temp_aktiva`) AS `total_aktiva` from (((`temp_aktiva` `a` left join `mst_account` `b` on((`b`.`id_account` = `a`.`id_account`))) left join `mst_account` `c` on((`c`.`id_account` = `b`.`parent`))) left join `mst_account` `d` on((`d`.`id_account` = `c`.`parent`))) where ((case when isnull(`a`.`saldo`) then 0 else `a`.`saldo` end) > 0) order by `a`.`id_account` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_aktiva_stafel`
--

/*!50001 DROP TABLE IF EXISTS `view_aktiva_stafel`*/;
/*!50001 DROP VIEW IF EXISTS `view_aktiva_stafel`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_aktiva_stafel` AS select `a`.`id_account` AS `id_account`,`a`.`account_name` AS `account_name`,`b`.`parent` AS `parent`,(case when isnull(`c`.`account_name`) then (select `i_project_name`.`profit_notes` from `i_project_name` where (`i_project_name`.`project_default` = 1)) else `c`.`account_name` end) AS `account_parent`,(case when isnull(`a`.`saldo`) then 0 else `a`.`saldo` end) AS `saldo`,(case when isnull(`y`.`saldo`) then 0 else `y`.`saldo` end) AS `saldo_lalu`,(case when (`b`.`golongan` = 1) then 'ASET' when (`b`.`golongan` = 2) then 'KEWAJIBAN' when (`b`.`golongan` = 3) then 'EKUITAS' when isnull(`b`.`golongan`) then 'EKUITAS' end) AS `golongan`,(case when isnull(`b`.`golongan`) then 3 else `b`.`golongan` end) AS `id_golongan`,(case when isnull(`c`.`parent`) then '999999' else `c`.`parent` end) AS `id_parent2`,(case when isnull(`d`.`account_name`) then (select `i_project_name`.`profit_notes_header` from `i_project_name` where (`i_project_name`.`project_default` = 1)) else `d`.`account_name` end) AS `parent2`,(select (case when isnull(`i_project_name`.`header_text`) then '' else `i_project_name`.`header_text` end) AS `header_text` from `i_project_name` where (`i_project_name`.`project_default` = 1)) AS `header_text`,(select sum(`temp_pasiva`.`saldo`) from `temp_pasiva`) AS `total_pasiva`,(select sum((case when isnull(`temp_pasiva_tahunlalu`.`saldo`) then 0 else `temp_pasiva_tahunlalu`.`saldo` end)) from `temp_pasiva_tahunlalu`) AS `total_pasiva_lalu`,(select sum((case when isnull(`temp_aktiva`.`saldo`) then 0 else `temp_aktiva`.`saldo` end)) from `temp_aktiva`) AS `total_aktiva`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `view_curr_def`.`id_currency` from `view_curr_def`) AS `curr_def` from ((((`temp_aktiva` `a` left join `mst_account` `b` on((`b`.`id_account` = `a`.`id_account`))) left join `mst_account` `c` on((`c`.`id_account` = `b`.`parent`))) left join `mst_account` `d` on((`d`.`id_account` = `c`.`parent`))) left join `temp_aktiva_tahunlalu` `y` on((`y`.`id_account` = `a`.`id_account`))) union all select `a`.`id_account` AS `id_account`,`a`.`account_name` AS `account_name`,`b`.`parent` AS `parent`,(case when isnull(`c`.`account_name`) then (select `i_project_name`.`profit_notes` from `i_project_name` where (`i_project_name`.`project_default` = 1)) else `c`.`account_name` end) AS `account_parent`,(case when isnull(`a`.`saldo`) then 0 else `a`.`saldo` end) AS `saldo`,(case when isnull(`y`.`saldo`) then 0 else `y`.`saldo` end) AS `saldo_lalu`,(case when (`b`.`golongan` = 1) then 'ASET' when (`b`.`golongan` = 2) then 'KEWAJIBAN' when (`b`.`golongan` = 3) then 'EKUITAS' when isnull(`b`.`golongan`) then 'EKUITAS' end) AS `golongan`,(case when isnull(`b`.`golongan`) then 3 else `b`.`golongan` end) AS `id_golongan`,(case when isnull(`c`.`parent`) then '999999' else `c`.`parent` end) AS `id_parent2`,(case when isnull(`d`.`account_name`) then (select `i_project_name`.`profit_notes_header` from `i_project_name` where (`i_project_name`.`project_default` = 1)) else `d`.`account_name` end) AS `parent2`,(select (case when isnull(`i_project_name`.`header_text`) then '' else `i_project_name`.`header_text` end) AS `header_text` from `i_project_name` where (`i_project_name`.`project_default` = 1)) AS `header_text`,(select sum(`temp_pasiva`.`saldo`) from `temp_pasiva`) AS `total_pasiva`,(select sum((case when isnull(`temp_pasiva_tahunlalu`.`saldo`) then 0 else `temp_pasiva_tahunlalu`.`saldo` end)) from `temp_pasiva_tahunlalu`) AS `total_pasiva_lalu`,(select sum(`temp_aktiva`.`saldo`) from `temp_aktiva`) AS `total_aktiva`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `view_curr_def`.`id_currency` from `view_curr_def`) AS `curr_def` from ((((`temp_pasiva` `a` left join `mst_account` `b` on((`b`.`id_account` = `a`.`id_account`))) left join `mst_account` `c` on((`c`.`id_account` = `b`.`parent`))) left join `mst_account` `d` on((`d`.`id_account` = `c`.`parent`))) left join `temp_pasiva_tahunlalu` `y` on((`y`.`id_account` = `a`.`id_account`))) order by `id_account` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ap_status`
--

/*!50001 DROP TABLE IF EXISTS `view_ap_status`*/;
/*!50001 DROP VIEW IF EXISTS `view_ap_status`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ap_status` AS select `a`.`no_purchase` AS `no_purchase`,cast(`a`.`date_trn` as date) AS `date_trn`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `nama`,(case when isnull(`a`.`purchase_amount`) then 0 else `a`.`purchase_amount` end) AS `purchase_amount`,(case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end) AS `return_amount`,(case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end) AS `disc_amount`,(case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end) AS `paid_amount`,(case when (((((case when isnull(`a`.`purchase_amount`) then 0 else `a`.`purchase_amount` end) - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) <> 0) then ((((case when isnull(`a`.`purchase_amount`) then 0 else `a`.`purchase_amount` end) - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) else 0 end) AS `balance`,`a`.`notes` AS `notes`,(case when (((((case when isnull(`a`.`purchase_amount`) then 0 else `a`.`purchase_amount` end) - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) < 0) then -(((((case when isnull(`a`.`purchase_amount`) then 0 else `a`.`purchase_amount` end) - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end))) else 0 end) AS `lebih_bayar` from (`ap_status` `a` join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) order by `a`.`id_supplier`,`a`.`date_trn` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_appayment`
--

/*!50001 DROP TABLE IF EXISTS `view_appayment`*/;
/*!50001 DROP VIEW IF EXISTS `view_appayment`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_appayment` AS select `aph`.`no_payment_ap` AS `no_payment_ap`,concat((case when isnull(`ms`.`first_name`) then '' else `ms`.`first_name` end),(case when isnull(`ms`.`last_name`) then '' else `ms`.`last_name` end)) AS `supplier_name`,`aph`.`date_trn` AS `date_trn`,`aph`.`notes` AS `notes`,0 AS `total`,`ma`.`account_name` AS `account_name`,`aph`.`id_supplier` AS `id_supplier`,`aph`.`id_account` AS `id_account`,`apd`.`number_asc` AS `number_asc`,`apd`.`no_purchase` AS `no_purchase`,`apd`.`invoice_date` AS `invoice_date`,`apd`.`ap_amount` AS `ap_amount`,`apd`.`discount` AS `discount`,sum(`apd`.`ap_amount_net`) AS `ap_amount_net`,(`cd`.`paid_amount` - `apd`.`paid_amount`) AS `paid_amount`,concat(`ms`.`address`,' ',`ms`.`city`) AS `supplier_addr`,`apd`.`ap_return` AS `ap_return`,`ms`.`city` AS `city`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,`apd`.`paid_amount` AS `pembayaran` from ((((`trn_payment_ap_head` `aph` join `trn_payment_ap_det` `apd` on((`aph`.`no_payment_ap` = `apd`.`no_payment_ap`))) join `ap_status` `cd` on((`cd`.`no_purchase` = `apd`.`no_purchase`))) join `mst_supplier` `ms` on((`ms`.`id_supplier` = `aph`.`id_supplier`))) join `mst_account` `ma` on((`ma`.`id_account` = `aph`.`id_account`))) group by `apd`.`no_purchase` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ar_status`
--

/*!50001 DROP TABLE IF EXISTS `view_ar_status`*/;
/*!50001 DROP VIEW IF EXISTS `view_ar_status`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ar_status` AS select `a`.`no_sales` AS `no_sales`,`a`.`date_trn` AS `date_trn`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `nama`,(case when isnull(`a`.`sales_amount`) then 0 else `a`.`sales_amount` end) AS `sales_amount`,(case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end) AS `return_amount`,(case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end) AS `disc_amount`,(case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end) AS `paid_amount`,(case when (((((case when isnull(`a`.`sales_amount`) then 0 else `a`.`sales_amount` end) - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) > 0) then ((((case when isnull(`a`.`sales_amount`) then 0 else `a`.`sales_amount` end) - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) else 0 end) AS `balance`,`a`.`notes` AS `notes`,(case when (((((case when isnull(`a`.`sales_amount`) then 0 else `a`.`sales_amount` end) - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) < 0) then -(((((case when isnull(`a`.`sales_amount`) then 0 else `a`.`sales_amount` end) - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end))) else 0 end) AS `lebih_bayar` from (`ar_status` `a` join `mst_customer` `b` on((`b`.`id_customer` = `a`.`id_customer`))) order by `a`.`id_customer` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_arpayment`
--

/*!50001 DROP TABLE IF EXISTS `view_arpayment`*/;
/*!50001 DROP VIEW IF EXISTS `view_arpayment`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_arpayment` AS select `aph`.`no_payment_ar` AS `no_payment_ar`,concat((case when isnull(`ms`.`first_name`) then '' else `ms`.`first_name` end),' ',(case when isnull(`ms`.`last_name`) then '' else `ms`.`last_name` end)) AS `supplier_name`,`aph`.`date_trn` AS `date_trn`,`aph`.`notes` AS `notes`,0 AS `total`,`ma`.`account_name` AS `account_name`,`aph`.`id_customer` AS `id_customer`,`aph`.`id_account` AS `id_account`,`apd`.`number_asc` AS `number_asc`,`apd`.`no_invoice` AS `no_invoice`,`apd`.`invoice_date` AS `invoice_date`,`apd`.`ap_amount` AS `ap_amount`,`apd`.`discount` AS `discount`,sum(`apd`.`ap_amount_net`) AS `ap_amount_net`,(`cd`.`paid_amount` - `apd`.`paid_amount`) AS `paid_amount`,concat(`ms`.`address`,' ',`ms`.`city`) AS `supplier_addr`,`apd`.`ap_return` AS `ap_return`,`ms`.`city` AS `city`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,`apd`.`paid_amount` AS `pembayaran` from ((((`trn_payment_ar_head` `aph` join `trn_payment_ar_det` `apd` on((`aph`.`no_payment_ar` = `apd`.`no_payment_ar`))) join `ar_status` `cd` on((`cd`.`no_sales` = `apd`.`no_invoice`))) join `mst_customer` `ms` on((`ms`.`id_customer` = `aph`.`id_customer`))) join `mst_account` `ma` on((`ma`.`id_account` = `aph`.`id_account`))) group by `apd`.`no_invoice` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_aset_coa`
--

/*!50001 DROP TABLE IF EXISTS `view_aset_coa`*/;
/*!50001 DROP VIEW IF EXISTS `view_aset_coa`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_aset_coa` AS select `a`.`id_aset` AS `id_aset`,`a`.`nama` AS `nama`,`b`.`type` AS `type`,(case when isnull(`a`.`id_coa_penyusutan`) then '' else `a`.`id_coa_penyusutan` end) AS `id_coa_penyusutan`,(case when isnull(`a`.`id_coa_aset`) then '' else `a`.`id_coa_aset` end) AS `id_coa_aset`,(case when isnull(`a`.`id_coa_akumulasi`) then '' else `a`.`id_coa_akumulasi` end) AS `id_coa_akumulasi` from (`mst_aset` `a` join `mst_golaset` `b` on((`b`.`id_golongan` = `a`.`id_golongan`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_aset_in_period`
--

/*!50001 DROP TABLE IF EXISTS `view_aset_in_period`*/;
/*!50001 DROP VIEW IF EXISTS `view_aset_in_period`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_aset_in_period` AS select `mst_aset`.`nama` AS `nama`,`mst_aset`.`nilai_perolehan` AS `nilai_perolehan`,concat(month(`mst_aset`.`tanggal_perolehan`),'-',year(`mst_aset`.`tanggal_perolehan`)) AS `period` from `mst_aset` where (year(`mst_aset`.`tanggal_perolehan`) = `get_year`()) order by concat(month(`mst_aset`.`tanggal_perolehan`),'-',year(`mst_aset`.`tanggal_perolehan`)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_begin_penyusutan`
--

/*!50001 DROP TABLE IF EXISTS `view_begin_penyusutan`*/;
/*!50001 DROP VIEW IF EXISTS `view_begin_penyusutan`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_begin_penyusutan` AS select `a`.`id_aset` AS `id_aset`,`a`.`nama` AS `nama`,`c`.`department_name` AS `department_name`,`b`.`type` AS `type`,`b`.`rate_penyusutan` AS `rate_penyusutan`,(case when (`get_nilai_buku_aset`(`a`.`id_golongan`,`a`.`nilai_perolehan`,`a`.`tanggal_perolehan`,`b`.`rate_penyusutan`) >= (((`a`.`nilai_perolehan` * `b`.`rate_penyusutan`) / 100) / 12)) then round((((`a`.`nilai_perolehan` * `b`.`rate_penyusutan`) / 100) / 12),0) when ((`get_nilai_buku_aset`(`a`.`id_golongan`,`a`.`nilai_perolehan`,`a`.`tanggal_perolehan`,`b`.`rate_penyusutan`) < (((`a`.`nilai_perolehan` * `b`.`rate_penyusutan`) / 100) / 12)) and (`get_nilai_buku_aset`(`a`.`id_golongan`,`a`.`nilai_perolehan`,`a`.`tanggal_perolehan`,`b`.`rate_penyusutan`) > 0)) then `get_nilai_buku_aset`(`a`.`id_golongan`,`a`.`nilai_perolehan`,`a`.`tanggal_perolehan`,`b`.`rate_penyusutan`) else 0 end) AS `penyusutan`,(case when isnull(`a`.`id_coa_aset`) then '' else `a`.`id_coa_aset` end) AS `id_coa_aset`,(case when isnull(`a`.`id_coa_penyusutan`) then '' else `a`.`id_coa_penyusutan` end) AS `id_coa_penyusutan`,(case when isnull(`a`.`id_coa_akumulasi`) then '' else `a`.`id_coa_akumulasi` end) AS `id_coa_akumulasi` from ((`mst_aset` `a` join `mst_golaset` `b` on((`b`.`id_golongan` = `a`.`id_golongan`))) join `mst_department` `c` on((`c`.`department_id` = `a`.`id_department`))) where (not(`a`.`id_aset` in (select `i_aset_depreciation`.`id_aset` from `i_aset_depreciation` where ((`i_aset_depreciation`.`period` = `get_month`()) and (`i_aset_depreciation`.`years` = `get_year`()))))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_billofmaterial_report`
--

/*!50001 DROP TABLE IF EXISTS `view_billofmaterial_report`*/;
/*!50001 DROP VIEW IF EXISTS `view_billofmaterial_report`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_billofmaterial_report` AS select `a`.`no_bom` AS `no_bom`,`e`.`item_name` AS `item_name`,`a`.`date_trn` AS `date_trn`,`a`.`qty_item_production` AS `qty_item_production`,`g`.`unit` AS `unit`,`a`.`notes` AS `notes`,`a`.`total_cost` AS `total_cost`,`b`.`id_item` AS `id_material`,`f`.`item_name` AS `item_material`,`b`.`qty_material` AS `qty_material`,`h`.`unit` AS `unit_material`,`b`.`cost` AS `cost_material`,`b`.`total_cost` AS `total_material`,'material' AS `type`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((((`mst_bom_head` `a` join `mst_bom_material` `b` on((`b`.`no_bom` = `a`.`no_bom`))) join `mst_item` `e` on((`e`.`id_item` = `a`.`id_item`))) join `mst_item` `f` on((`f`.`id_item` = `b`.`id_item`))) join `mst_unit` `g` on((`g`.`id_unit` = `a`.`id_unit`))) join `mst_unit` `h` on((`h`.`id_unit` = `b`.`id_unit`))) union all select `a`.`no_bom` AS `no_bom`,`e`.`item_name` AS `item_name`,`a`.`date_trn` AS `date_trn`,`a`.`qty_item_production` AS `qty_item_production`,`g`.`unit` AS `unit`,`a`.`notes` AS `notes`,`a`.`total_cost` AS `total_cost`,`b`.`id_item` AS `id_material`,`f`.`item_name` AS `item_material`,`b`.`qty_material` AS `qty_material`,`h`.`unit` AS `unit_material`,`b`.`cost` AS `cost_material`,`b`.`total_cost` AS `total_material`,'wip' AS `type`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((((`mst_bom_head` `a` join `mst_bom_wip` `b` on((`b`.`no_bom` = `a`.`no_bom`))) join `mst_item` `e` on((`e`.`id_item` = `a`.`id_item`))) join `mst_item` `f` on((`f`.`id_item` = `b`.`id_item`))) join `mst_unit` `g` on((`g`.`id_unit` = `a`.`id_unit`))) join `mst_unit` `h` on((`h`.`id_unit` = `b`.`id_unit`))) union all select `a`.`no_bom` AS `no_bom`,`e`.`item_name` AS `item_name`,`a`.`date_trn` AS `date_trn`,`a`.`qty_item_production` AS `qty_item_production`,`g`.`unit` AS `unit`,`a`.`notes` AS `notes`,`a`.`total_cost` AS `total_cost`,`b`.`id_cost` AS `id_material`,`f`.`cost_name` AS `item_material`,`b`.`qty_hour` AS `qty_hour`,'Jam' AS `unit_material`,`b`.`cost` AS `cost_material`,`b`.`total_cost` AS `total_material`,'conversion_cost' AS `type`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((((`mst_bom_head` `a` join `mst_bom_conversion` `b` on((`b`.`no_bom` = `a`.`no_bom`))) join `mst_item` `e` on((`e`.`id_item` = `a`.`id_item`))) join `mst_standard_cost` `f` on((`f`.`id_cost` = `b`.`id_cost`))) join `mst_unit` `g` on((`g`.`id_unit` = `a`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_cash_bank`
--

/*!50001 DROP TABLE IF EXISTS `view_cash_bank`*/;
/*!50001 DROP VIEW IF EXISTS `view_cash_bank`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_cash_bank` AS select `ch`.`cashbank_no` AS `cashbank_no`,`ch`.`date_trn` AS `date_trn`,`ch`.`total` AS `total`,`ch`.`notes` AS `notes`,`ch`.`flag_trans` AS `flag_trans`,`cd`.`notes` AS `notes_detail`,`cd`.`amount` AS `amount`,`cd`.`id_account` AS `id_account`,`ma`.`account_name` AS `account_name` from ((`trn_cashbank_head` `ch` join `trn_cashbank_det` `cd` on((`ch`.`cashbank_no` = `cd`.`cashbank_no`))) join `mst_account` `ma` on((`cd`.`id_account` = `ma`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_cashbank_report`
--

/*!50001 DROP TABLE IF EXISTS `view_cashbank_report`*/;
/*!50001 DROP VIEW IF EXISTS `view_cashbank_report`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_cashbank_report` AS select `a`.`cashbank_no` AS `cashbank_no`,`b`.`account_name` AS `nama`,`a`.`date_trn` AS `date_trn`,`a`.`notes` AS `notes`,`a`.`id_account` AS `id_account`,`c`.`id_account` AS `id_account_det`,`d`.`account_name` AS `account_name`,`c`.`amount` AS `amount`,`c`.`notes` AS `notes_det`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,`a`.`id_currency` AS `id_currency` from (((`trn_cashbank_head` `a` join `trn_cashbank_det` `c` on((`c`.`cashbank_no` = `a`.`cashbank_no`))) join `mst_account` `b` on((`b`.`id_account` = `a`.`id_account`))) join `mst_account` `d` on((`d`.`id_account` = `c`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_cashbank_setup`
--

/*!50001 DROP TABLE IF EXISTS `view_cashbank_setup`*/;
/*!50001 DROP VIEW IF EXISTS `view_cashbank_setup`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_cashbank_setup` AS select `a`.`id_account` AS `id_account`,`b`.`account_name` AS `account_name`,(case when (`a`.`id_cashbank` = 1) then 'Cash' else 'Bank' end) AS `id_cashbank` from (`i_cashbank_setup` `a` join `mst_account` `b` on((`b`.`id_account` = `a`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_combo_cashbank`
--

/*!50001 DROP TABLE IF EXISTS `view_combo_cashbank`*/;
/*!50001 DROP VIEW IF EXISTS `view_combo_cashbank`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_combo_cashbank` AS select `a`.`id_account` AS `id_account`,`b`.`account_name` AS `account_name`,`a`.`id_cashbank` AS `id_cashbank` from (`i_cashbank_setup` `a` join `mst_account` `b` on((`b`.`id_account` = `a`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_combo_sales`
--

/*!50001 DROP TABLE IF EXISTS `view_combo_sales`*/;
/*!50001 DROP VIEW IF EXISTS `view_combo_sales`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_combo_sales` AS select `x`.`date_trn` AS `date_trn`,`x`.`no_sales` AS `no_sales`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_customer`,`d`.`address` AS `address`,`d`.`city` AS `city`,`x`.`total` AS `total` from (`trn_sales_head` `x` join `mst_customer` `d` on((`d`.`id_customer` = `x`.`id_customer`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_combo_umso`
--

/*!50001 DROP TABLE IF EXISTS `view_combo_umso`*/;
/*!50001 DROP VIEW IF EXISTS `view_combo_umso`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_combo_umso` AS select `x`.`date_trn` AS `date_trn`,`x`.`no_sales_order` AS `no_sales_order`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_customer`,`d`.`address` AS `address`,`d`.`city` AS `city`,(case when isnull(`x`.`uang_muka`) then 0 else `x`.`uang_muka` end) AS `uang_muka` from (`trn_sales_order_head` `x` join `mst_customer` `d` on((`d`.`id_customer` = `x`.`id_customer`))) where ((case when isnull(`x`.`uang_muka`) then 0 else `x`.`uang_muka` end) > 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_component_accpurch_simrs`
--

/*!50001 DROP TABLE IF EXISTS `view_component_accpurch_simrs`*/;
/*!50001 DROP VIEW IF EXISTS `view_component_accpurch_simrs`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `view_component_accpurch_simrs` AS select `a`.`notes` AS `notes`,`a`.`id_account` AS `id_account`,`b`.`account_name` AS `account_name`,`a`.`table_name` AS `table_name`,`a`.`field_name` AS `field_name`,`a`.`position_dk` AS `position_dk`,(case when isnull(`a`.`is_dependent_itemacc`) then 0 else `a`.`is_dependent_itemacc` end) AS `is_dependent_itemacc` from (`i_component_account_purchsimrs` `a` join `mst_account` `b` on((`b`.`id_account` = `a`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_component_accpurchreturn_simrs`
--

/*!50001 DROP TABLE IF EXISTS `view_component_accpurchreturn_simrs`*/;
/*!50001 DROP VIEW IF EXISTS `view_component_accpurchreturn_simrs`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `view_component_accpurchreturn_simrs` AS select `a`.`notes` AS `notes`,`a`.`id_account` AS `id_account`,`b`.`account_name` AS `account_name`,`a`.`table_name` AS `table_name`,`a`.`field_name` AS `field_name`,`a`.`position_dk` AS `position_dk`,(case when isnull(`a`.`is_dependent_itemacc`) then 0 else `a`.`is_dependent_itemacc` end) AS `is_dependent_itemacc` from (`i_component_account_returpurchsimrs` `a` join `mst_account` `b` on((`b`.`id_account` = `a`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_component_cashflow`
--

/*!50001 DROP TABLE IF EXISTS `view_component_cashflow`*/;
/*!50001 DROP VIEW IF EXISTS `view_component_cashflow`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `view_component_cashflow` AS select `a`.`id_component` AS `id_component`,`a`.`notes` AS `notes`,`b`.`type` AS `type`,(case when (`a`.`id_trans` < 0) then 'Pengeluaran' else 'Penerimaan' end) AS `jenistransaksi` from (`tempx_component_cashflow_simrs_head` `a` join `tempx_component_cashflow_simrs_type` `b` on((`b`.`id_type` = `a`.`id_type`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_adjustjurnal`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_adjustjurnal`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_adjustjurnal`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_adjustjurnal` AS select `a`.`journal_no` AS `journal_no`,`a`.`date_trn` AS `date_trn`,`a`.`description` AS `description`,`a`.`total` AS `total`,`b`.`id_account` AS `id_account`,`c`.`account_name` AS `account_name`,`b`.`notes` AS `notes_det`,(case when (`b`.`amount` > 0) then `b`.`amount` else 0 end) AS `debet`,(case when (`b`.`amount` < 0) then (-(1) * `b`.`amount`) else 0 end) AS `credit`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((`trn_adjustjournal_head` `a` join `trn_adjustjournal_det` `b` on((`b`.`journal_no` = `a`.`journal_no`))) join `mst_account` `c` on((`c`.`id_account` = `b`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_bbk`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_bbk`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_bbk`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_bbk` AS select `a`.`id_account` AS `id_account`,`c`.`account_name` AS `account_name`,`a`.`cashbank_no` AS `cashbank_no`,`a`.`date_trn` AS `date_trn`,`d`.`account_name` AS `namaakundet`,`b`.`notes` AS `ketdetail`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,`a`.`evidence_no` AS `evidence_no`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`b`.`amount` AS `amount` from (((`trn_cashbank_head` `a` join `trn_cashbank_det` `b` on((`b`.`cashbank_no` = `a`.`cashbank_no`))) join `mst_account` `c` on((`c`.`id_account` = `a`.`id_account`))) join `mst_account` `d` on((`d`.`id_account` = `b`.`id_account`))) where (`a`.`flag_trans` = 'BK') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_bbm`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_bbm`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_bbm`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_bbm` AS select `a`.`id_account` AS `id_account`,`c`.`account_name` AS `account_name`,`a`.`cashbank_no` AS `cashbank_no`,`a`.`date_trn` AS `date_trn`,`d`.`account_name` AS `namaakundet`,`b`.`notes` AS `ketdetail`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,`a`.`evidence_no` AS `evidence_no`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`b`.`amount` AS `amount` from (((`trn_cashbank_head` `a` join `trn_cashbank_det` `b` on((`b`.`cashbank_no` = `a`.`cashbank_no`))) join `mst_account` `c` on((`c`.`id_account` = `a`.`id_account`))) join `mst_account` `d` on((`d`.`id_account` = `b`.`id_account`))) where (`a`.`flag_trans` = 'BM') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_bkk`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_bkk`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_bkk`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_bkk` AS select `a`.`id_account` AS `id_account`,`c`.`account_name` AS `account_name`,`a`.`cashbank_no` AS `cashbank_no`,`a`.`date_trn` AS `date_trn`,`d`.`account_name` AS `namaakundet`,`b`.`notes` AS `ketdetail`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,`a`.`evidence_no` AS `evidence_no`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`b`.`amount` AS `amount` from (((`trn_cashbank_head` `a` join `trn_cashbank_det` `b` on((`b`.`cashbank_no` = `a`.`cashbank_no`))) join `mst_account` `c` on((`c`.`id_account` = `a`.`id_account`))) join `mst_account` `d` on((`d`.`id_account` = `b`.`id_account`))) where (`a`.`flag_trans` = 'KK') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_bkm`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_bkm`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_bkm`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_bkm` AS select `a`.`id_account` AS `id_account`,`c`.`account_name` AS `account_name`,`a`.`cashbank_no` AS `cashbank_no`,`a`.`date_trn` AS `date_trn`,`d`.`account_name` AS `namaakundet`,`b`.`notes` AS `ketdetail`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,`a`.`evidence_no` AS `evidence_no`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`b`.`amount` AS `amount` from (((`trn_cashbank_head` `a` join `trn_cashbank_det` `b` on((`b`.`cashbank_no` = `a`.`cashbank_no`))) join `mst_account` `c` on((`c`.`id_account` = `a`.`id_account`))) join `mst_account` `d` on((`d`.`id_account` = `b`.`id_account`))) where (`a`.`flag_trans` = 'KM') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_cashier`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_cashier`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_cashier`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_cashier` AS select `x`.`customer` AS `customer`,`x`.`cust_address` AS `cust_address`,`x`.`cust_phone` AS `cust_phone`,`x`.`no_sales` AS `no_sales`,`x`.`date_trn` AS `date_trn`,`y`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`y`.`qty` AS `qty`,`y`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`y`.`price` AS `price`,(case when isnull(`y`.`weight`) then 0 else `y`.`weight` end) AS `weight`,(case when isnull(`y`.`priceperweight`) then 0 else `y`.`priceperweight` end) AS `priceperweight`,(`y`.`price` - (((`y`.`price` * `y`.`disc_nom`) / 100) * `y`.`qty`)) AS `total_net`,(`y`.`price` - ((`y`.`price` * `y`.`disc_nom`) / 100)) AS `price_net`,`y`.`nominal` AS `nominal`,`x`.`payment_method` AS `payment_method`,`x`.`term` AS `term`,`x`.`termpaydisc` AS `termpaydisc`,`x`.`discpay` AS `discpay`,`x`.`notes` AS `notes`,`x`.`subtotal` AS `subtotal`,`x`.`discount` AS `discount`,`x`.`tax` AS `tax`,`x`.`total` AS `total`,`x`.`paid` AS `paid`,`e`.`kadar` AS `kadar`,`e`.`blob_image` AS `path`,(case when isnull(`x`.`terbilang`) then '' else `x`.`terbilang` end) AS `terbilang`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`x`.`modified_user` AS `modified_user` from (((`trn_cashier_head` `x` join `trn_cashier_det` `y` on((`y`.`no_sales` = `x`.`no_sales`))) join `mst_item` `e` on((`e`.`id_item` = `y`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `y`.`id_unit`))) union all select `x`.`customer` AS `customer`,`x`.`cust_address` AS `cust_address`,`x`.`cust_phone` AS `cust_phone`,`x`.`no_sales` AS `no_sales`,`x`.`date_trn` AS `date_trn`,`y`.`id_service` AS `id_service`,`e`.`service_name` AS `service_name`,`y`.`qty` AS `qty`,`y`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`y`.`price` AS `price`,0 AS `weight`,0 AS `priceperweight`,(`y`.`price` - (((`y`.`price` * `y`.`disc_nom`) / 100) * `y`.`qty`)) AS `total_net`,(`y`.`price` - ((`y`.`price` * `y`.`disc_nom`) / 100)) AS `price_net`,`y`.`nominal` AS `nominal`,`x`.`payment_method` AS `payment_method`,`x`.`term` AS `term`,`x`.`termpaydisc` AS `termpaydisc`,`x`.`discpay` AS `discpay`,`x`.`notes` AS `notes`,`x`.`subtotal` AS `subtotal`,`x`.`discount` AS `discount`,`x`.`tax` AS `tax`,`x`.`total` AS `total`,`x`.`paid` AS `paid`,0 AS `kadar`,'' AS `path`,'' AS `terbilang`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`x`.`modified_user` AS `modified_user` from (((`trn_cashier_head` `x` join `trn_cashier_service_det` `y` on((`y`.`no_sales` = `x`.`no_sales`))) join `mst_service` `e` on((`e`.`id_service` = `y`.`id_service`))) join `mst_unit` `f` on((`f`.`id_unit` = `y`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_cashier2`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_cashier2`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_cashier2`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_cashier2` AS select `x`.`customer` AS `customer`,`x`.`cust_address` AS `cust_address`,`x`.`cust_phone` AS `cust_phone`,`x`.`no_sales` AS `no_sales`,`x`.`date_trn` AS `date_trn`,`y`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`y`.`qty` AS `qty`,`y`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`y`.`price` AS `price`,(case when isnull(`y`.`weight`) then 0 else `y`.`weight` end) AS `weight`,(case when isnull(`y`.`priceperweight`) then 0 else `y`.`priceperweight` end) AS `priceperweight`,(`y`.`price` - (((`y`.`price` * `y`.`disc_nom`) / 100) * `y`.`qty`)) AS `total_net`,(`y`.`price` - ((`y`.`price` * `y`.`disc_nom`) / 100)) AS `price_net`,`y`.`nominal` AS `nominal`,`x`.`payment_method` AS `payment_method`,`x`.`term` AS `term`,`x`.`termpaydisc` AS `termpaydisc`,`x`.`discpay` AS `discpay`,`x`.`notes` AS `notes`,`x`.`subtotal` AS `subtotal`,`x`.`discount` AS `discount`,`x`.`tax` AS `tax`,`x`.`total` AS `total`,`x`.`paid` AS `paid`,`e`.`kadar` AS `kadar`,`e`.`blob_image` AS `path`,(case when isnull(`x`.`terbilang`) then '' else `x`.`terbilang` end) AS `case when x.terbilang is null then '' else x.terbilang end`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`x`.`modified_user` AS `modified_user` from (((`trn_cashier_head` `x` join `trn_cashier_det` `y` on((`y`.`no_sales` = `x`.`no_sales`))) join `mst_item` `e` on((`e`.`id_item` = `y`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `y`.`id_unit`))) union all select `x`.`customer` AS `customer`,`x`.`cust_address` AS `cust_address`,`x`.`cust_phone` AS `cust_phone`,`x`.`no_sales` AS `no_sales`,`x`.`date_trn` AS `date_trn`,`y`.`id_service` AS `id_service`,`e`.`service_name` AS `service_name`,`y`.`qty` AS `qty`,`y`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`y`.`price` AS `price`,0 AS `weight`,0 AS `priceperweight`,(`y`.`price` - (((`y`.`price` * `y`.`disc_nom`) / 100) * `y`.`qty`)) AS `total_net`,(`y`.`price` - ((`y`.`price` * `y`.`disc_nom`) / 100)) AS `price_net`,`y`.`nominal` AS `nominal`,`x`.`payment_method` AS `payment_method`,`x`.`term` AS `term`,`x`.`termpaydisc` AS `termpaydisc`,`x`.`discpay` AS `discpay`,`x`.`notes` AS `notes`,`x`.`subtotal` AS `subtotal`,`x`.`discount` AS `discount`,`x`.`tax` AS `tax`,`x`.`total` AS `total`,`x`.`paid` AS `paid`,0 AS `kadar`,'' AS `path`,'' AS `terbilang`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`x`.`modified_user` AS `modified_user` from (((`trn_cashier_head` `x` join `trn_cashier_service_det` `y` on((`y`.`no_sales` = `x`.`no_sales`))) join `mst_service` `e` on((`e`.`id_service` = `y`.`id_service`))) join `mst_unit` `f` on((`f`.`id_unit` = `y`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_cashier_return`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_cashier_return`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_cashier_return`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_cashier_return` AS select `x`.`customer` AS `nm_customer`,`x`.`customer_addr` AS `address`,`x`.`no_sales_return` AS `no_sales_return`,`y`.`no_sales` AS `no_sales`,`x`.`date_trn` AS `date_trn`,`y`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`y`.`qty` AS `qty`,`y`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`y`.`price` AS `price`,`y`.`nominal` AS `nominal`,`x`.`payment_method` AS `payment_method`,`x`.`notes` AS `notes`,`x`.`subtotal` AS `subtotal`,`x`.`disc` AS `disc`,`x`.`tax` AS `tax`,`x`.`total` AS `total`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((((`trn_cashier_return_head` `x` join `trn_cashier_return_det` `y` on((`y`.`no_sales_return` = `x`.`no_sales_return`))) join `trn_cashier_head` `v` on((`v`.`no_sales` = `y`.`no_sales`))) join `mst_item` `e` on((`e`.`id_item` = `y`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `y`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_do`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_do`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_do`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_do` AS select `a`.`id_customer` AS `id_customer`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_customer`,`d`.`address` AS `address`,`d`.`city` AS `city`,`d`.`phone1` AS `phone1`,`d`.`phone2` AS `phone2`,`d`.`phone3` AS `phone3`,`a`.`no_delivery_order` AS `no_delivery_order`,`a`.`date_trn` AS `date_trn`,`b`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`b`.`sent_qty` AS `qty`,`b`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`b`.`notes` AS `notes_det`,`a`.`notes` AS `notes`,`a`.`no_sales_order` AS `no_sales_order`,(case when isnull(`g`.`expedition_name`) then '' else `g`.`expedition_name` end) AS `id_ekspedisi`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((((`trn_delivery_order_head` `a` join `trn_delivery_order_det` `b` on((`b`.`no_delivery_order` = `a`.`no_delivery_order`))) join `mst_customer` `d` on((`d`.`id_customer` = `a`.`id_customer`))) join `mst_item` `e` on((`e`.`id_item` = `b`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `b`.`id_unit`))) left join `mst_expedition` `g` on((`g`.`id_expedition` = `a`.`id_ekspedisi`))) union all select '' AS `id_customer`,'' AS `nm_customer`,'' AS `address`,'' AS `city`,'' AS `phone1`,'' AS `phone2`,'' AS `phone3`,`a`.`no_do` AS `no_delivery_order`,now() AS `date_trn`,`a`.`id_item` AS `id_item`,`a`.`item_name` AS `item_name`,`a`.`qty` AS `qty`,`a`.`id_unit` AS `id_unit`,`b`.`unit` AS `unit`,'Item Bonus' AS `notes_det`,'' AS `notes`,'' AS `no_sales_order`,'' AS `id_ekspedisi`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (`trn_do_discitem_det` `a` join `mst_unit` `b` on((`b`.`id_unit` = `a`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_exppayment`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_exppayment`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_exppayment`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_exppayment` AS select `a`.`date_trn` AS `date_trn`,`a`.`no_ekspedisi` AS `no_ekspedisi`,`a`.`id_currency` AS `id_currency`,`a`.`notes` AS `notes`,`a`.`total` AS `total`,`a`.`id_account` AS `id_account`,`b`.`no_do` AS `no_do`,`b`.`no_resi` AS `no_resi`,`b`.`freight_address` AS `freight_address`,`b`.`freight_city` AS `freight_city`,`b`.`freight_cost` AS `freight_cost`,`c`.`account_name` AS `account_name`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((`trn_ekspedisi_head` `a` join `trn_ekspedisi_det` `b` on((`b`.`no_ekspedisi` = `a`.`no_ekspedisi`))) join `mst_account` `c` on((`c`.`id_account` = `a`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_faktur_pajak`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_faktur_pajak`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_faktur_pajak`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_faktur_pajak` AS select `x`.`id_customer` AS `id_customer`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_customer`,`d`.`address` AS `address`,`d`.`city` AS `city`,`d`.`phone1` AS `phone1`,`d`.`phone2` AS `phone2`,`d`.`phone3` AS `phone3`,`x`.`no_sales` AS `no_sales`,`x`.`no_sales_order` AS `no_sales_order`,`x`.`date_trn` AS `date_trn`,`y`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`y`.`qty` AS `qty`,`y`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`y`.`price` AS `price`,`y`.`nominal` AS `nominal`,`x`.`payment_method` AS `payment_method`,`x`.`term` AS `term`,`x`.`termpaydisc` AS `termpaydisc`,`x`.`discpay` AS `discpay`,`x`.`notes` AS `notes`,`x`.`subtotal` AS `subtotal`,`x`.`discount` AS `discount`,`x`.`tax` AS `tax`,`x`.`total` AS `total`,`x`.`uang_muka` AS `uang_muka`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((((`trn_sales_head` `x` join `trn_sales_det` `y` on((`y`.`no_sales` = `x`.`no_sales`))) join `mst_customer` `d` on((`d`.`id_customer` = `x`.`id_customer`))) join `mst_item` `e` on((`e`.`id_item` = `y`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `y`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_fp_um`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_fp_um`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_fp_um`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_fp_um` AS select `a`.`id_customer` AS `id_customer`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_customer`,`d`.`address` AS `address`,`d`.`city` AS `city`,`d`.`phone1` AS `phone1`,`d`.`phone2` AS `phone2`,`d`.`phone3` AS `phone3`,`a`.`no_sales_order` AS `no_sales_order`,`a`.`date_trn` AS `date_trn`,`b`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`b`.`qty` AS `qty`,`b`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,(((`b`.`price` - ((case when isnull(`x`.`nom_disc`) then 0 else `x`.`nom_disc` end) / `b`.`qty`)) - ((case when isnull(`y`.`nom_disc`) then 0 else `y`.`nom_disc` end) / `b`.`qty`)) - ((case when isnull(`z`.`nom_disc`) then 0 else `z`.`nom_disc` end) / `b`.`qty`)) AS `price`,((((`b`.`price` - ((case when isnull(`x`.`nom_disc`) then 0 else `x`.`nom_disc` end) / `b`.`qty`)) - ((case when isnull(`y`.`nom_disc`) then 0 else `y`.`nom_disc` end) / `b`.`qty`)) - ((case when isnull(`z`.`nom_disc`) then 0 else `z`.`nom_disc` end) / `b`.`qty`)) * `b`.`qty`) AS `nominal`,`a`.`subtotal` AS `subtotal`,`a`.`discount` AS `discount`,`a`.`nett_total` AS `nett_total`,`a`.`tax` AS `tax`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,(case when isnull(`a`.`uang_muka`) then 0 else `a`.`uang_muka` end) AS `uang_muka`,(case when isnull(`a`.`id_curr_um`) then 0 else `a`.`id_curr_um` end) AS `id_curr_um`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,(case when isnull(concat(`em`.`first_name`,' ',`em`.`last_name`)) then 'Office' else concat(`em`.`first_name`,' ',`em`.`last_name`) end) AS `marketing` from ((((((((`trn_sales_order_head` `a` join `trn_sales_order_det` `b` on((`b`.`no_sales_order` = `a`.`no_sales_order`))) join `mst_customer` `d` on((`d`.`id_customer` = `a`.`id_customer`))) join `mst_item` `e` on((`e`.`id_item` = `b`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `b`.`id_unit`))) left join `trn_so_discbrand_det` `x` on(((`x`.`no_sales_order` = `b`.`no_sales_order`) and (`x`.`id_item` = `b`.`id_item`)))) left join `trn_so_disccat_det` `y` on(((`y`.`no_sales_order` = `b`.`no_sales_order`) and (`y`.`id_item` = `b`.`id_item`)))) left join `trn_so_disctype_det` `z` on(((`z`.`no_sales_order` = `b`.`no_sales_order`) and (`z`.`id_item` = `b`.`id_item`)))) left join `mst_employee` `em` on((`em`.`id_employee` = `a`.`id_employee`))) where ((case when isnull(`a`.`uang_muka`) then 0 else `a`.`uang_muka` end) > 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_jurnal`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_jurnal`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_jurnal`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_jurnal` AS select `a`.`journal_no` AS `journal_no`,`a`.`date_trn` AS `date_trn`,`a`.`description` AS `description`,`a`.`total` AS `total`,`b`.`id_account` AS `id_account`,`c`.`account_name` AS `account_name`,`b`.`notes` AS `notes_det`,(case when (`b`.`amount` > 0) then `b`.`amount` else 0 end) AS `debet`,(case when (`b`.`amount` < 0) then (-(1) * `b`.`amount`) else 0 end) AS `credit`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((`trn_journal_head` `a` join `trn_journal_det` `b` on((`b`.`journal_no` = `a`.`journal_no`))) join `mst_account` `c` on((`c`.`id_account` = `b`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_koreksistock`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_koreksistock`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_koreksistock`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_koreksistock` AS select `a`.`no_adjust_stock` AS `no_adjust_stock`,`a`.`date_trn` AS `date_trn`,`a`.`id_warehouse` AS `id_warehouse`,`b`.`id_item` AS `id_item`,`v`.`item_name` AS `item_name`,`b`.`negative` AS `negative`,`b`.`positive` AS `positive`,`a`.`notes` AS `notes`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`z`.`warehouse_name` AS `warehouse_name`,`b`.`notes` AS `notes_det` from (((`trn_adjust_stock_head` `a` join `trn_adjust_stock_det` `b` on((`b`.`no_adjust_stock` = `a`.`no_adjust_stock`))) join `mst_item` `v` on((`v`.`id_item` = `b`.`id_item`))) join `mst_warehouse` `z` on((`z`.`id_warehouse` = `a`.`id_warehouse`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_pindahgudang`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_pindahgudang`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_pindahgudang`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_pindahgudang` AS select `a`.`no_tranfer_stock` AS `no_tranfer_stock`,`a`.`date_trn` AS `date_trn`,`a`.`id_warehouse_from` AS `id_warehouse_from`,`a`.`id_warehouse_to` AS `id_warehouse_to`,`b`.`id_item` AS `id_item`,`v`.`item_name` AS `item_name`,`b`.`qty` AS `qty`,`a`.`notes` AS `notes`,`b`.`unit` AS `unit`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`z`.`warehouse_name` AS `warehouse_name_from`,`x`.`warehouse_name` AS `warehouse_name_to`,`b`.`notes` AS `notes_det` from ((((`trn_transfer_stock_head` `a` join `trn_transfer_stock_det` `b` on((`b`.`no_tranfer_stock` = `a`.`no_tranfer_stock`))) join `mst_item` `v` on((`v`.`id_item` = `b`.`id_item`))) join `mst_warehouse` `z` on((`z`.`id_warehouse` = `a`.`id_warehouse_from`))) join `mst_warehouse` `x` on((`x`.`id_warehouse` = `a`.`id_warehouse_to`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_po`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_po`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_po`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_po` AS select `a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_customer`,`d`.`address` AS `address`,`d`.`city` AS `city`,`d`.`phone1` AS `phone1`,`d`.`phone2` AS `phone2`,`d`.`phone3` AS `phone3`,`a`.`no_purchase_order` AS `no_purchase_order`,`a`.`date_trn` AS `date_trn`,`b`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`b`.`qty` AS `qty`,`b`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`b`.`price` AS `price`,`b`.`nominal` AS `nominal`,`a`.`subtotal` AS `subtotal`,`a`.`tax` AS `tax`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,`a`.`freight` AS `freight`,(case when isnull(`e`.`blob_image`) then '' else `e`.`blob_image` end) AS `photo`,(case when isnull(`b`.`weight`) then 0 else `b`.`weight` end) AS `weight`,(case when isnull(`b`.`priceperweight`) then 0 else `b`.`priceperweight` end) AS `priceperweight`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((((`trn_purchase_order_head` `a` join `trn_purchase_order_det` `b` on((`b`.`no_purchase_order` = `a`.`no_purchase_order`))) join `mst_supplier` `d` on((`d`.`id_supplier` = `a`.`id_supplier`))) join `mst_item` `e` on((`e`.`id_item` = `b`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `b`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_purchase`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_purchase`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_purchase`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_purchase` AS select `x`.`id_supplier` AS `id_supplier`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_supplier`,`d`.`address` AS `address`,`d`.`city` AS `city`,`d`.`phone1` AS `phone1`,`d`.`phone2` AS `phone2`,`d`.`phone3` AS `phone3`,`x`.`no_purchase` AS `no_purchase`,`x`.`no_purchase_order` AS `no_purchase_order`,`x`.`date_trn` AS `date_trn`,`y`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`y`.`qty` AS `qty`,`y`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`y`.`price` AS `price`,`y`.`nominal` AS `nominal`,`x`.`payment_method` AS `payment_method`,`x`.`payment_term_days` AS `payment_term_days`,`x`.`disc_term_days` AS `disc_term_days`,`x`.`disc_term_nominal` AS `disc_term_nominal`,`x`.`notes` AS `notes`,`x`.`subtotal` AS `subtotal`,`x`.`disc` AS `disc`,`x`.`tax` AS `tax`,`x`.`total` AS `total`,`x`.`freight` AS `freight`,(case when isnull(`y`.`weight`) then 0 else `y`.`weight` end) AS `weight`,(case when isnull(`y`.`priceperweight`) then 0 else `y`.`priceperweight` end) AS `priceperweight`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((((`trn_payoff_po_head` `x` join `trn_payoff_po_det` `y` on((`y`.`no_purchase` = `x`.`no_purchase`))) join `mst_supplier` `d` on((`d`.`id_supplier` = `x`.`id_supplier`))) join `mst_item` `e` on((`e`.`id_item` = `y`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `y`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_purchase_return`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_purchase_return`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_purchase_return`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_purchase_return` AS select `x`.`id_supplier` AS `id_supplier`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_supplier`,`d`.`address` AS `address`,`d`.`city` AS `city`,`d`.`phone1` AS `phone1`,`d`.`phone2` AS `phone2`,`d`.`phone3` AS `phone3`,`x`.`no_purchase_return` AS `no_purchase_return`,`y`.`no_purchase` AS `no_purchase`,`x`.`date_trn` AS `date_trn`,`y`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`y`.`qty` AS `qty`,`y`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`y`.`price` AS `price`,`y`.`nominal` AS `nominal`,`x`.`payment_method` AS `payment_method`,`x`.`notes` AS `notes`,`x`.`subtotal` AS `subtotal`,`x`.`disc` AS `disc`,`x`.`tax` AS `tax`,(case when isnull(`y`.`weight`) then 0 else `y`.`weight` end) AS `weight`,(case when isnull(`y`.`priceperweight`) then 0 else `y`.`priceperweight` end) AS `priceperweight`,((`x`.`subtotal` - (((case when isnull(`x`.`disc`) then 0 else `x`.`disc` end) / 100) * `x`.`subtotal`)) + (((case when isnull(`x`.`tax`) then 0 else `x`.`tax` end) / 100) * (`x`.`subtotal` - (((case when isnull(`x`.`disc`) then 0 else `x`.`disc` end) / 100) * `x`.`subtotal`)))) AS `total`,`x`.`freight` AS `freight`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((((`trn_purchase_return_head` `x` join `trn_purchase_return_det` `y` on((`y`.`no_purchase_return` = `x`.`no_purchase_return`))) join `trn_payoff_po_head` `v` on((`v`.`no_purchase` = `y`.`no_purchase`))) left join `mst_supplier` `d` on((`d`.`id_supplier` = `x`.`id_supplier`))) join `mst_item` `e` on((`e`.`id_item` = `y`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `y`.`id_unit`))) union all select `x`.`id_supplier` AS `id_supplier`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_supplier`,`d`.`address` AS `address`,`d`.`city` AS `city`,`d`.`phone1` AS `phone1`,`d`.`phone2` AS `phone2`,`d`.`phone3` AS `phone3`,`x`.`no_purchase_return` AS `no_purchase_return`,`y`.`no_purchase` AS `no_purchase`,`x`.`date_trn` AS `date_trn`,`y`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`y`.`qty` AS `qty`,`y`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`y`.`price` AS `price`,`y`.`nominal` AS `nominal`,`x`.`payment_method` AS `payment_method`,`x`.`notes` AS `notes`,`x`.`subtotal` AS `subtotal`,`x`.`disc` AS `disc`,`x`.`tax` AS `tax`,(case when isnull(`y`.`weight`) then 0 else `y`.`weight` end) AS `weight`,(case when isnull(`y`.`priceperweight`) then 0 else `y`.`priceperweight` end) AS `priceperweight`,((`x`.`subtotal` - (((case when isnull(`x`.`disc`) then 0 else `x`.`disc` end) / 100) * `x`.`subtotal`)) + (((case when isnull(`x`.`tax`) then 0 else `x`.`tax` end) / 100) * (`x`.`subtotal` - (((case when isnull(`x`.`disc`) then 0 else `x`.`disc` end) / 100) * `x`.`subtotal`)))) AS `total`,`x`.`freight` AS `freight`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((((`trn_purchase_return_head` `x` join `trn_purchase_return_det` `y` on((`y`.`no_purchase_return` = `x`.`no_purchase_return`))) join `trn_purchasedirect_head` `v` on((`v`.`no_purchase` = `y`.`no_purchase`))) left join `mst_supplier` `d` on((`d`.`id_supplier` = `x`.`id_supplier`))) join `mst_item` `e` on((`e`.`id_item` = `y`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `y`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_rec`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_rec`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_rec`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_rec` AS select `a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_customer`,`d`.`address` AS `address`,`d`.`city` AS `city`,`d`.`phone1` AS `phone1`,`d`.`phone2` AS `phone2`,`d`.`phone3` AS `phone3`,`a`.`no_received_order` AS `no_received_order`,`a`.`date_trn` AS `date_trn`,`b`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`b`.`received_qty` AS `qty`,`b`.`id_unit` AS `id_unit`,`b`.`id_unit` AS `unit`,`b`.`notes` AS `notes_det`,`a`.`notes` AS `notes`,`a`.`no_purchase_order` AS `no_purchase_order`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((((`trn_received_order_head` `a` join `trn_received_order_det` `b` on((`b`.`no_received_order` = `a`.`no_received_order`))) join `mst_supplier` `d` on((`d`.`id_supplier` = `a`.`id_supplier`))) join `mst_item` `e` on((`e`.`id_item` = `b`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `b`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_reconcile`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_reconcile`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_reconcile`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_reconcile` AS select `a`.`no_reconcile` AS `no_reconcile`,`a`.`date_trn` AS `date_trn`,`a`.`id_account_bank` AS `id_account_bank`,`c`.`account_name` AS `acc_nm_bank`,`a`.`notes` AS `notes`,`a`.`balance_before` AS `balance_before`,`a`.`reconcile` AS `reconcile`,`a`.`balance_after` AS `balance_after`,`b`.`id_account` AS `id_account`,`d`.`account_name` AS `account_name`,`b`.`notes` AS `notes_det`,`b`.`amount_in` AS `amount_in`,`b`.`amount_out` AS `amount_out`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((`trn_reconcile_head` `a` join `trn_reconcile_det` `b` on((`b`.`no_reconcile` = `a`.`no_reconcile`))) join `mst_account` `c` on((`c`.`id_account` = `a`.`id_account_bank`))) join `mst_account` `d` on((`d`.`id_account` = `b`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_ro`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_ro`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_ro`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_ro` AS select `a`.`no_request_order` AS `no_request_order`,cast(`a`.`date_trn` as date) AS `date_trn`,`b`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`b`.`qty` AS `qty`,`b`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`b`.`notes` AS `notes_det`,`a`.`notes` AS `notes`,`a`.`date_required` AS `date_required`,`a`.`id_warehouse` AS `id_warehouse`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((`trn_request_order_head` `a` join `trn_request_order_det` `b` on((`b`.`no_request_order` = `a`.`no_request_order`))) join `mst_item` `e` on((`e`.`id_item` = `b`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `b`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_sales`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_sales`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_sales`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_sales` AS select `x`.`id_supplier` AS `id_customer`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_customer`,`d`.`address` AS `address`,`d`.`city` AS `city`,`d`.`phone1` AS `phone1`,`d`.`phone2` AS `phone2`,`d`.`phone3` AS `phone3`,`x`.`no_purchase` AS `no_sales`,`x`.`no_purchase_order` AS `no_sales_order`,`x`.`date_trn` AS `date_trn`,`y`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`y`.`qty` AS `qty`,`y`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`y`.`price` AS `price`,`y`.`nominal` AS `nominal`,`x`.`payment_method` AS `payment_method`,`x`.`payment_term_days` AS `term`,`x`.`disc_term_days` AS `termpaydisc`,`x`.`disc_term_nominal` AS `discpay`,`x`.`notes` AS `notes`,`x`.`subtotal` AS `subtotal`,`x`.`disc` AS `discount`,`x`.`tax` AS `tax`,`x`.`total` AS `total`,(case when isnull(`y`.`weight`) then 0 else `y`.`weight` end) AS `weight`,(case when isnull(`y`.`priceperweight`) then 0 else `y`.`priceperweight` end) AS `priceperweight`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((((`trn_payoff_so_head` `x` join `trn_payoff_so_det` `y` on((`y`.`no_purchase` = `x`.`no_purchase`))) join `mst_customer` `d` on((`d`.`id_customer` = `x`.`id_supplier`))) join `mst_item` `e` on((`e`.`id_item` = `y`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `y`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_sales_return`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_sales_return`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_sales_return`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_sales_return` AS select `x`.`id_customer` AS `id_customer`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_customer`,`d`.`address` AS `address`,`d`.`city` AS `city`,`d`.`phone1` AS `phone1`,`d`.`phone2` AS `phone2`,`d`.`phone3` AS `phone3`,`x`.`no_sales_return` AS `no_sales_return`,`y`.`no_sales` AS `no_sales`,`x`.`date_trn` AS `date_trn`,`y`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`y`.`qty` AS `qty`,`y`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,`y`.`price` AS `price`,`y`.`nominal` AS `nominal`,`x`.`payment_method` AS `payment_method`,`x`.`notes` AS `notes`,`x`.`subtotal` AS `subtotal`,`x`.`disc` AS `disc`,`x`.`tax` AS `tax`,`x`.`total` AS `total`,(case when isnull(`y`.`weight`) then 0 else `y`.`weight` end) AS `weight`,(case when isnull(`y`.`priceperweight`) then 0 else `y`.`priceperweight` end) AS `priceperweight`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((((`trn_sales_return_head` `x` join `trn_sales_return_det` `y` on((`y`.`no_sales_return` = `x`.`no_sales_return`))) join `trn_payoff_so_head` `v` on((`v`.`no_purchase` = `y`.`no_sales`))) join `mst_customer` `d` on((`d`.`id_customer` = `x`.`id_customer`))) join `mst_item` `e` on((`e`.`id_item` = `y`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `y`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_service`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_service`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_service`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_service` AS select `x`.`cust_name` AS `cust_name`,`x`.`cust_address` AS `cust_address`,`x`.`cust_phone` AS `cust_phone`,`x`.`no_service` AS `no_service`,`x`.`date_trn` AS `date_trn`,`y`.`id_service` AS `id_service`,`e`.`service_name` AS `service_name`,'Unit' AS `Unit`,`y`.`qty` AS `qty`,`y`.`price` AS `price`,`y`.`nominal` AS `nominal`,`x`.`payment_method` AS `payment_method`,`x`.`notes` AS `notes`,`x`.`subtotal` AS `subtotal`,`x`.`discount` AS `discount`,`x`.`tax` AS `tax`,`x`.`total` AS `total`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,(select `mst_company`.`phone` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_phone` from ((`trn_service_head` `x` join `trn_service_det` `y` on((`y`.`no_service` = `x`.`no_service`))) join `mst_service` `e` on((`e`.`id_service` = `y`.`id_service`))) union all select `x`.`cust_name` AS `cust_name`,`x`.`cust_address` AS `cust_address`,`x`.`cust_phone` AS `cust_phone`,`x`.`no_service` AS `no_service`,`x`.`date_trn` AS `date_trn`,`y`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`y`.`id_unit` AS `id_unit`,`y`.`qty` AS `qty`,`y`.`price` AS `price`,`y`.`nominal` AS `nominal`,`x`.`payment_method` AS `payment_method`,`x`.`notes` AS `notes`,`x`.`subtotal` AS `subtotal`,`x`.`discount` AS `discount`,`x`.`tax` AS `tax`,`x`.`total` AS `total`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,(select `mst_company`.`phone` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_phone` from ((`trn_service_head` `x` join `trn_service_item_det` `y` on((`y`.`no_service` = `x`.`no_service`))) join `mst_item` `e` on((`e`.`id_item` = `y`.`id_item`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_so`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_so`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_so`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_so` AS select `a`.`id_customer` AS `id_customer`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_customer`,`d`.`address` AS `address`,`d`.`city` AS `city`,`d`.`phone1` AS `phone1`,`d`.`phone2` AS `phone2`,`d`.`phone3` AS `phone3`,`a`.`no_sales_order` AS `no_sales_order`,`a`.`date_trn` AS `date_trn`,`b`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`b`.`qty` AS `qty`,`b`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,(case when isnull(`b`.`weight`) then 0 else `b`.`weight` end) AS `weight`,(case when isnull(`b`.`perweight`) then 0 else `b`.`perweight` end) AS `perweight`,(((`b`.`price` - ((case when isnull(`x`.`nom_disc`) then 0 else `x`.`nom_disc` end) / `b`.`qty`)) - ((case when isnull(`y`.`nom_disc`) then 0 else `y`.`nom_disc` end) / `b`.`qty`)) - ((case when isnull(`z`.`nom_disc`) then 0 else `z`.`nom_disc` end) / `b`.`qty`)) AS `price`,((((`b`.`price` - ((case when isnull(`x`.`nom_disc`) then 0 else `x`.`nom_disc` end) / `b`.`qty`)) - ((case when isnull(`y`.`nom_disc`) then 0 else `y`.`nom_disc` end) / `b`.`qty`)) - ((case when isnull(`z`.`nom_disc`) then 0 else `z`.`nom_disc` end) / `b`.`qty`)) * `b`.`qty`) AS `nominal`,`a`.`subtotal` AS `subtotal`,`a`.`discount` AS `discount`,`a`.`nett_total` AS `nett_total`,`a`.`tax` AS `tax`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,(case when isnull(`a`.`uang_muka`) then 0 else `a`.`uang_muka` end) AS `uang_muka`,(case when isnull(`a`.`freight_est`) then 0 else `a`.`freight_est` end) AS `freight_est`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,(case when isnull(concat(`em`.`first_name`,' ',`em`.`last_name`)) then 'Office' else concat(`em`.`first_name`,' ',`em`.`last_name`) end) AS `marketing` from ((((((((`trn_sales_order_head` `a` join `trn_sales_order_det` `b` on((`b`.`no_sales_order` = `a`.`no_sales_order`))) join `mst_customer` `d` on((`d`.`id_customer` = `a`.`id_customer`))) join `mst_item` `e` on((`e`.`id_item` = `b`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `b`.`id_unit`))) left join `trn_so_discbrand_det` `x` on(((`x`.`no_sales_order` = `b`.`no_sales_order`) and (`x`.`id_item` = `b`.`id_item`)))) left join `trn_so_disccat_det` `y` on(((`y`.`no_sales_order` = `b`.`no_sales_order`) and (`y`.`id_item` = `b`.`id_item`)))) left join `trn_so_disctype_det` `z` on(((`z`.`no_sales_order` = `b`.`no_sales_order`) and (`z`.`id_item` = `b`.`id_item`)))) left join `mst_employee` `em` on((`em`.`id_employee` = `a`.`id_employee`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ctk_so_um`
--

/*!50001 DROP TABLE IF EXISTS `view_ctk_so_um`*/;
/*!50001 DROP VIEW IF EXISTS `view_ctk_so_um`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ctk_so_um` AS select `a`.`id_customer` AS `id_customer`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `nm_customer`,`d`.`address` AS `address`,`d`.`city` AS `city`,`d`.`phone1` AS `phone1`,`d`.`phone2` AS `phone2`,`d`.`phone3` AS `phone3`,`a`.`no_sales_order` AS `no_sales_order`,`a`.`date_trn` AS `date_trn`,`b`.`id_item` AS `id_item`,`e`.`item_name` AS `item_name`,`b`.`qty` AS `qty`,`b`.`id_unit` AS `id_unit`,`f`.`unit` AS `unit`,(((`b`.`price` - ((case when isnull(`x`.`nom_disc`) then 0 else `x`.`nom_disc` end) / `b`.`qty`)) - ((case when isnull(`y`.`nom_disc`) then 0 else `y`.`nom_disc` end) / `b`.`qty`)) - ((case when isnull(`z`.`nom_disc`) then 0 else `z`.`nom_disc` end) / `b`.`qty`)) AS `price`,((((`b`.`price` - ((case when isnull(`x`.`nom_disc`) then 0 else `x`.`nom_disc` end) / `b`.`qty`)) - ((case when isnull(`y`.`nom_disc`) then 0 else `y`.`nom_disc` end) / `b`.`qty`)) - ((case when isnull(`z`.`nom_disc`) then 0 else `z`.`nom_disc` end) / `b`.`qty`)) * `b`.`qty`) AS `nominal`,`a`.`subtotal` AS `subtotal`,`a`.`discount` AS `discount`,`a`.`nett_total` AS `nett_total`,`a`.`tax` AS `tax`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,(case when isnull(`a`.`uang_muka`) then 0 else `a`.`uang_muka` end) AS `uang_muka`,(case when isnull(`a`.`id_curr_um`) then 0 else `a`.`id_curr_um` end) AS `id_curr_um`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,(case when isnull(concat(`em`.`first_name`,' ',`em`.`last_name`)) then 'Office' else concat(`em`.`first_name`,' ',`em`.`last_name`) end) AS `marketing` from ((((((((`trn_sales_order_head` `a` join `trn_sales_order_det` `b` on((`b`.`no_sales_order` = `a`.`no_sales_order`))) join `mst_customer` `d` on((`d`.`id_customer` = `a`.`id_customer`))) join `mst_item` `e` on((`e`.`id_item` = `b`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `b`.`id_unit`))) left join `trn_so_discbrand_det` `x` on(((`x`.`no_sales_order` = `b`.`no_sales_order`) and (`x`.`id_item` = `b`.`id_item`)))) left join `trn_so_disccat_det` `y` on(((`y`.`no_sales_order` = `b`.`no_sales_order`) and (`y`.`id_item` = `b`.`id_item`)))) left join `trn_so_disctype_det` `z` on(((`z`.`no_sales_order` = `b`.`no_sales_order`) and (`z`.`id_item` = `b`.`id_item`)))) left join `mst_employee` `em` on((`em`.`id_employee` = `a`.`id_employee`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_curr_def`
--

/*!50001 DROP TABLE IF EXISTS `view_curr_def`*/;
/*!50001 DROP VIEW IF EXISTS `view_curr_def`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_curr_def` AS select `mst_currency`.`id_currency` AS `id_currency` from `mst_currency` where (`mst_currency`.`flag_default` = 1) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_current_100sales`
--

/*!50001 DROP TABLE IF EXISTS `view_current_100sales`*/;
/*!50001 DROP VIEW IF EXISTS `view_current_100sales`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_current_100sales` AS select `a`.`no_purchase` AS `no_sales`,`a`.`date_trn` AS `date_trn`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `customer`,`a`.`total` AS `total` from (`trn_payoff_so_head` `a` join `mst_customer` `b` on((`b`.`id_customer` = `a`.`id_supplier`))) union all select `a`.`no_sales` AS `no_sales`,`a`.`date_trn` AS `date_trn`,(case when isnull(`a`.`customer`) then concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) else `a`.`customer` end) AS `customer`,`a`.`total` AS `total` from (`trn_cashier_head` `a` left join `mst_customer` `b` on((`b`.`id_customer` = `a`.`id_customer`))) order by `no_sales` desc limit 100 */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_do`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_do`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_do`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_do` AS select distinct `a`.`no_sales_order` AS `no_sales_order`,`a`.`id_customer` AS `id_customer`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `customer_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from ((`trn_sales_order_head` `a` join `mst_customer` `b` on((`b`.`id_customer` = `a`.`id_customer`))) join `trn_sales_order_det` `c` on((`c`.`no_sales_order` = `a`.`no_sales_order`))) where (((case when isnull(`c`.`qty`) then 0 else `c`.`qty` end) - (case when isnull(`c`.`sent_qty`) then 0 else `c`.`sent_qty` end)) <> 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_po`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_po`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_po` AS select distinct `a`.`no_purchase_order` AS `no_purchase_order`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from ((`trn_purchase_order_head` `a` join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) join `trn_purchase_order_det` `c` on((`c`.`no_purchase_order` = `a`.`no_purchase_order`))) where (((case when isnull(`c`.`qty`) then 0 else `c`.`qty` end) - (case when isnull(`c`.`qty_received`) then 0 else `c`.`qty_received` end)) <> 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_po_pelunasan`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_po_pelunasan`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po_pelunasan`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_po_pelunasan` AS select distinct `a`.`no_purchase_order` AS `no_purchase_order`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from ((`trn_purchase_order_head` `a` join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) join `trn_purchase_order_det` `c` on((`c`.`no_purchase_order` = `a`.`no_purchase_order`))) where ((case when isnull(`a`.`flag_status_invoice`) then 0 else `a`.`flag_status_invoice` end) = 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_po_pelunasan_all`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_po_pelunasan_all`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po_pelunasan_all`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_po_pelunasan_all` AS select distinct `a`.`no_purchase_order` AS `no_purchase_order`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from ((`trn_purchase_order_head` `a` join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) join `trn_purchase_order_det` `c` on((`c`.`no_purchase_order` = `a`.`no_purchase_order`))) where ((case when isnull(`a`.`um`) then 0 else `a`.`um` end) > 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_po_purch`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_po_purch`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po_purch`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_po_purch` AS select distinct `a`.`no_purchase_order` AS `no_purchase_order`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from ((`trn_purchase_order_head` `a` join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) join `trn_purchase_order_det` `c` on((`c`.`no_purchase_order` = `a`.`no_purchase_order`))) where (((case when isnull(`c`.`qty_received`) then 0 else `c`.`qty_received` end) > 0) and ((case when isnull(`a`.`flag_status_invoice`) then 0 else `a`.`flag_status_invoice` end) = 0)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_po_purch_all`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_po_purch_all`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po_purch_all`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_po_purch_all` AS select distinct `a`.`no_purchase_order` AS `no_purchase_order`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from ((`trn_purchase_order_head` `a` join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) join `trn_purchase_order_det` `c` on((`c`.`no_purchase_order` = `a`.`no_purchase_order`))) where ((case when isnull(`c`.`qty_received`) then 0 else `c`.`qty_received` end) > 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_po_rec`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_po_rec`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po_rec`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_po_rec` AS select distinct `a`.`no_purchase_order` AS `no_purchase_order`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from ((`trn_purchase_order_head` `a` join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) join `trn_purchase_order_det` `c` on((`c`.`no_purchase_order` = `a`.`no_purchase_order`))) where ((((case when isnull(`c`.`qty`) then 0 else `c`.`qty` end) - (case when isnull(`c`.`qty_received`) then 0 else `c`.`qty_received` end)) <> 0) and ((case when isnull(`a`.`flag_status_invoice`) then 0 else `a`.`flag_status_invoice` end) = 0)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_po_rec_all`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_po_rec_all`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_po_rec_all`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_po_rec_all` AS select distinct `a`.`no_purchase_order` AS `no_purchase_order`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from ((`trn_purchase_order_head` `a` join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) join `trn_purchase_order_det` `c` on((`c`.`no_purchase_order` = `a`.`no_purchase_order`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_purch`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_purch`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_purch`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_purch` AS select distinct `a`.`no_purchase` AS `no_purchase`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from (((`trn_payoff_po_head` `a` join `trn_payoff_po_det` `s` on((`s`.`no_purchase` = `a`.`no_purchase`))) left join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) left join `view_total_purchase_return` `f` on(((`f`.`id_item` = `s`.`id_item`) and (`f`.`no_purchase` = `s`.`no_purchase`)))) where ((case when isnull(`f`.`qty`) then 0 else `f`.`qty` end) < (case when isnull(`s`.`qty`) then 0 else `s`.`qty` end)) union all select distinct `a`.`no_purchase` AS `no_purchase`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from (((`trn_purchasedirect_head` `a` join `trn_purchasedirect_det` `s` on((`s`.`no_purchase` = `a`.`no_purchase`))) left join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) left join `view_total_purchase_return` `f` on(((`f`.`id_item` = `s`.`id_item`) and (`f`.`no_purchase` = `s`.`no_purchase`)))) where ((case when isnull(`f`.`qty`) then 0 else `f`.`qty` end) < (case when isnull(`s`.`qty`) then 0 else `s`.`qty` end)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_purch_all`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_purch_all`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_purch_all`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_purch_all` AS select distinct `a`.`no_purchase` AS `no_purchase`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from (((`trn_payoff_po_head` `a` join `trn_payoff_po_det` `s` on((`s`.`no_purchase` = `a`.`no_purchase`))) left join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) left join `view_total_purchase_return` `f` on(((`f`.`id_item` = `s`.`id_item`) and (`f`.`no_purchase` = `s`.`no_purchase`)))) union all select distinct `a`.`no_purchase` AS `no_purchase`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from (((`trn_purchasedirect_head` `a` join `trn_purchasedirect_det` `s` on((`s`.`no_purchase` = `a`.`no_purchase`))) left join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) left join `view_total_purchase_return` `f` on(((`f`.`id_item` = `s`.`id_item`) and (`f`.`no_purchase` = `s`.`no_purchase`)))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_purchdirect_all`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_purchdirect_all`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_purchdirect_all`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_purchdirect_all` AS select distinct `a`.`no_purchase` AS `no_purchase`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from (((`trn_purchasedirect_head` `a` join `trn_purchase_det` `s` on((`s`.`no_purchase` = `a`.`no_purchase`))) join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) left join `view_total_purchase_return` `f` on(((`f`.`id_item` = `s`.`id_item`) and (`f`.`no_purchase` = `s`.`no_purchase`)))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_so`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_so`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_so`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_so` AS select distinct `a`.`no_sales_order` AS `no_sales_order`,`a`.`id_customer` AS `id_customer`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `customer_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from ((`trn_sales_order_head` `a` join `mst_customer` `b` on((`b`.`id_customer` = `a`.`id_customer`))) join `trn_sales_order_det` `c` on((`c`.`no_sales_order` = `a`.`no_sales_order`))) where (((case when isnull(`c`.`qty`) then 0 else `c`.`qty` end) - (case when isnull(`c`.`sent_qty`) then 0 else `c`.`sent_qty` end)) <> 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_so_dev`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_so_dev`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_so_dev`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_so_dev` AS select distinct `a`.`no_sales_order` AS `no_sales_order`,`a`.`id_customer` AS `id_customer`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `customer_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from ((`trn_sales_order_head` `a` join `mst_customer` `b` on((`b`.`id_customer` = `a`.`id_customer`))) join `trn_sales_order_det` `c` on((`c`.`no_sales_order` = `a`.`no_sales_order`))) where ((((case when isnull(`c`.`qty`) then 0 else `c`.`qty` end) - (case when isnull(`c`.`sent_qty`) then 0 else `c`.`sent_qty` end)) <> 0) and ((case when isnull(`a`.`flag_status_invoice`) then 0 else `a`.`flag_status_invoice` end) = 0)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_so_pelunasan`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_so_pelunasan`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_so_pelunasan`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_so_pelunasan` AS select distinct `a`.`no_sales_order` AS `no_purchase_order`,`a`.`id_customer` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from ((`trn_sales_order_head` `a` join `mst_customer` `b` on((`b`.`id_customer` = `a`.`id_customer`))) join `trn_sales_order_det` `c` on((`c`.`no_sales_order` = `a`.`no_sales_order`))) where (((case when isnull(`a`.`flag_status_invoice`) then 0 else `a`.`flag_status_invoice` end) = 0) and ((case when isnull(`a`.`uang_muka`) then 0 else `a`.`uang_muka` end) > 0)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_dataset_so_pelunasan_all`
--

/*!50001 DROP TABLE IF EXISTS `view_dataset_so_pelunasan_all`*/;
/*!50001 DROP VIEW IF EXISTS `view_dataset_so_pelunasan_all`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_dataset_so_pelunasan_all` AS select distinct `a`.`no_sales_order` AS `no_purchase_order`,`a`.`id_customer` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `supplier_name`,`b`.`address` AS `address`,`a`.`date_trn` AS `date_trn` from ((`trn_sales_order_head` `a` join `mst_customer` `b` on((`b`.`id_customer` = `a`.`id_customer`))) join `trn_sales_order_det` `c` on((`c`.`no_sales_order` = `a`.`no_sales_order`))) where ((case when isnull(`a`.`uang_muka`) then 0 else `a`.`uang_muka` end) > 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_department_produksi`
--

/*!50001 DROP TABLE IF EXISTS `view_department_produksi`*/;
/*!50001 DROP VIEW IF EXISTS `view_department_produksi`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_department_produksi` AS select `mst_department_produksi`.`department_id` AS `department_id`,`mst_department_produksi`.`department_name` AS `department_name`,`mst_department_produksi`.`notes` AS `notes`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from `mst_department_produksi` where ((case when isnull(`mst_department_produksi`.`flag_active`) then 0 else 1 end) = 1) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_depproduksi_coa`
--

/*!50001 DROP TABLE IF EXISTS `view_depproduksi_coa`*/;
/*!50001 DROP VIEW IF EXISTS `view_depproduksi_coa`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_depproduksi_coa` AS select `a`.`department_id` AS `department_id`,`a`.`department_name` AS `department_name`,(case when isnull(`a`.`id_account_bdp`) then '' else `a`.`id_account_bdp` end) AS `id_account_bdp`,(case when isnull(`a`.`id_account_bop_real`) then '' else `a`.`id_account_bop_real` end) AS `id_account_bop_real`,(case when isnull(`a`.`id_account_bop_std`) then '' else `a`.`id_account_bop_std` end) AS `id_account_bop_std`,(case when isnull(`a`.`id_account_directlabor`) then '' else `a`.`id_account_directlabor` end) AS `id_account_directlabor`,(case when isnull(`a`.`id_account_material_cost`) then '' else `a`.`id_account_material_cost` end) AS `id_account_material_cost`,(case when isnull(`a`.`id_account_wages_payable`) then '' else `a`.`id_account_wages_payable` end) AS `id_account_wages_payable`,(case when isnull(`a`.`id_account_wip_cost`) then '' else `a`.`id_account_wip_cost` end) AS `id_account_wip_cost` from `mst_department_produksi` `a` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_depreciation_history`
--

/*!50001 DROP TABLE IF EXISTS `view_depreciation_history`*/;
/*!50001 DROP VIEW IF EXISTS `view_depreciation_history`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_depreciation_history` AS select `a`.`id_aset` AS `id_aset`,`b`.`nama` AS `nama`,`c`.`type` AS `type`,`a`.`date_trn` AS `date_trn`,`a`.`nominal` AS `nominal`,`a`.`period` AS `period`,`a`.`years` AS `years`,`d`.`department_name` AS `department_name`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,(select (case when isnull(`i_project_name`.`header_text`) then '' else `i_project_name`.`header_text` end) AS `header_text` from `i_project_name` where (`i_project_name`.`project_default` = 1)) AS `header_text` from (((`i_aset_depreciation` `a` join `mst_aset` `b` on((`b`.`id_aset` = `a`.`id_aset`))) join `mst_golaset` `c` on((`c`.`id_golongan` = `b`.`id_golongan`))) join `mst_department` `d` on((`d`.`department_id` = `b`.`id_department`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_detail_component_cashflow`
--

/*!50001 DROP TABLE IF EXISTS `view_detail_component_cashflow`*/;
/*!50001 DROP VIEW IF EXISTS `view_detail_component_cashflow`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `view_detail_component_cashflow` AS select `x`.`id_account` AS `id_account`,`x`.`account_name` AS `account_name`,(case when isnull(`d`.`id_component`) then 0 else `d`.`id_component` end) AS `id_component` from ((`mst_account` `x` left join `tempx_component_cashflow_simrs_det` `c` on((`x`.`id_account` = `c`.`id_account`))) left join `tempx_component_cashflow_simrs_head` `d` on(((`d`.`id_component` = `c`.`id_component`) and (`c`.`id_component` = `d`.`id_component`)))) where ((`x`.`flag_active` = 1) and (`x`.`flag_header` = 0)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_disc_brand_item`
--

/*!50001 DROP TABLE IF EXISTS `view_disc_brand_item`*/;
/*!50001 DROP VIEW IF EXISTS `view_disc_brand_item`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_disc_brand_item` AS select `a`.`id_item` AS `id_item`,`a`.`item_name` AS `item_name`,(case when isnull(`b`.`disc`) then 0 else `b`.`disc` end) AS `disc` from (`mst_item` `a` join `mst_itembrand` `b` on((`b`.`mst_itembrand_id` = `a`.`id_brand`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_disc_cat_item`
--

/*!50001 DROP TABLE IF EXISTS `view_disc_cat_item`*/;
/*!50001 DROP VIEW IF EXISTS `view_disc_cat_item`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_disc_cat_item` AS select `a`.`id_item` AS `id_item`,`a`.`item_name` AS `item_name`,(case when isnull(`b`.`discount`) then 0 else `b`.`discount` end) AS `disc` from (`mst_item` `a` join `mst_itemcat` `b` on((`b`.`mst_itemcat_id` = `a`.`id_category`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_disc_item_do`
--

/*!50001 DROP TABLE IF EXISTS `view_disc_item_do`*/;
/*!50001 DROP VIEW IF EXISTS `view_disc_item_do`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_disc_item_do` AS select `a`.`no_do` AS `no_do`,`a`.`id_item` AS `id_item`,`b`.`item_name` AS `item_name`,`a`.`qty` AS `qty`,`a`.`id_unit` AS `id_unit` from (`trn_do_discitem_det` `a` join `mst_item` `b` on((`b`.`id_item` = `a`.`id_item`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_disc_item_so`
--

/*!50001 DROP TABLE IF EXISTS `view_disc_item_so`*/;
/*!50001 DROP VIEW IF EXISTS `view_disc_item_so`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_disc_item_so` AS select `a`.`no_sales_order` AS `no_sales_order`,`a`.`id_item` AS `id_item`,`b`.`item_name` AS `item_name`,`a`.`qty` AS `qty`,`a`.`id_unit` AS `id_unit` from (`trn_so_discitem_det` `a` join `mst_item` `b` on((`b`.`id_item` = `a`.`id_item`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_disc_type_item`
--

/*!50001 DROP TABLE IF EXISTS `view_disc_type_item`*/;
/*!50001 DROP VIEW IF EXISTS `view_disc_type_item`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_disc_type_item` AS select `a`.`id_item` AS `id_item`,`a`.`item_name` AS `item_name`,(case when isnull(`b`.`discount`) then 0 else `b`.`discount` end) AS `disc` from (`mst_item` `a` join `mst_itemjenis` `b` on((`b`.`mst_itemjenis_id` = `a`.`id_jenis`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_do_list`
--

/*!50001 DROP TABLE IF EXISTS `view_do_list`*/;
/*!50001 DROP VIEW IF EXISTS `view_do_list`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_do_list` AS select `a`.`no_delivery_order` AS `no_delivery_order`,`a`.`date_trn` AS `date_trn`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `pelanggan`,`d`.`address` AS `address`,`d`.`city` AS `city`,(case when isnull(`e`.`freight_est`) then 0 else `e`.`freight_est` end) AS `freight_est` from ((`trn_delivery_order_head` `a` join `mst_customer` `d` on((`d`.`id_customer` = `a`.`id_customer`))) join `trn_sales_order_head` `e` on((`e`.`no_sales_order` = `a`.`no_sales_order`))) where (((case when isnull(`e`.`freight_est`) then 0 else `e`.`freight_est` end) > 0) and (not(`e`.`no_sales_order` in (select `trn_sales_head`.`no_sales_order` from `trn_sales_head`)))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_employee`
--

/*!50001 DROP TABLE IF EXISTS `view_employee`*/;
/*!50001 DROP VIEW IF EXISTS `view_employee`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_employee` AS select `mst_employee`.`id_employee` AS `id_employee`,concat(`mst_employee`.`first_name`,' ',`mst_employee`.`last_name`) AS `employee_nm`,`mst_employee`.`position_id` AS `position_id`,`mst_employee`.`department_id` AS `department_id` from `mst_employee` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_event_attendance`
--

/*!50001 DROP TABLE IF EXISTS `view_event_attendance`*/;
/*!50001 DROP VIEW IF EXISTS `view_event_attendance`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_event_attendance` AS select `c`.`id_member` AS `id_member`,`a`.`id_attendance` AS `id_attendance`,(case when isnull(`b`.`event_name`) then '' else `b`.`event_name` end) AS `event_name`,`b`.`start_date` AS `start_date`,`b`.`end_date` AS `end_date`,(case when isnull(`c`.`nip_member`) then '' else `c`.`nip_member` end) AS `nip_member`,(case when isnull(`c`.`member_name`) then '' else `c`.`member_name` end) AS `member_name`,(case when isnull(`c`.`position`) then '' else `c`.`position` end) AS `position`,(case when isnull(`c`.`area`) then '' else `c`.`area` end) AS `area`,(case when isnull(`c`.`region`) then '' else `c`.`region` end) AS `region`,(case when isnull(`a`.`id_attendance`) then 'Tidak Hadir' else 'Hadir' end) AS `status_hadir`,(case when isnull(`a`.`attendance_date`) then '' else `a`.`attendance_date` end) AS `attendance_date` from ((`mst_event_member` `c` left join `i_event_attendance` `a` on((`a`.`id_member` = `c`.`id_member`))) join `mst_event` `b` on((`b`.`id_event` = `a`.`id_event`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_event_member`
--

/*!50001 DROP TABLE IF EXISTS `view_event_member`*/;
/*!50001 DROP VIEW IF EXISTS `view_event_member`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_event_member` AS select `a`.`id_event` AS `id_event`,`a`.`id_member` AS `id_member`,(case when isnull(`b`.`event_name`) then '' else `b`.`event_name` end) AS `event_name`,`b`.`start_date` AS `start_date`,`b`.`end_date` AS `end_date`,(case when isnull(`a`.`member_name`) then '' else `a`.`member_name` end) AS `member_name`,(case when isnull(`a`.`nip_member`) then '' else `a`.`nip_member` end) AS `nip_member`,(case when isnull(`a`.`position`) then '' else `a`.`position` end) AS `position`,(case when isnull(`a`.`area`) then '' else `a`.`area` end) AS `area`,(case when isnull(`a`.`region`) then '' else `a`.`region` end) AS `region`,`a`.`photo_path` AS `photo_path` from (`mst_event_member` `a` join `mst_event` `b` on((`b`.`id_event` = `a`.`id_event`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_grafik_currentaset`
--

/*!50001 DROP TABLE IF EXISTS `view_grafik_currentaset`*/;
/*!50001 DROP VIEW IF EXISTS `view_grafik_currentaset`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_grafik_currentaset` AS select `c`.`account_name` AS `account_name`,sum((case when (`a`.`nominal` > 0) then abs(`a`.`nominal`) else 0 end)) AS `debet`,sum((case when (`a`.`nominal` < 0) then abs(`a`.`nominal`) else 0 end)) AS `credit` from ((`trn_ledger_det` `a` join `trn_ledger_head` `b` on((`b`.`no_ledger` = `a`.`no_ledger`))) join `mst_account` `c` on((`c`.`id_account` = `a`.`id_account`))) where ((`c`.`golongan` = 1) and (year(`b`.`date_trn`) = `get_year`()) and (`b`.`post_from` <> 'Close Period') and `a`.`id_account` in (select `i_cashbank_setup`.`id_account` from `i_cashbank_setup`)) group by `c`.`account_name` order by `a`.`id_account` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_grafikbiaya_bln`
--

/*!50001 DROP TABLE IF EXISTS `view_grafikbiaya_bln`*/;
/*!50001 DROP VIEW IF EXISTS `view_grafikbiaya_bln`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_grafikbiaya_bln` AS select `c`.`account_name` AS `account_name`,(sum(`a`.`nominal`) / `get_totalcost_month`()) AS `persent` from ((`trn_ledger_det` `a` join `trn_ledger_head` `b` on((`b`.`no_ledger` = `a`.`no_ledger`))) join `mst_account` `c` on((`c`.`id_account` = `a`.`id_account`))) where ((`c`.`golongan` = 6) and (month(`b`.`date_trn`) = `get_month`()) and (year(`b`.`date_trn`) = `get_year`()) and (`b`.`post_from` <> 'Close Period')) group by `c`.`account_name` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_grafikbiaya_th`
--

/*!50001 DROP TABLE IF EXISTS `view_grafikbiaya_th`*/;
/*!50001 DROP VIEW IF EXISTS `view_grafikbiaya_th`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_grafikbiaya_th` AS select `c`.`account_name` AS `account_name`,round(sum(`a`.`nominal`),0) AS `persent` from ((`trn_ledger_det` `a` join `trn_ledger_head` `b` on((`b`.`no_ledger` = `a`.`no_ledger`))) join `mst_account` `c` on((`c`.`id_account` = `a`.`id_account`))) where ((`c`.`golongan` = 6) and (year(`b`.`date_trn`) = `get_year`()) and (`b`.`post_from` <> 'Close Period')) group by `c`.`account_name` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_group_bayarkop`
--

/*!50001 DROP TABLE IF EXISTS `view_group_bayarkop`*/;
/*!50001 DROP VIEW IF EXISTS `view_group_bayarkop`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_group_bayarkop` AS select sum(`trn_pinjam_bayar`.`nominal_bayar`) AS `nominal_bayar`,`trn_pinjam_bayar`.`no_pinjam` AS `no_pinjam` from `trn_pinjam_bayar` group by `trn_pinjam_bayar`.`no_pinjam` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_hpp_calculated`
--

/*!50001 DROP TABLE IF EXISTS `view_hpp_calculated`*/;
/*!50001 DROP VIEW IF EXISTS `view_hpp_calculated`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_hpp_calculated` AS select `a`.`no_bukti` AS `no_bukti`,`a`.`date_trn` AS `date_trn`,`a`.`id_item` AS `id_item`,`a`.`item_name` AS `item_name`,`a`.`masuk` AS `masuk`,`a`.`keluar` AS `keluar`,`a`.`id_unit` AS `id_unit`,`a`.`price` AS `price`,`a`.`saldo` AS `saldo`,`a`.`company` AS `company`,`a`.`notes` AS `notes`,`a`.`nmb_asc` AS `nmb_asc`,`a`.`price_in` AS `price_in`,`a`.`price_out` AS `price_out`,`b`.`main_unit` AS `main_unit` from (`lap_mutasi_hpp` `a` join `view_main_unit_item` `b` on((`b`.`id_item` = `a`.`id_item`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_hutang_jt`
--

/*!50001 DROP TABLE IF EXISTS `view_hutang_jt`*/;
/*!50001 DROP VIEW IF EXISTS `view_hutang_jt`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_hutang_jt` AS select distinct `a`.`no_purchase` AS `no_purchase`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `supplier`,`a`.`date_trn` AS `date_trn`,((`a`.`purchase_amount` - `a`.`return_amount`) - `a`.`disc_amount`) AS `total_ap`,`a`.`paid_amount` AS `paid_amount`,((((case when isnull(`a`.`purchase_amount`) then 0 else `a`.`purchase_amount` end) - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) AS `balance`,`b`.`payment_term_days` AS `payment_term_days`,cast((`a`.`date_trn` + interval `b`.`payment_term_days` day) as date) AS `jatuh_tempo`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,`b`.`kurs` AS `kurs`,`h`.`id_curr` AS `id_curr`,`k`.`convert_value` AS `convert_value` from ((((`ap_status` `a` join `trn_purchase_head` `b` on((`b`.`no_purchase` = `a`.`no_purchase`))) join `trn_purchase_det` `h` on((`h`.`no_purchase` = `b`.`no_purchase`))) join `mst_supplier` `c` on((`c`.`id_supplier` = `b`.`id_supplier`))) join `mst_setcurrency` `k` on((`k`.`id_currency` = `h`.`id_curr`))) where (((((case when isnull(`a`.`purchase_amount`) then 0 else `a`.`purchase_amount` end) - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) > 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_item_beg_balance`
--

/*!50001 DROP TABLE IF EXISTS `view_item_beg_balance`*/;
/*!50001 DROP VIEW IF EXISTS `view_item_beg_balance`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_item_beg_balance` AS select `b`.`id_item` AS `id_item`,`a`.`item_name` AS `item_name`,`b`.`id_unit` AS `id_unit`,(case when isnull(`b`.`balance`) then 0 else `b`.`balance` end) AS `balance`,(case when isnull(`b`.`price`) then 0 else `b`.`price` end) AS `price`,(case when isnull(`b`.`notes`) then '' else `b`.`notes` end) AS `notes`,`b`.`id_warehouse` AS `id_warehouse`,(case when isnull(`a`.`weight`) then 0 else `a`.`weight` end) AS `weight`,(case when isnull(`a`.`kadar`) then 0 else `a`.`kadar` end) AS `kadar` from (`mst_item` `a` join `i_item_beg_balance` `b` on((`b`.`id_item` = `a`.`id_item`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_item_disc`
--

/*!50001 DROP TABLE IF EXISTS `view_item_disc`*/;
/*!50001 DROP VIEW IF EXISTS `view_item_disc`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_item_disc` AS select `a`.`id_item` AS `id_item`,`a`.`id_item_disc` AS `id_item_disc`,`b`.`item_name` AS `item_name_disc`,`a`.`qty` AS `qty`,`a`.`id_unit` AS `id_unit` from (`mst_item_disc` `a` join `mst_item` `b` on((`b`.`id_item` = `a`.`id_item_disc`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_kartu_bayar`
--

/*!50001 DROP TABLE IF EXISTS `view_kartu_bayar`*/;
/*!50001 DROP VIEW IF EXISTS `view_kartu_bayar`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_kartu_bayar` AS select `a`.`no_pinjam` AS `no_pinjam`,`c`.`no_bayar` AS `no_bayar`,`b`.`first_name` AS `first_name`,`b`.`address` AS `address`,`c`.`date_trn` AS `date_trn`,`c`.`nominal_bunga` AS `nominal_bunga`,(case when isnull(`c`.`print_status`) then 0 else `c`.`print_status` end) AS `print_status` from ((`trn_pinjam` `a` join `mst_customer` `b` on((`b`.`id_customer` = `a`.`id_customer`))) join `trn_pinjam_bayar` `c` on((`c`.`no_pinjam` = `a`.`no_pinjam`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_laba_rugi`
--

/*!50001 DROP TABLE IF EXISTS `view_laba_rugi`*/;
/*!50001 DROP VIEW IF EXISTS `view_laba_rugi`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `view_laba_rugi` AS select `a`.`id_account` AS `id_account`,`a`.`account_name` AS `account_name`,`a`.`parent` AS `parent`,`a`.`saldo` AS `saldo`,`a`.`header_group` AS `header_group`,`a`.`company_name` AS `company_name`,`c`.`account_name` AS `account_parent`,(case when isnull(`b`.`saldo`) then 0 else `b`.`saldo` end) AS `saldo_th_lalu`,(select `view_curr_def`.`id_currency` from `view_curr_def`) AS `curr`,`c`.`parent` AS `parent2`,ucase(`d`.`account_name`) AS `account_parent2`,`d`.`parent` AS `parent3`,ucase(`e`.`account_name`) AS `account_parent3`,(select (case when isnull(`i_project_name`.`header_text`) then '' else `i_project_name`.`header_text` end) AS `header_text` from `i_project_name` where (`i_project_name`.`project_default` = 1)) AS `header_text`,(select (case when isnull(`i_project_name`.`profit_notes`) then '' else `i_project_name`.`profit_notes` end) AS `profit_notes` from `i_project_name` where (`i_project_name`.`project_default` = 1)) AS `profit_notes`,`get_income`() AS `tInc` from ((((`temp_income` `a` left join `temp_income_tahunlalu` `b` on((`b`.`id_account` = `a`.`id_account`))) join `mst_account` `c` on((`c`.`id_account` = `a`.`parent`))) join `mst_account` `d` on((`d`.`id_account` = `c`.`parent`))) join `mst_account` `e` on((`e`.`id_account` = `d`.`parent`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_laba_rugi_lra`
--

/*!50001 DROP TABLE IF EXISTS `view_laba_rugi_lra`*/;
/*!50001 DROP VIEW IF EXISTS `view_laba_rugi_lra`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `view_laba_rugi_lra` AS select `a`.`id_account` AS `id_account`,`a`.`account_name` AS `account_name`,`a`.`parent` AS `parent`,`a`.`saldo` AS `saldo`,`a`.`header_group` AS `header_group`,`a`.`company_name` AS `company_name`,`c`.`account_name` AS `account_parent`,(case when isnull(`b`.`saldo`) then 0 else `b`.`saldo` end) AS `saldo_th_lalu`,(select `view_curr_def`.`id_currency` from `view_curr_def`) AS `curr`,`c`.`parent` AS `parent2`,ucase(`d`.`account_name`) AS `account_parent2`,`d`.`parent` AS `parent3`,ucase(`e`.`account_name`) AS `account_parent3`,(select (case when isnull(`i_project_name`.`header_text`) then '' else `i_project_name`.`header_text` end) AS `header_text` from `i_project_name` where (`i_project_name`.`project_default` = 1)) AS `header_text`,(select (case when isnull(`i_project_name`.`profit_notes`) then '' else `i_project_name`.`profit_notes` end) AS `profit_notes` from `i_project_name` where (`i_project_name`.`project_default` = 1)) AS `profit_notes` from ((((`temp_income_lra` `a` left join `temp_income_lra_tahunlalu` `b` on((`b`.`id_account` = `a`.`id_account`))) join `mst_account` `c` on((`c`.`id_account` = `a`.`parent`))) join `mst_account` `d` on((`d`.`id_account` = `c`.`parent`))) join `mst_account` `e` on((`e`.`id_account` = `d`.`parent`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_datacustomer`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_datacustomer`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_datacustomer`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_datacustomer` AS select `mst_customer`.`id_customer` AS `ID`,concat((case when isnull(`mst_customer`.`first_name`) then '' else `mst_customer`.`first_name` end),' ',(case when isnull(`mst_customer`.`last_name`) then '' else `mst_customer`.`last_name` end)) AS `Nama`,`mst_customer`.`address` AS `Alamat`,`mst_customer`.`city` AS `Kota`,`mst_customer`.`state` AS `Propinsi`,concat(`mst_customer`.`phone1`,',',`mst_customer`.`phone2`) AS `Telepon`,`mst_customer`.`email` AS `Email`,`mst_customer`.`website` AS `Wesite`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from `mst_customer` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_datacustomer_2`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_datacustomer_2`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_datacustomer_2`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_datacustomer_2` AS select `mst_customer`.`id_customer` AS `ID`,concat((case when isnull(`mst_customer`.`first_name`) then '' else `mst_customer`.`first_name` end),' ',(case when isnull(`mst_customer`.`last_name`) then '' else `mst_customer`.`last_name` end)) AS `Nama`,`mst_customer`.`address` AS `Alamat`,`mst_customer`.`city` AS `Kota`,`mst_customer`.`state` AS `Propinsi`,concat(`mst_customer`.`phone1`,',',`mst_customer`.`phone2`) AS `Telepon`,`mst_customer`.`email` AS `Email`,`mst_customer`.`website` AS `Wesite`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from `mst_customer` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_dataemployee`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_dataemployee`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_dataemployee`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_dataemployee` AS select `mst_employee`.`id_employee` AS `ID`,concat((case when isnull(`mst_employee`.`first_name`) then '' else `mst_employee`.`first_name` end),' ',(case when isnull(`mst_employee`.`last_name`) then '' else `mst_employee`.`last_name` end)) AS `Nama`,`mst_employee`.`address` AS `Alamat`,`mst_employee`.`city` AS `Kota`,`mst_employee`.`state` AS `Propinsi`,concat(`mst_employee`.`phone1`,',',`mst_employee`.`phone2`) AS `Telepon`,`mst_employee`.`email` AS `Email`,`mst_employee`.`website` AS `Wesite`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from `mst_employee` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_datasupplier`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_datasupplier`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_datasupplier`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_datasupplier` AS select `mst_supplier`.`id_supplier` AS `ID`,concat((case when isnull(`mst_supplier`.`first_name`) then '' else `mst_supplier`.`first_name` end),' ',(case when isnull(`mst_supplier`.`last_name`) then '' else `mst_supplier`.`last_name` end)) AS `Nama`,`mst_supplier`.`address` AS `Alamat`,`mst_supplier`.`city` AS `Kota`,`mst_supplier`.`state` AS `Propinsi`,concat(`mst_supplier`.`phone1`,',',`mst_supplier`.`phone2`) AS `Telepon`,`mst_supplier`.`email` AS `Email`,`mst_supplier`.`website` AS `Wesite`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from `mst_supplier` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_detail_transjasa`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_detail_transjasa`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_detail_transjasa`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_detail_transjasa` AS select `a`.`no_service` AS `no_service`,cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`id_customer` AS `id_customer`,`b`.`id_service` AS `id_service`,`d`.`service_name` AS `service_name`,`b`.`price` AS `price`,`b`.`qty` AS `qty`,`b`.`nominal` AS `nominal`,(case when isnull(`a`.`cust_name`) then concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) else `a`.`cust_name` end) AS `nama_customer`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,(case when (`a`.`flag_member` = 0) then 'Non Member' when (`a`.`flag_member` = 1) then 'Member' end) AS `status_member` from (((`trn_service_head` `a` join `trn_service_det` `b` on((`b`.`no_service` = `a`.`no_service`))) join `mst_service` `d` on((`d`.`id_service` = `b`.`id_service`))) left join `mst_customer` `c` on((`c`.`id_customer` = `a`.`id_customer`))) union all select `a`.`no_service` AS `no_service`,cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`id_customer` AS `id_customer`,`b`.`id_item` AS `id_item`,`d`.`item_name` AS `item_name`,`b`.`price` AS `price`,`b`.`qty` AS `qty`,`b`.`nominal` AS `nominal`,(case when isnull(`a`.`cust_name`) then concat(`c`.`first_name`,' ',`c`.`last_name`) else `a`.`cust_name` end) AS `nama_customer`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,(case when (`a`.`flag_member` = 0) then 'Non Member' when (`a`.`flag_member` = 1) then 'Member' end) AS `status_member` from (((`trn_service_head` `a` join `trn_service_item_det` `b` on((`b`.`no_service` = `a`.`no_service`))) join `mst_item` `d` on((`d`.`id_item` = `b`.`id_item`))) left join `mst_customer` `c` on((`c`.`id_customer` = `a`.`id_customer`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_detail_transkasir`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_detail_transkasir`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_detail_transkasir`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_detail_transkasir` AS select `a`.`no_sales` AS `no_sales`,cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`id_customer` AS `id_customer`,`b`.`id_item` AS `id_item`,`d`.`item_name` AS `item_name`,`b`.`price` AS `price`,`b`.`qty` AS `qty`,`b`.`nominal` AS `nominal`,(case when isnull(`a`.`customer`) then concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) else `a`.`customer` end) AS `nama_customer`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,(case when (`a`.`flag_member` = 0) then 'Non Member' when (`a`.`flag_member` = 1) then 'Member' end) AS `status_member`,`a`.`subtotal` AS `subtotal`,((`a`.`discount` * `a`.`subtotal`) / 100) AS `discount`,(`a`.`tax` * (`a`.`subtotal` - ((`a`.`subtotal` * `a`.`discount`) / 100))) AS `tax`,`a`.`total` AS `total`,(select `mst_currency`.`id_currency` from `mst_currency` where (`mst_currency`.`flag_default` = 1)) AS `id_currency`,`b`.`number_asc` AS `number_asc` from (((`trn_cashier_head` `a` join `trn_cashier_det` `b` on((`b`.`no_sales` = `a`.`no_sales`))) join `mst_item` `d` on((`d`.`id_item` = `b`.`id_item`))) left join `mst_customer` `c` on((`c`.`id_customer` = `a`.`id_customer`))) union all select `a`.`no_sales` AS `no_sales`,cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`id_customer` AS `id_customer`,`b`.`id_service` AS `id_service`,`d`.`service_name` AS `service_name`,`b`.`price` AS `price`,`b`.`qty` AS `qty`,`b`.`nominal` AS `nominal`,(case when isnull(`a`.`customer`) then concat(`c`.`first_name`,' ',`c`.`last_name`) else `a`.`customer` end) AS `nama_customer`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,(case when (`a`.`flag_member` = 0) then 'Non Member' when (`a`.`flag_member` = 1) then 'Member' end) AS `status_member`,`a`.`subtotal` AS `subtotal`,((`a`.`discount` * `a`.`subtotal`) / 100) AS `discount`,(`a`.`tax` * (`a`.`subtotal` - ((`a`.`subtotal` * `a`.`discount`) / 100))) AS `tax`,`a`.`total` AS `total`,(select `mst_currency`.`id_currency` from `mst_currency` where (`mst_currency`.`flag_default` = 1)) AS `id_currency`,`b`.`number_asc` AS `number_asc` from (((`trn_cashier_head` `a` join `trn_cashier_service_det` `b` on((`b`.`no_sales` = `a`.`no_sales`))) join `mst_service` `d` on((`d`.`id_service` = `b`.`id_service`))) left join `mst_customer` `c` on((`c`.`id_customer` = `a`.`id_customer`))) order by `number_asc` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_hutang_lunas`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_hutang_lunas`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_hutang_lunas`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_hutang_lunas` AS select `a`.`no_purchase` AS `no_purchase`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `supplier`,`a`.`purchase_amount` AS `purchase_amount`,`a`.`return_amount` AS `return_amount`,(`a`.`purchase_amount` - `a`.`return_amount`) AS `nett_purch`,`b`.`no_payment_ap` AS `no_payment_ap`,`d`.`date_trn` AS `date_trn`,`a`.`disc_amount` AS `disc_amount`,`b`.`paid_amount` AS `paid_amount`,`d`.`notes` AS `notes`,`d`.`id_supplier` AS `id_supplier`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`d`.`id_currency` AS `id_currency` from (((`ap_status` `a` join `trn_payment_ap_det` `b` on((`b`.`no_purchase` = `a`.`no_purchase`))) join `mst_supplier` `c` on((`c`.`id_supplier` = `a`.`id_supplier`))) join `trn_payment_ap_head` `d` on((`d`.`no_payment_ap` = `b`.`no_payment_ap`))) where (`a`.`balance` = 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_jurnal`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_jurnal`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_jurnal`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_jurnal` AS select cast(`a`.`date_trn` as date) AS `date_trn`,`b`.`no_ledger` AS `no_ledger`,`b`.`id_account` AS `id_account`,`c`.`account_name` AS `account_name`,`b`.`notes` AS `notes`,(case when (`b`.`nominal` > 0) then `b`.`nominal` else 0 end) AS `debit`,(case when (`b`.`nominal` < 0) then (-(1) * `b`.`nominal`) else 0 end) AS `kredit`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,(select `mst_currency`.`id_currency` from `mst_currency` where (`mst_currency`.`flag_default` = 1)) AS `curr`,(select (case when isnull(`i_project_name`.`header_text`) then '' else `i_project_name`.`header_text` end) AS `header_text` from `i_project_name` where (`i_project_name`.`project_default` = 1)) AS `header_text` from ((`trn_ledger_head` `a` join `trn_ledger_det` `b` on((`b`.`no_ledger` = `a`.`no_ledger`))) join `mst_account` `c` on((`c`.`id_account` = `b`.`id_account`))) order by `a`.`date_trn`,`a`.`no_ledger` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_koreksi_stock`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_koreksi_stock`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_koreksi_stock`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_koreksi_stock` AS select `a`.`no_adjust_stock` AS `no_adjust_stock`,`a`.`date_trn` AS `date_trn`,`c`.`warehouse_name` AS `warehouse_name`,`b`.`negative` AS `koreksi_negative`,`b`.`positive` AS `koreksi_positive`,`b`.`weight_plus` AS `weight_plus`,`b`.`weight_minus` AS `weight_minus`,`b`.`notes` AS `notes_det`,`a`.`notes` AS `notes`,`b`.`id_item` AS `id_item`,`d`.`item_name` AS `item_name`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((`trn_adjust_stock_head` `a` join `trn_adjust_stock_det` `b` on((`b`.`no_adjust_stock` = `a`.`no_adjust_stock`))) join `mst_warehouse` `c` on((`c`.`id_warehouse` = `a`.`id_warehouse`))) join `mst_item` `d` on((`d`.`id_item` = `b`.`id_item`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_pembelian_std`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_pembelian_std`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_pembelian_std`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_pembelian_std` AS select distinct `a`.`no_purchase` AS `no_purchase`,cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `nama_supplier`,`a`.`subtotal` AS `subtotal`,`a`.`freight` AS `freight`,((`a`.`disc` * (`a`.`subtotal` + `a`.`freight`)) / 100) AS `discount`,((`a`.`subtotal` + `a`.`freight`) - ((`a`.`disc` * (`a`.`subtotal` + `a`.`freight`)) / 100)) AS `subtotal_nett`,((`a`.`tax` / 100) * ((`a`.`subtotal` + `a`.`freight`) - ((`a`.`disc` * `a`.`subtotal`) / 100))) AS `PPN`,(`a`.`total` + `a`.`um`) AS `total`,`a`.`notes` AS `notes`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`x`.`id_curr` AS `id_curr` from ((`trn_payoff_po_head` `a` join `trn_payoff_po_det` `x` on((`x`.`no_purchase` = `a`.`no_purchase`))) join `mst_supplier` `c` on((`c`.`id_supplier` = `a`.`id_supplier`))) union all select distinct `a`.`no_purchase` AS `no_purchase`,cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `nama_supplier`,`a`.`subtotal` AS `subtotal`,`a`.`freight` AS `freight`,((`a`.`disc` * (`a`.`subtotal` + `a`.`freight`)) / 100) AS `discount`,((`a`.`subtotal` + `a`.`freight`) - ((`a`.`disc` * (`a`.`subtotal` + `a`.`freight`)) / 100)) AS `subtotal_nett`,((`a`.`tax` / 100) * ((`a`.`subtotal` + `a`.`freight`) - ((`a`.`disc` * `a`.`subtotal`) / 100))) AS `PPN`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`x`.`id_curr` AS `id_curr` from ((`trn_purchasedirect_head` `a` join `trn_purchasedirect_det` `x` on((`x`.`no_purchase` = `a`.`no_purchase`))) join `mst_supplier` `c` on((`c`.`id_supplier` = `a`.`id_supplier`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_pemby_hutang`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_pemby_hutang`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_pemby_hutang`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_pemby_hutang` AS select `aph`.`no_payment_ap` AS `no_payment_ap`,concat((case when isnull(`ms`.`first_name`) then '' else `ms`.`first_name` end),' ',(case when isnull(`ms`.`last_name`) then '' else `ms`.`last_name` end)) AS `supplier_name`,`aph`.`date_trn` AS `date_trn`,`aph`.`notes` AS `notes`,0 AS `total`,`ma`.`account_name` AS `account_name`,`aph`.`id_supplier` AS `id_supplier`,`aph`.`id_account` AS `id_account`,`apd`.`number_asc` AS `number_asc`,`apd`.`no_purchase` AS `no_purchase`,`apd`.`invoice_date` AS `invoice_date`,(`apd`.`ap_amount` / `apd`.`kurs`) AS `ap_amount`,(`apd`.`discount` / `apd`.`kurs`) AS `discount`,(`apd`.`ap_amount_net` / `apd`.`kurs`) AS `ap_amount_net`,(`apd`.`paid_amount` / `apd`.`kurs`) AS `paid_amount`,concat(`ms`.`address`,' ',`ms`.`city`) AS `supplier_addr`,(`apd`.`ap_return` / `apd`.`kurs`) AS `ap_return`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`aph`.`id_currency` AS `id_currency`,`apd`.`kurs` AS `kurs` from (((`trn_payment_ap_head` `aph` join `trn_payment_ap_det` `apd` on((`aph`.`no_payment_ap` = `apd`.`no_payment_ap`))) join `mst_supplier` `ms` on((`ms`.`id_supplier` = `aph`.`id_supplier`))) join `mst_account` `ma` on((`ma`.`id_account` = `aph`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_pemby_piutang`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_pemby_piutang`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_pemby_piutang`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_pemby_piutang` AS select `aph`.`no_payment_ar` AS `no_payment_ar`,concat((case when isnull(`ms`.`first_name`) then '' else `ms`.`first_name` end),(case when isnull(`ms`.`last_name`) then '' else `ms`.`last_name` end)) AS `customer_name`,`aph`.`date_trn` AS `date_trn`,`aph`.`notes` AS `notes`,0 AS `total`,`ma`.`account_name` AS `account_name`,`aph`.`id_customer` AS `id_customer`,`aph`.`id_account` AS `id_account`,`apd`.`number_asc` AS `number_asc`,`apd`.`no_invoice` AS `no_invoice`,`apd`.`invoice_date` AS `invoice_date`,(`apd`.`ap_amount` / `apd`.`kurs`) AS `ap_amount`,(`apd`.`discount` / `apd`.`kurs`) AS `discount`,(`apd`.`ap_amount_net` / `apd`.`kurs`) AS `ap_amount_net`,(`apd`.`paid_amount` / `apd`.`kurs`) AS `paid_amount`,concat(`ms`.`address`,' ',`ms`.`city`) AS `supplier_addr`,(`apd`.`ap_return` / `apd`.`kurs`) AS `ap_return`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`aph`.`id_currency` AS `id_currency`,`apd`.`kurs` AS `kurs` from (((`trn_payment_ar_head` `aph` join `trn_payment_ar_det` `apd` on((`aph`.`no_payment_ar` = `apd`.`no_payment_ar`))) join `mst_customer` `ms` on((`ms`.`id_customer` = `aph`.`id_customer`))) join `mst_account` `ma` on((`ma`.`id_account` = `aph`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_penjualan_std`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_penjualan_std`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_penjualan_std`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_penjualan_std` AS select distinct `a`.`no_purchase` AS `no_sales`,cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`id_supplier` AS `id_customer`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `nama_customer`,`a`.`subtotal` AS `subtotal`,((`a`.`disc` * `a`.`subtotal`) / 100) AS `discount`,(`a`.`subtotal` - ((`a`.`disc` * `a`.`subtotal`) / 100)) AS `subtotal_nett`,((`a`.`tax` / 100) * (`a`.`subtotal` - ((`a`.`disc` * `a`.`subtotal`) / 100))) AS `PPN`,(`a`.`total` + `a`.`um`) AS `total`,`a`.`notes` AS `notes`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`b`.`id_curr` AS `id_curr` from ((`trn_payoff_so_head` `a` join `trn_payoff_so_det` `b` on((`b`.`no_purchase` = `a`.`no_purchase`))) join `mst_customer` `c` on((`c`.`id_customer` = `a`.`id_supplier`))) union all select distinct `a`.`no_sales` AS `no_sales`,cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`id_customer` AS `id_customer`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `nama_customer`,`a`.`subtotal` AS `subtotal`,((`a`.`discount` * `a`.`subtotal`) / 100) AS `discount`,(`a`.`subtotal` - ((`a`.`discount` * `a`.`subtotal`) / 100)) AS `subtotal_nett`,((`a`.`tax` / 100) * (`a`.`subtotal` - ((`a`.`discount` * `a`.`subtotal`) / 100))) AS `PPN`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`b`.`id_curr` AS `id_curr` from ((`trn_cashier_head` `a` join `trn_cashier_det` `b` on((`b`.`no_sales` = `a`.`no_sales`))) join `mst_customer` `c` on((`c`.`id_customer` = `a`.`id_customer`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_piutang_lunas`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_piutang_lunas`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_piutang_lunas`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_piutang_lunas` AS select `a`.`no_sales` AS `no_sales`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `customer`,`a`.`sales_amount` AS `sales_amount`,`a`.`return_amount` AS `return_amount`,(`a`.`sales_amount` - `a`.`return_amount`) AS `nett_sales`,`b`.`no_payment_ar` AS `no_payment_ar`,`d`.`date_trn` AS `date_trn`,`a`.`disc_amount` AS `disc_amount`,`b`.`paid_amount` AS `paid_amount`,`d`.`notes` AS `notes`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`d`.`id_currency` AS `id_currency` from (((`ar_status` `a` join `trn_payment_ar_det` `b` on((`b`.`no_invoice` = `a`.`no_sales`))) join `mst_customer` `c` on((`c`.`id_customer` = `a`.`id_customer`))) join `trn_payment_ar_head` `d` on((`d`.`no_payment_ar` = `b`.`no_payment_ar`))) where (`a`.`balance` = 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_ranking_pembperbarang`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_ranking_pembperbarang`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_ranking_pembperbarang`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_ranking_pembperbarang` AS select `a`.`no_purchase` AS `no_purchase`,`a`.`id_item` AS `id_item`,`d`.`item_name` AS `item_name`,`b`.`date_trn` AS `date_trn`,sum(`a`.`qty`) AS `qty`,`b`.`id_supplier` AS `id_supplier`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `supplier_name`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((`trn_purchase_det` `a` join `trn_purchase_head` `b` on((`b`.`no_purchase` = `a`.`no_purchase`))) join `mst_supplier` `c` on((`c`.`id_supplier` = `b`.`id_supplier`))) join `mst_item` `d` on((`d`.`id_item` = `a`.`id_item`))) group by `a`.`id_item`,`b`.`id_supplier` order by sum(`a`.`qty`) desc,`b`.`id_supplier` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_ranking_penjperbarang`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_ranking_penjperbarang`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_ranking_penjperbarang`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_ranking_penjperbarang` AS select `a`.`no_sales` AS `no_sales`,`a`.`id_item` AS `id_item`,`d`.`item_name` AS `item_name`,`b`.`date_trn` AS `date_trn`,sum(`a`.`qty`) AS `qty`,`b`.`id_customer` AS `id_customer`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `customer_name`,`a`.`price` AS `price`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((`trn_sales_det` `a` join `trn_sales_head` `b` on((`b`.`no_sales` = `a`.`no_sales`))) join `mst_customer` `c` on((`c`.`id_customer` = `b`.`id_customer`))) join `mst_item` `d` on((`d`.`id_item` = `a`.`id_item`))) group by `a`.`id_item` order by sum(`a`.`qty`) desc */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_rekap_kasbank`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_rekap_kasbank`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekap_kasbank`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_rekap_kasbank` AS select `a`.`cashbank_no` AS `cashbank_no`,cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`id_account` AS `id_account`,`c`.`account_name` AS `account_name`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`a`.`id_currency` AS `id_currency` from (`trn_cashbank_head` `a` left join `mst_account` `c` on((`c`.`id_account` = `a`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_rekap_pemb_supplier`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_rekap_pemb_supplier`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekap_pemb_supplier`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_rekap_pemb_supplier` AS select `a`.`no_purchase` AS `no_purchase`,cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `nama_supplier`,`a`.`subtotal` AS `subtotal`,`a`.`freight` AS `freight`,((`a`.`disc` * (`a`.`subtotal` + `a`.`freight`)) / 100) AS `discount`,((`a`.`subtotal` + `a`.`freight`) - ((`a`.`disc` * (`a`.`subtotal` + `a`.`freight`)) / 100)) AS `subtotal_nett`,((`a`.`tax` / 100) * ((`a`.`subtotal` + `a`.`freight`) - ((`a`.`disc` * `a`.`subtotal`) / 100))) AS `PPN`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,`b`.`id_item` AS `id_item`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((`trn_purchase_head` `a` join `trn_purchase_det` `b` on((`b`.`no_purchase` = `a`.`no_purchase`))) join `mst_supplier` `c` on((`c`.`id_supplier` = `a`.`id_supplier`))) group by `b`.`id_item` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_rekap_penjper_category`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_rekap_penjper_category`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekap_penjper_category`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_rekap_penjper_category` AS select `hitung_rekap_jual_category`.`id_category` AS `id_category`,sum(`hitung_rekap_jual_category`.`total`) AS `total` from `hitung_rekap_jual_category` group by `hitung_rekap_jual_category`.`id_category` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_rekap_penjualan_bykategori`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_rekap_penjualan_bykategori`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekap_penjualan_bykategori`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_rekap_penjualan_bykategori` AS select `e`.`mst_itemcat_nm` AS `id_category`,`a`.`id_item` AS `id_item`,`d`.`item_name` AS `item_name`,`a`.`qty` AS `qty`,`a`.`weight` AS `weight`,`a`.`nominal` AS `nominal`,`b`.`date_trn` AS `date_trn`,`e`.`mst_itemcat_nm` AS `mst_itemcat_nm`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((`trn_payoff_so_det` `a` join `trn_payoff_so_head` `b` on((`b`.`no_purchase` = `a`.`no_purchase`))) join `mst_item` `d` on((`d`.`id_item` = `a`.`id_item`))) join `mst_itemcat` `e` on((`e`.`mst_itemcat_id` = `d`.`id_category`))) union all select `e`.`mst_itemcat_nm` AS `id_category`,`a`.`id_item` AS `id_item`,`d`.`item_name` AS `item_name`,`a`.`qty` AS `qty`,`a`.`weight` AS `weight`,`a`.`nominal` AS `nominal`,`b`.`date_trn` AS `date_trn`,`e`.`mst_itemcat_nm` AS `mst_itemcat_nm`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((`trn_cashier_det` `a` join `trn_cashier_head` `b` on((`b`.`no_sales` = `a`.`no_sales`))) join `mst_item` `d` on((`d`.`id_item` = `a`.`id_item`))) join `mst_itemcat` `e` on((`e`.`mst_itemcat_id` = `d`.`id_category`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_rekap_transjasa`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_rekap_transjasa`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekap_transjasa`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_rekap_transjasa` AS select `a`.`no_service` AS `no_service`,cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`id_customer` AS `id_customer`,(case when isnull(`a`.`cust_name`) then concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) else `a`.`cust_name` end) AS `nama_customer`,`a`.`subtotal` AS `subtotal`,((`a`.`discount` * `a`.`subtotal`) / 100) AS `discount`,(`a`.`subtotal` - ((`a`.`discount` * `a`.`subtotal`) / 100)) AS `subtotal_nett`,((`a`.`tax` / 100) * (`a`.`subtotal` - ((`a`.`discount` * `a`.`subtotal`) / 100))) AS `PPN`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,(case when (`a`.`flag_member` = 0) then 'Non Member' when (`a`.`flag_member` = 1) then 'Member' end) AS `status_member` from (`trn_service_head` `a` left join `mst_customer` `c` on((`c`.`id_customer` = `a`.`id_customer`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_rekap_transkasir`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_rekap_transkasir`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekap_transkasir`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_rekap_transkasir` AS select `a`.`no_sales` AS `no_sales`,cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`id_customer` AS `id_customer`,(case when isnull(`a`.`customer`) then concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) else `a`.`customer` end) AS `nama_customer`,`a`.`subtotal` AS `subtotal`,((`a`.`discount` * `a`.`subtotal`) / 100) AS `discount`,(`a`.`subtotal` - ((`a`.`discount` * `a`.`subtotal`) / 100)) AS `subtotal_nett`,((`a`.`tax` / 100) * (`a`.`subtotal` - ((`a`.`discount` * `a`.`subtotal`) / 100))) AS `PPN`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,(case when (`a`.`flag_member` = 0) then 'Non Member' when (`a`.`flag_member` = 1) then 'Member' end) AS `status_member`,(select `mst_currency`.`id_currency` from `mst_currency` where (`mst_currency`.`flag_default` = 1)) AS `id_curr` from (`trn_cashier_head` `a` left join `mst_customer` `c` on((`c`.`id_customer` = `a`.`id_customer`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_rekappemb_bln_persupp`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_rekappemb_bln_persupp`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_rekappemb_bln_persupp`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_rekappemb_bln_persupp` AS select `a`.`no_purchase` AS `no_purchase`,cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `nama_supplier`,`a`.`subtotal` AS `subtotal`,`a`.`freight` AS `freight`,((`a`.`disc` * (`a`.`subtotal` + `a`.`freight`)) / 100) AS `discount`,((`a`.`subtotal` + `a`.`freight`) - ((`a`.`disc` * (`a`.`subtotal` + `a`.`freight`)) / 100)) AS `subtotal_nett`,((`a`.`tax` / 100) * ((`a`.`subtotal` + `a`.`freight`) - ((`a`.`disc` * `a`.`subtotal`) / 100))) AS `PPN`,`a`.`total` AS `total`,`a`.`notes` AS `notes`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (`trn_purchase_head` `a` join `mst_supplier` `c` on((`c`.`id_supplier` = `a`.`id_supplier`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lap_stockopname`
--

/*!50001 DROP TABLE IF EXISTS `view_lap_stockopname`*/;
/*!50001 DROP VIEW IF EXISTS `view_lap_stockopname`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lap_stockopname` AS select `a`.`no_opname` AS `no_opname`,`a`.`date_trn` AS `date_trn`,`a`.`id_warehouse` AS `id_warehouse`,`b`.`id_item` AS `id_item`,`v`.`item_name` AS `item_name`,`b`.`id_unit` AS `id_unit`,`b`.`qty_onhand` AS `qty_onhand`,`b`.`qty_opname` AS `qty_opname`,`b`.`notes` AS `notes`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`z`.`warehouse_name` AS `warehouse_name` from (((`i_opname_head` `a` join `i_opname_det` `b` on((`b`.`no_opname` = `a`.`no_opname`))) join `mst_item` `v` on((`v`.`id_item` = `b`.`id_item`))) join `mst_warehouse` `z` on((`z`.`id_warehouse` = `a`.`id_warehouse`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_laphutang_per_supplier`
--

/*!50001 DROP TABLE IF EXISTS `view_laphutang_per_supplier`*/;
/*!50001 DROP VIEW IF EXISTS `view_laphutang_per_supplier`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_laphutang_per_supplier` AS select `a`.`no_purchase` AS `no_purchase`,`a`.`date_trn` AS `date_trn`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `supplier_name`,`b`.`notes` AS `notes`,`b`.`payment_term_days` AS `payment_term_days`,`a`.`purchase_amount` AS `purchase_amount`,(case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end) AS `return_amount`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`b`.`id_supplier` AS `id_supplier`,(case when ((to_days(now()) - to_days(`a`.`date_trn`)) <= `b`.`disc_term_days`) then round(((`b`.`disc_term_nominal` * `a`.`purchase_amount`) / 100),0) else 0 end) AS `est_disc`,(case when ((to_days(now()) - to_days(`a`.`date_trn`)) <= `b`.`disc_term_days`) then (((`a`.`purchase_amount` - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - round(((`b`.`disc_term_nominal` * `a`.`purchase_amount`) / 100),0)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) else ((`a`.`purchase_amount` - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) end) AS `total`,(case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end) AS `paid_amount`,(select `mst_currency`.`id_currency` from `mst_currency` where (`mst_currency`.`flag_default` = 1)) AS `curr` from ((`ap_status` `a` join `trn_purchase_head` `b` on((`b`.`no_purchase` = `a`.`no_purchase`))) join `mst_supplier` `c` on((`c`.`id_supplier` = `b`.`id_supplier`))) where (`b`.`payment_method` = 2) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_laporan_simpanpinjam`
--

/*!50001 DROP TABLE IF EXISTS `view_laporan_simpanpinjam`*/;
/*!50001 DROP VIEW IF EXISTS `view_laporan_simpanpinjam`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_laporan_simpanpinjam` AS select `a`.`no_pinjam` AS `no_pinjam`,`a`.`bunga` AS `bunga`,`a`.`date_trn` AS `date_trn`,`a`.`jangka_waktu` AS `jangka_waktu`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `customer`,`b`.`date_trn` AS `tglbayar`,`b`.`due_date` AS `tgljt`,`b`.`nominal_bunga` AS `nominal_bunga`,`a`.`nominal` AS `nominal` from ((`trn_pinjam` `a` join `trn_pinjam_bayar` `b` on((`b`.`no_pinjam` = `a`.`no_pinjam`))) join `mst_customer` `c` on((`c`.`id_customer` = `a`.`id_customer`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_laporan_stok_per_category`
--

/*!50001 DROP TABLE IF EXISTS `view_laporan_stok_per_category`*/;
/*!50001 DROP VIEW IF EXISTS `view_laporan_stok_per_category`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_laporan_stok_per_category` AS select `mst_item`.`id_item` AS `id_item`,`mst_item`.`item_name` AS `item_name`,`mst_item`.`id_category` AS `id_category`,`mst_itemcat`.`mst_itemcat_nm` AS `category_nm`,(case when isnull(`mst_item`.`weight`) then 0 else `mst_item`.`weight` end) AS `weight`,(case when ((select `func_get_stock`(`mst_item`.`id_item`)) < 0) then 0 else (select `func_get_stock`(`mst_item`.`id_item`)) end) AS `stok`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from (((`mst_item` left join `mst_itembrand` on((`mst_itembrand`.`mst_itembrand_id` = `mst_item`.`id_brand`))) join `mst_itemcat` on((`mst_itemcat`.`mst_itemcat_id` = `mst_item`.`id_category`))) join `mst_itemjenis` on((`mst_itemjenis`.`mst_itemjenis_id` = `mst_item`.`id_jenis`))) where (((case when isnull(`mst_item`.`flag_sell`) then 0 else `mst_item`.`flag_buy` end) = 0) and ((case when isnull(`mst_item`.`active_status`) then 0 else `mst_item`.`active_status` end) <> 0)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lappiutang_per_cust`
--

/*!50001 DROP TABLE IF EXISTS `view_lappiutang_per_cust`*/;
/*!50001 DROP VIEW IF EXISTS `view_lappiutang_per_cust`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lappiutang_per_cust` AS select `a`.`no_sales` AS `no_sales`,`a`.`date_trn` AS `date_trn`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `customer_name`,`b`.`notes` AS `notes`,`b`.`term` AS `term`,`a`.`sales_amount` AS `sales_amount`,(case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end) AS `return_amount`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city`,`b`.`id_customer` AS `id_customer`,(case when ((to_days(now()) - to_days(`a`.`date_trn`)) <= `b`.`termpaydisc`) then ((`b`.`discpay` * `a`.`sales_amount`) / 100) else 0 end) AS `est_disc`,(case when ((to_days(now()) - to_days(`a`.`date_trn`)) <= `b`.`termpaydisc`) then (((`a`.`sales_amount` - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - ((`b`.`discpay` * `a`.`sales_amount`) / 100)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) else ((`a`.`sales_amount` - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) end) AS `total`,(case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end) AS `paid_amount`,(select `mst_currency`.`id_currency` from `mst_currency` where (`mst_currency`.`flag_default` = 1)) AS `curr` from ((`ar_status` `a` join `trn_sales_head` `b` on((`b`.`no_sales` = `a`.`no_sales`))) join `mst_customer` `c` on((`c`.`id_customer` = `b`.`id_customer`))) where (`b`.`payment_method` = 2) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_lapwo_head`
--

/*!50001 DROP TABLE IF EXISTS `view_lapwo_head`*/;
/*!50001 DROP VIEW IF EXISTS `view_lapwo_head`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_lapwo_head` AS select `a`.`no_bom` AS `no_bom`,`a`.`notes` AS `notes`,`a`.`qty_item_production` AS `qty_item_production`,`b`.`unit` AS `unit`,`a`.`date_trn` AS `date_trn`,`a`.`total_cost` AS `total_cost`,`c`.`id_item` AS `id_item`,`d`.`item_name` AS `item_name`,`c`.`qty_material` AS `qty_material`,`f`.`unit` AS `unit_material`,`c`.`cost` AS `cost`,`c`.`total_cost` AS `total_cost_material`,'Material' AS `Detail` from ((((`mst_bom_head` `a` join `mst_unit` `b` on((`b`.`id_unit` = `a`.`id_unit`))) left join `mst_bom_material` `c` on((`c`.`no_bom` = `a`.`no_bom`))) join `mst_item` `d` on((`d`.`id_item` = `c`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `c`.`id_unit`))) union all select `a`.`no_bom` AS `no_bom`,`a`.`notes` AS `notes`,`a`.`qty_item_production` AS `qty_item_production`,`b`.`unit` AS `unit`,`a`.`date_trn` AS `date_trn`,`a`.`total_cost` AS `total_cost`,`c`.`id_item` AS `id_item`,`d`.`item_name` AS `item_name`,`c`.`qty_material` AS `qty_material`,`f`.`unit` AS `unit_material`,`c`.`cost` AS `cost`,`c`.`total_cost` AS `total_cost_material`,'WIP' AS `Detail` from ((((`mst_bom_head` `a` join `mst_unit` `b` on((`b`.`id_unit` = `a`.`id_unit`))) left join `mst_bom_wip` `c` on((`c`.`no_bom` = `a`.`no_bom`))) join `mst_item` `d` on((`d`.`id_item` = `c`.`id_item`))) join `mst_unit` `f` on((`f`.`id_unit` = `c`.`id_unit`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_layanan_grouppasien`
--

/*!50001 DROP TABLE IF EXISTS `view_layanan_grouppasien`*/;
/*!50001 DROP VIEW IF EXISTS `view_layanan_grouppasien`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `view_layanan_grouppasien` AS select `tampunglayanansimrsgrouppasien`.`NOCM` AS `NOCM`,`tampunglayanansimrsgrouppasien`.`NAMALENGKAP` AS `NAMALENGKAP`,`tampunglayanansimrsgrouppasien`.`JENISPASIEN` AS `JENISPASIEN`,`tampunglayanansimrsgrouppasien`.`RUANGAN` AS `RUANGAN`,`tampunglayanansimrsgrouppasien`.`NAMAPELAYANAN` AS `NAMAPELAYANAN`,`tampunglayanansimrsgrouppasien`.`NOMINAL` AS `NOMINAL` from `tampunglayanansimrsgrouppasien` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_list_item`
--

/*!50001 DROP TABLE IF EXISTS `view_list_item`*/;
/*!50001 DROP VIEW IF EXISTS `view_list_item`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_list_item` AS select `mst_item`.`id_item` AS `id_item`,`mst_item`.`item_name` AS `item_name`,`mst_item`.`id_category` AS `id_category`,`mst_item`.`id_jenis` AS `id_jenis`,`mst_item`.`id_account` AS `id_account`,`mst_item`.`main_unit` AS `main_unit`,`mst_item`.`buy_unit` AS `buy_unit`,`mst_item`.`sell_unit` AS `sell_unit`,`mst_item`.`flag_buy` AS `flag_buy`,`mst_item`.`flag_sell` AS `flag_sell`,`mst_item`.`flag_inv` AS `flag_inv`,`mst_item`.`blob_image` AS `blob_image`,`mst_item`.`sell_price` AS `sell_price`,`mst_item`.`modified_user` AS `modified_user`,`mst_item`.`created_date` AS `created_date`,`mst_item`.`modified_date` AS `modified_date`,`mst_item`.`created_user` AS `created_user`,`mst_item`.`id_warehouse` AS `id_warehouse`,`mst_item`.`max_qty` AS `max_qty`,`mst_item`.`min_qty` AS `min_qty`,`mst_item`.`notes` AS `notes`,`mst_item`.`length` AS `length`,`mst_item`.`width` AS `width`,`mst_item`.`height` AS `height`,`mst_item`.`weight` AS `weight`,(case when isnull(`mst_item`.`kadar`) then 0 else `mst_item`.`kadar` end) AS `kadar`,(case when isnull(`mst_item`.`id_barcode`) then '' else `mst_item`.`id_barcode` end) AS `id_barcode`,`mst_itembrand`.`mst_itembrand_nm` AS `brand`,`mst_itemcat`.`mst_itemcat_nm` AS `category`,`mst_itemjenis`.`mst_itemjenis_nm` AS `type`,`mst_item`.`id_brand` AS `id_brand` from (((`mst_item` left join `mst_itembrand` on((`mst_itembrand`.`mst_itembrand_id` = `mst_item`.`id_brand`))) join `mst_itemcat` on((`mst_itemcat`.`mst_itemcat_id` = `mst_item`.`id_category`))) join `mst_itemjenis` on((`mst_itemjenis`.`mst_itemjenis_id` = `mst_item`.`id_jenis`))) where (((case when isnull(`mst_item`.`flag_sell`) then 0 else `mst_item`.`flag_buy` end) = 0) and ((case when isnull(`mst_item`.`active_status`) then 0 else `mst_item`.`active_status` end) <> 0)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_list_item_ro`
--

/*!50001 DROP TABLE IF EXISTS `view_list_item_ro`*/;
/*!50001 DROP VIEW IF EXISTS `view_list_item_ro`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_list_item_ro` AS select `a`.`id_item` AS `id_item`,`b`.`item_name` AS `item_name`,`a`.`no_request_order` AS `no_request_order`,`a`.`approve_qty` AS `approve_qty`,`a`.`id_unit` AS `id_unit`,(case when isnull(`b`.`id_barcode`) then '' else `b`.`id_barcode` end) AS `id_barcode` from (`trn_request_order_det` `a` join `mst_item` `b` on((`b`.`id_item` = `a`.`id_item`))) where (((case when isnull(`a`.`flag_status`) then 0 else `a`.`flag_status` end) = 1) and ((case when isnull(`a`.`flag_po`) then 0 else `a`.`flag_po` end) = 0)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_list_item_stokaktif`
--

/*!50001 DROP TABLE IF EXISTS `view_list_item_stokaktif`*/;
/*!50001 DROP VIEW IF EXISTS `view_list_item_stokaktif`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_list_item_stokaktif` AS select `mst_item`.`id_item` AS `id_item`,`mst_item`.`item_name` AS `item_name`,`mst_item`.`id_category` AS `id_category`,`mst_item`.`id_jenis` AS `id_jenis`,`mst_item`.`id_account` AS `id_account`,`mst_item`.`main_unit` AS `main_unit`,`mst_item`.`buy_unit` AS `buy_unit`,`mst_item`.`sell_unit` AS `sell_unit`,`mst_item`.`flag_buy` AS `flag_buy`,`mst_item`.`flag_sell` AS `flag_sell`,`mst_item`.`flag_inv` AS `flag_inv`,`mst_item`.`blob_image` AS `blob_image`,`mst_item`.`sell_price` AS `sell_price`,`mst_item`.`modified_user` AS `modified_user`,`mst_item`.`created_date` AS `created_date`,`mst_item`.`modified_date` AS `modified_date`,`mst_item`.`created_user` AS `created_user`,`mst_item`.`id_warehouse` AS `id_warehouse`,`mst_item`.`max_qty` AS `max_qty`,`mst_item`.`min_qty` AS `min_qty`,`mst_item`.`notes` AS `notes`,`mst_item`.`length` AS `length`,`mst_item`.`width` AS `width`,`mst_item`.`height` AS `height`,(case when isnull(`mst_item`.`weight`) then 0 else `mst_item`.`weight` end) AS `weight`,(case when isnull(`mst_item`.`kadar`) then 0 else `mst_item`.`kadar` end) AS `kadar`,(case when isnull(`mst_item`.`id_barcode`) then '' else `mst_item`.`id_barcode` end) AS `id_barcode`,`mst_itembrand`.`mst_itembrand_nm` AS `brand`,`mst_itemcat`.`mst_itemcat_nm` AS `category`,`mst_itemjenis`.`mst_itemjenis_nm` AS `type`,`mst_item`.`id_brand` AS `id_brand` from (((`mst_item` left join `mst_itembrand` on((`mst_itembrand`.`mst_itembrand_id` = `mst_item`.`id_brand`))) join `mst_itemcat` on((`mst_itemcat`.`mst_itemcat_id` = `mst_item`.`id_category`))) join `mst_itemjenis` on((`mst_itemjenis`.`mst_itemjenis_id` = `mst_item`.`id_jenis`))) where (((case when isnull(`mst_item`.`flag_sell`) then 0 else `mst_item`.`flag_buy` end) = 0) and ((case when isnull(`mst_item`.`active_status`) then 0 else `mst_item`.`active_status` end) <> 0) and (`func_get_stock`(`mst_item`.`id_item`) > 0)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_list_material`
--

/*!50001 DROP TABLE IF EXISTS `view_list_material`*/;
/*!50001 DROP VIEW IF EXISTS `view_list_material`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_list_material` AS select `mst_item`.`id_item` AS `id_item`,`mst_item`.`item_name` AS `item_name`,`mst_item`.`id_category` AS `id_category`,`mst_item`.`id_jenis` AS `id_jenis`,`mst_item`.`id_account` AS `id_account`,`mst_item`.`main_unit` AS `main_unit`,`mst_item`.`buy_unit` AS `buy_unit`,`mst_item`.`sell_unit` AS `sell_unit`,`mst_item`.`flag_buy` AS `flag_buy`,`mst_item`.`flag_sell` AS `flag_sell`,`mst_item`.`flag_inv` AS `flag_inv`,`mst_item`.`blob_image` AS `blob_image`,`mst_item`.`sell_price` AS `sell_price`,`mst_item`.`modified_user` AS `modified_user`,`mst_item`.`created_date` AS `created_date`,`mst_item`.`modified_date` AS `modified_date`,`mst_item`.`created_user` AS `created_user`,`mst_item`.`id_warehouse` AS `id_warehouse`,`mst_item`.`max_qty` AS `max_qty`,`mst_item`.`min_qty` AS `min_qty`,`mst_item`.`notes` AS `notes`,`mst_item`.`length` AS `length`,`mst_item`.`width` AS `width`,`mst_item`.`height` AS `height`,`mst_item`.`weight` AS `weight`,(case when isnull(`mst_item`.`id_barcode`) then '' else `mst_item`.`id_barcode` end) AS `id_barcode` from `mst_item` where (((case when isnull(`mst_item`.`flag_buy`) then 0 else `mst_item`.`flag_buy` end) = 1) or ((case when isnull(`mst_item`.`flag_inv`) then 0 else `mst_item`.`flag_inv` end) = 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_list_po`
--

/*!50001 DROP TABLE IF EXISTS `view_list_po`*/;
/*!50001 DROP VIEW IF EXISTS `view_list_po`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_list_po` AS select `h`.`no_purchase_order` AS `no_purchase_order`,concat((case when isnull(`s`.`first_name`) then '' else `s`.`first_name` end),' ',(case when isnull(`s`.`last_name`) then '' else `s`.`last_name` end)) AS `nm_supplier`,`h`.`date_trn` AS `date_trn`,`h`.`subtotal` AS `subtotal`,`h`.`freight` AS `freight`,`h`.`tax` AS `tax`,`h`.`total` AS `total`,`h`.`notes` AS `notes` from ((`trn_purchase_order_head` `h` join `trn_purchase_order_det` `d` on((`h`.`no_purchase_order` = `d`.`no_purchase_order`))) join `mst_supplier` `s` on((`h`.`id_supplier` = `s`.`id_supplier`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_main_unit_item`
--

/*!50001 DROP TABLE IF EXISTS `view_main_unit_item`*/;
/*!50001 DROP VIEW IF EXISTS `view_main_unit_item`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_main_unit_item` AS select `mst_item`.`id_item` AS `id_item`,`mst_item`.`main_unit` AS `main_unit`,`mst_item`.`flag_buy` AS `flag_buy`,`mst_item`.`flag_inv` AS `flag_inv`,`mst_item`.`flag_sell` AS `flag_sell` from `mst_item` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_marketing`
--

/*!50001 DROP TABLE IF EXISTS `view_marketing`*/;
/*!50001 DROP VIEW IF EXISTS `view_marketing`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_marketing` AS select `a`.`id_employee` AS `id_employee`,concat(`b`.`first_name`,' ',`b`.`last_name`) AS `nama` from (`mst_marketing` `a` join `mst_employee` `b` on((`b`.`id_employee` = `a`.`id_employee`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_marketing_combo`
--

/*!50001 DROP TABLE IF EXISTS `view_marketing_combo`*/;
/*!50001 DROP VIEW IF EXISTS `view_marketing_combo`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_marketing_combo` AS select `a`.`id_employee` AS `id_employee`,concat(`b`.`first_name`,' ',`b`.`last_name`) AS `nama` from (`mst_marketing` `a` join `mst_employee` `b` on((`b`.`id_employee` = `a`.`id_employee`))) union all select 'OFC' AS `OFC`,'Office' AS `Office` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_menu`
--

/*!50001 DROP TABLE IF EXISTS `view_menu`*/;
/*!50001 DROP VIEW IF EXISTS `view_menu`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_menu` AS select `a`.`username` AS `username`,`b`.`ismenu` AS `ismenu`,`b`.`notes` AS `notes`,`a`.`parentkey` AS `parentkey`,`a`.`childkey` AS `childkey`,`b`.`icon_webapp` AS `icon_webapp`,`b`.`link_webapp` AS `link_webapp` from (`i_hakakses` `a` join `i_templatehakakses` `b` on(((`a`.`parentkey` = `b`.`parentkey`) and (`a`.`childkey` = `b`.`childkey`)))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_pasiva`
--

/*!50001 DROP TABLE IF EXISTS `view_pasiva`*/;
/*!50001 DROP VIEW IF EXISTS `view_pasiva`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `view_pasiva` AS select `a`.`id_account` AS `id_account`,`a`.`account_name` AS `account_name`,(case when isnull(`b`.`parent`) then '999999' else `b`.`parent` end) AS `parent`,(case when isnull(`c`.`account_name`) then (select `i_project_name`.`profit_notes` from `i_project_name` where (`i_project_name`.`project_default` = 1)) else `c`.`account_name` end) AS `account_parent`,(case when isnull(`a`.`saldo`) then 0 else `a`.`saldo` end) AS `saldo`,(case when (`b`.`golongan` = 1) then 'ASET' when (`b`.`golongan` = 2) then 'KEWAJIBAN' when (`b`.`golongan` = 3) then 'EKUITAS' when isnull(`b`.`golongan`) then 'EKUITAS' end) AS `golongan`,(case when isnull(`b`.`golongan`) then 3 else `b`.`golongan` end) AS `id_golongan`,(case when isnull(`c`.`parent`) then '999999' else `c`.`parent` end) AS `id_parent2`,(case when isnull(`d`.`account_name`) then (select `i_project_name`.`profit_notes_header` from `i_project_name` where (`i_project_name`.`project_default` = 1)) else `d`.`account_name` end) AS `parent2`,(select (case when isnull(`i_project_name`.`header_text`) then '' else `i_project_name`.`header_text` end) AS `header_text` from `i_project_name` where (`i_project_name`.`project_default` = 1)) AS `header_text`,(select sum(`temp_pasiva`.`saldo`) from `temp_pasiva`) AS `total_pasiva`,(select sum(`temp_pasiva_tahunlalu`.`saldo`) from `temp_pasiva_tahunlalu`) AS `total_pasiva_lalu`,(select sum(`temp_aktiva`.`saldo`) from `temp_aktiva`) AS `total_aktiva` from (((`temp_pasiva` `a` left join `mst_account` `b` on((`b`.`id_account` = `a`.`id_account`))) left join `mst_account` `c` on((`c`.`id_account` = `b`.`parent`))) left join `mst_account` `d` on((`d`.`id_account` = `c`.`parent`))) where ((case when isnull(`a`.`saldo`) then 0 else `a`.`saldo` end) > 0) order by `a`.`id_account` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_path_userphoto`
--

/*!50001 DROP TABLE IF EXISTS `view_path_userphoto`*/;
/*!50001 DROP VIEW IF EXISTS `view_path_userphoto`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_path_userphoto` AS select `b`.`username` AS `username`,`a`.`id_employee` AS `id_employee`,(case when isnull(`a`.`photo`) then '' else `a`.`photo` end) AS `photo` from (`mst_employee` `a` join `mst_user` `b` on((`b`.`id_employee` = `a`.`id_employee`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_piutang_jt`
--

/*!50001 DROP TABLE IF EXISTS `view_piutang_jt`*/;
/*!50001 DROP VIEW IF EXISTS `view_piutang_jt`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_piutang_jt` AS select distinct `a`.`no_sales` AS `no_sales`,`a`.`id_customer` AS `id_customer`,concat((case when isnull(`c`.`first_name`) then '' else `c`.`first_name` end),' ',(case when isnull(`c`.`last_name`) then '' else `c`.`last_name` end)) AS `customer`,`a`.`date_trn` AS `date_trn`,(((case when isnull(`a`.`sales_amount`) then 0 else `a`.`sales_amount` end) - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end)) AS `total_ar`,(case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end) AS `paid_amount`,((((case when isnull(`a`.`sales_amount`) then 0 else `a`.`sales_amount` end) - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) AS `balance`,`b`.`termpaydisc` AS `termpaydisc`,cast((`a`.`date_trn` + interval `b`.`termpaydisc` day) as date) AS `jatuh_tempo`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,`g`.`id_curr` AS `id_curr` from (((`ar_status` `a` join `trn_sales_head` `b` on((`b`.`no_sales` = `a`.`no_sales`))) join `trn_sales_det` `g` on((`g`.`no_sales` = `b`.`no_sales`))) join `mst_customer` `c` on((`c`.`id_customer` = `b`.`id_customer`))) where (((((case when isnull(`a`.`sales_amount`) then 0 else `a`.`sales_amount` end) - (case when isnull(`a`.`return_amount`) then 0 else `a`.`return_amount` end)) - (case when isnull(`a`.`disc_amount`) then 0 else `a`.`disc_amount` end)) - (case when isnull(`a`.`paid_amount`) then 0 else `a`.`paid_amount` end)) > 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_po_detail`
--

/*!50001 DROP TABLE IF EXISTS `view_po_detail`*/;
/*!50001 DROP VIEW IF EXISTS `view_po_detail`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_po_detail` AS select `a`.`id_supplier` AS `id_supplier`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `nama`,`b`.`address` AS `address`,`a`.`no_purchase_order` AS `no_purchase_order`,`a`.`date_trn` AS `date_trn`,`c`.`id_curr` AS `id_curr`,`a`.`notes` AS `notes`,`a`.`subtotal` AS `subtotal`,`a`.`tax` AS `tax`,`a`.`total` AS `total_head`,`c`.`number_asc` AS `number_asc`,`c`.`id_item` AS `id_item`,`c`.`id_unit` AS `id_unit`,`f`.`item_name` AS `item_name`,`c`.`notes` AS `description`,`c`.`qty` AS `qty`,`c`.`price` AS `price`,(`c`.`qty` * `c`.`price`) AS `total`,`a`.`freight` AS `freight` from (((`trn_purchase_order_head` `a` join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) join `trn_purchase_order_det` `c` on((`c`.`no_purchase_order` = `a`.`no_purchase_order`))) join `mst_item` `f` on((`f`.`id_item` = `c`.`id_item`))) order by `c`.`number_asc` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_po_report`
--

/*!50001 DROP TABLE IF EXISTS `view_po_report`*/;
/*!50001 DROP VIEW IF EXISTS `view_po_report`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_po_report` AS select `a`.`no_purchase_order` AS `no_purchase_order`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `nama`,`a`.`date_trn` AS `date_trn`,`a`.`freight` AS `freight`,((`a`.`tax` / 100) * (`a`.`subtotal` + `a`.`freight`)) AS `tax`,`a`.`notes` AS `notes`,`a`.`id_supplier` AS `id_supplier`,`c`.`id_item` AS `id_item`,`d`.`item_name` AS `item_name`,`c`.`qty` AS `qty`,`c`.`qty_received` AS `qty_received`,`c`.`id_unit` AS `id_unit`,`c`.`price` AS `price`,`c`.`nominal` AS `nominal`,`c`.`no_request_order` AS `no_request_order`,`c`.`notes` AS `notes_det`,(case when isnull(`c`.`weight`) then 0 else `c`.`weight` end) AS `weight`,(case when isnull(`c`.`priceperweight`) then 0 else `c`.`priceperweight` end) AS `priceperweight`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,`c`.`id_curr` AS `id_curr` from (((`trn_purchase_order_head` `a` join `trn_purchase_order_det` `c` on((`c`.`no_purchase_order` = `a`.`no_purchase_order`))) join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) join `mst_item` `d` on((`d`.`id_item` = `c`.`id_item`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_recitem_report`
--

/*!50001 DROP TABLE IF EXISTS `view_recitem_report`*/;
/*!50001 DROP VIEW IF EXISTS `view_recitem_report`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_recitem_report` AS select `a`.`no_received_order` AS `no_received_order`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `nama`,`a`.`date_trn` AS `date_trn`,`a`.`notes` AS `notes`,`a`.`id_supplier` AS `id_supplier`,`a`.`no_purchase_order` AS `no_purchase_order`,`c`.`id_item` AS `id_item`,`d`.`item_name` AS `item_name`,`c`.`qty` AS `qty`,`c`.`received_qty` AS `received_qty`,`c`.`id_unit` AS `id_unit`,`d`.`notes` AS `notes_det`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name` from (((`trn_received_order_head` `a` join `trn_received_order_det` `c` on((`c`.`no_received_order` = `a`.`no_received_order`))) join `mst_supplier` `b` on((`b`.`id_supplier` = `a`.`id_supplier`))) join `mst_item` `d` on((`d`.`id_item` = `c`.`id_item`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_rekonsiliasi_report`
--

/*!50001 DROP TABLE IF EXISTS `view_rekonsiliasi_report`*/;
/*!50001 DROP VIEW IF EXISTS `view_rekonsiliasi_report`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_rekonsiliasi_report` AS select `a`.`no_reconcile` AS `no_reconcile`,`b`.`account_name` AS `nama`,`a`.`date_trn` AS `date_trn`,`a`.`notes` AS `notes`,`a`.`id_account_bank` AS `id_account_bank`,`c`.`id_account` AS `id_account_det`,`d`.`account_name` AS `account_name`,`c`.`amount_in` AS `amount_in`,`c`.`amount_out` AS `amount_out`,`c`.`notes` AS `notes_det`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,`a`.`balance_before` AS `balance_before`,`a`.`balance_after` AS `balance_after`,`a`.`reconcile` AS `reconcile` from (((`trn_reconcile_head` `a` join `trn_reconcile_det` `c` on((`c`.`no_reconcile` = `a`.`no_reconcile`))) join `mst_account` `b` on((`b`.`id_account` = `a`.`id_account_bank`))) join `mst_account` `d` on((`d`.`id_account` = `c`.`id_account`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_report_header`
--

/*!50001 DROP TABLE IF EXISTS `view_report_header`*/;
/*!50001 DROP VIEW IF EXISTS `view_report_header`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_report_header` AS select `a`.`header_text` AS `header_text`,`b`.`company_name` AS `company_name`,`c`.`id_currency` AS `id_currency` from ((`i_project_name` `a` join `mst_company` `b`) join `view_curr_def` `c`) where ((`a`.`project_default` = 1) and (`b`.`flag_active` = 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_ro_report`
--

/*!50001 DROP TABLE IF EXISTS `view_ro_report`*/;
/*!50001 DROP VIEW IF EXISTS `view_ro_report`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_ro_report` AS select `a`.`no_request_order` AS `no_request_order`,`a`.`date_trn` AS `date_trn`,`a`.`notes` AS `notes`,`f`.`id_item` AS `id_item`,`c`.`item_name` AS `item_name`,`f`.`qty` AS `qty`,`f`.`approve_qty` AS `approve_qty`,`f`.`approve_date` AS `approve_date`,`f`.`id_unit` AS `id_unit`,`a`.`id_warehouse` AS `id_warehouse`,`j`.`warehouse_name` AS `warehouse_name`,(case when ((sum((case when isnull(`f`.`approve_qty`) then 0 else `f`.`approve_qty` end)) < sum((case when isnull(`f`.`qty`) then 0 else `f`.`qty` end))) and (sum((case when isnull(`f`.`approve_qty`) then 0 else `f`.`approve_qty` end)) > 0)) then 'Approve Sebagian' when (sum((case when isnull(`f`.`approve_qty`) then 0 else `f`.`approve_qty` end)) = 0) then 'Belum di Approve' when (sum((case when isnull(`f`.`approve_qty`) then 0 else `f`.`approve_qty` end)) = sum((case when isnull(`f`.`qty`) then 0 else `f`.`qty` end))) then 'Sudah di Approve' end) AS `notes_approve`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name` from (((`trn_request_order_head` `a` join `trn_request_order_det` `f` on((`f`.`no_request_order` = `a`.`no_request_order`))) join `mst_item` `c` on((`c`.`id_item` = `f`.`id_item`))) join `mst_warehouse` `j` on((`j`.`id_warehouse` = `a`.`id_warehouse`))) group by `a`.`no_request_order`,`f`.`id_item`,`c`.`item_name` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_sales_nowadays`
--

/*!50001 DROP TABLE IF EXISTS `view_sales_nowadays`*/;
/*!50001 DROP VIEW IF EXISTS `view_sales_nowadays`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_sales_nowadays` AS select cast(`a`.`date_trn` as date) AS `date_trn`,`a`.`no_sales` AS `no_sales`,`a`.`no_sales_order` AS `no_sales_order`,concat((case when isnull(`d`.`first_name`) then '' else `d`.`first_name` end),' ',(case when isnull(`d`.`last_name`) then '' else `d`.`last_name` end)) AS `customer`,`a`.`total` AS `total`,`c`.`id_curr` AS `id_curr` from ((`trn_sales_head` `a` join `trn_sales_det` `c` on((`c`.`no_sales` = `a`.`no_sales`))) join `mst_customer` `d` on((`d`.`id_customer` = `a`.`id_customer`))) group by `a`.`no_sales` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_sentitem_report`
--

/*!50001 DROP TABLE IF EXISTS `view_sentitem_report`*/;
/*!50001 DROP VIEW IF EXISTS `view_sentitem_report`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_sentitem_report` AS select `a`.`no_delivery_order` AS `no_delivery_order`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `nama`,`a`.`date_trn` AS `date_trn`,`a`.`notes` AS `notes`,`a`.`id_customer` AS `id_customer`,`a`.`no_sales_order` AS `no_sales_order`,`c`.`id_item` AS `id_item`,`d`.`item_name` AS `item_name`,`c`.`qty` AS `qty`,`c`.`sent_qty` AS `sent_qty`,`c`.`id_unit` AS `id_unit`,`d`.`notes` AS `notes_det`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name` from (((`trn_delivery_order_head` `a` join `trn_delivery_order_det` `c` on((`c`.`no_delivery_order` = `a`.`no_delivery_order`))) join `mst_customer` `b` on((`b`.`id_customer` = `a`.`id_customer`))) join `mst_item` `d` on((`d`.`id_item` = `c`.`id_item`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_so_detail`
--

/*!50001 DROP TABLE IF EXISTS `view_so_detail`*/;
/*!50001 DROP VIEW IF EXISTS `view_so_detail`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_so_detail` AS select `a`.`id_customer` AS `id_customer`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `nama`,`b`.`address` AS `address`,`a`.`no_sales_order` AS `no_sales_order`,`a`.`date_trn` AS `date_trn`,`c`.`id_curr` AS `id_curr`,`a`.`notes` AS `notes`,`a`.`subtotal` AS `subtotal`,`a`.`tax` AS `tax`,((case when isnull(`a`.`total`) then 0 else `a`.`total` end) - (case when isnull(`a`.`freight_est`) then 0 else `a`.`freight_est` end)) AS `total_head`,`c`.`number_asc` AS `number_asc`,`c`.`id_item` AS `id_item`,`c`.`id_unit` AS `id_unit`,`f`.`item_name` AS `item_name`,`c`.`notes` AS `description`,`c`.`qty` AS `qty`,(case when isnull(`c`.`sent_qty`) then 0 else `c`.`sent_qty` end) AS `sent_qty`,(((`c`.`price` - ((case when isnull(`x`.`nom_disc`) then 0 else `x`.`nom_disc` end) / `c`.`qty`)) - ((case when isnull(`y`.`nom_disc`) then 0 else `y`.`nom_disc` end) / `c`.`qty`)) - ((case when isnull(`z`.`nom_disc`) then 0 else `z`.`nom_disc` end) / `c`.`qty`)) AS `price`,((((`c`.`price` - ((case when isnull(`x`.`nom_disc`) then 0 else `x`.`nom_disc` end) / `c`.`qty`)) - ((case when isnull(`y`.`nom_disc`) then 0 else `y`.`nom_disc` end) / `c`.`qty`)) - ((case when isnull(`z`.`nom_disc`) then 0 else `z`.`nom_disc` end) / `c`.`qty`)) * `c`.`qty`) AS `total`,(case when isnull(`a`.`kurs`) then 1 else `a`.`kurs` end) AS `kurs`,`a`.`discount` AS `discount`,`a`.`nett_total` AS `nett_total`,(case when isnull(`a`.`uang_muka`) then 0 else `a`.`uang_muka` end) AS `uang_muka` from ((((((`trn_sales_order_head` `a` join `mst_customer` `b` on((`b`.`id_customer` = `a`.`id_customer`))) join `trn_sales_order_det` `c` on((`c`.`no_sales_order` = `a`.`no_sales_order`))) join `mst_item` `f` on((`f`.`id_item` = `c`.`id_item`))) left join `trn_so_discbrand_det` `x` on(((`x`.`no_sales_order` = `c`.`no_sales_order`) and (`x`.`id_item` = `c`.`id_item`)))) left join `trn_so_disccat_det` `y` on(((`y`.`no_sales_order` = `c`.`no_sales_order`) and (`y`.`id_item` = `c`.`id_item`)))) left join `trn_so_disctype_det` `z` on(((`z`.`no_sales_order` = `c`.`no_sales_order`) and (`z`.`id_item` = `c`.`id_item`)))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_so_expedition`
--

/*!50001 DROP TABLE IF EXISTS `view_so_expedition`*/;
/*!50001 DROP VIEW IF EXISTS `view_so_expedition`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_so_expedition` AS select distinct `a`.`no_delivery_order` AS `no_delivery_order`,`a`.`no_sales_order` AS `no_sales_order`,`g`.`no_ekspedisi` AS `no_ekspedisi` from ((`trn_delivery_order_head` `a` join `trn_delivery_order_det` `b` on((`b`.`no_delivery_order` = `a`.`no_delivery_order`))) join `trn_ekspedisi_det` `g` on((`g`.`no_do` = `a`.`no_delivery_order`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_so_nowadays`
--

/*!50001 DROP TABLE IF EXISTS `view_so_nowadays`*/;
/*!50001 DROP VIEW IF EXISTS `view_so_nowadays`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_so_nowadays` AS select `d`.`date_trn` AS `date_trn`,`a`.`no_sales_order` AS `no_sales_order`,`a`.`id_item` AS `id_item`,`b`.`item_name` AS `item_name`,`a`.`qty` AS `qty`,`a`.`id_unit` AS `id_unit`,`a`.`price` AS `price`,`a`.`nominal` AS `nominal`,`a`.`id_curr` AS `id_curr` from ((`trn_sales_order_det` `a` join `mst_item` `b` on((`b`.`id_item` = `a`.`id_item`))) join `trn_sales_order_head` `d` on((`d`.`no_sales_order` = `a`.`no_sales_order`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_so_report`
--

/*!50001 DROP TABLE IF EXISTS `view_so_report`*/;
/*!50001 DROP VIEW IF EXISTS `view_so_report`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_so_report` AS select `a`.`no_sales_order` AS `no_sales_order`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `nama`,`a`.`date_trn` AS `date_trn`,((`a`.`tax` / 100) * `a`.`subtotal`) AS `tax`,`a`.`notes` AS `notes`,`a`.`id_customer` AS `id_customer`,`c`.`id_item` AS `id_item`,`d`.`item_name` AS `item_name`,`c`.`qty` AS `qty`,`c`.`sent_qty` AS `sent_qty`,`c`.`id_unit` AS `id_unit`,`c`.`price` AS `price`,`c`.`nominal` AS `nominal`,`c`.`notes` AS `notes_det`,(case when isnull(`c`.`weight`) then 0 else `c`.`weight` end) AS `weight`,(case when isnull(`c`.`perweight`) then 0 else `c`.`perweight` end) AS `perweight`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,concat(`em`.`first_name`,' ',`em`.`last_name`) AS `marketing` from ((((`trn_sales_order_head` `a` join `trn_sales_order_det` `c` on((`c`.`no_sales_order` = `a`.`no_sales_order`))) join `mst_customer` `b` on((`b`.`id_customer` = `a`.`id_customer`))) join `mst_item` `d` on((`d`.`id_item` = `c`.`id_item`))) left join `mst_employee` `em` on((`em`.`id_employee` = `a`.`id_employee`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_total_purchase_return`
--

/*!50001 DROP TABLE IF EXISTS `view_total_purchase_return`*/;
/*!50001 DROP VIEW IF EXISTS `view_total_purchase_return`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_total_purchase_return` AS select sum(`g`.`qty`) AS `qty`,`g`.`no_purchase_return` AS `no_purchase_return`,`g`.`id_item` AS `id_item`,`g`.`no_purchase` AS `no_purchase` from `trn_purchase_return_det` `g` group by `g`.`no_purchase_return`,`g`.`id_item`,`g`.`no_purchase` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_upload_pemrov_simrs`
--

/*!50001 DROP TABLE IF EXISTS `view_upload_pemrov_simrs`*/;
/*!50001 DROP VIEW IF EXISTS `view_upload_pemrov_simrs`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = cp850 */;
/*!50001 SET character_set_results     = cp850 */;
/*!50001 SET collation_connection      = cp850_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `view_upload_pemrov_simrs` AS select `i_upload_pemrov_simrs`.`date_trn` AS `date_trn`,`i_upload_pemrov_simrs`.`evidence_no` AS `evidence_no`,`i_upload_pemrov_simrs`.`reff_acc_cost` AS `reff_acc_cost`,`i_upload_pemrov_simrs`.`reff_prog` AS `reff_prog`,`i_upload_pemrov_simrs`.`reff_keg` AS `reff_keg`,`i_upload_pemrov_simrs`.`reff_acc_cashbank` AS `reff_acc_cashbank`,`i_upload_pemrov_simrs`.`notes` AS `notes`,`i_upload_pemrov_simrs`.`receipt_amount` AS `receipt_amount`,`i_upload_pemrov_simrs`.`spend_amount` AS `spend_amount`,(case when (isnull(`i_upload_pemrov_simrs`.`posting_status`) or (`i_upload_pemrov_simrs`.`posting_status` = 0)) then 'Menunggu Proses Validasi' else 'Tervalidasi' end) AS `posting_status`,`i_upload_pemrov_simrs`.`date_trn` AS `convert_tgl`,`i_upload_pemrov_simrs`.`id_import` AS `id_import` from `i_upload_pemrov_simrs` where (`i_upload_pemrov_simrs`.`posting_status` = 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `view_user`
--

/*!50001 DROP TABLE IF EXISTS `view_user`*/;
/*!50001 DROP VIEW IF EXISTS `view_user`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `view_user` AS select `a`.`username` AS `username`,`a`.`password` AS `password`,(case when isnull(`a`.`flag_active`) then 0 else `a`.`flag_active` end) AS `flag_active`,concat((case when isnull(`b`.`first_name`) then '' else `b`.`first_name` end),' ',(case when isnull(`b`.`last_name`) then '' else `b`.`last_name` end)) AS `nama`,(case when isnull(`c`.`position_name`) then '' else `c`.`position_name` end) AS `position`,(case when isnull(`d`.`department_name`) then '' else `d`.`department_name` end) AS `departement` from (((`mst_user` `a` join `mst_employee` `b` on((`b`.`id_employee` = `a`.`id_employee`))) left join `mst_position` `c` on((`c`.`position_id` = `b`.`position_id`))) left join `mst_department` `d` on((`d`.`department_id` = `b`.`department_id`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `wip_goods_view`
--

/*!50001 DROP TABLE IF EXISTS `wip_goods_view`*/;
/*!50001 DROP VIEW IF EXISTS `wip_goods_view`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `wip_goods_view` AS select `a`.`id_item` AS `id_item`,`a`.`item_name` AS `item_name`,`a`.`id_barcode` AS `id_barcode`,`b`.`mst_itemcat_nm` AS `mst_itemcat_nm` from (`mst_item` `a` join `mst_itemcat` `b` on((`b`.`mst_itemcat_id` = `a`.`id_category`))) where (((case when isnull(`a`.`flag_buy`) then 0 else `a`.`flag_buy` end) = 1) and (`a`.`active_status` = 1)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `wo_realized_view_report`
--

/*!50001 DROP TABLE IF EXISTS `wo_realized_view_report`*/;
/*!50001 DROP VIEW IF EXISTS `wo_realized_view_report`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `wo_realized_view_report` AS select `a`.`realized_no` AS `realized_no`,`a`.`pic` AS `pic`,`a`.`cost_total` AS `cost_total`,`a`.`date_trn` AS `date_trn`,`b`.`item_name` AS `item_name`,`d`.`item_name` AS `item_detail`,'material' AS `type` from (((`trn_wo_realized_head` `a` join `trn_wo_realized_item_det` `b` on((`b`.`realized_no` = `a`.`realized_no`))) left join `trn_wo_realized_material_det` `c` on((`c`.`realized_no` = `a`.`realized_no`))) join `mst_item` `d` on((`d`.`id_item` = `c`.`id_item`))) union all select `a`.`realized_no` AS `realized_no`,`a`.`pic` AS `pic`,`a`.`cost_total` AS `cost_total`,`a`.`date_trn` AS `date_trn`,`b`.`item_name` AS `item_name`,`d`.`item_name` AS `item_detail`,'material' AS `type` from (((`trn_wo_realized_head` `a` join `trn_wo_realized_item_det` `b` on((`b`.`realized_no` = `a`.`realized_no`))) left join `trn_wo_realized_wip_det` `c` on((`c`.`realized_no` = `a`.`realized_no`))) join `mst_item` `d` on((`d`.`id_item` = `c`.`id_item`))) union all select `a`.`realized_no` AS `realized_no`,`a`.`pic` AS `pic`,`a`.`cost_total` AS `cost_total`,`a`.`date_trn` AS `date_trn`,`b`.`item_name` AS `item_name`,`d`.`cost_name` AS `item_detail`,'conversion' AS `type` from (((`trn_wo_realized_head` `a` join `trn_wo_realized_item_det` `b` on((`b`.`realized_no` = `a`.`realized_no`))) left join `trn_wo_realized_conversion_det` `c` on((`c`.`realized_no` = `a`.`realized_no`))) join `mst_standard_cost` `d` on((`d`.`id_cost` = `c`.`id_cost`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `wo_view_report`
--

/*!50001 DROP TABLE IF EXISTS `wo_view_report`*/;
/*!50001 DROP VIEW IF EXISTS `wo_view_report`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `wo_view_report` AS select `a`.`wo_no` AS `wo_no`,concat((case when isnull(`e`.`first_name`) then '' else `e`.`first_name` end),' ',(case when isnull(`e`.`last_name`) then '' else `e`.`last_name` end)) AS `pic`,`a`.`cost_total` AS `cost_total`,`a`.`start_date` AS `start_date`,`a`.`realized_date` AS `realized_date`,`b`.`item_notes` AS `item_notes`,`b`.`no_bom` AS `no_bom`,`d`.`item_name` AS `item_detail`,'material' AS `type`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((((`trn_wo_head` `a` join `trn_wo_item_det` `b` on((`b`.`wo_no` = `a`.`wo_no`))) left join `trn_wo_material_det` `c` on((`c`.`no_wo` = `a`.`wo_no`))) join `mst_item` `d` on((`d`.`id_item` = `c`.`id_item`))) join `mst_employee` `e` on((`e`.`id_employee` = `a`.`pic`))) union all select `a`.`wo_no` AS `wo_no`,concat((case when isnull(`e`.`first_name`) then '' else `e`.`first_name` end),' ',(case when isnull(`e`.`last_name`) then '' else `e`.`last_name` end)) AS `pic`,`a`.`cost_total` AS `cost_total`,`a`.`start_date` AS `start_date`,`a`.`realized_date` AS `realized_date`,`b`.`item_notes` AS `item_notes`,`b`.`no_bom` AS `no_bom`,`d`.`item_name` AS `item_detail`,'wip' AS `type`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((((`trn_wo_head` `a` join `trn_wo_item_det` `b` on((`b`.`wo_no` = `a`.`wo_no`))) left join `trn_wo_wip_det` `c` on((`c`.`wo_no` = `a`.`wo_no`))) join `mst_item` `d` on((`d`.`id_item` = `c`.`id_item`))) join `mst_employee` `e` on((`e`.`id_employee` = `a`.`pic`))) union all select `a`.`wo_no` AS `wo_no`,concat((case when isnull(`e`.`first_name`) then '' else `e`.`first_name` end),' ',(case when isnull(`e`.`last_name`) then '' else `e`.`last_name` end)) AS `pic`,`a`.`cost_total` AS `cost_total`,`a`.`start_date` AS `start_date`,`a`.`realized_date` AS `realized_date`,`b`.`item_notes` AS `item_notes`,`b`.`no_bom` AS `no_bom`,`d`.`cost_name` AS `item_detail`,'conversion_cost' AS `type`,(select `mst_company`.`company_name` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_name`,(select `mst_company`.`address` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_address`,(select `mst_company`.`city` from `mst_company` where (`mst_company`.`flag_active` = 1)) AS `company_city` from ((((`trn_wo_head` `a` join `trn_wo_item_det` `b` on((`b`.`wo_no` = `a`.`wo_no`))) left join `trn_wo_conversion_det` `c` on((`c`.`wo_no` = `a`.`wo_no`))) join `mst_standard_cost` `d` on((`d`.`id_cost` = `c`.`id_cost`))) join `mst_employee` `e` on((`e`.`id_employee` = `a`.`pic`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-09-14 13:25:32
